/* Generated by Nim Compiler v1.9.5 */
#ifndef __UEGenBindings__
#define __UEGenBindings__
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <setjmp.h>
#include "Styling/SlateBrush.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct TNimNode;
struct TNimType;
struct RootObj;
struct TNimTypeV2;
struct RootEffect;
struct Exception;
struct NimStrPayload;
struct NimStringV2;
struct tySequence__nkyLXcAOvqEN77Wb7C9cIAA;
struct tySequence__nkyLXcAOvqEN77Wb7C9cIAA_Content;
struct TSafePoint;
struct GcFrameHeader;
struct ForLoopStmt;
struct tyObject_UEEmitter__yFEGdOoEpsg7Gf9aKb9cZKbQ;
struct UAssetRegistryHelpers_;
struct FTagAndValue_;
struct FClosestPhysicsObjectResult_;
struct FSolverTrailingFilterSettings_;
struct FSolverBreakingFilterSettings_;
struct FSolverCollisionFilterSettings_;
struct FSolverRemovalFilterSettings_;
struct UVisualLoggerDebugSnapshotInterface_;
struct UFontProviderInterface_;
struct UAnimBoneCompressionCodec_;
struct USceneCaptureComponent_;
struct UDialogueVoice_;
struct UGameplayTasksComponent_;
struct UGameplayTaskOwnerInterface_;
struct UDragDropOperation_;
struct UHLODLayer_;
struct UCurveVector_;
struct UCurveLinearColor_;
struct AGameplayAbilityTargetActor_;
struct UParticleModule_;
struct UMaterialParameterCollection_;
struct UPanelSlot_;
struct UPanelWidget_;
struct UListViewBase_;
struct ARigidBodyBase_;
struct UWorldPartitionRuntimeCellOwner_;
struct UWorldPartitionCell_;
struct UCameraLensEffectInterface_;
struct UCanvas_;
struct USaveGame_;
struct UAnimationDataModel_;
struct ANavigationObjectBase_;
struct UFont_;
struct ULocalMessage_;
struct ADebugCameraController_;
struct USMInstanceManager_;
struct UHapticFeedbackEffect_Base_;
struct UCameraShakePattern_;
struct USubsurfaceProfile_;
struct USparseVolumeTexture_;
struct UStereoLayerShape_;
struct UMeshDeformerInstance_;
struct UMeshDeformerInstanceSettings_;
struct UMeshDeformer_;
struct UNodeMappingContainer_;
struct UAnimNotifyState_;
struct UVirtualTextureBuilder_;
struct URuntimeVirtualTextureComponent_;
struct UForceFeedbackComponent_;
struct UDecalComponent_;
struct UBillboardComponent_;
struct UArrowComponent_;
struct USkyAtmosphereComponent_;
struct UTextRenderComponent_;
struct UExponentialHeightFogComponent_;
struct UReflectionCaptureComponent_;
struct APlayerState_;
struct UDamageType_;
struct UForceFeedbackEffect_;
struct ADefaultPawn_;
struct UForceFeedbackAttenuation_;
struct AGameStateBase_;
struct UMovementComponent_;
struct UNamedSlotInterface_;
struct UUserWidgetExtension_;
struct URichTextBlockDecorator_;
struct UCameraShakeBase_;
struct UCameraShakeSourceComponent_;
struct USoundMix_;
struct UReverbEffect_;
struct UDialogueWave_;
struct USoundNode_;
struct USoundSubmixBase_;
struct USoundConcurrency_;
struct UAudioBus_;
struct FGameplayTargetDataFilterHandle_;
struct FFormatArgumentData_;
struct FPredictProjectilePathParams_;
struct FPredictProjectilePathResult_;
struct FPredictProjectilePathPointData_;
struct FSlateModifierKeysState_;
struct FDrawToRenderTargetContext_;
struct FImportanceTexture_;
struct FCameraLensInterfaceClassSupport_;
struct FEventReply_;
struct FInputDevicePropertyHandle_;
struct FAnimationCurveIdentifier_;
struct FAnimationAttributeIdentifier_;
struct FBoneAnimationTrack_;
struct FForceFeedbackAttenuationSettings_;
struct FPoseLink_;
struct FComponentSpacePoseLink_;
struct FAnimDataModelNotifPayload_;
struct FConstraintInstanceAccessor_;
struct FGameplayTargetDataFilter_;
struct FActorDesc_;
struct FGameViewportWidgetSlot_;
struct FAnchors_;
struct UCancellableAsyncAction_;
struct AGameplayAbilityTargetActor_Trace_;
struct UMaterialFunctionInstance_;
struct UMaterialExpressionFunctionOutput_;
struct UMaterialExpressionBinaryOp_;
struct UMaterialExpressionTextureBase_;
struct UParticleModuleVectorFieldBase_;
struct UParticleModuleTypeDataBase_;
struct UParticleModuleTrailBase_;
struct UParticleModuleSubUVBase_;
struct UParticleModuleSizeBase_;
struct UParticleModuleParameterBase_;
struct UParticleModuleRotationRateBase_;
struct UParticleModuleRotationBase_;
struct UParticleModuleMaterialBase_;
struct UParticleModuleLightBase_;
struct UParticleModuleLifetimeBase_;
struct UParticleModuleEventBase_;
struct UParticleModuleColorBase_;
struct UParticleModuleCollisionBase_;
struct UParticleModuleCameraBase_;
struct UParticleModuleBeamBase_;
struct UParticleModuleAttractorBase_;
struct USoundNodeAssetReferencer_;
struct USoundEffectSubmixPreset_;
struct ASpectatorPawn_;
struct UMaterialExpressionStrataUtilityBase_;
struct UMaterialExpressionStrataBSDF_;
struct UMaterialExpressionGenericConstant_;
struct UMaterialExpressionCustomOutput_;
struct UMirrorDataTable_;
struct UAnimCompress_;
struct UBlendSpace_;
struct USkyLightComponent_;
struct USceneCaptureComponentCube_;
struct USceneCaptureComponent2D_;
struct UPlanarReflectionComponent_;
struct APlayerStart_;
struct UContentWidget_;
struct USoundSourceBus_;
struct UTextureRenderTarget_;
struct UTextureCube_;
struct UAnimSequence_;
struct UBlendSpace1D_;
struct UInstancedStaticMeshComponent_;
struct UAbilityAsync_;
struct UTextureRenderTargetCube_;
struct UTextureRenderTarget2D_;
struct URectLightComponent_;
struct UHierarchicalInstancedStaticMeshComponent_;
struct UAbilityAsync_WaitGameplayTag_;
struct FAnimDataModelModifiedDynamicEvent_;
struct FCharacterMovementUpdatedSignature_;
struct FCharacterReachedApexSignature_;
struct FConstraintBrokenSignature_;
struct FEmptyOnlineDelegate_;
struct FHardwareInputDeviceChanged_;
struct FInputActionHandlerDynamicSignature_;
struct FInputAxisHandlerDynamicSignature_;
struct FInputGestureHandlerDynamicSignature_;
struct FInputTouchHandlerDynamicSignature_;
struct FInputVectorAxisHandlerDynamicSignature_;
struct FInstigatedAnyDamageSignature_;
struct FLandedSignature_;
struct FLevelStreamingLoadedStatus_;
struct FLevelStreamingVisibilityStatus_;
struct FMovementModeChangedSignature_;
struct FOnActorReady_;
struct FOnAllMontageInstancesEndedMCDelegate_;
struct FOnAnimInitialized_;
struct FOnAsyncHandleSaveGame_;
struct FOnAudioFadeChangeSignature_;
struct FOnAudioFinished_;
struct FOnAudioMultiEnvelopeValue_;
struct FOnAudioPlaybackPercent_;
struct FOnAudioPlayStateChanged_;
struct FOnAudioSingleEnvelopeValue_;
struct FOnAudioVirtualizationChanged_;
struct FOnBoneTransformsFinalized_;
struct FOnCanvasRenderTargetUpdate_;
struct FOnDataLayerRuntimeStateChanged_;
struct FOnForceFeedbackFinished_;
struct FOnGameUserSettingsUINeedsUpdate_;
struct FOnMontageBlendingOutStartedMCDelegate_;
struct FOnMontageEndedMCDelegate_;
struct FOnMontageStartedMCDelegate_;
struct FOnPawnControllerChanged_;
struct FOnPlayerStatePawnSet_;
struct FOnPossessedPawnChanged_;
struct FOnPrimaryAssetBundlesChanged_;
struct FOnPrimaryAssetClassListLoaded_;
struct FOnPrimaryAssetClassLoaded_;
struct FOnPrimaryAssetListLoaded_;
struct FOnPrimaryAssetLoaded_;
struct FOnQuartzCommandEvent_;
struct FOnQuartzCommandEventBP_;
struct FOnQuartzMetronomeEvent_;
struct FOnQuartzMetronomeEventBP_;
struct FOnQueueSubtitles_;
struct FOnSubmixEnvelope_;
struct FOnSubmixEnvelopeBP_;
struct FOnSubmixRecordedFileDone_;
struct FOnSubmixSpectralAnalysis_;
struct FOnSubmixSpectralAnalysisBP_;
struct FOnSystemFinished_;
struct FOnTimelineEvent_;
struct FOnTimelineFloat_;
struct FOnTimelineLinearColor_;
struct FOnTimelineVector_;
struct FOnUserClickedBanner_;
struct FOnUserClosedAdvertisement_;
struct FOnUserInputDeviceConnectionChange_;
struct FOnUserInputDevicePairingChange_;
struct FParticleBurstSignature_;
struct FParticleCollisionSignature_;
struct FParticleDeathSignature_;
struct FParticleSpawnSignature_;
struct FPlasticDeformationEventSignature_;
struct FPlatformInterfaceDelegate_;
struct FPlayMontageAnimNotifyDelegate_;
struct FPostEvaluateAnimEvent_;
struct FTimerDynamicDelegate_;
struct FViewportDisplayCallback_;
struct FActorComponentDeactivateSignature_;
struct FActorComponentActivatedSignature_;
struct FActorBeginCursorOverSignature_;
struct FActorBeginOverlapSignature_;
struct FActorBeginTouchOverSignature_;
struct FActorDestroyedSignature_;
struct FActorEndCursorOverSignature_;
struct FActorEndOverlapSignature_;
struct FActorEndPlaySignature_;
struct FActorEndTouchOverSignature_;
struct FActorHitSignature_;
struct FActorOnClickedSignature_;
struct FActorOnInputTouchBeginSignature_;
struct FActorOnInputTouchEndSignature_;
struct FActorOnReleasedSignature_;
struct FComponentBeginCursorOverSignature_;
struct FComponentBeginOverlapSignature_;
struct FComponentBeginTouchOverSignature_;
struct FComponentCollisionSettingsChangedSignature_;
struct FComponentEndCursorOverSignature_;
struct FComponentEndOverlapSignature_;
struct FComponentEndTouchOverSignature_;
struct FComponentHitSignature_;
struct FComponentOnClickedSignature_;
struct FComponentOnInputTouchBeginSignature_;
struct FComponentOnInputTouchEndSignature_;
struct FComponentOnReleasedSignature_;
struct FComponentPhysicsStateChanged_;
struct FComponentSleepSignature_;
struct FComponentWakeSignature_;
struct FIsRootComponentChanged_;
struct FPawnControllerChangedSignature_;
struct FPawnRestartedSignature_;
struct FPhysicsVolumeChanged_;
struct FTakeAnyDamageSignature_;
struct FTakePointDamageSignature_;
struct FTakeRadialDamageSignature_;
struct FPlatformDelegate_;
struct FPlatformFailedToRegisterForRemoteNotificationsDelegate_;
struct FPlatformReceivedLocalNotificationDelegate_;
struct FPlatformReceivedRemoteNotificationDelegate_;
struct FPlatformRegisteredForRemoteNotificationsDelegate_;
struct FPlatformRegisteredForUserNotificationsDelegate_;
struct FPlatformScreenOrientationChangedDelegate_;
struct FPlatformStartupArgumentsDelegate_;
struct FOnAssetLoaded_;
struct FOnAssetClassLoaded_;
struct FOnDataDrivenCVarChanged_;
struct FOnProjectileBounceDelegate_;
struct FOnProjectileStopDelegate_;
struct FPlatformEventDelegate_;
struct FOnInterpToResetDelegate_;
struct FOnInterpToReverseDelegate_;
struct FOnInterpToStopDelegate_;
struct FOnInterpToWaitBeginDelegate_;
struct FOnInterpToWaitEndDelegate_;
struct FApplicationLifetimeDelegate_;
struct FApplicationStartupArgumentsDelegate_;
struct FOnLowPowerModeDelegate_;
struct UFontFaceInterface_;
struct USlateWidgetStyleContainerInterface_;
struct FSlateBrushOutlineSettings_;
struct FToolBarStyle_;
struct FSlateSound_;
struct FSlateFontInfo_;
struct FSegmentedControlStyle_;
struct UDEPRECATED_PhysicalMaterialPropertyBase_;
struct UChaosPhysicalMaterial_;
struct UToolMenuBase_;
struct UButtonWidgetStyle_;
struct UCheckBoxWidgetStyle_;
struct UComboBoxWidgetStyle_;
struct UComboButtonWidgetStyle_;
struct UEditableTextBoxWidgetStyle_;
struct UEditableTextWidgetStyle_;
struct UProgressWidgetStyle_;
struct UScrollBarWidgetStyle_;
struct UScrollBoxWidgetStyle_;
struct USpinBoxWidgetStyle_;
struct UTextBlockWidgetStyle_;
struct UAssetExportTask_;
struct ASkyLight_;
struct UDebugDrawComponent_;
struct UNavAreaBase_;
struct UDynamicBlueprintBinding_;
struct UEdGraphSchema_;
struct UEngineCustomTimeStep_;
struct UTimecodeProvider_;
struct UAudioEngineSubsystem_;
struct UBrushBuilder_;
struct UThumbnailInfo_;
struct AStaticMeshActor_;
struct UActiveSoundUpdateInterface_;
struct UAnimationAssetExtensions_;
struct UAnimBlueprintClassSubsystem_PropertyAccess_;
struct UAnimationDataModelNotifiesExtensions_;
struct UAnimLayerInterface_;
struct UAudioPanelWidgetInterface_;
struct UBookmarkBase_;
struct AReflectionCapture_;
struct ABoxReflectionCapture_;
struct UBuiltInAttributesExtensions_;
struct UPlayer_;
struct UNetConnection_;
struct UChildConnection_;
struct UPlatformInterfaceBase_;
struct ALight_;
struct ADirectionalLight_;
struct AExponentialHeightFog_;
struct UFontImportOptions_;
struct ASpotLight_;
struct AGeneratedMeshAreaLight_;
struct UInterface_ActorSubobject_;
struct UBoneReferenceSkeletonProvider_;
struct UISMPartitionInstanceManager_;
struct UISMPartitionInstanceManagerProvider_;
struct UKismetTextLibrary_;
struct ULevelInstanceEditorPivotInterface_;
struct ULevelStreaming_;
struct ULevelStreamingAlwaysLoaded_;
struct ULevelStreamingDynamic_;
struct ALevelStreamingVolume_;
struct ULightMapTexture2D_;
struct UMapBuildDataRegistry_;
struct UMaterialExpressionLess_;
struct UMaterialExpressionCameraPositionWS_;
struct UMaterialExpressionCameraVectorWS_;
struct UMaterialExpressionExecEnd_;
struct UMaterialExpressionMaterialLayerOutput_;
struct UMaterialExpressionRerouteBase_;
struct UMaterialExpressionNamedRerouteBase_;
struct UMaterialExpressionParticleSubUVProperties_;
struct UMaterialExpressionPixelDepth_;
struct UMaterialExpressionPixelNormalWS_;
struct UMaterialExpressionPreSkinnedNormal_;
struct UMaterialExpressionPreSkinnedPosition_;
struct UMaterialExpressionTextureObject_;
struct UMaterialExpressionTextureObjectParameter_;
struct UMaterialExpressionTextureSampleParameter2DArray_;
struct UMaterialExpressionTextureSampleParameterCube_;
struct UMaterialExpressionTextureSampleParameterCubeArray_;
struct UMaterialExpressionTextureSampleParameterVolume_;
struct UMaterialExpressionTwoSidedSign_;
struct UMaterialExpressionVertexColor_;
struct UMaterialExpressionVertexNormalWS_;
struct UMaterialExpressionVertexTangentWS_;
struct UMaterialFunctionMaterialLayer_;
struct UMaterialFunctionMaterialLayerInstance_;
struct UMaterialFunctionMaterialLayerBlend_;
struct UMaterialFunctionMaterialLayerBlendInstance_;
struct UMeshBudgetProjectSettings_;
struct UNavEdgeProviderInterface_;
struct UNavigationDataInterface_;
struct UNavPathObserverInterface_;
struct UParticleModuleEventSendToGame_;
struct UParticleModuleKillBase_;
struct UParticleModuleLocationBase_;
struct UParticleSpriteEmitter_;
struct UPathFollowingAgentInterface_;
struct UPhysicsObjectBlueprintLibrary_;
struct UPhysicsThreadLibrary_;
struct APlanarReflection_;
struct APlaneReflectionCapture_;
struct UPlatformInterfaceWebResponse_;
struct UPluginBlueprintLibrary_;
struct APointLight_;
struct UPolys_;
struct UReplicationDriver_;
struct UReplicationConnectionDriver_;
struct ASceneCapture2D_;
struct ASceneCaptureCube_;
struct UShadowMapTexture2D_;
struct USkeletalMeshSocket_;
struct USMInstanceManagerProvider_;
struct USoundEffectPresetWidgetInterface_;
struct USoundSubmixWidgetInterface_;
struct ASphereReflectionCapture_;
struct UStaticMeshSocket_;
struct ATextRenderActor_;
struct ATriggerBase_;
struct UTexture2DArray_;
struct UNullNavSysConfig_;
struct UAimOffsetBlendSpace_;
struct UAimOffsetBlendSpace1D_;
struct UAnimClassInterface_;
struct UAnimCompress_BitwiseCompressOnly_;
struct UAnimCurveCompressionCodec_;
struct UAnimMetaData_;
struct UAnimNotifyLibrary_;
struct UAnimNotifyMirrorInspectionLibrary_;
struct UAnimNotifyStateMachineInspectionLibrary_;
struct UAnimNotifyState_DisableRootMotion_;
struct UAnimationAttributeIdentifierExtensions_;
struct UCachedAnimDataLibrary_;
struct UAnimationCurveIdentifierExtensions_;
struct UCurveSourceInterface_;
struct UPreviewCollectionInterface_;
struct UPreviewMeshCollection_;
struct UAtmosphericFogComponent_;
struct UActorSoundParameterInterface_;
struct ABlockingVolume_;
struct UBlueprintMapLibrary_;
struct UBlueprintSetLibrary_;
struct UBookMark_;
struct ABrushShape_;
struct UCameraLensEffectInterfaceClassSupportLibrary_;
struct UCanvasRenderTarget2D_;
struct UCheatManagerExtension_;
struct UDrawSphereComponent_;
struct ULineBatchComponent_;
struct UPoseableMeshComponent_;
struct USplineMetadata_;
struct UCompositeCurveTable_;
struct UCompositeDataTable_;
struct ACullDistanceVolume_;
struct UDataTableFunctionLibrary_;
struct UReporterBase_;
struct ADecalActor_;
struct ADefaultPhysicsVolume_;
struct UDeformableInterface_;
struct UNetDriver_;
struct UDestructibleInterface_;
struct UDPICustomScalingRule_;
struct UEngineElementsLibrary_;
struct UTypedElementCommonActions_;
struct UTypedElementWorldInterface_;
struct USystemTimeTimecodeProvider_;
struct UViewportStatsSubsystem_;
struct UFontFace_;
struct UPlayerStateCountLimiterConfig_;
struct UImportantToggleSettingInterface_;
struct UInputDelegateBinding_;
struct UInputDeviceLibrary_;
struct UInterpCurveEdSetup_;
struct UKismetArrayLibrary_;
struct UKismetGuidLibrary_;
struct UKismetInputLibrary_;
struct UKismetInternationalizationLibrary_;
struct UKismetMaterialLibrary_;
struct UKismetMathLibrary_;
struct UKismetNodeHelperLibrary_;
struct UKismetRenderingLibrary_;
struct UKismetStringLibrary_;
struct UKismetStringTableLibrary_;
struct UBlueprintPathsLibrary_;
struct UBlueprintPlatformLibrary_;
struct UImportanceSamplingLibrary_;
struct ULevelActorContainer_;
struct ULevelStreamingLevelInstanceEditor_;
struct ULevelInstanceInterface_;
struct ALevelScriptActor_;
struct ULevelScriptBlueprint_;
struct ALightmassCharacterIndirectDetailVolume_;
struct ALightmassImportanceVolume_;
struct ULightWeightInstanceBlueprintFunctionLibrary_;
struct ALocationVolume_;
struct AMeshMergeCullingVolume_;
struct UMeshVertexPainterKismetLibrary_;
struct UActorReplicationBridge_;
struct UNetPushModelHelpers_;
struct ANote_;
struct UObjectLibrary_;
struct UOnlineBlueprintCallProxyBase_;
struct UConstraintInstanceBlueprintLibrary_;
struct UPhysicsFieldComponent_;
struct UPhysicsFieldStatics_;
struct APlayerStartPIE_;
struct APostProcessVolume_;
struct APrecomputedVisibilityVolume_;
struct UHealthSnapshotBlueprintLibrary_;
struct ULevelStreamingProfilingSubsystem_;
struct ARectLight_;
struct UReplaySubsystem_;
struct URuntimeOptionsBase_;
struct USCS_Node_;
struct USimpleConstructionScript_;
struct USlateTextureAtlasInterface_;
struct USoundNodeMature_;
struct UStereoLayerFunctionLibrary_;
struct UTextureMipDataProviderFactory_;
struct USubsystemBlueprintLibrary_;
struct ATargetPoint_;
struct UTexture2DDynamic_;
struct UTextureCubeArray_;
struct UTextureRenderTarget2DArray_;
struct UTextureRenderTargetVolume_;
struct UTimelineTemplate_;
struct UVisualLoggerKismetLibrary_;
struct UVOIPStatics_;
struct UVolumeTexture_;
struct UWorldPartitionBlueprintLibrary_;
struct UWorldPartitionDestructibleInHLODInterface_;
struct UWorldPartitionDestructibleInHLODSupportLibrary_;
struct UWorldPartitionHLODModifier_;
struct UWorldPartitionActorLoaderInterface_;
struct UWorldPartitionEditorHash_;
struct UWorldPartitionStreamingPolicy_;
struct UWorldPartitionRuntimeHash_;
struct UWorldPartitionSubsystem_;
struct FFloatRK4SpringInterpolator_;
struct FVectorRK4SpringInterpolator_;
struct FCanvasIcon_;
struct FAnimNodeReference_;
struct FAnimNode_AssetPlayerRelevancyBase_;
struct FEmptyPayload_;
struct FSceneViewExtensionIsActiveFunctor_;
struct FAnimExecutionContext_;
struct FInputScaleBiasClampState_;
struct FInputClampState_;
struct FAssetCompileData_;
struct FCameraShakeUpdateResult_;
struct FCullDistanceSizePair_;
struct FFloatSpringState_;
struct FVectorSpringState_;
struct FQuaternionSpringState_;
struct FSubsurfaceProfileStruct_;
struct FSkelMeshMergeSectionMapping_;
struct FSkelMeshMergeMeshUVTransforms_;
struct FSkelMeshMergeUVTransformMapping_;
struct UEnhancedInputActionDelegateBinding_;
struct UEnhancedInputActionValueBinding_;
struct UEnhancedInputDeveloperSettings_;
struct UEnhancedInputLibrary_;
struct UEnhancedInputPlatformData_;
struct UEnhancedInputPlatformSettings_;
struct UInputDebugKeyDelegateBinding_;
struct UInputMappingContext_;
struct UPlayerMappableInputConfig_;
struct UPlayerMappableKeySettings_;
struct FEnhancedInputActionHandlerDynamicSignature_;
struct FInputDebugKeyHandlerDynamicSignature_;
struct FBlueprintEnhancedInputActionBinding_;
struct FDefaultContextSetting_;
struct FBlueprintInputDebugKeyDelegateBinding_;
struct FOnControlMappingsRebuilt_;
struct UGameplayTask_;
struct UGameplayTaskResource_;
struct UGameplayTask_ClaimResource_;
struct UGameplayTask_SpawnActor_;
struct UGameplayTask_TimeLimitedExecution_;
struct UGameplayTask_WaitDelay_;
struct FGameplayTaskSpawnActorDelegate_;
struct FOnClaimedResourcesChangeSignature_;
struct FGameplayResourceSet_;
struct FTaskDelayDelegate_;
struct FTaskFinishDelegate_;
struct FGenericGameplayTaskDelegate_;
struct UMyTestActorComponent_;
struct ATestActor_;
struct FMyStructTableRow_;
struct UMyClassToDeriveToTestUFunctions_;
struct AUseClassToDeriveToTestFunction_;
struct UClassToUseAsVar_;
struct UMyClassToTest_;
struct FDynamicDelegateOneParamTest_;
struct FDynamicMulticastDelegateOneParamTest_;
struct FStructToUseAsVar_;
struct FStructToUseAsVarDelTest_;
struct UEditorExtensions_;
struct ANimForUETestTestActor_;
struct UHierarchicalLODSetup_;
struct UCheatManager_;
struct UProjectileMovementComponent_;
struct URotatingMovementComponent_;
struct AHUD_;
struct UEngineMessage_;
struct UFloatingPawnMovement_;
struct UAsyncActionHandleSaveGame_;
struct UInputDeviceProperty_;
struct UColorInputDeviceProperty_;
struct UColorInputDeviceCurveProperty_;
struct UInputDeviceTriggerEffect_;
struct UInputDeviceTriggerFeedbackProperty_;
struct UInputDeviceTriggerResistanceProperty_;
struct UInputDeviceTriggerVibrationProperty_;
struct UInputDeviceAudioBasedVibrationProperty_;
struct UInputDeviceSubsystem_;
struct UTouchInterface_;
struct UGameUserSettings_;
struct ALightWeightInstanceManager_;
struct ALightWeightInstanceStaticMeshManager_;
struct UInputSettings_;
struct FLightmassWorldInfoSettings_;
struct FDeviceColorData_;
struct FDeviceColorCurveData_;
struct FDeviceTriggerBaseData_;
struct FDeviceTriggerFeedbackData_;
struct FDeviceTriggerTriggerResistanceData_;
struct FDeviceTriggerTriggerVibrationData_;
struct FAudioBasedVibrationData_;
struct FActivateDevicePropertyParams_;
struct FHardwareDeviceIdentifier_;
struct UAnimSingleNodeInstance_;
struct ASkeletalMeshActor_;
struct UAnalysisProperties_;
struct UAnimationSettings_;
struct UAnimComposite_;
struct UAnimCompress_RemoveLinearKeys_;
struct UAnimCompress_RemoveEverySecondKey_;
struct UAnimCompress_RemoveTrivialKeys_;
struct UAnimDataModel_;
struct UAnimNotifyState_TimedParticleEffect_;
struct UAnimNotifyState_Trail_;
struct UAnimSet_;
struct UAnimStreamable_;
struct UAssetMappingTable_;
struct UBoneMaskFilter_;
struct UPoseAsset_;
struct URig_;
struct UAnimBlueprint_;
struct FPoseLinkBase_;
struct FAnimNode_Root_;
struct FInputScaleBiasClamp_;
struct FInputRange_;
struct FInputAlphaBoolBlend_;
struct FInputScaleBias_;
struct FAnimNode_AssetPlayerBase_;
struct FNamedFloat_;
struct FNamedVector_;
struct FNamedColor_;
struct FNamedTransform_;
struct FLocalSpacePose_;
struct FComponentSpacePose_;
struct FBracketPayload_;
struct FAnimationTrackPayload_;
struct FAnimationTrackAddedPayload_;
struct FSequenceLengthChangedPayload_;
struct FFrameRateChangedPayload_;
struct FCurvePayload_;
struct FCurveScaledPayload_;
struct FCurveRenamedPayload_;
struct FCurveFlagsChangedPayload_;
struct FAttributePayload_;
struct FAnimNodeConstantData_;
struct FFloatAnimationAttribute_;
struct FIntegerAnimationAttribute_;
struct FStringAnimationAttribute_;
struct FTransformAnimationAttribute_;
struct FVectorAnimationAttribute_;
struct FQuaternionAnimationAttribute_;
struct FAnimationCurveData_;
struct FAnimatedBoneAttribute_;
struct FAttributeCurve_;
struct FAnimNodeData_;
struct FAnimNode_ConvertComponentToLocalSpace_;
struct FAnimNode_ConvertLocalToComponentSpace_;
struct FAnimNode_ApplyMeshSpaceAdditive_;
struct FAnimNode_Inertialization_;
struct FAnimNode_LinkedAnimGraph_;
struct FAnimNode_LinkedAnimLayer_;
struct FAnimNode_SaveCachedPose_;
struct FAnimNode_SequencePlayerBase_;
struct FAnimNode_SequencePlayer_;
struct FInputScaleBiasClampConstants_;
struct FAnimNode_SequencePlayer_Standalone_;
struct FAnimNode_TransitionPoseEvaluator_;
struct FAnimNode_TransitionResult_;
struct FAnimNode_SingleNode_;
struct FCachedAnimStateData_;
struct FCachedAnimStateArray_;
struct FCachedAnimAssetPlayerData_;
struct FCachedAnimRelevancyData_;
struct FCachedAnimTransitionData_;
struct FNamedCurveValue_;
struct FInputClampConstants_;
struct FTrajectorySample_;
struct FTrajectorySampleRange_;
struct FAbilityStateDelegate_;
struct FActiveGameplayEffectQueryCustomMatch_Dynamic_;
struct FApplyRootMotionConstantForceDelegate_;
struct FApplyRootMotionJumpForceDelegate_;
struct FApplyRootMotionMoveToActorForceDelegate_;
struct FApplyRootMotionMoveToForceDelegate_;
struct FApplyRootMotionRadialForceDelegate_;
struct FAsyncWaitGameplayTagQueryDelegate_;
struct FGameplayEffectAppliedSelfDelegate_;
struct FGameplayEffectAppliedTargetDelegate_;
struct FGameplayEffectBlockedDelegate_;
struct FInputPressDelegate_;
struct FInputReleaseDelegate_;
struct FMontageWaitSimpleDelegate_;
struct FMovementModeChangedDelegate_;
struct FMoveToLocationDelegate_;
struct FMovieSceneGameplayCueEvent_;
struct FNetworkSyncDelegate_;
struct FRepeatedActionDelegate_;
struct FSpawnActorDelegate_;
struct FVisualizeTargetingDelegate_;
struct FWaitAbilityActivateDelegate_;
struct FWaitAbilityCommitDelegate_;
struct FWaitAttributeChangeDelegate_;
struct FWaitAttributeChangeRatioThresholdDelegate_;
struct FWaitAttributeChangeThresholdDelegate_;
struct FWaitCancelDelegate_;
struct FWaitConfirmCancelDelegate_;
struct FWaitDelayDelegate_;
struct FWaitGameplayEffectRemovedDelegate_;
struct FWaitGameplayEffectStackChangeDelegate_;
struct FWaitGameplayEventDelegate_;
struct FWaitGameplayTagDelegate_;
struct FWaitGameplayTagQueryDelegate_;
struct FWaitOverlapDelegate_;
struct FWaitTargetDataDelegate_;
struct FWaitVelocityChangeDelegate_;
struct FAbilityAbilityKey_;
struct FAbilityConfirmOrCancel_;
struct FAsyncWaitGameplayTagDelegate_;
struct FEventReceivedDelegate_;
struct FOnAppliedDelegate_;
struct FAsyncWaitAttributeChangedDelegate_;
struct AAbilitySystemDebugHUD_;
struct UGameplayEffectUIData_;
struct UGameplayEffectUIData_TextOnly_;
struct UGameplayAbilitySet_;
struct AGameplayAbilityTargetActor_SingleLineTrace_;
struct UGameplayAbility_CharacterJump_;
struct UAbilitySystemBlueprintLibrary_;
struct UAbilitySystemDebugHUDExtension_;
struct UAbilitySystemDebugHUDExtension_Tags_;
struct UAbilitySystemDebugHUDExtension_Attributes_;
struct UAbilitySystemDebugHUDExtension_BlockedAbilityTags_;
struct UAbilitySystemInterface_;
struct UAbilitySystemTestAttributeSet_;
struct AAbilitySystemTestPawn_;
struct UAnimNotify_GameplayCue_;
struct UAnimNotify_GameplayCueState_;
struct UGameplayAbilityBlueprint_;
struct UGameplayCueFunctionLibrary_;
struct UGameplayCueManager_;
struct AGameplayCueNotify_Actor_;
struct UGameplayCueNotify_Static_;
struct UGameplayCueNotify_Burst_;
struct AGameplayCueNotify_BurstLatent_;
struct UGameplayCueNotify_HitImpact_;
struct AGameplayCueNotify_Looping_;
struct UGameplayCueSet_;
struct UGameplayCueTranslator_;
struct UGameplayCueTranslator_Test_;
struct UGameplayEffectCalculation_;
struct UGameplayEffectCustomApplicationRequirement_;
struct UGameplayEffectExecutionCalculation_;
struct UGameplayModMagnitudeCalculation_;
struct UGameplayTagReponseTable_;
struct UTickableAttributeSetInterface_;
struct FPredictionKeyNetSerializerConfig_;
struct FGameplayAbilityRepAnimMontageNetSerializerConfig_;
struct FMinimalReplicationTagCountMapNetSerializerConfig_;
struct FMinimalGameplayCueReplicationProxyNetSerializerConfig_;
struct FGameplayEffectContextNetSerializerConfig_;
struct FGameplayTagResponseTableEntry_;
struct FGameplayTagReponsePair_;
struct FGameplayEffectContextHandleNetSerializerConfig_;
struct FGameplayCuePendingExecute_;
struct FGameplayCueNotifyActorArray_;
struct FPreallocationInfo_;
struct FGameplayAbilityBindInfo_;
struct FGameplayCueObjectLibrary_;
struct FGameplayCueNotify_SpawnCondition_;
struct FGameplayCueNotify_PlacementInfo_;
struct FGameplayCueNotify_SpawnResult_;
struct FGameplayCueNotify_ParticleInfo_;
struct FGameplayCueNotify_SoundParameterInterfaceInfo_;
struct FGameplayCueNotify_SoundInfo_;
struct FGameplayCueNotify_CameraShakeInfo_;
struct FGameplayCueNotify_CameraLensEffectInfo_;
struct FGameplayCueNotify_ForceFeedbackInfo_;
struct FGameplayCueNotify_InputDevicePropertyInfo_;
struct FGameplayCueNotify_DecalInfo_;
struct FGameplayCueNotify_BurstEffects_;
struct FGameplayCueNotify_LoopingEffects_;
struct FGameplayCueNotifyData_;
struct FGameplayCueTranslatorNodeIndex_;
struct FGameplayCueTranslationLink_;
struct FGameplayCueTranslatorNode_;
struct FGameplayCueTranslationManager_;
struct FGameplayEffectCustomExecutionParameters_;
struct FGameplayEffectCustomExecutionOutput_;
struct UCppAttributeSet_;
struct UDelayOneFrame_;
struct FDelayOneFrameOutputPin_;
struct UMovieScene2DTransformSection_;
struct UMovieSceneMarginSection_;
struct UUMGSequencePlayer_;
struct UWidgetAnimation_;
struct UWidgetAnimationPlayCallbackProxy_;
struct UButtonStyleAsset_;
struct UCheckBoxStyleAsset_;
struct USlateBrushAsset_;
struct UWidget_;
struct UWidgetComponent_;
struct UListView_;
struct UBackgroundBlur_;
struct UBackgroundBlurSlot_;
struct UBorder_;
struct UBorderSlot_;
struct UButton_;
struct UButtonSlot_;
struct UCanvasPanelSlot_;
struct UCheckBox_;
struct UCircularThrobber_;
struct UComboBoxKey_;
struct UComboBoxString_;
struct UDynamicEntryBoxBase_;
struct UDynamicEntryBox_;
struct UEditableText_;
struct UEditableTextBox_;
struct UExpandableArea_;
struct UGridPanel_;
struct UGridSlot_;
struct UHorizontalBoxSlot_;
struct UImage_;
struct UInputKeySelector_;
struct UInvalidationBox_;
struct UMenuAnchor_;
struct UTextLayoutWidget_;
struct UMultiLineEditableText_;
struct UMultiLineEditableTextBox_;
struct UOverlaySlot_;
struct UProgressBar_;
struct URetainerBox_;
struct URichTextBlock_;
struct URichTextBlockImageDecorator_;
struct USafeZone_;
struct UScaleBox_;
struct UScaleBoxSlot_;
struct UScrollBar_;
struct UScrollBox_;
struct UScrollBoxSlot_;
struct USizeBox_;
struct USizeBoxSlot_;
struct USlider_;
struct USpacer_;
struct USpinBox_;
struct UStackBox_;
struct UTextBlock_;
struct UThrobber_;
struct UTileView_;
struct UTreeView_;
struct UUniformGridPanel_;
struct UUniformGridSlot_;
struct UVerticalBoxSlot_;
struct UViewport_;
struct UWidgetInteractionComponent_;
struct UWidgetSwitcher_;
struct UWidgetSwitcherSlot_;
struct UWindowTitleBarArea_;
struct UWindowTitleBarAreaSlot_;
struct UWrapBox_;
struct UWrapBoxSlot_;
struct FShapedTextOptions_;
struct FRadialBoxSettings_;
struct FSlateChildSize_;
struct FAnchorData_;
struct FRichImageRow_;
struct FFieldValueChangedDynamicDelegate_;
struct FCustomWidgetNavigationDelegate_;
struct FOnMenuOpenChangedEvent_;
struct FDownloadImageDelegate_;
struct FOnButtonClickedEvent_;
struct FOnButtonHoverEvent_;
struct FOnButtonPressedEvent_;
struct FOnButtonReleasedEvent_;
struct FOnCheckBoxComponentStateChanged_;
struct FOnConstructEvent_;
struct FOnControllerCaptureBeginEvent_;
struct FOnControllerCaptureEndEvent_;
struct FOnDragDropMulticast_;
struct FOnExpandableAreaExpansionChanged_;
struct FOnFloatValueChangedEvent_;
struct FOnGetItemChildrenDynamic_;
struct FOnHoveredWidgetChanged_;
struct FOnInputAction_;
struct FOnItemExpansionChangedDynamic_;
struct FOnItemIsHoveredChangedDynamic_;
struct FOnListEntryGeneratedDynamic_;
struct FOnListEntryInitializedDynamic_;
struct FOnListEntryReleasedDynamic_;
struct FOnListItemScrolledIntoViewDynamic_;
struct FOnListItemSelectionChangedDynamic_;
struct FOnListViewScrolledDynamic_;
struct FOnMouseCaptureBeginEvent_;
struct FOnMouseCaptureEndEvent_;
struct FOnUserScrolledEvent_;
struct FOnVisibilityChangedEvent_;
struct FOnWidgetAnimationPlaybackStatusChanged_;
struct FSimpleListItemEventDynamic_;
struct FWidgetAnimationDynamicEvent_;
struct FWidgetAnimationDynamicEvents_;
struct FWidgetAnimationResult_;
struct FOnGameWindowCloseButtonClickedDelegate_;
struct FOnSpinBoxBeginSliderMovement_;
struct FOnSpinBoxValueChangedEvent_;
struct FOnSpinBoxValueCommittedEvent_;
struct FOnMultiLineEditableTextBoxChangedEvent_;
struct FOnMultiLineEditableTextBoxCommittedEvent_;
struct FOnMultiLineEditableTextChangedEvent_;
struct FOnMultiLineEditableTextCommittedEvent_;
struct FGetUserWidget_;
struct FOnIsSelectingKeyChanged_;
struct FOnKeySelected_;
struct FOnEditableTextBoxChangedEvent_;
struct FOnEditableTextBoxCommittedEvent_;
struct FOnEditableTextChangedEvent_;
struct FOnEditableTextCommittedEvent_;
struct UComboBoxString_FOnOpeningEvent_;
struct UComboBoxString_FOnSelectionChangedEvent_;
struct FGenerateWidgetEvent_;
struct UComboBoxKey_FOnOpeningEvent_;
struct UComboBoxKey_FOnSelectionChangedEvent_;
struct USlateAccessibleWidgetData_FGetText_;
struct FGenerateWidgetForObject_;
struct FGenerateWidgetForString_;
struct FGetBool_;
struct FGetCheckBoxState_;
struct FGetFloat_;
struct FGetInt32_;
struct FGetLinearColor_;
struct FGetMouseCursor_;
struct FGetSlateBrush_;
struct FGetSlateColor_;
struct FGetSlateVisibility_;
struct FGetText_;
struct FGetWidget_;
struct FOnPointerEvent_;
struct FOnReply_;
struct UUserWidget_;
struct UAsyncTaskDownloadImage_;
struct FWidgetNavigationData_;
struct FFieldNotificationId_;
struct FWidgetTransform_;
struct UNotifyFieldValueChanged_;
struct UUserWidgetBlueprint_;
struct UWidgetBlueprintGeneratedClassExtension_;
struct UWidgetFieldNotificationExtension_;
struct UMovieSceneWidgetMaterialSystem_;
struct UGameViewportSubsystem_;
struct UUserListEntry_;
struct UUserListEntryLibrary_;
struct UUserObjectListEntry_;
struct UUserObjectListEntryLibrary_;
struct UCanvasPanel_;
struct UHorizontalBox_;
struct UOverlay_;
struct UVerticalBox_;
struct USlateBlueprintLibrary_;
struct UWidgetBlueprintLibrary_;
struct UWidgetLayoutLibrary_;
struct FPaintContext_;
struct UAbilityAsync_WaitAttributeChanged_;
struct UAbilityAsync_WaitGameplayEffectApplied_;
struct UAbilityAsync_WaitGameplayEvent_;
struct UAbilityAsync_WaitGameplayTagAdded_;
struct UAbilityAsync_WaitGameplayTagRemoved_;
struct UAbilityAsync_WaitGameplayTagQuery_;
struct AGameplayAbilityTargetActor_GroundTrace_;
struct AGameplayAbilityTargetActor_ActorPlacement_;
struct AGameplayAbilityTargetActor_Radius_;
struct AGameplayAbilityWorldReticle_;
struct AGameplayAbilityWorldReticle_ActorVisualization_;
struct UGameplayAbility_Montage_;
struct UAbilityTask_;
struct UAbilityTask_ApplyRootMotion_Base_;
struct UAbilityTask_ApplyRootMotionConstantForce_;
struct UAbilityTask_ApplyRootMotionJumpForce_;
struct UAbilityTask_ApplyRootMotionMoveToActorForce_;
struct UAbilityTask_ApplyRootMotionMoveToForce_;
struct UAbilityTask_ApplyRootMotionRadialForce_;
struct UAbilityTask_MoveToLocation_;
struct UAbilityTask_NetworkSyncPoint_;
struct UAbilityTask_PlayMontageAndWait_;
struct UAbilityTask_Repeat_;
struct UAbilityTask_SpawnActor_;
struct UAbilityTask_StartAbilityState_;
struct UAbilityTask_VisualizeTargeting_;
struct UAbilityTask_WaitAbilityActivate_;
struct UAbilityTask_WaitAbilityCommit_;
struct UAbilityTask_WaitAttributeChange_;
struct UAbilityTask_WaitAttributeChangeRatioThreshold_;
struct UAbilityTask_WaitAttributeChangeThreshold_;
struct UAbilityTask_WaitCancel_;
struct UAbilityTask_WaitConfirm_;
struct UAbilityTask_WaitConfirmCancel_;
struct UAbilityTask_WaitDelay_;
struct UAbilityTask_WaitGameplayEffectApplied_;
struct UAbilityTask_WaitGameplayEffectApplied_Self_;
struct UAbilityTask_WaitGameplayEffectApplied_Target_;
struct UAbilityTask_WaitGameplayEffectBlockedImmunity_;
struct UAbilityTask_WaitGameplayEffectRemoved_;
struct UAbilityTask_WaitGameplayEffectStackChange_;
struct UAbilityTask_WaitGameplayEvent_;
struct UAbilityTask_WaitGameplayTag_;
struct UAbilityTask_WaitGameplayTagAdded_;
struct UAbilityTask_WaitGameplayTagRemoved_;
struct UAbilityTask_WaitGameplayTagQuery_;
struct UAbilityTask_WaitInputPress_;
struct UAbilityTask_WaitInputRelease_;
struct UAbilityTask_WaitMovementModeChange_;
struct UAbilityTask_WaitOverlap_;
struct UAbilityTask_WaitTargetData_;
struct UAbilityTask_WaitVelocityChange_;
struct FWorldReticleParameters_;
struct UMovieSceneGameplayCueTriggerSection_;
struct UMovieSceneGameplayCueSection_;
struct UMovieSceneGameplayCueTrack_;
struct FMovieSceneGameplayCueKey_;
struct FMovieSceneGameplayCueChannel_;
struct FMinimalGameplayCueReplicationProxyForNetSerializer_;
struct FMinimalReplicationTagCountMapForNetSerializer_;
struct APartitionActor_;
struct UAISystemBase_;
struct UNavCollisionBase_;
struct UNavigationDataChunk_;
struct UAvoidanceManager_;
struct AAtmosphericFog_;
struct ACameraActor_;
struct UCameraModifier_;
struct FCameraShakeStartParams_;
struct FCameraShakeUpdateParams_;
struct FCameraShakeScrubParams_;
struct FCameraShakeStopParams_;
struct FCameraShakeDuration_;
struct FCameraShakeInfo_;
struct UCommandlet_;
struct UBoxReflectionCaptureComponent_;
struct ULightmassPortalComponent_;
struct UPlaneReflectionCaptureComponent_;
struct USphereReflectionCaptureComponent_;
struct UStereoLayerShapeCylinder_;
struct UStereoLayerShapeEquirect_;
struct UStereoLayerComponent_;
struct UTimelineComponent_;
struct UVectorFieldComponent_;
struct UWindDirectionalSourceComponent_;
struct UApplicationLifecycleComponent_;
struct UBoundsCopyComponent_;
struct UBrushComponent_;
struct UDirectionalLightComponent_;
struct UDrawFrustumComponent_;
struct UInterpToMovementComponent_;
struct ULODSyncComponent_;
struct UMaterialBillboardComponent_;
struct UModelComponent_;
struct UPawnNoiseEmitterComponent_;
struct UPlatformEventsComponent_;
struct UPostProcessComponent_;
struct ASkyAtmosphere_;
struct USplineComponent_;
struct USplineMeshComponent_;
struct UVolumetricCloudComponent_;
struct AVolumetricCloud_;
struct UWorldPartitionStreamingSourceComponent_;
struct FInterpControlPoint_;
struct FExponentialHeightFogData_;
struct FEquirectProps_;
struct FLODMappingData_;
struct FComponentSync_;
struct FMaterialSpriteElement_;
struct FEngineShowFlagsSetting_;
struct FTentDistribution_;
struct FSplinePoint_;
struct UCurveBase_;
struct UCurveLinearColorAtlas_;
struct FRuntimeVectorCurve_;
struct FDataDrivenConsoleVariable_;
struct UDistributionFloatParameterBase_;
struct UDistributionVectorParameterBase_;
struct UEdGraphNode_Documentation_;
struct UAssetImportData_;
struct FTypedElementPasteOptions_;
struct FTypedElementDeletionOptions_;
struct UExporter_;
struct UHapticFeedbackEffect_Buffer_;
struct UHapticFeedbackEffect_Curve_;
struct UHapticFeedbackEffect_SoundWave_;
struct UInstancedPlacemenClientSettings_;
struct AISMPartitionActor_;
struct UPlatformGameInstance_;
struct ALightmassPortal_;
struct APrecomputedVisibilityOverrideVolume_;
struct ULightmappedSurfaceCollection_;
struct ULightmassPrimitiveSettingsObject_;
struct AVolumetricLightmapDensityVolume_;
struct UMaterialInstanceConstant_;
struct UMaterialExpressionAbs_;
struct UMaterialExpressionAbsorptionMediumMaterialOutput_;
struct UMaterialExpressionAdd_;
struct UMaterialExpressionAntialiasedTextureMask_;
struct UMaterialExpressionAppendVector_;
struct UMaterialExpressionArccosine_;
struct UMaterialExpressionArcsine_;
struct UMaterialExpressionArctangent_;
struct UMaterialExpressionArctangent2_;
struct UMaterialExpressionBlackBody_;
struct UMaterialExpressionBlendMaterialAttributes_;
struct UMaterialExpressionBreakMaterialAttributes_;
struct UMaterialExpressionBumpOffset_;
struct UMaterialExpressionCeil_;
struct UMaterialExpressionVectorParameter_;
struct UMaterialExpressionChannelMaskParameter_;
struct UMaterialExpressionClamp_;
struct UMaterialExpressionClearCoatNormalCustomOutput_;
struct UMaterialExpressionCollectionParameter_;
struct UMaterialExpressionComment_;
struct UMaterialExpressionComponentMask_;
struct UMaterialExpressionComposite_;
struct UMaterialExpressionConstant_;
struct UMaterialExpressionConstant2Vector_;
struct UMaterialExpressionConstant3Vector_;
struct UMaterialExpressionConstant4Vector_;
struct UMaterialExpressionConstantBiasScale_;
struct UMaterialExpressionCosine_;
struct UMaterialExpressionCrossProduct_;
struct UMaterialExpressionScalarParameter_;
struct UMaterialExpressionCurveAtlasRowParameter_;
struct UMaterialExpressionCustom_;
struct UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_;
struct UMaterialExpressionDDX_;
struct UMaterialExpressionDDY_;
struct UMaterialExpressionDesaturation_;
struct UMaterialExpressionDistance_;
struct UMaterialExpressionDivide_;
struct UMaterialExpressionDotProduct_;
struct UMaterialExpressionDoubleVectorParameter_;
struct UMaterialExpressionDynamicParameter_;
struct UMaterialExpressionExecBegin_;
struct UMaterialExpressionFeatureLevelSwitch_;
struct UMaterialExpressionFloor_;
struct UMaterialExpressionFmod_;
struct UMaterialExpressionFontSample_;
struct UMaterialExpressionForLoop_;
struct UMaterialExpressionFrac_;
struct UMaterialExpressionFresnel_;
struct UMaterialExpressionFunctionInput_;
struct UMaterialExpressionConstantDouble_;
struct UMaterialExpressionGetLocal_;
struct UMaterialExpressionGetMaterialAttributes_;
struct UMaterialExpressionHairAttributes_;
struct UMaterialExpressionHairColor_;
struct UMaterialExpressionIf_;
struct UMaterialExpressionIfThenElse_;
struct UMaterialExpressionInverseLinearInterpolate_;
struct UMaterialExpressionLinearInterpolate_;
struct UMaterialExpressionLogarithm10_;
struct UMaterialExpressionLogarithm2_;
struct UMaterialExpressionMakeMaterialAttributes_;
struct UMaterialExpressionMax_;
struct UMaterialExpressionMin_;
struct UMaterialExpressionMultiply_;
struct UMaterialExpressionNoise_;
struct UMaterialExpressionNormalize_;
struct UMaterialExpressionOneMinus_;
struct UMaterialExpressionPanner_;
struct UMaterialExpressionParticleSubUV_;
struct UMaterialExpressionPinBase_;
struct UMaterialExpressionPower_;
struct UMaterialExpressionPreviousFrameSwitch_;
struct UMaterialExpressionQualitySwitch_;
struct UMaterialExpressionReflectionVectorWS_;
struct UMaterialExpressionRotateAboutAxis_;
struct UMaterialExpressionRuntimeVirtualTextureSampleParameter_;
struct UMaterialExpressionSaturate_;
struct UMaterialExpressionSetLocal_;
struct UMaterialExpressionSetMaterialAttributes_;
struct UMaterialExpressionShaderStageSwitch_;
struct UMaterialExpressionShadingModel_;
struct UMaterialExpressionShadingPathSwitch_;
struct UMaterialExpressionSine_;
struct UMaterialExpressionSingleLayerWaterMaterialOutput_;
struct UMaterialExpressionSmoothStep_;
struct UMaterialExpressionSobol_;
struct UMaterialExpressionSparseVolumeTextureSampleParameter_;
struct UMaterialExpressionSpeedTree_;
struct UMaterialExpressionSphereMask_;
struct UMaterialExpressionSquareRoot_;
struct UMaterialExpressionStaticBool_;
struct UMaterialExpressionStaticBoolParameter_;
struct UMaterialExpressionStaticComponentMaskParameter_;
struct UMaterialExpressionStaticSwitch_;
struct UMaterialExpressionStaticSwitchParameter_;
struct UMaterialExpressionStep_;
struct UMaterialExpressionStrataLegacyConversion_;
struct UMaterialExpressionStrataSlabBSDF_;
struct UMaterialExpressionStrataSimpleClearCoatBSDF_;
struct UMaterialExpressionStrataVolumetricFogCloudBSDF_;
struct UMaterialExpressionStrataUnlitBSDF_;
struct UMaterialExpressionStrataHairBSDF_;
struct UMaterialExpressionStrataEyeBSDF_;
struct UMaterialExpressionStrataSingleLayerWaterBSDF_;
struct UMaterialExpressionStrataLightFunction_;
struct UMaterialExpressionStrataPostProcess_;
struct UMaterialExpressionStrataUI_;
struct UMaterialExpressionStrataConvertToDecal_;
struct UMaterialExpressionStrataHorizontalMixing_;
struct UMaterialExpressionStrataVerticalLayering_;
struct UMaterialExpressionStrataAdd_;
struct UMaterialExpressionStrataWeight_;
struct UMaterialExpressionStrataTransmittanceToMFP_;
struct UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0_;
struct UMaterialExpressionStrataHazinessToSecondaryRoughness_;
struct UMaterialExpressionStrataThinFilm_;
struct UMaterialExpressionSubsurfaceMediumMaterialOutput_;
struct UMaterialExpressionSubtract_;
struct UMaterialExpressionSwitch_;
struct UMaterialExpressionTangent_;
struct UMaterialExpressionTangentOutput_;
struct UMaterialExpressionTemporalSobol_;
struct UMaterialExpressionTextureCoordinate_;
struct UMaterialExpressionTextureSampleParameterSubUV_;
struct UMaterialExpressionThinTranslucentMaterialOutput_;
struct UMaterialExpressionTime_;
struct UMaterialExpressionTransform_;
struct UMaterialExpressionTransformPosition_;
struct UMaterialExpressionTruncateLWC_;
struct UMaterialExpressionVectorNoise_;
struct UMaterialExpressionVertexInterpolator_;
struct UMaterialExpressionViewProperty_;
struct UMaterialExpressionVolumetricAdvancedMaterialOutput_;
struct UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput_;
struct UMaterialExpressionWhileLoop_;
struct UMaterialExpressionWorldPosition_;
struct AMaterialInstanceActor_;
struct UVOIPTalker_;
struct FVoiceSettings_;
struct AEmitterCameraLensEffectBase_;
struct UParticleLODLevel_;
struct UParticleModuleAccelerationBase_;
struct UParticleModuleAcceleration_;
struct UParticleModuleAccelerationConstant_;
struct UParticleModuleAccelerationDrag_;
struct UParticleModuleAccelerationDragScaleOverLife_;
struct UParticleModuleAccelerationOverLifetime_;
struct UParticleModuleAttractorLine_;
struct UParticleModuleAttractorParticle_;
struct UParticleModuleAttractorPoint_;
struct UParticleModuleBeamNoise_;
struct UParticleModuleBeamSource_;
struct UParticleModuleBeamTarget_;
struct UParticleModuleCameraOffset_;
struct UParticleModuleCollision_;
struct UParticleModuleCollisionGPU_;
struct UParticleModuleColorOverLife_;
struct UParticleModuleColorScaleOverLife_;
struct UParticleModuleEventGenerator_;
struct UParticleModuleEventReceiverBase_;
struct UParticleModuleLifetime_;
struct UParticleModuleLight_;
struct UParticleModuleLight_Seeded_;
struct UParticleModuleMeshMaterial_;
struct UParticleModuleMeshRotation_;
struct UParticleModuleMeshRotationRate_;
struct UParticleModuleOrbitBase_;
struct UParticleModuleOrbit_;
struct UParticleModuleParameterDynamic_;
struct UParticleModuleRequired_;
struct UParticleModuleRotation_;
struct UParticleModuleRotationOverLifetime_;
struct UParticleModuleRotationRate_;
struct UParticleModuleRotationRateMultiplyLife_;
struct UParticleModuleSize_;
struct UParticleModuleSizeMultiplyLife_;
struct UParticleModuleSizeScale_;
struct UParticleModuleSizeScaleBySpeed_;
struct UParticleModuleSpawnBase_;
struct UParticleModuleSpawn_;
struct UParticleModuleSpawnPerUnit_;
struct UParticleModuleSubUV_;
struct UParticleModuleSubUVMovie_;
struct UParticleModuleTrailSource_;
struct UParticleModuleTypeDataAnimTrail_;
struct UParticleModuleTypeDataBeam2_;
struct UParticleModuleTypeDataGpu_;
struct UParticleModuleTypeDataMesh_;
struct UParticleModuleTypeDataRibbon_;
struct UParticleModuleVectorFieldLocal_;
struct UParticleModuleVectorFieldRotationRate_;
struct UParticleModuleVectorFieldScale_;
struct UParticleModuleVectorFieldScaleOverLife_;
struct UParticleModuleVelocityBase_;
struct UParticleModuleVelocity_;
struct UParticleModuleVelocityCone_;
struct UParticleModuleVelocityInheritParent_;
struct UParticleModuleVelocityOverLifetime_;
struct USubUVAnimation_;
struct UPhysicalMaterialMask_;
struct UAsyncPhysicsInputComponent_;
struct UPhysicsSpringComponent_;
struct UPhysicsThrusterComponent_;
struct ARadialForceActor_;
struct UPhysicsCollisionHandler_;
struct APhysicsConstraintActor_;
struct UPhysicsConstraintComponent_;
struct UPhysicsConstraintTemplate_;
struct UPhysicsHandleComponent_;
struct URadialForceComponent_;
struct USoundNodeModulatorContinuous_;
struct AAmbientSound_;
struct AAudioVolume_;
struct USoundCue_;
struct USoundNodeAttenuation_;
struct USoundNodeBranch_;
struct USoundNodeConcatenator_;
struct USoundNodeDelay_;
struct USoundNodeDialoguePlayer_;
struct USoundNodeDistanceCrossFade_;
struct USoundNodeEnveloper_;
struct USoundNodeGroupControl_;
struct USoundNodeLooping_;
struct USoundNodeMixer_;
struct USoundNodeModulator_;
struct USoundNodeParamCrossFade_;
struct USoundNodeQualityLevel_;
struct USoundNodeRandom_;
struct USoundNodeSoundClass_;
struct USoundNodeSwitch_;
struct USoundNodeWaveParam_;
struct USoundNodeWavePlayer_;
struct USoundSubmixWithParentBase_;
struct USoundSubmix_;
struct USoundfieldSubmix_;
struct UEndpointSubmix_;
struct USoundfieldEndpointSubmix_;
struct FReverbSettings_;
struct FAudioVolumeSubmixSendSettings_;
struct FAudioVolumeSubmixOverrideSettings_;
struct FInteriorSettings_;
struct FSoundConcurrencySettings_;
struct FSoundClassAdjuster_;
struct UStaticSparseVolumeTexture_;
struct UAnimatedSparseVolumeTexture_;
struct UVectorField_;
struct UVectorFieldAnimated_;
struct UVectorFieldStatic_;
struct AVectorFieldVolume_;
struct URuntimeVirtualTexture_;
struct ARuntimeVirtualTextureVolume_;
struct UHLODBuilder_;
struct UDEPRECATED_DataLayer_;
struct UDataLayerAsset_;
struct UDataLayerSubsystem_;
struct UWorldPartitionDestructibleHLODComponent_;
struct UWorldPartitionRuntimeCell_;
struct URuntimeHashExternalStreamingObjectBase_;
struct FWorldPartitionHLODDestructionTag_;
typedef NU8 tyEnum_TNimNodeKind__hS7zpbgcPQBrSr8Ohh0pcA;
struct TNimNode {
	tyEnum_TNimNodeKind__hS7zpbgcPQBrSr8Ohh0pcA kind;
	NI offset;
	TNimType* typ;
	NCSTRING name;
	NI len;
	TNimNode** sons;
};
typedef NU8 tyEnum_TNimKind__SrAogb6GXIy2rKgKzC704A;
typedef NU8 tySet_tyEnum_TNimTypeFlag__rQnvJqGKO9aJZPmc79bCxPTg;
typedef N_NIMCALL_PTR(void, tyProc__ojoeKfW4VYIm36I9cpDTQIg) (void* p_p0, NI op_p1);
typedef N_NIMCALL_PTR(void*, tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ) (void* p_p0);
struct TNimType {
	NI size;
	NI align;
	tyEnum_TNimKind__SrAogb6GXIy2rKgKzC704A kind;
	tySet_tyEnum_TNimTypeFlag__rQnvJqGKO9aJZPmc79bCxPTg flags;
	TNimType* base;
	TNimNode* node;
	void* finalizer;
	tyProc__ojoeKfW4VYIm36I9cpDTQIg marker;
	tyProc__WSm2xU5ARYv9aAR4l0z9c9auQ deepcopy;
	void* typeInfoV2;
};

struct TSafePoint {
	TSafePoint* prev;
	NI status;
	jmp_buf context;
};
struct GcFrameHeader {
	NI len;
	GcFrameHeader* prev;
};
struct ForLoopStmt {
	char dummy;
};
typedef N_CDECL_PTR(void, OnInputKeyEventPressedNimSignature) (FInputKeyEventArgs* keyEventArgs_p0);
typedef N_CDECL_PTR(void, OnKeyPressedNimSignature) (FKeyEvent* keyEventArgs_p0);
struct UAssetRegistryHelpers_ : public UObject {
  UAssetRegistryHelpers_() = default;
  UAssetRegistryHelpers_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef NU8 tyArray__H8qf9bpC2ziYA2earmO8m7w[4];
struct FTagAndValue_ {
	FName tag{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	FString value{};
};
typedef TArray<FTagAndValue_> TY__HdzeEk4HpX19bllurNUyndA;
typedef TArray<FAssetData> TY__8erC4L7o5X0VmnCzY0GMhQ;
typedef TScriptInterface<UAssetRegistry>  TY__IYNsvvBlfnKuRz5TNKUqnw;
typedef TArray<FString> TY__myhN0u2pNczwuaOhbdYPXw;
typedef TArray<FName> TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ;
typedef TArray<FTopLevelAssetPath> TY__PRe8Jrdf8eYAEJilcBMaEQ;
typedef TSet<FTopLevelAssetPath>  TY__PRSVFfQEtqNnXT9a7lc0o6A;
typedef NU8 tyArray__ei1f5NP9cmpUVHoe9cUYpPag[40];
struct FClosestPhysicsObjectResult_ {
	tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
typedef NU8 tyArray__SpfepCfLRZtm9aHk9aP3FBeQ[3];
struct FSolverTrailingFilterSettings_ {
	NIM_BOOL filterEnabled;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 minMass;
	NF32 minSpeed;
	NF32 minVolume;
};
struct FSolverBreakingFilterSettings_ {
	NIM_BOOL filterEnabled;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 minMass;
	NF32 minSpeed;
	NF32 minVolume;
};
struct FSolverCollisionFilterSettings_ {
	NIM_BOOL filterEnabled;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 minMass;
	NF32 minSpeed;
	NF32 minImpulse;
};
struct FSolverRemovalFilterSettings_ {
	NIM_BOOL filterEnabled;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 minMass;
	NF32 minVolume;
};
struct UVisualLoggerDebugSnapshotInterface_ : public UInterface {
  UVisualLoggerDebugSnapshotInterface_() = default;
  UVisualLoggerDebugSnapshotInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UFontProviderInterface_ : public UInterface {
  UFontProviderInterface_() = default;
  UFontProviderInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UAnimBoneCompressionCodec_ : public UObject {
  UAnimBoneCompressionCodec_() = default;
  UAnimBoneCompressionCodec_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USceneCaptureComponent_ : public USceneComponent {
  USceneCaptureComponent_() = default;
  USceneCaptureComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UDialogueVoice_ : public UObject {
  UDialogueVoice_() = default;
  UDialogueVoice_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTasksComponent_ : public UActorComponent {
  UGameplayTasksComponent_() = default;
  UGameplayTasksComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UGameplayTaskOwnerInterface_ : public UInterface {
  UGameplayTaskOwnerInterface_() = default;
  UGameplayTaskOwnerInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UDragDropOperation_ : public UObject {
  UDragDropOperation_() = default;
  UDragDropOperation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UHLODLayer_ : public UObject {
  UHLODLayer_() = default;
  UHLODLayer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCurveVector_ : public UObject {
  UCurveVector_() = default;
  UCurveVector_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCurveLinearColor_ : public UObject {
  UCurveLinearColor_() = default;
  UCurveLinearColor_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AGameplayAbilityTargetActor_ : public AActor {
  AGameplayAbilityTargetActor_() = default;
  AGameplayAbilityTargetActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UParticleModule_ : public UObject {
  UParticleModule_() = default;
  UParticleModule_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMaterialParameterCollection_ : public UObject {
  UMaterialParameterCollection_() = default;
  UMaterialParameterCollection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPanelSlot_ : public UObject {
  UPanelSlot_() = default;
  UPanelSlot_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPanelWidget_ : public UObject {
  UPanelWidget_() = default;
  UPanelWidget_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UListViewBase_ : public UObject {
  UListViewBase_() = default;
  UListViewBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ARigidBodyBase_ : public AActor {
  ARigidBodyBase_() = default;
  ARigidBodyBase_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UWorldPartitionRuntimeCellOwner_ : public UInterface {
  UWorldPartitionRuntimeCellOwner_() = default;
  UWorldPartitionRuntimeCellOwner_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UWorldPartitionCell_ : public UInterface {
  UWorldPartitionCell_() = default;
  UWorldPartitionCell_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UCameraLensEffectInterface_ : public UInterface {
  UCameraLensEffectInterface_() = default;
  UCameraLensEffectInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UCanvas_ : public UObject {
  UCanvas_() = default;
  UCanvas_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USaveGame_ : public UObject {
  USaveGame_() = default;
  USaveGame_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimationDataModel_ : public UInterface {
  UAnimationDataModel_() = default;
  UAnimationDataModel_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct ANavigationObjectBase_ : public AActor {
  ANavigationObjectBase_() = default;
  ANavigationObjectBase_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UFont_ : public UObject {
  UFont_() = default;
  UFont_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ULocalMessage_ : public UObject {
  ULocalMessage_() = default;
  ULocalMessage_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ADebugCameraController_ : public APlayerController {
  ADebugCameraController_() = default;
  ADebugCameraController_(FVTableHelper& Helper) : APlayerController(Helper) {}
    
};
struct USMInstanceManager_ : public UInterface {
  USMInstanceManager_() = default;
  USMInstanceManager_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UHapticFeedbackEffect_Base_ : public UObject {
  UHapticFeedbackEffect_Base_() = default;
  UHapticFeedbackEffect_Base_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCameraShakePattern_ : public UObject {
  UCameraShakePattern_() = default;
  UCameraShakePattern_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USubsurfaceProfile_ : public UObject {
  USubsurfaceProfile_() = default;
  USubsurfaceProfile_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USparseVolumeTexture_ : public UObject {
  USparseVolumeTexture_() = default;
  USparseVolumeTexture_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UStereoLayerShape_ : public UObject {
  UStereoLayerShape_() = default;
  UStereoLayerShape_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMeshDeformerInstance_ : public UObject {
  UMeshDeformerInstance_() = default;
  UMeshDeformerInstance_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMeshDeformerInstanceSettings_ : public UObject {
  UMeshDeformerInstanceSettings_() = default;
  UMeshDeformerInstanceSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMeshDeformer_ : public UObject {
  UMeshDeformer_() = default;
  UMeshDeformer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNodeMappingContainer_ : public UObject {
  UNodeMappingContainer_() = default;
  UNodeMappingContainer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimNotifyState_ : public UObject {
  UAnimNotifyState_() = default;
  UAnimNotifyState_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UVirtualTextureBuilder_ : public UObject {
  UVirtualTextureBuilder_() = default;
  UVirtualTextureBuilder_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct URuntimeVirtualTextureComponent_ : public USceneComponent {
  URuntimeVirtualTextureComponent_() = default;
  URuntimeVirtualTextureComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UForceFeedbackComponent_ : public USceneComponent {
  UForceFeedbackComponent_() = default;
  UForceFeedbackComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UDecalComponent_ : public USceneComponent {
  UDecalComponent_() = default;
  UDecalComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UBillboardComponent_ : public UPrimitiveComponent {
  UBillboardComponent_() = default;
  UBillboardComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UArrowComponent_ : public UPrimitiveComponent {
  UArrowComponent_() = default;
  UArrowComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct USkyAtmosphereComponent_ : public USceneComponent {
  USkyAtmosphereComponent_() = default;
  USkyAtmosphereComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UTextRenderComponent_ : public UPrimitiveComponent {
  UTextRenderComponent_() = default;
  UTextRenderComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UExponentialHeightFogComponent_ : public USceneComponent {
  UExponentialHeightFogComponent_() = default;
  UExponentialHeightFogComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UReflectionCaptureComponent_ : public USceneComponent {
  UReflectionCaptureComponent_() = default;
  UReflectionCaptureComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct APlayerState_ : public AInfo {
  APlayerState_() = default;
  APlayerState_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct UDamageType_ : public UObject {
  UDamageType_() = default;
  UDamageType_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UForceFeedbackEffect_ : public UObject {
  UForceFeedbackEffect_() = default;
  UForceFeedbackEffect_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ADefaultPawn_ : public APawn {
  ADefaultPawn_() = default;
  ADefaultPawn_(FVTableHelper& Helper) : APawn(Helper) {}
    
};
struct UForceFeedbackAttenuation_ : public UObject {
  UForceFeedbackAttenuation_() = default;
  UForceFeedbackAttenuation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AGameStateBase_ : public AInfo {
  AGameStateBase_() = default;
  AGameStateBase_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct UMovementComponent_ : public UActorComponent {
  UMovementComponent_() = default;
  UMovementComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UNamedSlotInterface_ : public UInterface {
  UNamedSlotInterface_() = default;
  UNamedSlotInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UUserWidgetExtension_ : public UObject {
  UUserWidgetExtension_() = default;
  UUserWidgetExtension_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct URichTextBlockDecorator_ : public UObject {
  URichTextBlockDecorator_() = default;
  URichTextBlockDecorator_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCameraShakeBase_ : public UObject {
  UCameraShakeBase_() = default;
  UCameraShakeBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCameraShakeSourceComponent_ : public USceneComponent {
  UCameraShakeSourceComponent_() = default;
  UCameraShakeSourceComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct USoundMix_ : public UObject {
  USoundMix_() = default;
  USoundMix_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UReverbEffect_ : public UObject {
  UReverbEffect_() = default;
  UReverbEffect_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDialogueWave_ : public UObject {
  UDialogueWave_() = default;
  UDialogueWave_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USoundNode_ : public UObject {
  USoundNode_() = default;
  USoundNode_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USoundSubmixBase_ : public UObject {
  USoundSubmixBase_() = default;
  USoundSubmixBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USoundConcurrency_ : public UObject {
  USoundConcurrency_() = default;
  USoundConcurrency_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAudioBus_ : public UObject {
  UAudioBus_() = default;
  UAudioBus_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef NU8 tyArray__qtqsWM5aXmcpMIVmvq3kAA[16];
struct FGameplayTargetDataFilterHandle_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_EFormatArgumentType__XhNvqFUjDEW9bUNWwu9b9b6MA;
typedef NU8 tyArray__HhO8EAlttg7Yo1LAKdC6hQ[7];
struct FFormatArgumentData_ {
	FString argumentName{};
	tyEnum_EFormatArgumentType__XhNvqFUjDEW9bUNWwu9b9b6MA argumentValueType;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
	FText argumentValue{};
	NI64 argumentValueInt;
	NF32 argumentValueFloat;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	NF argumentValueDouble;
};
typedef NU8 tyArray__bN9bddWn8oiNSHn2MqEJSZQ[2];
typedef TArray<EObjectTypeQuery> TY__6r3nfRijJ9c5MKJaF9a9cYvbg;
typedef TArray<AActor*> TY__kbK03O9cVTTS0GR9cjPhedTg;
typedef NU8 tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg;
struct FPredictProjectilePathParams_ {
	FVector startLocation{};
	FVector launchVelocity{};
	NIM_BOOL bTraceWithCollision;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 projectileRadius;
	NF32 maxSimTime;
	NIM_BOOL bTraceWithChannel;
	ECollisionChannel traceChannel{};
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_1;
	TY__6r3nfRijJ9c5MKJaF9a9cYvbg objectTypes{};
	TY__kbK03O9cVTTS0GR9cjPhedTg actorsToIgnore{};
	NF32 simFrequency;
	NF32 overrideGravityZ;
	tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_2;
	NF32 drawDebugTime;
	NIM_BOOL bTraceComplex;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_3;
};
struct FPredictProjectilePathPointData_ {
	FVector location{};
	FVector velocity{};
	NF32 time;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TArray<FPredictProjectilePathPointData_> TY__4BgC3xXiX2Z5PS89aN9cvdNA;
struct FPredictProjectilePathResult_ {
	TY__4BgC3xXiX2Z5PS89aN9cvdNA pathData{};
	FPredictProjectilePathPointData_ lastTraceDestination{};
	FHitResult hitResult{};
};
typedef NU8 tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ[1];
struct FSlateModifierKeysState_ {
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
struct FDrawToRenderTargetContext_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__9aT9a0df87P1N8C6tT67xdfQ[80];
struct FImportanceTexture_ {
	tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
};
typedef NU8 tyArray__cdsir9aPB24hAk6k77P9b9bCA[8];
struct FCameraLensInterfaceClassSupport_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef NU8 tyArray__pPSgwee9cWjaxcnFhZCg7yA[192];
struct FEventReply_ {
	tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
struct FInputDevicePropertyHandle_ {
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef NU8 tyArray__YtcvxHNKV4YiecPE9ap1mcA[20];
struct FAnimationCurveIdentifier_ {
	tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
};
struct FAnimationAttributeIdentifier_ {
	FName name{};
	FName boneName{};
	NI32 boneIndex;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	UScriptStruct* scriptStruct;
	FSoftObjectPath scriptStructPath{};
};
struct FBoneAnimationTrack_ {
	FRawAnimSequenceTrack internalTrackData{};
	NI32 boneTreeIndex;
	FName name{};
};
struct FForceFeedbackAttenuationSettings_ {
	tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
typedef NU8 tyArray__izDbpwaA8Rxj9b5mE6pSF7Q[24];
struct FPoseLink_ {
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FComponentSpacePoseLink_ {
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FAnimDataModelNotifPayload_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__26aQaWOzPONEXg2JYXgXsA[96];
struct FConstraintInstanceAccessor_ {
	tyArray__26aQaWOzPONEXg2JYXgXsA pad_0;
};
typedef TSubclassOf<AActor> TY__9akcXb9b3ftlkdW8NDwR22Mg;
typedef NU8 tyEnum_ETargetDataFilterSelf__0bLCHzq8oWhdsyxklAwILw;
typedef NU8 tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ[6];
struct FGameplayTargetDataFilter_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
	AActor* selfActor;
	TY__9akcXb9b3ftlkdW8NDwR22Mg requiredActorClass{};
	tyEnum_ETargetDataFilterSelf__0bLCHzq8oWhdsyxklAwILw selfFilter;
	NIM_BOOL bReverseFilter;
	tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_1;
};
struct FActorDesc_ {
	FGuid guid{};
	FSoftObjectPath Class{};
	FName name{};
	FName label{};
	FBox bounds{};
	FName runtimeGrid{};
	NIM_BOOL bIsSpatiallyLoaded;
	NIM_BOOL bActorIsEditorOnly;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	FName actorPackage{};
	FName actorPath{};
};
struct FAnchors_ {
	FVector2D minimum{};
	FVector2D maximum{};
};
struct FGameViewportWidgetSlot_ {
	FAnchors_ anchors{};
	FMargin offsets{};
	FVector2D alignment{};
	NI32 zOrder;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct UCancellableAsyncAction_ : public UBlueprintAsyncActionBase {
  UCancellableAsyncAction_() = default;
  UCancellableAsyncAction_(FVTableHelper& Helper) : UBlueprintAsyncActionBase(Helper) {}
    
};
struct AGameplayAbilityTargetActor_Trace_ : public AGameplayAbilityTargetActor_ {
  AGameplayAbilityTargetActor_Trace_() = default;
  AGameplayAbilityTargetActor_Trace_(FVTableHelper& Helper) : AGameplayAbilityTargetActor_(Helper) {}
    
};
struct UMaterialFunctionInstance_ : public UMaterialFunctionInterface {
  UMaterialFunctionInstance_() = default;
  UMaterialFunctionInstance_(FVTableHelper& Helper) : UMaterialFunctionInterface(Helper) {}
    
};
struct UMaterialExpressionFunctionOutput_ : public UMaterialExpression {
  UMaterialExpressionFunctionOutput_() = default;
  UMaterialExpressionFunctionOutput_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionBinaryOp_ : public UMaterialExpression {
  UMaterialExpressionBinaryOp_() = default;
  UMaterialExpressionBinaryOp_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTextureBase_ : public UMaterialExpression {
  UMaterialExpressionTextureBase_() = default;
  UMaterialExpressionTextureBase_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UParticleModuleVectorFieldBase_ : public UParticleModule_ {
  UParticleModuleVectorFieldBase_() = default;
  UParticleModuleVectorFieldBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleTypeDataBase_ : public UParticleModule_ {
  UParticleModuleTypeDataBase_() = default;
  UParticleModuleTypeDataBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleTrailBase_ : public UParticleModule_ {
  UParticleModuleTrailBase_() = default;
  UParticleModuleTrailBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleSubUVBase_ : public UParticleModule_ {
  UParticleModuleSubUVBase_() = default;
  UParticleModuleSubUVBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleSizeBase_ : public UParticleModule_ {
  UParticleModuleSizeBase_() = default;
  UParticleModuleSizeBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleParameterBase_ : public UParticleModule_ {
  UParticleModuleParameterBase_() = default;
  UParticleModuleParameterBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleRotationRateBase_ : public UParticleModule_ {
  UParticleModuleRotationRateBase_() = default;
  UParticleModuleRotationRateBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleRotationBase_ : public UParticleModule_ {
  UParticleModuleRotationBase_() = default;
  UParticleModuleRotationBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleMaterialBase_ : public UParticleModule_ {
  UParticleModuleMaterialBase_() = default;
  UParticleModuleMaterialBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleLightBase_ : public UParticleModule_ {
  UParticleModuleLightBase_() = default;
  UParticleModuleLightBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleLifetimeBase_ : public UParticleModule_ {
  UParticleModuleLifetimeBase_() = default;
  UParticleModuleLifetimeBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleEventBase_ : public UParticleModule_ {
  UParticleModuleEventBase_() = default;
  UParticleModuleEventBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleColorBase_ : public UParticleModule_ {
  UParticleModuleColorBase_() = default;
  UParticleModuleColorBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleCollisionBase_ : public UParticleModule_ {
  UParticleModuleCollisionBase_() = default;
  UParticleModuleCollisionBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleCameraBase_ : public UParticleModule_ {
  UParticleModuleCameraBase_() = default;
  UParticleModuleCameraBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleBeamBase_ : public UParticleModule_ {
  UParticleModuleBeamBase_() = default;
  UParticleModuleBeamBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleAttractorBase_ : public UParticleModule_ {
  UParticleModuleAttractorBase_() = default;
  UParticleModuleAttractorBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct USoundNodeAssetReferencer_ : public USoundNode_ {
  USoundNodeAssetReferencer_() = default;
  USoundNodeAssetReferencer_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundEffectSubmixPreset_ : public USoundEffectPreset {
  USoundEffectSubmixPreset_() = default;
  USoundEffectSubmixPreset_(FVTableHelper& Helper) : USoundEffectPreset(Helper) {}
    
};
struct ASpectatorPawn_ : public ADefaultPawn_ {
  ASpectatorPawn_() = default;
  ASpectatorPawn_(FVTableHelper& Helper) : ADefaultPawn_(Helper) {}
    
};
struct UMaterialExpressionStrataUtilityBase_ : public UMaterialExpression {
  UMaterialExpressionStrataUtilityBase_() = default;
  UMaterialExpressionStrataUtilityBase_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionStrataBSDF_ : public UMaterialExpression {
  UMaterialExpressionStrataBSDF_() = default;
  UMaterialExpressionStrataBSDF_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionGenericConstant_ : public UMaterialExpression {
  UMaterialExpressionGenericConstant_() = default;
  UMaterialExpressionGenericConstant_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionCustomOutput_ : public UMaterialExpression {
  UMaterialExpressionCustomOutput_() = default;
  UMaterialExpressionCustomOutput_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMirrorDataTable_ : public UDataTable {
  UMirrorDataTable_() = default;
  UMirrorDataTable_(FVTableHelper& Helper) : UDataTable(Helper) {}
    
};
struct UAnimCompress_ : public UAnimBoneCompressionCodec_ {
  UAnimCompress_() = default;
  UAnimCompress_(FVTableHelper& Helper) : UAnimBoneCompressionCodec_(Helper) {}
    
};
struct UBlendSpace_ : public UAnimationAsset {
  UBlendSpace_() = default;
  UBlendSpace_(FVTableHelper& Helper) : UAnimationAsset(Helper) {}
    
};
struct USkyLightComponent_ : public ULightComponentBase {
  USkyLightComponent_() = default;
  USkyLightComponent_(FVTableHelper& Helper) : ULightComponentBase(Helper) {}
    
};
struct USceneCaptureComponentCube_ : public USceneCaptureComponent_ {
  USceneCaptureComponentCube_() = default;
  USceneCaptureComponentCube_(FVTableHelper& Helper) : USceneCaptureComponent_(Helper) {}
    
};
struct USceneCaptureComponent2D_ : public USceneCaptureComponent_ {
  USceneCaptureComponent2D_() = default;
  USceneCaptureComponent2D_(FVTableHelper& Helper) : USceneCaptureComponent_(Helper) {}
    
};
struct UPlanarReflectionComponent_ : public USceneCaptureComponent_ {
  UPlanarReflectionComponent_() = default;
  UPlanarReflectionComponent_(FVTableHelper& Helper) : USceneCaptureComponent_(Helper) {}
    
};
struct APlayerStart_ : public ANavigationObjectBase_ {
  APlayerStart_() = default;
  APlayerStart_(FVTableHelper& Helper) : ANavigationObjectBase_(Helper) {}
    
};
struct UContentWidget_ : public UPanelWidget_ {
  UContentWidget_() = default;
  UContentWidget_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct USoundSourceBus_ : public USoundWave {
  USoundSourceBus_() = default;
  USoundSourceBus_(FVTableHelper& Helper) : USoundWave(Helper) {}
    
};
struct UTextureRenderTarget_ : public UTexture {
  UTextureRenderTarget_() = default;
  UTextureRenderTarget_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UTextureCube_ : public UTexture {
  UTextureCube_() = default;
  UTextureCube_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UAnimSequence_ : public UAnimSequenceBase {
  UAnimSequence_() = default;
  UAnimSequence_(FVTableHelper& Helper) : UAnimSequenceBase(Helper) {}
    
};
struct UBlendSpace1D_ : public UBlendSpace_ {
  UBlendSpace1D_() = default;
  UBlendSpace1D_(FVTableHelper& Helper) : UBlendSpace_(Helper) {}
    
};
struct UInstancedStaticMeshComponent_ : public UStaticMeshComponent {
  UInstancedStaticMeshComponent_() = default;
  UInstancedStaticMeshComponent_(FVTableHelper& Helper) : UStaticMeshComponent(Helper) {}
    
};
struct UAbilityAsync_ : public UCancellableAsyncAction_ {
  UAbilityAsync_() = default;
  UAbilityAsync_(FVTableHelper& Helper) : UCancellableAsyncAction_(Helper) {}
    
};
struct UTextureRenderTargetCube_ : public UTextureRenderTarget_ {
  UTextureRenderTargetCube_() = default;
  UTextureRenderTargetCube_(FVTableHelper& Helper) : UTextureRenderTarget_(Helper) {}
    
};
struct UTextureRenderTarget2D_ : public UTextureRenderTarget_ {
  UTextureRenderTarget2D_() = default;
  UTextureRenderTarget2D_(FVTableHelper& Helper) : UTextureRenderTarget_(Helper) {}
    
};
struct URectLightComponent_ : public ULocalLightComponent {
  URectLightComponent_() = default;
  URectLightComponent_(FVTableHelper& Helper) : ULocalLightComponent(Helper) {}
    
};
struct UHierarchicalInstancedStaticMeshComponent_ : public UInstancedStaticMeshComponent_ {
  UHierarchicalInstancedStaticMeshComponent_() = default;
  UHierarchicalInstancedStaticMeshComponent_(FVTableHelper& Helper) : UInstancedStaticMeshComponent_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayTag_ : public UAbilityAsync_ {
  UAbilityAsync_WaitGameplayTag_() = default;
  UAbilityAsync_WaitGameplayTag_(FVTableHelper& Helper) : UAbilityAsync_(Helper) {}
    
};
struct FAnimDataModelModifiedDynamicEvent_ : public FMulticastScriptDelegate {
};
struct FCharacterMovementUpdatedSignature_ : public FMulticastScriptDelegate {
};
struct FCharacterReachedApexSignature_ : public FMulticastScriptDelegate {
};
struct FConstraintBrokenSignature_ : public FMulticastScriptDelegate {
};
struct FEmptyOnlineDelegate_ : public FMulticastScriptDelegate {
};
struct FHardwareInputDeviceChanged_ : public FMulticastScriptDelegate {
};
struct FInputActionHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInputAxisHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInputGestureHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInputTouchHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInputVectorAxisHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInstigatedAnyDamageSignature_ : public FMulticastScriptDelegate {
};
struct FLandedSignature_ : public FMulticastScriptDelegate {
};
struct FLevelStreamingLoadedStatus_ : public FMulticastScriptDelegate {
};
struct FLevelStreamingVisibilityStatus_ : public FMulticastScriptDelegate {
};
struct FMovementModeChangedSignature_ : public FMulticastScriptDelegate {
};
struct FOnActorReady_ : public FScriptDelegate {
};
struct FOnAllMontageInstancesEndedMCDelegate_ : public FMulticastScriptDelegate {
};
struct FOnAnimInitialized_ : public FMulticastScriptDelegate {
};
struct FOnAsyncHandleSaveGame_ : public FMulticastScriptDelegate {
};
struct FOnAudioFadeChangeSignature_ : public FMulticastScriptDelegate {
};
struct FOnAudioFinished_ : public FMulticastScriptDelegate {
};
struct FOnAudioMultiEnvelopeValue_ : public FMulticastScriptDelegate {
};
struct FOnAudioPlaybackPercent_ : public FMulticastScriptDelegate {
};
struct FOnAudioPlayStateChanged_ : public FMulticastScriptDelegate {
};
struct FOnAudioSingleEnvelopeValue_ : public FMulticastScriptDelegate {
};
struct FOnAudioVirtualizationChanged_ : public FMulticastScriptDelegate {
};
struct FOnBoneTransformsFinalized_ : public FMulticastScriptDelegate {
};
struct FOnCanvasRenderTargetUpdate_ : public FMulticastScriptDelegate {
};
struct FOnDataLayerRuntimeStateChanged_ : public FMulticastScriptDelegate {
};
struct FOnForceFeedbackFinished_ : public FMulticastScriptDelegate {
};
struct FOnGameUserSettingsUINeedsUpdate_ : public FMulticastScriptDelegate {
};
struct FOnMontageBlendingOutStartedMCDelegate_ : public FMulticastScriptDelegate {
};
struct FOnMontageEndedMCDelegate_ : public FMulticastScriptDelegate {
};
struct FOnMontageStartedMCDelegate_ : public FMulticastScriptDelegate {
};
struct FOnPawnControllerChanged_ : public FMulticastScriptDelegate {
};
struct FOnPlayerStatePawnSet_ : public FMulticastScriptDelegate {
};
struct FOnPossessedPawnChanged_ : public FMulticastScriptDelegate {
};
struct FOnPrimaryAssetBundlesChanged_ : public FMulticastScriptDelegate {
};
struct FOnPrimaryAssetClassListLoaded_ : public FMulticastScriptDelegate {
};
struct FOnPrimaryAssetClassLoaded_ : public FMulticastScriptDelegate {
};
struct FOnPrimaryAssetListLoaded_ : public FMulticastScriptDelegate {
};
struct FOnPrimaryAssetLoaded_ : public FMulticastScriptDelegate {
};
struct FOnQuartzCommandEvent_ : public FMulticastScriptDelegate {
};
struct FOnQuartzCommandEventBP_ : public FScriptDelegate {
};
struct FOnQuartzMetronomeEvent_ : public FMulticastScriptDelegate {
};
struct FOnQuartzMetronomeEventBP_ : public FScriptDelegate {
};
struct FOnQueueSubtitles_ : public FScriptDelegate {
};
struct FOnSubmixEnvelope_ : public FMulticastScriptDelegate {
};
struct FOnSubmixEnvelopeBP_ : public FScriptDelegate {
};
struct FOnSubmixRecordedFileDone_ : public FMulticastScriptDelegate {
};
struct FOnSubmixSpectralAnalysis_ : public FMulticastScriptDelegate {
};
struct FOnSubmixSpectralAnalysisBP_ : public FScriptDelegate {
};
struct FOnSystemFinished_ : public FMulticastScriptDelegate {
};
struct FOnTimelineEvent_ : public FScriptDelegate {
};
struct FOnTimelineFloat_ : public FScriptDelegate {
};
struct FOnTimelineLinearColor_ : public FScriptDelegate {
};
struct FOnTimelineVector_ : public FScriptDelegate {
};
struct FOnUserClickedBanner_ : public FScriptDelegate {
};
struct FOnUserClosedAdvertisement_ : public FScriptDelegate {
};
struct FOnUserInputDeviceConnectionChange_ : public FMulticastScriptDelegate {
};
struct FOnUserInputDevicePairingChange_ : public FMulticastScriptDelegate {
};
struct FParticleBurstSignature_ : public FMulticastScriptDelegate {
};
struct FParticleCollisionSignature_ : public FMulticastScriptDelegate {
};
struct FParticleDeathSignature_ : public FMulticastScriptDelegate {
};
struct FParticleSpawnSignature_ : public FMulticastScriptDelegate {
};
struct FPlasticDeformationEventSignature_ : public FMulticastScriptDelegate {
};
struct FPlatformInterfaceDelegate_ : public FScriptDelegate {
};
struct FPlayMontageAnimNotifyDelegate_ : public FMulticastScriptDelegate {
};
struct FPostEvaluateAnimEvent_ : public FScriptDelegate {
};
struct FTimerDynamicDelegate_ : public FScriptDelegate {
};
struct FViewportDisplayCallback_ : public FScriptDelegate {
};
struct FActorComponentDeactivateSignature_ : public FMulticastScriptDelegate {
};
struct FActorComponentActivatedSignature_ : public FMulticastScriptDelegate {
};
struct FActorBeginCursorOverSignature_ : public FMulticastScriptDelegate {
};
struct FActorBeginOverlapSignature_ : public FMulticastScriptDelegate {
};
struct FActorBeginTouchOverSignature_ : public FMulticastScriptDelegate {
};
struct FActorDestroyedSignature_ : public FMulticastScriptDelegate {
};
struct FActorEndCursorOverSignature_ : public FMulticastScriptDelegate {
};
struct FActorEndOverlapSignature_ : public FMulticastScriptDelegate {
};
struct FActorEndPlaySignature_ : public FMulticastScriptDelegate {
};
struct FActorEndTouchOverSignature_ : public FMulticastScriptDelegate {
};
struct FActorHitSignature_ : public FMulticastScriptDelegate {
};
struct FActorOnClickedSignature_ : public FMulticastScriptDelegate {
};
struct FActorOnInputTouchBeginSignature_ : public FMulticastScriptDelegate {
};
struct FActorOnInputTouchEndSignature_ : public FMulticastScriptDelegate {
};
struct FActorOnReleasedSignature_ : public FMulticastScriptDelegate {
};
struct FComponentBeginCursorOverSignature_ : public FMulticastScriptDelegate {
};
struct FComponentBeginOverlapSignature_ : public FMulticastScriptDelegate {
};
struct FComponentBeginTouchOverSignature_ : public FMulticastScriptDelegate {
};
struct FComponentCollisionSettingsChangedSignature_ : public FMulticastScriptDelegate {
};
struct FComponentEndCursorOverSignature_ : public FMulticastScriptDelegate {
};
struct FComponentEndOverlapSignature_ : public FMulticastScriptDelegate {
};
struct FComponentEndTouchOverSignature_ : public FMulticastScriptDelegate {
};
struct FComponentHitSignature_ : public FMulticastScriptDelegate {
};
struct FComponentOnClickedSignature_ : public FMulticastScriptDelegate {
};
struct FComponentOnInputTouchBeginSignature_ : public FMulticastScriptDelegate {
};
struct FComponentOnInputTouchEndSignature_ : public FMulticastScriptDelegate {
};
struct FComponentOnReleasedSignature_ : public FMulticastScriptDelegate {
};
struct FComponentPhysicsStateChanged_ : public FMulticastScriptDelegate {
};
struct FComponentSleepSignature_ : public FMulticastScriptDelegate {
};
struct FComponentWakeSignature_ : public FMulticastScriptDelegate {
};
struct FIsRootComponentChanged_ : public FMulticastScriptDelegate {
};
struct FPawnControllerChangedSignature_ : public FMulticastScriptDelegate {
};
struct FPawnRestartedSignature_ : public FMulticastScriptDelegate {
};
struct FPhysicsVolumeChanged_ : public FMulticastScriptDelegate {
};
struct FTakeAnyDamageSignature_ : public FMulticastScriptDelegate {
};
struct FTakePointDamageSignature_ : public FMulticastScriptDelegate {
};
struct FTakeRadialDamageSignature_ : public FMulticastScriptDelegate {
};
struct FPlatformDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformFailedToRegisterForRemoteNotificationsDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformReceivedLocalNotificationDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformReceivedRemoteNotificationDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformRegisteredForRemoteNotificationsDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformRegisteredForUserNotificationsDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformScreenOrientationChangedDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformStartupArgumentsDelegate_ : public FMulticastScriptDelegate {
};
struct FOnAssetLoaded_ : public FScriptDelegate {
};
struct FOnAssetClassLoaded_ : public FScriptDelegate {
};
struct FOnDataDrivenCVarChanged_ : public FMulticastScriptDelegate {
};
struct FOnProjectileBounceDelegate_ : public FMulticastScriptDelegate {
};
struct FOnProjectileStopDelegate_ : public FMulticastScriptDelegate {
};
struct FPlatformEventDelegate_ : public FMulticastScriptDelegate {
};
struct FOnInterpToResetDelegate_ : public FMulticastScriptDelegate {
};
struct FOnInterpToReverseDelegate_ : public FMulticastScriptDelegate {
};
struct FOnInterpToStopDelegate_ : public FMulticastScriptDelegate {
};
struct FOnInterpToWaitBeginDelegate_ : public FMulticastScriptDelegate {
};
struct FOnInterpToWaitEndDelegate_ : public FMulticastScriptDelegate {
};
struct FApplicationLifetimeDelegate_ : public FMulticastScriptDelegate {
};
struct FApplicationStartupArgumentsDelegate_ : public FMulticastScriptDelegate {
};
struct FOnLowPowerModeDelegate_ : public FMulticastScriptDelegate {
};
struct UFontFaceInterface_ : public UInterface {
  UFontFaceInterface_() = default;
  UFontFaceInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct USlateWidgetStyleContainerInterface_ : public UInterface {
  USlateWidgetStyleContainerInterface_() = default;
  USlateWidgetStyleContainerInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
typedef NU8 tyEnum_ESlateBrushRoundingType__c2G4GhS6ZVIt5PuKJk1j2w;
struct FSlateBrushOutlineSettings_ {
	FVector4 cornerRadii{};
	FSlateColor color{};
	NF32 width;
	tyEnum_ESlateBrushRoundingType__c2G4GhS6ZVIt5PuKJk1j2w roundingType;
	NIM_BOOL bUseBrushTransparency;
	tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_0;
};
typedef NU8 tyArray__2OatlL9b5t79c8TDf3fDsiRQ[1680];
struct FToolBarStyle_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
	FSlateBrush backgroundBrush{};
	FSlateBrush expandBrush{};
	FSlateBrush separatorBrush{};
	FTextBlockStyle labelStyle{};
	FEditableTextBoxStyle editableTextStyle{};
	FCheckBoxStyle toggleButton{};
	tyArray__2OatlL9b5t79c8TDf3fDsiRQ pad_1;
	FButtonStyle settingsButtonStyle{};
	tyArray__2OatlL9b5t79c8TDf3fDsiRQ pad_2;
	FCheckBoxStyle settingsToggleButton{};
	FButtonStyle buttonStyle{};
	FMargin labelPadding{};
	FMargin separatorPadding{};
	FMargin comboButtonPadding{};
	FMargin buttonPadding{};
	FMargin checkBoxPadding{};
	FMargin blockPadding{};
	FMargin indentedBlockPadding{};
	FMargin backgroundPadding{};
	FDeprecateSlateVector2D iconSize{};
	NIM_BOOL bShowLabels;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_3;
};
struct FSlateSound_ {
	UObject* resourceObject;
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
typedef NU8 tyArray__imubzojaOiPVfv1g8EarTA[48];
struct FSlateFontInfo_ {
	UObject* fontObject;
	UObject* fontMaterial;
	tyArray__imubzojaOiPVfv1g8EarTA pad_0;
	FName typefaceFontName{};
	NI32 size;
	NI32 letterSpacing;
	NF32 skewAmount;
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FSegmentedControlStyle_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
	FCheckBoxStyle controlStyle{};
	FCheckBoxStyle firstControlStyle{};
	FCheckBoxStyle lastControlStyle{};
	FSlateBrush backgroundBrush{};
	FMargin uniformPadding{};
};
struct UDEPRECATED_PhysicalMaterialPropertyBase_ : public UObject {
  UDEPRECATED_PhysicalMaterialPropertyBase_() = default;
  UDEPRECATED_PhysicalMaterialPropertyBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UChaosPhysicalMaterial_ : public UObject {
  UChaosPhysicalMaterial_() = default;
  UChaosPhysicalMaterial_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef NU8 tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ;
typedef NU8 tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA;
struct UToolMenuBase_ : public UObject {
  UToolMenuBase_() = default;
  UToolMenuBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UButtonWidgetStyle_ : public UObject {
  UButtonWidgetStyle_() = default;
  UButtonWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCheckBoxWidgetStyle_ : public UObject {
  UCheckBoxWidgetStyle_() = default;
  UCheckBoxWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UComboBoxWidgetStyle_ : public UObject {
  UComboBoxWidgetStyle_() = default;
  UComboBoxWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UComboButtonWidgetStyle_ : public UObject {
  UComboButtonWidgetStyle_() = default;
  UComboButtonWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEditableTextBoxWidgetStyle_ : public UObject {
  UEditableTextBoxWidgetStyle_() = default;
  UEditableTextBoxWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEditableTextWidgetStyle_ : public UObject {
  UEditableTextWidgetStyle_() = default;
  UEditableTextWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UProgressWidgetStyle_ : public UObject {
  UProgressWidgetStyle_() = default;
  UProgressWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UScrollBarWidgetStyle_ : public UObject {
  UScrollBarWidgetStyle_() = default;
  UScrollBarWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UScrollBoxWidgetStyle_ : public UObject {
  UScrollBoxWidgetStyle_() = default;
  UScrollBoxWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USpinBoxWidgetStyle_ : public UObject {
  USpinBoxWidgetStyle_() = default;
  USpinBoxWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UTextBlockWidgetStyle_ : public UObject {
  UTextBlockWidgetStyle_() = default;
  UTextBlockWidgetStyle_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAssetExportTask_ : public UObject {
  UAssetExportTask_() = default;
  UAssetExportTask_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ASkyLight_ : public AInfo {
  ASkyLight_() = default;
  ASkyLight_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct UDebugDrawComponent_ : public UPrimitiveComponent {
  UDebugDrawComponent_() = default;
  UDebugDrawComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UNavAreaBase_ : public UObject {
  UNavAreaBase_() = default;
  UNavAreaBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDynamicBlueprintBinding_ : public UObject {
  UDynamicBlueprintBinding_() = default;
  UDynamicBlueprintBinding_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEdGraphSchema_ : public UObject {
  UEdGraphSchema_() = default;
  UEdGraphSchema_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEngineCustomTimeStep_ : public UObject {
  UEngineCustomTimeStep_() = default;
  UEngineCustomTimeStep_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UTimecodeProvider_ : public UObject {
  UTimecodeProvider_() = default;
  UTimecodeProvider_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAudioEngineSubsystem_ : public UDynamicSubsystem {
  UAudioEngineSubsystem_() = default;
  UAudioEngineSubsystem_(FVTableHelper& Helper) : UDynamicSubsystem(Helper) {}
    
};
struct UBrushBuilder_ : public UObject {
  UBrushBuilder_() = default;
  UBrushBuilder_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UThumbnailInfo_ : public UObject {
  UThumbnailInfo_() = default;
  UThumbnailInfo_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AStaticMeshActor_ : public AActor {
  AStaticMeshActor_() = default;
  AStaticMeshActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UActiveSoundUpdateInterface_ : public UInterface {
  UActiveSoundUpdateInterface_() = default;
  UActiveSoundUpdateInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UAnimationAssetExtensions_ : public UBlueprintFunctionLibrary {
  UAnimationAssetExtensions_() = default;
  UAnimationAssetExtensions_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimBlueprintClassSubsystem_PropertyAccess_ : public UObject {
  UAnimBlueprintClassSubsystem_PropertyAccess_() = default;
  UAnimBlueprintClassSubsystem_PropertyAccess_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimationDataModelNotifiesExtensions_ : public UBlueprintFunctionLibrary {
  UAnimationDataModelNotifiesExtensions_() = default;
  UAnimationDataModelNotifiesExtensions_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimLayerInterface_ : public UInterface {
  UAnimLayerInterface_() = default;
  UAnimLayerInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UAudioPanelWidgetInterface_ : public UInterface {
  UAudioPanelWidgetInterface_() = default;
  UAudioPanelWidgetInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UBookmarkBase_ : public UObject {
  UBookmarkBase_() = default;
  UBookmarkBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AReflectionCapture_ : public AActor {
  AReflectionCapture_() = default;
  AReflectionCapture_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ABoxReflectionCapture_ : public AReflectionCapture_ {
  ABoxReflectionCapture_() = default;
  ABoxReflectionCapture_(FVTableHelper& Helper) : AReflectionCapture_(Helper) {}
    
};
struct UBuiltInAttributesExtensions_ : public UBlueprintFunctionLibrary {
  UBuiltInAttributesExtensions_() = default;
  UBuiltInAttributesExtensions_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UPlayer_ : public UObject {
  UPlayer_() = default;
  UPlayer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNetConnection_ : public UPlayer_ {
  UNetConnection_() = default;
  UNetConnection_(FVTableHelper& Helper) : UPlayer_(Helper) {}
    
};
struct UChildConnection_ : public UNetConnection_ {
  UChildConnection_() = default;
  UChildConnection_(FVTableHelper& Helper) : UNetConnection_(Helper) {}
    
};
struct UPlatformInterfaceBase_ : public UObject {
  UPlatformInterfaceBase_() = default;
  UPlatformInterfaceBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ALight_ : public AActor {
  ALight_() = default;
  ALight_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ADirectionalLight_ : public ALight_ {
  ADirectionalLight_() = default;
  ADirectionalLight_(FVTableHelper& Helper) : ALight_(Helper) {}
    
};
struct AExponentialHeightFog_ : public AInfo {
  AExponentialHeightFog_() = default;
  AExponentialHeightFog_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct UFontImportOptions_ : public UObject {
  UFontImportOptions_() = default;
  UFontImportOptions_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ASpotLight_ : public ALight_ {
  ASpotLight_() = default;
  ASpotLight_(FVTableHelper& Helper) : ALight_(Helper) {}
    
};
struct AGeneratedMeshAreaLight_ : public ASpotLight_ {
  AGeneratedMeshAreaLight_() = default;
  AGeneratedMeshAreaLight_(FVTableHelper& Helper) : ASpotLight_(Helper) {}
    
};
struct UInterface_ActorSubobject_ : public UInterface {
  UInterface_ActorSubobject_() = default;
  UInterface_ActorSubobject_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UBoneReferenceSkeletonProvider_ : public UInterface {
  UBoneReferenceSkeletonProvider_() = default;
  UBoneReferenceSkeletonProvider_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UISMPartitionInstanceManager_ : public UInterface {
  UISMPartitionInstanceManager_() = default;
  UISMPartitionInstanceManager_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UISMPartitionInstanceManagerProvider_ : public UInterface {
  UISMPartitionInstanceManagerProvider_() = default;
  UISMPartitionInstanceManagerProvider_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UKismetTextLibrary_ : public UBlueprintFunctionLibrary {
  UKismetTextLibrary_() = default;
  UKismetTextLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ULevelInstanceEditorPivotInterface_ : public UInterface {
  ULevelInstanceEditorPivotInterface_() = default;
  ULevelInstanceEditorPivotInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct ULevelStreaming_ : public UObject {
  ULevelStreaming_() = default;
  ULevelStreaming_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ULevelStreamingAlwaysLoaded_ : public ULevelStreaming_ {
  ULevelStreamingAlwaysLoaded_() = default;
  ULevelStreamingAlwaysLoaded_(FVTableHelper& Helper) : ULevelStreaming_(Helper) {}
    
};
struct ULevelStreamingDynamic_ : public ULevelStreaming_ {
  ULevelStreamingDynamic_() = default;
  ULevelStreamingDynamic_(FVTableHelper& Helper) : ULevelStreaming_(Helper) {}
    
};
struct ALevelStreamingVolume_ : public AVolume {
  ALevelStreamingVolume_() = default;
  ALevelStreamingVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct ULightMapTexture2D_ : public UTexture2D {
  ULightMapTexture2D_() = default;
  ULightMapTexture2D_(FVTableHelper& Helper) : UTexture2D(Helper) {}
    
};
struct UMapBuildDataRegistry_ : public UObject {
  UMapBuildDataRegistry_() = default;
  UMapBuildDataRegistry_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMaterialExpressionLess_ : public UMaterialExpressionBinaryOp_ {
  UMaterialExpressionLess_() = default;
  UMaterialExpressionLess_(FVTableHelper& Helper) : UMaterialExpressionBinaryOp_(Helper) {}
    
};
struct UMaterialExpressionCameraPositionWS_ : public UMaterialExpression {
  UMaterialExpressionCameraPositionWS_() = default;
  UMaterialExpressionCameraPositionWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionCameraVectorWS_ : public UMaterialExpression {
  UMaterialExpressionCameraVectorWS_() = default;
  UMaterialExpressionCameraVectorWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionExecEnd_ : public UMaterialExpression {
  UMaterialExpressionExecEnd_() = default;
  UMaterialExpressionExecEnd_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionMaterialLayerOutput_ : public UMaterialExpressionFunctionOutput_ {
  UMaterialExpressionMaterialLayerOutput_() = default;
  UMaterialExpressionMaterialLayerOutput_(FVTableHelper& Helper) : UMaterialExpressionFunctionOutput_(Helper) {}
    
};
struct UMaterialExpressionRerouteBase_ : public UMaterialExpression {
  UMaterialExpressionRerouteBase_() = default;
  UMaterialExpressionRerouteBase_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionNamedRerouteBase_ : public UMaterialExpressionRerouteBase_ {
  UMaterialExpressionNamedRerouteBase_() = default;
  UMaterialExpressionNamedRerouteBase_(FVTableHelper& Helper) : UMaterialExpressionRerouteBase_(Helper) {}
    
};
struct UMaterialExpressionParticleSubUVProperties_ : public UMaterialExpression {
  UMaterialExpressionParticleSubUVProperties_() = default;
  UMaterialExpressionParticleSubUVProperties_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPixelDepth_ : public UMaterialExpression {
  UMaterialExpressionPixelDepth_() = default;
  UMaterialExpressionPixelDepth_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPixelNormalWS_ : public UMaterialExpression {
  UMaterialExpressionPixelNormalWS_() = default;
  UMaterialExpressionPixelNormalWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPreSkinnedNormal_ : public UMaterialExpression {
  UMaterialExpressionPreSkinnedNormal_() = default;
  UMaterialExpressionPreSkinnedNormal_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPreSkinnedPosition_ : public UMaterialExpression {
  UMaterialExpressionPreSkinnedPosition_() = default;
  UMaterialExpressionPreSkinnedPosition_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTextureObject_ : public UMaterialExpressionTextureBase_ {
  UMaterialExpressionTextureObject_() = default;
  UMaterialExpressionTextureObject_(FVTableHelper& Helper) : UMaterialExpressionTextureBase_(Helper) {}
    
};
struct UMaterialExpressionTextureObjectParameter_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureObjectParameter_() = default;
  UMaterialExpressionTextureObjectParameter_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionTextureSampleParameter2DArray_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureSampleParameter2DArray_() = default;
  UMaterialExpressionTextureSampleParameter2DArray_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionTextureSampleParameterCube_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureSampleParameterCube_() = default;
  UMaterialExpressionTextureSampleParameterCube_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionTextureSampleParameterCubeArray_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureSampleParameterCubeArray_() = default;
  UMaterialExpressionTextureSampleParameterCubeArray_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionTextureSampleParameterVolume_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureSampleParameterVolume_() = default;
  UMaterialExpressionTextureSampleParameterVolume_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionTwoSidedSign_ : public UMaterialExpression {
  UMaterialExpressionTwoSidedSign_() = default;
  UMaterialExpressionTwoSidedSign_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVertexColor_ : public UMaterialExpression {
  UMaterialExpressionVertexColor_() = default;
  UMaterialExpressionVertexColor_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVertexNormalWS_ : public UMaterialExpression {
  UMaterialExpressionVertexNormalWS_() = default;
  UMaterialExpressionVertexNormalWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVertexTangentWS_ : public UMaterialExpression {
  UMaterialExpressionVertexTangentWS_() = default;
  UMaterialExpressionVertexTangentWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialFunctionMaterialLayer_ : public UMaterialFunction {
  UMaterialFunctionMaterialLayer_() = default;
  UMaterialFunctionMaterialLayer_(FVTableHelper& Helper) : UMaterialFunction(Helper) {}
    
};
struct UMaterialFunctionMaterialLayerInstance_ : public UMaterialFunctionInstance_ {
  UMaterialFunctionMaterialLayerInstance_() = default;
  UMaterialFunctionMaterialLayerInstance_(FVTableHelper& Helper) : UMaterialFunctionInstance_(Helper) {}
    
};
struct UMaterialFunctionMaterialLayerBlend_ : public UMaterialFunction {
  UMaterialFunctionMaterialLayerBlend_() = default;
  UMaterialFunctionMaterialLayerBlend_(FVTableHelper& Helper) : UMaterialFunction(Helper) {}
    
};
struct UMaterialFunctionMaterialLayerBlendInstance_ : public UMaterialFunctionInstance_ {
  UMaterialFunctionMaterialLayerBlendInstance_() = default;
  UMaterialFunctionMaterialLayerBlendInstance_(FVTableHelper& Helper) : UMaterialFunctionInstance_(Helper) {}
    
};
struct UMeshBudgetProjectSettings_ : public UObject {
  UMeshBudgetProjectSettings_() = default;
  UMeshBudgetProjectSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNavEdgeProviderInterface_ : public UInterface {
  UNavEdgeProviderInterface_() = default;
  UNavEdgeProviderInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UNavigationDataInterface_ : public UInterface {
  UNavigationDataInterface_() = default;
  UNavigationDataInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UNavPathObserverInterface_ : public UInterface {
  UNavPathObserverInterface_() = default;
  UNavPathObserverInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UParticleModuleEventSendToGame_ : public UObject {
  UParticleModuleEventSendToGame_() = default;
  UParticleModuleEventSendToGame_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UParticleModuleKillBase_ : public UParticleModule_ {
  UParticleModuleKillBase_() = default;
  UParticleModuleKillBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleLocationBase_ : public UParticleModule_ {
  UParticleModuleLocationBase_() = default;
  UParticleModuleLocationBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleSpriteEmitter_ : public UParticleEmitter {
  UParticleSpriteEmitter_() = default;
  UParticleSpriteEmitter_(FVTableHelper& Helper) : UParticleEmitter(Helper) {}
    
};
struct UPathFollowingAgentInterface_ : public UInterface {
  UPathFollowingAgentInterface_() = default;
  UPathFollowingAgentInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UPhysicsObjectBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UPhysicsObjectBlueprintLibrary_() = default;
  UPhysicsObjectBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UPhysicsThreadLibrary_ : public UBlueprintFunctionLibrary {
  UPhysicsThreadLibrary_() = default;
  UPhysicsThreadLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct APlanarReflection_ : public ASceneCapture {
  APlanarReflection_() = default;
  APlanarReflection_(FVTableHelper& Helper) : ASceneCapture(Helper) {}
    
};
struct APlaneReflectionCapture_ : public AReflectionCapture_ {
  APlaneReflectionCapture_() = default;
  APlaneReflectionCapture_(FVTableHelper& Helper) : AReflectionCapture_(Helper) {}
    
};
struct UPlatformInterfaceWebResponse_ : public UObject {
  UPlatformInterfaceWebResponse_() = default;
  UPlatformInterfaceWebResponse_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPluginBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UPluginBlueprintLibrary_() = default;
  UPluginBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct APointLight_ : public ALight_ {
  APointLight_() = default;
  APointLight_(FVTableHelper& Helper) : ALight_(Helper) {}
    
};
struct UPolys_ : public UObject {
  UPolys_() = default;
  UPolys_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UReplicationDriver_ : public UObject {
  UReplicationDriver_() = default;
  UReplicationDriver_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UReplicationConnectionDriver_ : public UObject {
  UReplicationConnectionDriver_() = default;
  UReplicationConnectionDriver_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ASceneCapture2D_ : public ASceneCapture {
  ASceneCapture2D_() = default;
  ASceneCapture2D_(FVTableHelper& Helper) : ASceneCapture(Helper) {}
    
};
struct ASceneCaptureCube_ : public ASceneCapture {
  ASceneCaptureCube_() = default;
  ASceneCaptureCube_(FVTableHelper& Helper) : ASceneCapture(Helper) {}
    
};
struct UShadowMapTexture2D_ : public UTexture2D {
  UShadowMapTexture2D_() = default;
  UShadowMapTexture2D_(FVTableHelper& Helper) : UTexture2D(Helper) {}
    
};
struct USkeletalMeshSocket_ : public UObject {
  USkeletalMeshSocket_() = default;
  USkeletalMeshSocket_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USMInstanceManagerProvider_ : public UInterface {
  USMInstanceManagerProvider_() = default;
  USMInstanceManagerProvider_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct USoundEffectPresetWidgetInterface_ : public UAudioPanelWidgetInterface_ {
  USoundEffectPresetWidgetInterface_() = default;
  USoundEffectPresetWidgetInterface_(FVTableHelper& Helper) : UAudioPanelWidgetInterface_(Helper) {}
    
};
struct USoundSubmixWidgetInterface_ : public UInterface {
  USoundSubmixWidgetInterface_() = default;
  USoundSubmixWidgetInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct ASphereReflectionCapture_ : public AReflectionCapture_ {
  ASphereReflectionCapture_() = default;
  ASphereReflectionCapture_(FVTableHelper& Helper) : AReflectionCapture_(Helper) {}
    
};
struct UStaticMeshSocket_ : public UObject {
  UStaticMeshSocket_() = default;
  UStaticMeshSocket_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ATextRenderActor_ : public AActor {
  ATextRenderActor_() = default;
  ATextRenderActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ATriggerBase_ : public AActor {
  ATriggerBase_() = default;
  ATriggerBase_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UTexture2DArray_ : public UTexture {
  UTexture2DArray_() = default;
  UTexture2DArray_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UNullNavSysConfig_ : public UObject {
  UNullNavSysConfig_() = default;
  UNullNavSysConfig_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAimOffsetBlendSpace_ : public UBlendSpace_ {
  UAimOffsetBlendSpace_() = default;
  UAimOffsetBlendSpace_(FVTableHelper& Helper) : UBlendSpace_(Helper) {}
    
};
struct UAimOffsetBlendSpace1D_ : public UBlendSpace1D_ {
  UAimOffsetBlendSpace1D_() = default;
  UAimOffsetBlendSpace1D_(FVTableHelper& Helper) : UBlendSpace1D_(Helper) {}
    
};
struct UAnimClassInterface_ : public UInterface {
  UAnimClassInterface_() = default;
  UAnimClassInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UAnimCompress_BitwiseCompressOnly_ : public UAnimCompress_ {
  UAnimCompress_BitwiseCompressOnly_() = default;
  UAnimCompress_BitwiseCompressOnly_(FVTableHelper& Helper) : UAnimCompress_(Helper) {}
    
};
struct UAnimCurveCompressionCodec_ : public UObject {
  UAnimCurveCompressionCodec_() = default;
  UAnimCurveCompressionCodec_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimMetaData_ : public UObject {
  UAnimMetaData_() = default;
  UAnimMetaData_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimNotifyLibrary_ : public UBlueprintFunctionLibrary {
  UAnimNotifyLibrary_() = default;
  UAnimNotifyLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimNotifyMirrorInspectionLibrary_ : public UBlueprintFunctionLibrary {
  UAnimNotifyMirrorInspectionLibrary_() = default;
  UAnimNotifyMirrorInspectionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimNotifyStateMachineInspectionLibrary_ : public UBlueprintFunctionLibrary {
  UAnimNotifyStateMachineInspectionLibrary_() = default;
  UAnimNotifyStateMachineInspectionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimNotifyState_DisableRootMotion_ : public UAnimNotifyState_ {
  UAnimNotifyState_DisableRootMotion_() = default;
  UAnimNotifyState_DisableRootMotion_(FVTableHelper& Helper) : UAnimNotifyState_(Helper) {}
    
};
struct UAnimationAttributeIdentifierExtensions_ : public UBlueprintFunctionLibrary {
  UAnimationAttributeIdentifierExtensions_() = default;
  UAnimationAttributeIdentifierExtensions_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UCachedAnimDataLibrary_ : public UBlueprintFunctionLibrary {
  UCachedAnimDataLibrary_() = default;
  UCachedAnimDataLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAnimationCurveIdentifierExtensions_ : public UBlueprintFunctionLibrary {
  UAnimationCurveIdentifierExtensions_() = default;
  UAnimationCurveIdentifierExtensions_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UCurveSourceInterface_ : public UInterface {
  UCurveSourceInterface_() = default;
  UCurveSourceInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UPreviewCollectionInterface_ : public UInterface {
  UPreviewCollectionInterface_() = default;
  UPreviewCollectionInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UPreviewMeshCollection_ : public UDataAsset {
  UPreviewMeshCollection_() = default;
  UPreviewMeshCollection_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct UAtmosphericFogComponent_ : public USkyAtmosphereComponent_ {
  UAtmosphericFogComponent_() = default;
  UAtmosphericFogComponent_(FVTableHelper& Helper) : USkyAtmosphereComponent_(Helper) {}
    
};
struct UActorSoundParameterInterface_ : public UInterface {
  UActorSoundParameterInterface_() = default;
  UActorSoundParameterInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct ABlockingVolume_ : public AVolume {
  ABlockingVolume_() = default;
  ABlockingVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UBlueprintMapLibrary_ : public UBlueprintFunctionLibrary {
  UBlueprintMapLibrary_() = default;
  UBlueprintMapLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UBlueprintSetLibrary_ : public UBlueprintFunctionLibrary {
  UBlueprintSetLibrary_() = default;
  UBlueprintSetLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UBookMark_ : public UBookmarkBase_ {
  UBookMark_() = default;
  UBookMark_(FVTableHelper& Helper) : UBookmarkBase_(Helper) {}
    
};
struct ABrushShape_ : public AActor {
  ABrushShape_() = default;
  ABrushShape_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UCameraLensEffectInterfaceClassSupportLibrary_ : public UBlueprintFunctionLibrary {
  UCameraLensEffectInterfaceClassSupportLibrary_() = default;
  UCameraLensEffectInterfaceClassSupportLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UCanvasRenderTarget2D_ : public UTextureRenderTarget2D_ {
  UCanvasRenderTarget2D_() = default;
  UCanvasRenderTarget2D_(FVTableHelper& Helper) : UTextureRenderTarget2D_(Helper) {}
    
};
struct UCheatManagerExtension_ : public UObject {
  UCheatManagerExtension_() = default;
  UCheatManagerExtension_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDrawSphereComponent_ : public USphereComponent {
  UDrawSphereComponent_() = default;
  UDrawSphereComponent_(FVTableHelper& Helper) : USphereComponent(Helper) {}
    
};
struct ULineBatchComponent_ : public UPrimitiveComponent {
  ULineBatchComponent_() = default;
  ULineBatchComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UPoseableMeshComponent_ : public USkinnedMeshComponent {
  UPoseableMeshComponent_() = default;
  UPoseableMeshComponent_(FVTableHelper& Helper) : USkinnedMeshComponent(Helper) {}
    
};
struct USplineMetadata_ : public UObject {
  USplineMetadata_() = default;
  USplineMetadata_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCompositeCurveTable_ : public UCurveTable {
  UCompositeCurveTable_() = default;
  UCompositeCurveTable_(FVTableHelper& Helper) : UCurveTable(Helper) {}
    
};
struct UCompositeDataTable_ : public UDataTable {
  UCompositeDataTable_() = default;
  UCompositeDataTable_(FVTableHelper& Helper) : UDataTable(Helper) {}
    
};
struct ACullDistanceVolume_ : public AVolume {
  ACullDistanceVolume_() = default;
  ACullDistanceVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UDataTableFunctionLibrary_ : public UBlueprintFunctionLibrary {
  UDataTableFunctionLibrary_() = default;
  UDataTableFunctionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UReporterBase_ : public UObject {
  UReporterBase_() = default;
  UReporterBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ADecalActor_ : public AActor {
  ADecalActor_() = default;
  ADecalActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ADefaultPhysicsVolume_ : public AVolume {
  ADefaultPhysicsVolume_() = default;
  ADefaultPhysicsVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UDeformableInterface_ : public UInterface {
  UDeformableInterface_() = default;
  UDeformableInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UNetDriver_ : public UObject {
  UNetDriver_() = default;
  UNetDriver_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDestructibleInterface_ : public UInterface {
  UDestructibleInterface_() = default;
  UDestructibleInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UDPICustomScalingRule_ : public UObject {
  UDPICustomScalingRule_() = default;
  UDPICustomScalingRule_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEngineElementsLibrary_ : public UBlueprintFunctionLibrary {
  UEngineElementsLibrary_() = default;
  UEngineElementsLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UTypedElementCommonActions_ : public UObject {
  UTypedElementCommonActions_() = default;
  UTypedElementCommonActions_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UTypedElementWorldInterface_ : public UInterface {
  UTypedElementWorldInterface_() = default;
  UTypedElementWorldInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct USystemTimeTimecodeProvider_ : public UTimecodeProvider_ {
  USystemTimeTimecodeProvider_() = default;
  USystemTimeTimecodeProvider_(FVTableHelper& Helper) : UTimecodeProvider_(Helper) {}
    
};
struct UViewportStatsSubsystem_ : public UWorldSubsystem {
  UViewportStatsSubsystem_() = default;
  UViewportStatsSubsystem_(FVTableHelper& Helper) : UWorldSubsystem(Helper) {}
    
};
struct UFontFace_ : public UObject {
  UFontFace_() = default;
  UFontFace_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPlayerStateCountLimiterConfig_ : public UObject {
  UPlayerStateCountLimiterConfig_() = default;
  UPlayerStateCountLimiterConfig_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UImportantToggleSettingInterface_ : public UInterface {
  UImportantToggleSettingInterface_() = default;
  UImportantToggleSettingInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UInputDelegateBinding_ : public UDynamicBlueprintBinding_ {
  UInputDelegateBinding_() = default;
  UInputDelegateBinding_(FVTableHelper& Helper) : UDynamicBlueprintBinding_(Helper) {}
    
};
struct UInputDeviceLibrary_ : public UBlueprintFunctionLibrary {
  UInputDeviceLibrary_() = default;
  UInputDeviceLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UInterpCurveEdSetup_ : public UObject {
  UInterpCurveEdSetup_() = default;
  UInterpCurveEdSetup_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UKismetArrayLibrary_ : public UBlueprintFunctionLibrary {
  UKismetArrayLibrary_() = default;
  UKismetArrayLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetGuidLibrary_ : public UBlueprintFunctionLibrary {
  UKismetGuidLibrary_() = default;
  UKismetGuidLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetInputLibrary_ : public UBlueprintFunctionLibrary {
  UKismetInputLibrary_() = default;
  UKismetInputLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetInternationalizationLibrary_ : public UBlueprintFunctionLibrary {
  UKismetInternationalizationLibrary_() = default;
  UKismetInternationalizationLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetMaterialLibrary_ : public UBlueprintFunctionLibrary {
  UKismetMaterialLibrary_() = default;
  UKismetMaterialLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetMathLibrary_ : public UBlueprintFunctionLibrary {
  UKismetMathLibrary_() = default;
  UKismetMathLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetNodeHelperLibrary_ : public UBlueprintFunctionLibrary {
  UKismetNodeHelperLibrary_() = default;
  UKismetNodeHelperLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetRenderingLibrary_ : public UBlueprintFunctionLibrary {
  UKismetRenderingLibrary_() = default;
  UKismetRenderingLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetStringLibrary_ : public UBlueprintFunctionLibrary {
  UKismetStringLibrary_() = default;
  UKismetStringLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UKismetStringTableLibrary_ : public UBlueprintFunctionLibrary {
  UKismetStringTableLibrary_() = default;
  UKismetStringTableLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UBlueprintPathsLibrary_ : public UBlueprintFunctionLibrary {
  UBlueprintPathsLibrary_() = default;
  UBlueprintPathsLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UBlueprintPlatformLibrary_ : public UBlueprintFunctionLibrary {
  UBlueprintPlatformLibrary_() = default;
  UBlueprintPlatformLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UImportanceSamplingLibrary_ : public UBlueprintFunctionLibrary {
  UImportanceSamplingLibrary_() = default;
  UImportanceSamplingLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ULevelActorContainer_ : public UObject {
  ULevelActorContainer_() = default;
  ULevelActorContainer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ULevelStreamingLevelInstanceEditor_ : public ULevelStreamingAlwaysLoaded_ {
  ULevelStreamingLevelInstanceEditor_() = default;
  ULevelStreamingLevelInstanceEditor_(FVTableHelper& Helper) : ULevelStreamingAlwaysLoaded_(Helper) {}
    
};
struct ULevelInstanceInterface_ : public UInterface {
  ULevelInstanceInterface_() = default;
  ULevelInstanceInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct ALevelScriptActor_ : public AActor {
  ALevelScriptActor_() = default;
  ALevelScriptActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ULevelScriptBlueprint_ : public UObject {
  ULevelScriptBlueprint_() = default;
  ULevelScriptBlueprint_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ALightmassCharacterIndirectDetailVolume_ : public AVolume {
  ALightmassCharacterIndirectDetailVolume_() = default;
  ALightmassCharacterIndirectDetailVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct ALightmassImportanceVolume_ : public AVolume {
  ALightmassImportanceVolume_() = default;
  ALightmassImportanceVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct ULightWeightInstanceBlueprintFunctionLibrary_ : public UBlueprintFunctionLibrary {
  ULightWeightInstanceBlueprintFunctionLibrary_() = default;
  ULightWeightInstanceBlueprintFunctionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ALocationVolume_ : public AVolume {
  ALocationVolume_() = default;
  ALocationVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct AMeshMergeCullingVolume_ : public AVolume {
  AMeshMergeCullingVolume_() = default;
  AMeshMergeCullingVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UMeshVertexPainterKismetLibrary_ : public UBlueprintFunctionLibrary {
  UMeshVertexPainterKismetLibrary_() = default;
  UMeshVertexPainterKismetLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UActorReplicationBridge_ : public UObject {
  UActorReplicationBridge_() = default;
  UActorReplicationBridge_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNetPushModelHelpers_ : public UBlueprintFunctionLibrary {
  UNetPushModelHelpers_() = default;
  UNetPushModelHelpers_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ANote_ : public AActor {
  ANote_() = default;
  ANote_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UObjectLibrary_ : public UObject {
  UObjectLibrary_() = default;
  UObjectLibrary_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UOnlineBlueprintCallProxyBase_ : public UBlueprintAsyncActionBase {
  UOnlineBlueprintCallProxyBase_() = default;
  UOnlineBlueprintCallProxyBase_(FVTableHelper& Helper) : UBlueprintAsyncActionBase(Helper) {}
    
};
struct UConstraintInstanceBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UConstraintInstanceBlueprintLibrary_() = default;
  UConstraintInstanceBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UPhysicsFieldComponent_ : public USceneComponent {
  UPhysicsFieldComponent_() = default;
  UPhysicsFieldComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UPhysicsFieldStatics_ : public UBlueprintFunctionLibrary {
  UPhysicsFieldStatics_() = default;
  UPhysicsFieldStatics_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct APlayerStartPIE_ : public APlayerStart_ {
  APlayerStartPIE_() = default;
  APlayerStartPIE_(FVTableHelper& Helper) : APlayerStart_(Helper) {}
    
};
struct APostProcessVolume_ : public AVolume {
  APostProcessVolume_() = default;
  APostProcessVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct APrecomputedVisibilityVolume_ : public AVolume {
  APrecomputedVisibilityVolume_() = default;
  APrecomputedVisibilityVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UHealthSnapshotBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UHealthSnapshotBlueprintLibrary_() = default;
  UHealthSnapshotBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ULevelStreamingProfilingSubsystem_ : public UWorldSubsystem {
  ULevelStreamingProfilingSubsystem_() = default;
  ULevelStreamingProfilingSubsystem_(FVTableHelper& Helper) : UWorldSubsystem(Helper) {}
    
};
struct ARectLight_ : public ALight_ {
  ARectLight_() = default;
  ARectLight_(FVTableHelper& Helper) : ALight_(Helper) {}
    
};
struct UReplaySubsystem_ : public UGameInstanceSubsystem {
  UReplaySubsystem_() = default;
  UReplaySubsystem_(FVTableHelper& Helper) : UGameInstanceSubsystem(Helper) {}
    
};
struct URuntimeOptionsBase_ : public UObject {
  URuntimeOptionsBase_() = default;
  URuntimeOptionsBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USCS_Node_ : public UObject {
  USCS_Node_() = default;
  USCS_Node_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USimpleConstructionScript_ : public UObject {
  USimpleConstructionScript_() = default;
  USimpleConstructionScript_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USlateTextureAtlasInterface_ : public UInterface {
  USlateTextureAtlasInterface_() = default;
  USlateTextureAtlasInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct USoundNodeMature_ : public USoundNode_ {
  USoundNodeMature_() = default;
  USoundNodeMature_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct UStereoLayerFunctionLibrary_ : public UBlueprintFunctionLibrary {
  UStereoLayerFunctionLibrary_() = default;
  UStereoLayerFunctionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UTextureMipDataProviderFactory_ : public UAssetUserData {
  UTextureMipDataProviderFactory_() = default;
  UTextureMipDataProviderFactory_(FVTableHelper& Helper) : UAssetUserData(Helper) {}
    
};
struct USubsystemBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  USubsystemBlueprintLibrary_() = default;
  USubsystemBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct ATargetPoint_ : public AActor {
  ATargetPoint_() = default;
  ATargetPoint_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UTexture2DDynamic_ : public UTexture {
  UTexture2DDynamic_() = default;
  UTexture2DDynamic_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UTextureCubeArray_ : public UTexture {
  UTextureCubeArray_() = default;
  UTextureCubeArray_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UTextureRenderTarget2DArray_ : public UTextureRenderTarget_ {
  UTextureRenderTarget2DArray_() = default;
  UTextureRenderTarget2DArray_(FVTableHelper& Helper) : UTextureRenderTarget_(Helper) {}
    
};
struct UTextureRenderTargetVolume_ : public UTextureRenderTarget_ {
  UTextureRenderTargetVolume_() = default;
  UTextureRenderTargetVolume_(FVTableHelper& Helper) : UTextureRenderTarget_(Helper) {}
    
};
struct UTimelineTemplate_ : public UObject {
  UTimelineTemplate_() = default;
  UTimelineTemplate_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UVisualLoggerKismetLibrary_ : public UBlueprintFunctionLibrary {
  UVisualLoggerKismetLibrary_() = default;
  UVisualLoggerKismetLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UVOIPStatics_ : public UBlueprintFunctionLibrary {
  UVOIPStatics_() = default;
  UVOIPStatics_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UVolumeTexture_ : public UTexture {
  UVolumeTexture_() = default;
  UVolumeTexture_(FVTableHelper& Helper) : UTexture(Helper) {}
    
};
struct UWorldPartitionBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UWorldPartitionBlueprintLibrary_() = default;
  UWorldPartitionBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UWorldPartitionDestructibleInHLODInterface_ : public UInterface {
  UWorldPartitionDestructibleInHLODInterface_() = default;
  UWorldPartitionDestructibleInHLODInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UWorldPartitionDestructibleInHLODSupportLibrary_ : public UBlueprintFunctionLibrary {
  UWorldPartitionDestructibleInHLODSupportLibrary_() = default;
  UWorldPartitionDestructibleInHLODSupportLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UWorldPartitionHLODModifier_ : public UObject {
  UWorldPartitionHLODModifier_() = default;
  UWorldPartitionHLODModifier_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWorldPartitionActorLoaderInterface_ : public UInterface {
  UWorldPartitionActorLoaderInterface_() = default;
  UWorldPartitionActorLoaderInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UWorldPartitionEditorHash_ : public UObject {
  UWorldPartitionEditorHash_() = default;
  UWorldPartitionEditorHash_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWorldPartitionStreamingPolicy_ : public UObject {
  UWorldPartitionStreamingPolicy_() = default;
  UWorldPartitionStreamingPolicy_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWorldPartitionRuntimeHash_ : public UObject {
  UWorldPartitionRuntimeHash_() = default;
  UWorldPartitionRuntimeHash_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWorldPartitionSubsystem_ : public UTickableWorldSubsystem {
  UWorldPartitionSubsystem_() = default;
  UWorldPartitionSubsystem_(FVTableHelper& Helper) : UTickableWorldSubsystem(Helper) {}
    
};
struct FFloatRK4SpringInterpolator_ {
	char dummy;
};
struct FVectorRK4SpringInterpolator_ {
	char dummy;
};
struct FCanvasIcon_ {
	UTexture* texture;
	NF32 u;
	NF32 v;
	NF32 uL;
	NF32 vL;
};
struct FAnimNodeReference_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__6qSULJVkHXjL25e22OI5AQ[136];
struct FAnimNode_AssetPlayerRelevancyBase_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
};
struct FEmptyPayload_ {
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
struct FSceneViewExtensionIsActiveFunctor_ {
	tyArray__26aQaWOzPONEXg2JYXgXsA pad_0;
};
struct FAnimExecutionContext_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FInputScaleBiasClampState_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FInputClampState_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef TWeakObjectPtr<UObject>  TY__JNuX49bw2SzgYlt1yr74cAA;
struct FAssetCompileData_ {
	TY__JNuX49bw2SzgYlt1yr74cAA asset{};
};
typedef NU8 tyArray__0TYgJNb2Cy78XDzz9c9a105Q[1872];
struct FCameraShakeUpdateResult_ {
	tyArray__0TYgJNb2Cy78XDzz9c9a105Q pad_0;
};
struct FCullDistanceSizePair_ {
	NF32 size;
	NF32 cullDistance;
};
typedef NU8 tyArray__YHmXll5a9bp5TA5MVvQwRow[12];
struct FFloatSpringState_ {
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
typedef NU8 tyArray__sH9avbK619blGCGFZhgSDaWg[56];
struct FVectorSpringState_ {
	tyArray__sH9avbK619blGCGFZhgSDaWg pad_0;
};
typedef NU8 tyArray__w5VB8h5K8DB3oWrO5U2wqg[64];
struct FQuaternionSpringState_ {
	tyArray__w5VB8h5K8DB3oWrO5U2wqg pad_0;
};
struct FSubsurfaceProfileStruct_ {
	FLinearColor surfaceAlbedo{};
	FLinearColor meanFreePathColor{};
	NF32 meanFreePathDistance;
	NF32 worldUnitScale;
	NIM_BOOL bEnableBurley;
	NIM_BOOL bEnableMeanFreePath;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	FLinearColor tint{};
	NF32 scatterRadius;
	FLinearColor subsurfaceColor{};
	FLinearColor falloffColor{};
	FLinearColor boundaryColorBleed{};
	NF32 extinctionScale;
	NF32 normalScale;
	NF32 scatteringDistribution;
	NF32 iOR;
	NF32 roughness0;
	NF32 roughness1;
	NF32 lobeMix;
	FLinearColor transmissionTintColor{};
};
typedef TArray<NI32> TY__TxfK2fhRJXNHttPFRcL6fA;
struct FSkelMeshMergeSectionMapping_ {
	TY__TxfK2fhRJXNHttPFRcL6fA sectionIDs{};
};
typedef TArray<FTransform> TY__ZRKjvD0LxpBKI8XAOc3PKg;
struct FSkelMeshMergeMeshUVTransforms_ {
	TY__ZRKjvD0LxpBKI8XAOc3PKg uVTransforms{};
};
typedef TArray<FSkelMeshMergeMeshUVTransforms_> TY__y9bIc7g2Jyd7Dw7mLIlPqLQ;
struct FSkelMeshMergeUVTransformMapping_ {
	TY__y9bIc7g2Jyd7Dw7mLIlPqLQ uVTransformsPerMesh{};
};
typedef TArray<UObject*> TY__meGclu4l9cwnqbgiIjRtfhA;
typedef NU8 tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ;
typedef NU8 tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg;
typedef NU8 tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g;
typedef NU8 tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ;
typedef NU8 tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig;
typedef NU8 tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw;
typedef NU8 tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag;
typedef NU8 tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw;
typedef NU8 tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg;
typedef NU8 tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw;
typedef NU8 tyEnum_ETimecodeProviderSynchronizationState__7yX6oALT9bm9caipovYyZdxQ;
typedef NU8 tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg;
typedef TArray<FVector> TY__Bz8EFFwaAOJiUrMHOIgVGw;
typedef TArray<FQuat> TY__r61x9a9aUIJyVmP9bIukwh3zg;
typedef TArray<NF32> TY__LZaQ4h2l9bWQPMMIHjA9cwlA;
typedef NU8 tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg;
typedef TScriptInterface<UAnimationDataModel_>  TY__2oFl2vye442IAermOsWYpg;
typedef TArray<FRichCurveKey> TY__vtilWHQcza9aBHc3YkFx5Bw;
typedef NU8 tyEnum_EAnimAssetCurveFlags__rdCcgUF0ueMLtHjAQ9a49a3Q;
typedef TArray<FBoneAnimationTrack_> TY__Gur0dFjg9byOJEgqd1KOiLg;
typedef TArray<FFormatArgumentData_> TY__Hr8ModhbWslsFNX2oLz1GA;
typedef NU8 tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw;
typedef TSoftObjectPtr<UWorld> TY__9cPzWpX39aro9ack5dbCvRImQ;
typedef TSubclassOf<ULevelStreamingDynamic_> TY__cf9bOIrRZamf1HVVF7c2pXA;
typedef NU8 tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw;
typedef NU8 tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA;
typedef NU8 tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA;
typedef NU8 tyEnum_ETransformCurveChannel__sG9cBroBwptcTasMM12j8Dg;
typedef NU8 tyEnum_EVectorCurveChannel__58B9b1w9bqluWs3jPQdB1c6A;
typedef TArray<FAnimationCurveIdentifier_> TY__q0YKngudVysxlVXqMDII4A;
typedef TArray<FPrimaryAssetId> TY__9aw1VaWKZbUTzz1muwIRvsw;
typedef TMap<NI32 COMMA NI32>  TY__wpSBE9cf2usnCI0KGFU04xQ;
typedef TSet<NI32>  TY__bdlO5kVNTRv59cPOoXMIbHw;
typedef TArray<UFXSystemComponent*> TY__Qu3WcNhn1GZqsD9bMGcV3pQ;
typedef NU8 tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag;
typedef TScriptInterface<UCameraLensEffectInterface_>  TY__hvmi1aSu7TExY3gfL1PBlA;
typedef NU8 tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w;
typedef TSubclassOf<UCanvasRenderTarget2D_> TY__cyRmGPtN9aq0VukEVoX3rGg;
typedef NU8 tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg;
typedef TArray<UCurveTable*> TY__M4MmxYh2DRWibpvAY9b1bhg;
typedef TArray<UDataTable*> TY__CsVeHH6fpx8ZgI6qaaSz3A;
typedef TArray<FCullDistanceSizePair_> TY__IqXdAzIoi9cCuZiE2VD1lMg;
typedef NU8 tyEnum_EEvaluateCurveTableResult__Cz3R9cE75Z6VtgD7SPlaxXg;
typedef NU8 tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ;
typedef NU8 tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ;
typedef NU8 tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w;
typedef TSubclassOf<UObject> TY__Gdb8rCprT6WGagrQes2BIg;
typedef NU8 tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw;
typedef NU8 tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw;
typedef NU8 tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g;
typedef TSubclassOf<UCameraShakeBase_> TY__KQEDk1C09aJw5qI9c3NLtbyA;
typedef TSubclassOf<UInterface> TY__KI5t49abR3sL6OsGNxWlhiQ;
typedef NU8 tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg;
typedef TSubclassOf<USaveGame_> TY__oMknOVX79awua0tCYRTqEkw;
typedef NU8 tyEnum_ESuggestProjVelocityTraceOption__KuHBSpJifpeqmLf689cx8uA;
typedef NU8 tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ;
typedef TSubclassOf<UDamageType_> TY__ABzvPARwjWflBz1vDaugrg;
typedef TArray<FInputDeviceId> TY__8C7BRYyFrahKcz3Rrc7csA;
typedef TArray<FPlatformUserId> TY__0LGdQsbQ049aRvnlezZzVcQ;
typedef NU8 tyEnum_ESlateGesture__Pscv9bCSeopgM2S4iny2Wjw;
typedef NU8 tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ;
typedef NU8 tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA;
typedef NU8 tyEnum_ELocalizedTextSourceCategory__3Ltn8YdL2zodLqTHWaOvUQ;
typedef NU8 tyEnum_EMIDCreationFlags__VI0UMZsMNapQIo2qZneX9bQ;
typedef NU8 tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw;
typedef NU8 tyEnum_ELerpInterpolationMode__1hcOsNVo9arJEZAb4iAEcLg;
typedef TArray<NU8> TY__41Mm7Z1nb8xYOi3Vy0ffmA;
typedef NU8 tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA;
typedef NU8 tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw;
typedef TArray<FLinearColor> TY__LIN349biVKUmlJo9abXyib3Q;
typedef TArray<FColor> TY__nVAGwAmGausuUwwMqG2Chg;
typedef NU8 tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ;
typedef NU8 tyEnum_ESearchDir__FGgOLWYHHOEEcatZwkhq0Q;
typedef NU8 tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw;
typedef TArray<FHitResult> TY__lzHXQP9bZ0fzOEdl9bhUHFMg;
typedef TArray<UPrimitiveComponent*> TY__RN0jXIbC9cvfWt68iswDSAw;
typedef TSoftObjectPtr<UObject> TY__9b5kQ3g2w5CXovAbu5D6pTg;
typedef TSoftClassPtr<UObject> TY__roSJObD9cij0IKr7nEgF3iw;
typedef TScriptInterface<UInterface>  TY__ifXM0HgR32dv0bADb0VXEw;
typedef NU8 tyEnum_EPropertyAccessChangeNotifyMode__tfIyzql3Jp1o4A9aSN3GRWw;
typedef NU8 tyEnum_EQuitPreference__wKF27UdTU9cegJpfafBWsWw;
typedef TMap<FString COMMA FString>  TY__c0nBuI9a2FtGpQcNibWH5rw;
typedef NU8 tyEnum_EMoveComponentAction__kDaFHmOTku89aVMGXCDq5HA;
typedef TArray<FSoftObjectPath> TY__ENhz1y6sHvLdRa6kOBUI0g;
typedef TSet<FName>  TY__RB4z3ofWT3akwp9bOP7PhQA;
typedef TArray<FIntPoint> TY__yD9cabbXKxBhxxk9bEUjuWfQ;
typedef TArray<FPrimaryAssetType> TY__3W9bSP0TRlRfvoPW2wOyZSg;
typedef NU8 tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q;
typedef NU8 tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg;
typedef NU8 tyEnum_EVertexPaintAxis__xnbGI2wHzvdGeHn8hpYsPw;
typedef NU8 tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA;
typedef NU8 tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw;
typedef NU8 tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg;
typedef NU8 tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ;
typedef NU8 tyEnum_EFieldVectorType__pGz3AQq9bl4kW1oB5Z5VQoQ;
typedef NU8 tyEnum_EFieldScalarType__qtOF20Dkpb10DEnhLq7Prg;
typedef NU8 tyEnum_EFieldIntegerType__MD4euztRfjoPbO1X9b32yIQ;
typedef TScriptInterface<UBlendableInterface>  TY__F9b2cvIGUaHd4jgh3Qa4T7w;
typedef TArray<FSkeletalMaterial> TY__J4BsCVazMxnbn2pMa0gmYA;
typedef TArray<UNodeMappingContainer_*> TY__aQOYJDTq9cbs3kkjTFzDRtw;
typedef TArray<UMorphTarget*> TY__BkXM3seddDKCuk9ckyWy0BA;
typedef NU8 tyEnum_EPerQualityLevels__acmnnNL9bB2U12jxcx4FOGg;
typedef TMap<tyEnum_EPerQualityLevels__acmnnNL9bB2U12jxcx4FOGg COMMA NI32>  TY__MWSkMZZhor1rT7RX9cp2Htg;
typedef TArray<FStaticMaterial> TY__DjVkfHFhdnDmatCydN9cEqw;
typedef TMap<FName COMMA NI32>  TY__FlT4tcZm1cmdaT89ciajJfA;
typedef TArray<UStaticMeshSocket_*> TY__Cmu2WMlENYBnJ16EwepnUQ;
typedef TSubclassOf<UWorldSubsystem> TY__SZrhP2SaWueNLRMyRwUueg;
typedef TSubclassOf<ULocalPlayerSubsystem> TY__xoau9aGG9bGInThS5Ff3sLrA;
typedef TSubclassOf<UGameInstanceSubsystem> TY__t7MW8dNaA8xV9aQwPSWKF0w;
typedef TSubclassOf<UEngineSubsystem> TY__a9c7M9ap9aHvx2XoTZg2f8G9aA;
typedef TSubclassOf<UAudioEngineSubsystem_> TY__lMyEL238B9aDA0twt0Y33xA;
typedef TArray<FCanvasUVTri> TY__BpCzqwI2aoMmhSgofuM38A;
typedef NU8 tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw;
typedef TArray<FGuid> TY__QUxJb9b3YwzTBIcUvLm2j6Q;
typedef TArray<FActorDesc_> TY__L1uKoYpGltEdX5AMaAZBwA;
typedef TScriptInterface<UWorldPartitionDestructibleInHLODInterface_>  TY__Z9bblV6ojuGotVTgnCjfC4Q;
typedef NU8 tyEnum_EWorldPartitionRuntimeCellState__vkrpaNcih6ma2naZWG9cYYQ;
typedef TArray<FWorldPartitionStreamingQuerySource> TY__coX2EsXi9bBqBt2eQJWCxdw;
struct UEnhancedInputActionDelegateBinding_ : public UInputDelegateBinding_ {
  UEnhancedInputActionDelegateBinding_() = default;
  UEnhancedInputActionDelegateBinding_(FVTableHelper& Helper) : UInputDelegateBinding_(Helper) {}
    
};
struct UEnhancedInputActionValueBinding_ : public UInputDelegateBinding_ {
  UEnhancedInputActionValueBinding_() = default;
  UEnhancedInputActionValueBinding_(FVTableHelper& Helper) : UInputDelegateBinding_(Helper) {}
    
};
struct UEnhancedInputDeveloperSettings_ : public UObject {
  UEnhancedInputDeveloperSettings_() = default;
  UEnhancedInputDeveloperSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEnhancedInputLibrary_ : public UBlueprintFunctionLibrary {
  UEnhancedInputLibrary_() = default;
  UEnhancedInputLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UEnhancedInputPlatformData_ : public UObject {
  UEnhancedInputPlatformData_() = default;
  UEnhancedInputPlatformData_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEnhancedInputPlatformSettings_ : public UObject {
  UEnhancedInputPlatformSettings_() = default;
  UEnhancedInputPlatformSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UInputDebugKeyDelegateBinding_ : public UInputDelegateBinding_ {
  UInputDebugKeyDelegateBinding_() = default;
  UInputDebugKeyDelegateBinding_(FVTableHelper& Helper) : UInputDelegateBinding_(Helper) {}
    
};
struct UInputMappingContext_ : public UDataAsset {
  UInputMappingContext_() = default;
  UInputMappingContext_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct UPlayerMappableInputConfig_ : public UPrimaryDataAsset {
  UPlayerMappableInputConfig_() = default;
  UPlayerMappableInputConfig_(FVTableHelper& Helper) : UPrimaryDataAsset(Helper) {}
    
};
struct UPlayerMappableKeySettings_ : public UObject {
  UPlayerMappableKeySettings_() = default;
  UPlayerMappableKeySettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FEnhancedInputActionHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FInputDebugKeyHandlerDynamicSignature_ : public FScriptDelegate {
};
struct FBlueprintEnhancedInputActionBinding_ {
	UInputAction* inputAction;
	ETriggerEvent triggerEvent{};
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	FName functionNameToBind{};
};
typedef TSoftObjectPtr<UInputMappingContext_> TY__peXTHnoP9a9aHft4wbs39bp8g;
struct FDefaultContextSetting_ {
	TY__peXTHnoP9a9aHft4wbs39bp8g inputMappingContext{};
	NI32 priority;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FBlueprintInputDebugKeyDelegateBinding_ {
	FInputChord inputChord{};
	EInputEvent inputKeyEvent{};
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	FName functionNameToBind{};
	NIM_BOOL bExecuteWhenPaused;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
struct FOnControlMappingsRebuilt_ : public FMulticastScriptDelegate {
};
typedef TArray<FBlueprintEnhancedInputActionBinding_> TY__thExvANNGNgDH8OkaKuR8A;
typedef TArray<FDefaultContextSetting_> TY__wjhtp2nTDdhb86xh9cRyNdg;
typedef TSoftClassPtr<UEnhancedPlayerInput> TY__dPphnKVNcklyqD9cNMYlEAw;
typedef NU8 tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg;
typedef TMap<UInputMappingContext_* COMMA UInputMappingContext_*>  TY__akGNBG0tR9cxS6jqY9cPjDDg;
typedef TSoftClassPtr<UEnhancedInputPlatformData_> TY__qXIH63mi0grsjak9aYV5lAw;
typedef TArray<TY__qXIH63mi0grsjak9aYV5lAw> TY__Vl9a1S9a74enmUSPajJNLzGg;
typedef TSubclassOf<UEnhancedInputPlatformData_> TY__VDYysH7qpS8iExORrufSoQ;
typedef TArray<TY__VDYysH7qpS8iExORrufSoQ> TY__5VGVoPDWJG1SfBmRkBTYzg;
typedef NU8 tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA;
typedef NU8 tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ;
typedef TArray<UInputMappingContext_*> TY__lgKFBDQQJ4HcImBX8b3sLA;
typedef TArray<FMappingQueryIssue> TY__bjKA9cg0NSPZszptILQ9bYXg;
typedef NU8 tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ;
typedef TArray<FKey> TY__HqMsNoaajlV9ahHT79bz6bBA;
typedef TArray<UInputModifier*> TY__c8nNrl0cjgFNa0Q8UPdEvQ;
typedef TArray<UInputTrigger*> TY__FxqDNnZW9amc7oM6Ecl0Hcg;
typedef TArray<FEnhancedActionKeyMapping> TY__Rv7KwgUmzu2nlB7yhoSeJA;
typedef TWeakObjectPtr<UInputComponent>  TY__28wmLXlb9axZVYaBGL5Xrqw;
typedef TArray<TY__28wmLXlb9axZVYaBGL5Xrqw> TY__iZLNaT1K9bm5EsgMOTsKjcA;
typedef TMap<UInputMappingContext_* COMMA NI32>  TY__sOdDuvKiHtt9cumeGPfHn2A;
typedef TMap<UInputAction* COMMA FInputActionInstance>  TY__k9aNq3p033XWsku9bV9cgPW9bQ;
typedef TMap<FKey COMMA FVector>  TY__ycORZrEHfDeQwJCU7d1PHg;
typedef TMap<UInputAction* COMMA FInjectedInputArray>  TY__Ofsfce9bTEY1Wuud9a3bLwFQ;
typedef TSet<UInputAction*>  TY__SVxKloj6zDI4NdPm5EhnqQ;
typedef TArray<FBlueprintInputDebugKeyDelegateBinding_> TY__SkUL0XwwFFaUKA6OsdzxzA;
typedef NU8 tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ;
typedef NU8 tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA;
typedef NU8 tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g;
typedef NU8 tyEnum_ETriggerState__QCHs7MNqpyKxgNRnJWNtLg;
typedef NU8 tyEnum_ETriggerType__Ck7FJArFtrL50IHyr5xiCA;
typedef TArray<FInputComboStepData> TY__G0jxsrnIhOE5QUYUpdavEQ;
typedef TArray<FInputCancelAction> TY__6u4iFJ3xvKthNkXqw0X5Hw;
struct UGameplayTask_ : public UObject {
  UGameplayTask_() = default;
  UGameplayTask_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTaskResource_ : public UObject {
  UGameplayTaskResource_() = default;
  UGameplayTaskResource_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTask_ClaimResource_ : public UObject {
  UGameplayTask_ClaimResource_() = default;
  UGameplayTask_ClaimResource_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTask_SpawnActor_ : public UObject {
  UGameplayTask_SpawnActor_() = default;
  UGameplayTask_SpawnActor_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTask_TimeLimitedExecution_ : public UObject {
  UGameplayTask_TimeLimitedExecution_() = default;
  UGameplayTask_TimeLimitedExecution_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayTask_WaitDelay_ : public UObject {
  UGameplayTask_WaitDelay_() = default;
  UGameplayTask_WaitDelay_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FGameplayTaskSpawnActorDelegate_ : public FMulticastScriptDelegate {
};
struct FOnClaimedResourcesChangeSignature_ : public FMulticastScriptDelegate {
};
struct FGameplayResourceSet_ {
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
};
struct FTaskDelayDelegate_ : public FMulticastScriptDelegate {
};
struct FTaskFinishDelegate_ : public FMulticastScriptDelegate {
};
struct FGenericGameplayTaskDelegate_ : public FMulticastScriptDelegate {
};
typedef NU8 tyEnum_ETaskResourceOverlapPolicy__KHi9c9baZ7fNBEk2sx9aOs2jg;
typedef TScriptInterface<UGameplayTaskOwnerInterface_>  TY__Lt5i5ki2w9bH9a82Hu007sxA;
typedef TSubclassOf<UGameplayTaskResource_> TY__MFesSaouSBQeacagdxVB4w;
typedef TArray<TY__MFesSaouSBQeacagdxVB4w> TY__utVni79b8xEsxEJANAjLf3Q;
struct UMyTestActorComponent_ : public UActorComponent {
  UMyTestActorComponent_() = default;
  UMyTestActorComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct ATestActor_ : public AActor {
  ATestActor_() = default;
  ATestActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct FMyStructTableRow_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
	NF32 turnRateGamepad;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	UObject* objectTest;
};
typedef TMap<NI32 COMMA FString>  TY__QJ877IzPgLt9brLepAnlabA;
typedef TMap<FString COMMA UObject*>  TY__gVNwDuZPrClicoyBZbjZRQ;
struct UMyClassToDeriveToTestUFunctions_ : public UObject {
  UMyClassToDeriveToTestUFunctions_() = default;
  UMyClassToDeriveToTestUFunctions_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AUseClassToDeriveToTestFunction_ : public AActor {
  AUseClassToDeriveToTestFunction_() = default;
  AUseClassToDeriveToTestFunction_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UClassToUseAsVar_ : public UObject {
  UClassToUseAsVar_() = default;
  UClassToUseAsVar_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMyClassToTest_ : public UObject {
  UMyClassToTest_() = default;
  UMyClassToTest_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FDynamicDelegateOneParamTest_ : public FScriptDelegate {
};
struct FDynamicMulticastDelegateOneParamTest_ : public FMulticastScriptDelegate {
};
struct FStructToUseAsVar_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
	TY__9akcXb9b3ftlkdW8NDwR22Mg actorSubclass{};
	FDynamicMulticastDelegateOneParamTest_ del{};
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_1;
};
struct FStructToUseAsVarDelTest_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct UEditorExtensions_ : public UObject {
  UEditorExtensions_() = default;
  UEditorExtensions_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ANimForUETestTestActor_ : public AActor {
  ANimForUETestTestActor_() = default;
  ANimForUETestTestActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UHierarchicalLODSetup_ : public UObject {
  UHierarchicalLODSetup_() = default;
  UHierarchicalLODSetup_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCheatManager_ : public UObject {
  UCheatManager_() = default;
  UCheatManager_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UProjectileMovementComponent_ : public UMovementComponent_ {
  UProjectileMovementComponent_() = default;
  UProjectileMovementComponent_(FVTableHelper& Helper) : UMovementComponent_(Helper) {}
    
};
struct URotatingMovementComponent_ : public UMovementComponent_ {
  URotatingMovementComponent_() = default;
  URotatingMovementComponent_(FVTableHelper& Helper) : UMovementComponent_(Helper) {}
    
};
struct AHUD_ : public AActor {
  AHUD_() = default;
  AHUD_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UEngineMessage_ : public ULocalMessage_ {
  UEngineMessage_() = default;
  UEngineMessage_(FVTableHelper& Helper) : ULocalMessage_(Helper) {}
    
};
struct UFloatingPawnMovement_ : public UPawnMovementComponent {
  UFloatingPawnMovement_() = default;
  UFloatingPawnMovement_(FVTableHelper& Helper) : UPawnMovementComponent(Helper) {}
    
};
struct UAsyncActionHandleSaveGame_ : public UBlueprintAsyncActionBase {
  UAsyncActionHandleSaveGame_() = default;
  UAsyncActionHandleSaveGame_(FVTableHelper& Helper) : UBlueprintAsyncActionBase(Helper) {}
    
};
struct UInputDeviceProperty_ : public UObject {
  UInputDeviceProperty_() = default;
  UInputDeviceProperty_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UColorInputDeviceProperty_ : public UInputDeviceProperty_ {
  UColorInputDeviceProperty_() = default;
  UColorInputDeviceProperty_(FVTableHelper& Helper) : UInputDeviceProperty_(Helper) {}
    
};
struct UColorInputDeviceCurveProperty_ : public UInputDeviceProperty_ {
  UColorInputDeviceCurveProperty_() = default;
  UColorInputDeviceCurveProperty_(FVTableHelper& Helper) : UInputDeviceProperty_(Helper) {}
    
};
struct UInputDeviceTriggerEffect_ : public UInputDeviceProperty_ {
  UInputDeviceTriggerEffect_() = default;
  UInputDeviceTriggerEffect_(FVTableHelper& Helper) : UInputDeviceProperty_(Helper) {}
    
};
struct UInputDeviceTriggerFeedbackProperty_ : public UInputDeviceTriggerEffect_ {
  UInputDeviceTriggerFeedbackProperty_() = default;
  UInputDeviceTriggerFeedbackProperty_(FVTableHelper& Helper) : UInputDeviceTriggerEffect_(Helper) {}
    
};
struct UInputDeviceTriggerResistanceProperty_ : public UInputDeviceTriggerEffect_ {
  UInputDeviceTriggerResistanceProperty_() = default;
  UInputDeviceTriggerResistanceProperty_(FVTableHelper& Helper) : UInputDeviceTriggerEffect_(Helper) {}
    
};
struct UInputDeviceTriggerVibrationProperty_ : public UInputDeviceTriggerEffect_ {
  UInputDeviceTriggerVibrationProperty_() = default;
  UInputDeviceTriggerVibrationProperty_(FVTableHelper& Helper) : UInputDeviceTriggerEffect_(Helper) {}
    
};
struct UInputDeviceAudioBasedVibrationProperty_ : public UInputDeviceProperty_ {
  UInputDeviceAudioBasedVibrationProperty_() = default;
  UInputDeviceAudioBasedVibrationProperty_(FVTableHelper& Helper) : UInputDeviceProperty_(Helper) {}
    
};
struct UInputDeviceSubsystem_ : public UEngineSubsystem {
  UInputDeviceSubsystem_() = default;
  UInputDeviceSubsystem_(FVTableHelper& Helper) : UEngineSubsystem(Helper) {}
    
};
struct UTouchInterface_ : public UObject {
  UTouchInterface_() = default;
  UTouchInterface_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameUserSettings_ : public UObject {
  UGameUserSettings_() = default;
  UGameUserSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ALightWeightInstanceManager_ : public AActor {
  ALightWeightInstanceManager_() = default;
  ALightWeightInstanceManager_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct ALightWeightInstanceStaticMeshManager_ : public ALightWeightInstanceManager_ {
  ALightWeightInstanceStaticMeshManager_() = default;
  ALightWeightInstanceStaticMeshManager_(FVTableHelper& Helper) : ALightWeightInstanceManager_(Helper) {}
    
};
struct UInputSettings_ : public UObject {
  UInputSettings_() = default;
  UInputSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef NU8 tyEnum_EVolumeLightingMethod__V3zL9aUL0pQuGf1BNu7ChuQ;
struct FLightmassWorldInfoSettings_ {
	NF32 staticLightingLevelScale;
	NI32 numIndirectLightingBounces;
	NI32 numSkyLightingBounces;
	NF32 indirectLightingQuality;
	NF32 indirectLightingSmoothness;
	FColor environmentColor{};
	NF32 environmentIntensity;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	NF32 diffuseBoost;
	tyEnum_EVolumeLightingMethod__V3zL9aUL0pQuGf1BNu7ChuQ volumeLightingMethod;
	NIM_BOOL bUseAmbientOcclusion;
	NIM_BOOL bGenerateAmbientOcclusionMaterialMask;
	NIM_BOOL bVisualizeMaterialDiffuse;
	NIM_BOOL bVisualizeAmbientOcclusion;
	NIM_BOOL bCompressLightmaps;
	NF32 volumetricLightmapDetailCellSize;
	NF32 volumetricLightmapMaximumBrickMemoryMb;
	NF32 volumetricLightmapSphericalHarmonicSmoothing;
	NF32 volumeLightSamplePlacementScale;
	NF32 directIlluminationOcclusionFraction;
	NF32 indirectIlluminationOcclusionFraction;
	NF32 occlusionExponent;
	NF32 fullyOccludedSamplesFraction;
	NF32 maxOcclusionDistance;
};
struct FDeviceColorData_ {
	NIM_BOOL bEnable;
	NIM_BOOL bResetAfterCompletion;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	FColor lightColor{};
};
struct FDeviceColorCurveData_ {
	NIM_BOOL bEnable;
	NIM_BOOL bResetAfterCompletion;
	tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_0;
	UCurveLinearColor_* deviceColorCurve;
};
struct FDeviceTriggerBaseData_ {
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	NIM_BOOL bResetUponCompletion;
};
struct FDeviceTriggerFeedbackData_ {
	UCurveFloat* feedbackPositionCurve;
	UCurveFloat* feedbackStrenghCurve;
};
struct FDeviceTriggerTriggerResistanceData_ {
	NI32 startPosition;
	NI32 startStrengh;
	NI32 endPosition;
	NI32 endStrengh;
};
struct FDeviceTriggerTriggerVibrationData_ {
	UCurveFloat* triggerPositionCurve;
	UCurveFloat* vibrationFrequencyCurve;
	UCurveFloat* vibrationAmplitudeCurve;
};
struct FAudioBasedVibrationData_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FActivateDevicePropertyParams_ {
	FPlatformUserId userId;
	FInputDeviceId deviceId{};
	NIM_BOOL bLooping;
	NIM_BOOL bIgnoreTimeDilation;
	NIM_BOOL bPlayWhilePaused;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
struct FHardwareDeviceIdentifier_ {
	FName inputClassName{};
	FName hardwareDeviceIdentifier{};
};
typedef NU8 tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow;
typedef NU8 tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw;
typedef TArray<UActorComponent*> TY__ZQxjzvTP9ciBbsMII1UY6aA;
typedef TSubclassOf<UActorComponent> TY__EMMPexIt2htv9ac7xWWGtbw;
typedef NU8 tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg;
typedef NU8 tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw;
typedef TSubclassOf<UInputComponent> TY__eU3i2csv9bKuRFwfWpzG1Fg;
typedef TSubclassOf<AGameStateBase_> TY__LFVmNDCDdFSsmxhHiPJYiQ;
typedef TSubclassOf<APlayerController> TY__N5tiyJcFjwg9aEWJ9bLqgW2A;
typedef TSubclassOf<APlayerState_> TY__XW1e9bzrz7QIZaZL5gPko1g;
typedef TSubclassOf<AHUD_> TY__BkcX38UniVJ8g2gZm25M2w;
typedef TSubclassOf<APawn> TY__0urt5qtPpUJuYc9bl6N2OHg;
typedef TSubclassOf<ASpectatorPawn_> TY__eoFRbGE42PWBoR9bvsC8c9cw;
typedef TSubclassOf<AServerStatReplicator> TY__CwGWlh85GBrNQk9cYdk5JEA;
typedef TSubclassOf<AGameModeBase> TY__L4ksf6eGEOlpaGPAe08vkg;
typedef TArray<APlayerState_*> TY__Y5TxId8qcU0GFittS1bC9bA;
typedef TSubclassOf<APlayerCameraManager> TY__nUsLbvR9bTg9anoy6IEB7FSw;
typedef TSubclassOf<UCheatManager_> TY__gzb18rEfE25lh72hBxz6wA;
typedef NU8 tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA;
typedef TArray<FStreamingSourceShape> TY__nOrP80JBRl6rmLy4ACFykA;
typedef NU8 tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g;
typedef NU8 tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg;
typedef NU8 tyEnum_EViewTargetBlendFunction__bD49atsfKhTFQYLRCUW0iGQ;
typedef NU8 tyEnum_EDynamicForceFeedbackAction__8KJfWx2uBQLb8KhKL7Nljg;
typedef TSubclassOf<UPlayerInput> TY__9b1Wl2DWbmWU3i39cb0aYLdw;
typedef NU8 tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA;
typedef NU8 tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw;
typedef NU8 tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg;
typedef TSubclassOf<AController> TY__KGHReoQbDEGLKq1y5YM6eQ;
typedef TSubclassOf<ADebugCameraController_> TY__foOrAswB6Owyr0RwoeenmA;
typedef NU8 tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA;
typedef NU8 tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ;
typedef NU8 tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ;
typedef TWeakObjectPtr<USceneComponent>  TY__9b9c0qopUCzSW4js0BJumMlQ;
typedef TMap<FName COMMA FDeviceColorData_>  TY__mOpL05xw2iQakSy1XAlwfw;
typedef TMap<FName COMMA FDeviceColorCurveData_>  TY__p8Wi6T89cTmksGlyV10Mycw;
typedef TMap<FName COMMA FDeviceTriggerFeedbackData_>  TY__HBpy4JXT1fKa0SBtmqqvbg;
typedef TMap<FName COMMA FDeviceTriggerTriggerResistanceData_>  TY__dbgBQsZXRZeU0c9bvitCtFA;
typedef TMap<FName COMMA FDeviceTriggerTriggerVibrationData_>  TY__0yQe9aDyyKVPv0QVddqTZAg;
typedef TMap<FName COMMA FAudioBasedVibrationData_>  TY__bG8gCXIR8Js247Oljg5dng;
typedef TSet<FInputDevicePropertyHandle_>  TY__AyZkHVlB2X6bv9cl4qwczAw;
typedef TSubclassOf<UInputDeviceProperty_> TY__aqfsbs05nDl2Mv2M0XZFpg;
typedef NU8 tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg;
typedef TSoftObjectPtr<UStaticMesh> TY__cgfzaLYkvR8gASam8GmF9aQ;
typedef TArray<FInputAxisKeyMapping> TY__CLT5yrXFP3HZX5VORHV70A;
typedef TArray<FInputActionKeyMapping> TY__LgeuiTWlJeQFCA1Wq3za9bg;
struct UAnimSingleNodeInstance_ : public UObject {
  UAnimSingleNodeInstance_() = default;
  UAnimSingleNodeInstance_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ASkeletalMeshActor_ : public AActor {
  ASkeletalMeshActor_() = default;
  ASkeletalMeshActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UAnalysisProperties_ : public UObject {
  UAnalysisProperties_() = default;
  UAnalysisProperties_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimationSettings_ : public UObject {
  UAnimationSettings_() = default;
  UAnimationSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimComposite_ : public UAnimCompositeBase {
  UAnimComposite_() = default;
  UAnimComposite_(FVTableHelper& Helper) : UAnimCompositeBase(Helper) {}
    
};
struct UAnimCompress_RemoveLinearKeys_ : public UAnimCompress_ {
  UAnimCompress_RemoveLinearKeys_() = default;
  UAnimCompress_RemoveLinearKeys_(FVTableHelper& Helper) : UAnimCompress_(Helper) {}
    
};
struct UAnimCompress_RemoveEverySecondKey_ : public UAnimCompress_ {
  UAnimCompress_RemoveEverySecondKey_() = default;
  UAnimCompress_RemoveEverySecondKey_(FVTableHelper& Helper) : UAnimCompress_(Helper) {}
    
};
struct UAnimCompress_RemoveTrivialKeys_ : public UAnimCompress_ {
  UAnimCompress_RemoveTrivialKeys_() = default;
  UAnimCompress_RemoveTrivialKeys_(FVTableHelper& Helper) : UAnimCompress_(Helper) {}
    
};
struct UAnimDataModel_ : public UObject {
  UAnimDataModel_() = default;
  UAnimDataModel_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimNotifyState_TimedParticleEffect_ : public UAnimNotifyState_ {
  UAnimNotifyState_TimedParticleEffect_() = default;
  UAnimNotifyState_TimedParticleEffect_(FVTableHelper& Helper) : UAnimNotifyState_(Helper) {}
    
};
struct UAnimNotifyState_Trail_ : public UAnimNotifyState_ {
  UAnimNotifyState_Trail_() = default;
  UAnimNotifyState_Trail_(FVTableHelper& Helper) : UAnimNotifyState_(Helper) {}
    
};
struct UAnimSet_ : public UObject {
  UAnimSet_() = default;
  UAnimSet_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimStreamable_ : public UAnimSequenceBase {
  UAnimStreamable_() = default;
  UAnimStreamable_(FVTableHelper& Helper) : UAnimSequenceBase(Helper) {}
    
};
struct UAssetMappingTable_ : public UObject {
  UAssetMappingTable_() = default;
  UAssetMappingTable_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UBoneMaskFilter_ : public UObject {
  UBoneMaskFilter_() = default;
  UBoneMaskFilter_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPoseAsset_ : public UAnimationAsset {
  UPoseAsset_() = default;
  UPoseAsset_(FVTableHelper& Helper) : UAnimationAsset(Helper) {}
    
};
struct URig_ : public UObject {
  URig_() = default;
  URig_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAnimBlueprint_ : public UObject {
  UAnimBlueprint_() = default;
  UAnimBlueprint_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FPoseLinkBase_ {
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FAnimNode_Root_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FPoseLink_ Result;
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FInputRange_ {
	NF32 Min;
	NF32 Max;
};
struct FInputScaleBiasClamp_ {
	NIM_BOOL bMapRange;
	NIM_BOOL bClampResult;
	NIM_BOOL bInterpResult;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	FInputRange_ inRange;
	FInputRange_ outRange;
	NF32 scale;
	NF32 bias;
	NF32 clampMin;
	NF32 clampMax;
	NF32 interpSpeedIncreasing;
	NF32 interpSpeedDecreasing;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
typedef NU8 tyEnum_EAlphaBlendOption__LKIa243bVL7z35YoC4pwhg;
struct FInputAlphaBoolBlend_ {
	NF32 blendInTime;
	NF32 blendOutTime;
	tyEnum_EAlphaBlendOption__LKIa243bVL7z35YoC4pwhg blendOption;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
	UCurveFloat* customCurve;
	tyArray__imubzojaOiPVfv1g8EarTA pad_1;
};
struct FInputScaleBias_ {
	NF32 scale;
	NF32 bias;
};
typedef NU8 tyArray__3xXgtqiphP4Saazlw9cWQFA[160];
struct FAnimNode_AssetPlayerBase_ {
	tyArray__3xXgtqiphP4Saazlw9cWQFA pad_0;
	NF32 blendWeight;
	NF32 internalTimeAccumulator;
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_1;
};
struct FNamedFloat_ {
	NF32 value;
	FName name{};
};
struct FNamedVector_ {
	FVector value{};
	FName name{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FNamedColor_ {
	FColor value{};
	FName name{};
};
struct FNamedTransform_ {
	FTransform value{};
	FName name{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FLocalSpacePose_ {
	TY__ZRKjvD0LxpBKI8XAOc3PKg transforms{};
	TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ names{};
};
struct FComponentSpacePose_ {
	TY__ZRKjvD0LxpBKI8XAOc3PKg transforms{};
	TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ names{};
};
struct FBracketPayload_ {
	FString description{};
};
struct FAnimationTrackPayload_ {
	FName name{};
};
struct FAnimationTrackAddedPayload_ {
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
	NI32 trackIndex;
};
struct FSequenceLengthChangedPayload_ {
	NF32 previousLength;
	NF32 t0;
	NF32 t1;
	FFrameNumber previousNumberOfFrames{};
	FFrameNumber frame0{};
	FFrameNumber frame1{};
};
struct FFrameRateChangedPayload_ {
	FFrameRate previousFrameRate{};
};
struct FCurvePayload_ {
	FAnimationCurveIdentifier_ identifier;
};
struct FCurveScaledPayload_ {
	tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
	NF32 factor;
	NF32 origin;
};
struct FCurveRenamedPayload_ {
	tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
	FAnimationCurveIdentifier_ newIdentifier;
};
struct FCurveFlagsChangedPayload_ {
	tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
	NI32 oldFlags;
};
struct FAttributePayload_ {
	FAnimationAttributeIdentifier_ identifier{};
};
struct FAnimNodeConstantData_ {
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FFloatAnimationAttribute_ {
	NF32 value;
};
struct FIntegerAnimationAttribute_ {
	NI32 value;
};
struct FStringAnimationAttribute_ {
	FString value{};
};
struct FTransformAnimationAttribute_ {
	FTransform value{};
};
struct FVectorAnimationAttribute_ {
	FVector value{};
};
struct FQuaternionAnimationAttribute_ {
	FQuat value{};
};
typedef TArray<FFloatCurve> TY__KUWt1ue3OVxZn07Y1DKXSA;
typedef TArray<FTransformCurve> TY__9cM6OHIWVtEkIQ9bybSH3m0w;
struct FAnimationCurveData_ {
	TY__KUWt1ue3OVxZn07Y1DKXSA floatCurves{};
	TY__9cM6OHIWVtEkIQ9bybSH3m0w transformCurves{};
};
typedef NU8 tyArray__OLmQMe9cyeh27L3PXXozplQ[184];
struct FAttributeCurve_ {
	tyArray__OLmQMe9cyeh27L3PXXozplQ pad_0;
};
struct FAnimatedBoneAttribute_ {
	FAnimationAttributeIdentifier_ identifier{};
	FAttributeCurve_ curve;
};
struct FAnimNodeData_ {
	tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
struct FAnimNode_ConvertComponentToLocalSpace_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FComponentSpacePoseLink_ componentPose;
};
struct FAnimNode_ConvertLocalToComponentSpace_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FPoseLink_ localPose;
};
typedef NU8 tyEnum_EAnimAlphaInputType__qqkmIhiXk03m9bkSCSRl5ZQ;
struct FAnimNode_ApplyMeshSpaceAdditive_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FPoseLink_ base;
	FPoseLink_ additive;
	tyEnum_EAnimAlphaInputType__qqkmIhiXk03m9bkSCSRl5ZQ alphaInputType;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_1;
	NF32 alpha;
	NIM_BOOL bAlphaBoolEnabled;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_2;
	FInputAlphaBoolBlend_ alphaBoolBlend;
	FName alphaCurveName{};
	FInputScaleBias_ alphaScaleBias;
	FInputScaleBiasClamp_ alphaScaleBiasClamp;
	NI32 lODThreshold;
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_3;
};
typedef NU8 tyArray__8Q4Zf7Ql3HGDlmTJ7tdguQ[384];
struct FAnimNode_Inertialization_ {
	tyArray__8Q4Zf7Ql3HGDlmTJ7tdguQ pad_0;
};
typedef NU8 tyArray__cKG3vT0OC7vNRmxPTePMjw[328];
struct FAnimNode_LinkedAnimGraph_ {
	tyArray__cKG3vT0OC7vNRmxPTePMjw pad_0;
};
typedef NU8 tyArray__mt9a1Sp7ZofJTEUP8QsIYGw[376];
struct FAnimNode_LinkedAnimLayer_ {
	tyArray__mt9a1Sp7ZofJTEUP8QsIYGw pad_0;
};
typedef NU8 tyArray__9aY65sZE2Ki3PrLwrA54miw[232];
struct FAnimNode_SaveCachedPose_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FPoseLink_ pose;
	tyArray__9aY65sZE2Ki3PrLwrA54miw pad_1;
};
struct FAnimNode_SequencePlayerBase_ {
	tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
struct FAnimNode_SequencePlayer_ {
	tyArray__cKG3vT0OC7vNRmxPTePMjw pad_0;
};
struct FInputScaleBiasClampConstants_ {
	NIM_BOOL bMapRange;
	NIM_BOOL bClampResult;
	NIM_BOOL bInterpResult;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	FInputRange_ inRange;
	FInputRange_ outRange;
	NF32 scale;
	NF32 bias;
	NF32 clampMin;
	NF32 clampMax;
	NF32 interpSpeedIncreasing;
	NF32 interpSpeedDecreasing;
};
typedef NU8 tyArray__ygU1vpFxYOlyRiRkLB1kJQ[280];
struct FAnimNode_SequencePlayer_Standalone_ {
	tyArray__ygU1vpFxYOlyRiRkLB1kJQ pad_0;
};
typedef NU8 tyArray__zc4u4RrSbA1hwf3CQE69cog[272];
typedef NU8 tyEnum_EEvaluatorDataSource__8uWsKNkTkOBtdWA2gGoEyg;
typedef NU8 tyArray__CqHFRL3DoaCjN54AqEF16g[23];
struct FAnimNode_TransitionPoseEvaluator_ {
	tyArray__zc4u4RrSbA1hwf3CQE69cog pad_0;
	NI32 framesToCachePose;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	tyEnum_EEvaluatorDataSource__8uWsKNkTkOBtdWA2gGoEyg dataSource;
	tyArray__CqHFRL3DoaCjN54AqEF16g pad_2;
};
struct FAnimNode_TransitionResult_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	NIM_BOOL bCanEnterTransition;
	tyArray__CqHFRL3DoaCjN54AqEF16g pad_1;
};
struct FAnimNode_SingleNode_ {
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
	FPoseLink_ sourcePose;
	tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FCachedAnimStateData_ {
	FName stateMachineName{};
	FName stateName{};
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
typedef TArray<FCachedAnimStateData_> TY__RSev49cSp36pj3QRpRHRmMw;
struct FCachedAnimStateArray_ {
	TY__RSev49cSp36pj3QRpRHRmMw states{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCachedAnimAssetPlayerData_ {
	FName stateMachineName{};
	FName stateName{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCachedAnimRelevancyData_ {
	FName stateMachineName{};
	FName stateName{};
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
struct FCachedAnimTransitionData_ {
	FName stateMachineName{};
	FName fromStateName{};
	FName toStateName{};
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
struct FNamedCurveValue_ {
	FName name{};
	NF32 value;
};
struct FInputClampConstants_ {
	NIM_BOOL bClampResult;
	NIM_BOOL bInterpResult;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	NF32 clampMin;
	NF32 clampMax;
	NF32 interpSpeedIncreasing;
	NF32 interpSpeedDecreasing;
};
struct FTrajectorySample_ {
	NF32 accumulatedSeconds;
	tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
	FTransform transform{};
	FVector linearVelocity{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
typedef TArray<FTrajectorySample_> TY__EMmcxSvhuUScoxpip56vPQ;
struct FTrajectorySampleRange_ {
	TY__EMmcxSvhuUScoxpip56vPQ samples{};
};
typedef TSubclassOf<UAnimNotify> TY__JNf5Wvjeg5cqxRK9cyfRJPw;
typedef TSubclassOf<UAnimNotifyState_> TY__mWBoF7VeC4X20sAoMjXlVA;
typedef NU8 tyEnum_ERootMotionMode__oixCsBQZKA6SWRZ9bIVVRxQ;
typedef NU8 tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw;
typedef NU8 tyEnum_ETransitionRequestQueueMode__x8ojufrQ2LY9a3P8sXTtX4A;
typedef NU8 tyEnum_ETransitionRequestOverwriteMode__SuW15yRCTZRz68GQ9cQsXwg;
typedef NU8 tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw;
typedef NU8 tyEnum_EAnimCurveType__bLSJ5hfWpuK9b9a9atpz9c41QQ;
typedef TScriptInterface<UAnimationDataController>  TY__GmxQYRLn4JVnyI7Ef9c9aRsw;
typedef TArray<FAnimatedBoneAttribute_> TY__uvC4hJjePbPu61EoaxB1QQ;
typedef NU8 tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag;
typedef NU8 tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg;
typedef TSoftObjectPtr<USkeleton> TY__KIrNCXNdi1DZ0tXfl0ZD9aQ;
typedef TArray<TY__KIrNCXNdi1DZ0tXfl0ZD9aQ> TY__DqtnNclNKsonqiNHV0i59bw;
struct FAbilityStateDelegate_ : public FMulticastScriptDelegate {
};
struct FActiveGameplayEffectQueryCustomMatch_Dynamic_ : public FScriptDelegate {
};
struct FApplyRootMotionConstantForceDelegate_ : public FMulticastScriptDelegate {
};
struct FApplyRootMotionJumpForceDelegate_ : public FMulticastScriptDelegate {
};
struct FApplyRootMotionMoveToActorForceDelegate_ : public FMulticastScriptDelegate {
};
struct FApplyRootMotionMoveToForceDelegate_ : public FMulticastScriptDelegate {
};
struct FApplyRootMotionRadialForceDelegate_ : public FMulticastScriptDelegate {
};
struct FAsyncWaitGameplayTagQueryDelegate_ : public FMulticastScriptDelegate {
};
struct FGameplayEffectAppliedSelfDelegate_ : public FMulticastScriptDelegate {
};
struct FGameplayEffectAppliedTargetDelegate_ : public FMulticastScriptDelegate {
};
struct FGameplayEffectBlockedDelegate_ : public FMulticastScriptDelegate {
};
struct FInputPressDelegate_ : public FMulticastScriptDelegate {
};
struct FInputReleaseDelegate_ : public FMulticastScriptDelegate {
};
struct FMontageWaitSimpleDelegate_ : public FMulticastScriptDelegate {
};
struct FMovementModeChangedDelegate_ : public FMulticastScriptDelegate {
};
struct FMoveToLocationDelegate_ : public FMulticastScriptDelegate {
};
struct FMovieSceneGameplayCueEvent_ : public FScriptDelegate {
};
struct FNetworkSyncDelegate_ : public FMulticastScriptDelegate {
};
struct FRepeatedActionDelegate_ : public FMulticastScriptDelegate {
};
struct FSpawnActorDelegate_ : public FMulticastScriptDelegate {
};
struct FVisualizeTargetingDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitAbilityActivateDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitAbilityCommitDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitAttributeChangeDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitAttributeChangeRatioThresholdDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitAttributeChangeThresholdDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitCancelDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitConfirmCancelDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitDelayDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitGameplayEffectRemovedDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitGameplayEffectStackChangeDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitGameplayEventDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitGameplayTagDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitGameplayTagQueryDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitOverlapDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitTargetDataDelegate_ : public FMulticastScriptDelegate {
};
struct FWaitVelocityChangeDelegate_ : public FMulticastScriptDelegate {
};
struct FAbilityAbilityKey_ : public FMulticastScriptDelegate {
};
struct FAbilityConfirmOrCancel_ : public FMulticastScriptDelegate {
};
struct FAsyncWaitGameplayTagDelegate_ : public FMulticastScriptDelegate {
};
struct FEventReceivedDelegate_ : public FMulticastScriptDelegate {
};
struct FOnAppliedDelegate_ : public FMulticastScriptDelegate {
};
struct FAsyncWaitAttributeChangedDelegate_ : public FMulticastScriptDelegate {
};
struct AAbilitySystemDebugHUD_ : public AHUD_ {
  AAbilitySystemDebugHUD_() = default;
  AAbilitySystemDebugHUD_(FVTableHelper& Helper) : AHUD_(Helper) {}
    
};
struct UGameplayEffectUIData_ : public UObject {
  UGameplayEffectUIData_() = default;
  UGameplayEffectUIData_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayEffectUIData_TextOnly_ : public UGameplayEffectUIData_ {
  UGameplayEffectUIData_TextOnly_() = default;
  UGameplayEffectUIData_TextOnly_(FVTableHelper& Helper) : UGameplayEffectUIData_(Helper) {}
    
};
struct UGameplayAbilitySet_ : public UDataAsset {
  UGameplayAbilitySet_() = default;
  UGameplayAbilitySet_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct AGameplayAbilityTargetActor_SingleLineTrace_ : public AGameplayAbilityTargetActor_Trace_ {
  AGameplayAbilityTargetActor_SingleLineTrace_() = default;
  AGameplayAbilityTargetActor_SingleLineTrace_(FVTableHelper& Helper) : AGameplayAbilityTargetActor_Trace_(Helper) {}
    
};
struct UGameplayAbility_CharacterJump_ : public UGameplayAbility {
  UGameplayAbility_CharacterJump_() = default;
  UGameplayAbility_CharacterJump_(FVTableHelper& Helper) : UGameplayAbility(Helper) {}
    
};
struct UAbilitySystemBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UAbilitySystemBlueprintLibrary_() = default;
  UAbilitySystemBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UAbilitySystemDebugHUDExtension_ : public UObject {
  UAbilitySystemDebugHUDExtension_() = default;
  UAbilitySystemDebugHUDExtension_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAbilitySystemDebugHUDExtension_Tags_ : public UAbilitySystemDebugHUDExtension_ {
  UAbilitySystemDebugHUDExtension_Tags_() = default;
  UAbilitySystemDebugHUDExtension_Tags_(FVTableHelper& Helper) : UAbilitySystemDebugHUDExtension_(Helper) {}
    
};
struct UAbilitySystemDebugHUDExtension_Attributes_ : public UAbilitySystemDebugHUDExtension_ {
  UAbilitySystemDebugHUDExtension_Attributes_() = default;
  UAbilitySystemDebugHUDExtension_Attributes_(FVTableHelper& Helper) : UAbilitySystemDebugHUDExtension_(Helper) {}
    
};
struct UAbilitySystemDebugHUDExtension_BlockedAbilityTags_ : public UAbilitySystemDebugHUDExtension_ {
  UAbilitySystemDebugHUDExtension_BlockedAbilityTags_() = default;
  UAbilitySystemDebugHUDExtension_BlockedAbilityTags_(FVTableHelper& Helper) : UAbilitySystemDebugHUDExtension_(Helper) {}
    
};
struct UAbilitySystemInterface_ : public UInterface {
  UAbilitySystemInterface_() = default;
  UAbilitySystemInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UAbilitySystemTestAttributeSet_ : public UAttributeSet {
  UAbilitySystemTestAttributeSet_() = default;
  UAbilitySystemTestAttributeSet_(FVTableHelper& Helper) : UAttributeSet(Helper) {}
    
};
struct AAbilitySystemTestPawn_ : public ADefaultPawn_ {
  AAbilitySystemTestPawn_() = default;
  AAbilitySystemTestPawn_(FVTableHelper& Helper) : ADefaultPawn_(Helper) {}
    
};
struct UAnimNotify_GameplayCue_ : public UAnimNotify {
  UAnimNotify_GameplayCue_() = default;
  UAnimNotify_GameplayCue_(FVTableHelper& Helper) : UAnimNotify(Helper) {}
    
};
struct UAnimNotify_GameplayCueState_ : public UAnimNotifyState_ {
  UAnimNotify_GameplayCueState_() = default;
  UAnimNotify_GameplayCueState_(FVTableHelper& Helper) : UAnimNotifyState_(Helper) {}
    
};
struct UGameplayAbilityBlueprint_ : public UBlueprint {
  UGameplayAbilityBlueprint_() = default;
  UGameplayAbilityBlueprint_(FVTableHelper& Helper) : UBlueprint(Helper) {}
    
};
struct UGameplayCueFunctionLibrary_ : public UBlueprintFunctionLibrary {
  UGameplayCueFunctionLibrary_() = default;
  UGameplayCueFunctionLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UGameplayCueManager_ : public UDataAsset {
  UGameplayCueManager_() = default;
  UGameplayCueManager_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct AGameplayCueNotify_Actor_ : public AActor {
  AGameplayCueNotify_Actor_() = default;
  AGameplayCueNotify_Actor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UGameplayCueNotify_Static_ : public UObject {
  UGameplayCueNotify_Static_() = default;
  UGameplayCueNotify_Static_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayCueNotify_Burst_ : public UGameplayCueNotify_Static_ {
  UGameplayCueNotify_Burst_() = default;
  UGameplayCueNotify_Burst_(FVTableHelper& Helper) : UGameplayCueNotify_Static_(Helper) {}
    
};
struct AGameplayCueNotify_BurstLatent_ : public AGameplayCueNotify_Actor_ {
  AGameplayCueNotify_BurstLatent_() = default;
  AGameplayCueNotify_BurstLatent_(FVTableHelper& Helper) : AGameplayCueNotify_Actor_(Helper) {}
    
};
struct UGameplayCueNotify_HitImpact_ : public UGameplayCueNotify_Static_ {
  UGameplayCueNotify_HitImpact_() = default;
  UGameplayCueNotify_HitImpact_(FVTableHelper& Helper) : UGameplayCueNotify_Static_(Helper) {}
    
};
struct AGameplayCueNotify_Looping_ : public AGameplayCueNotify_Actor_ {
  AGameplayCueNotify_Looping_() = default;
  AGameplayCueNotify_Looping_(FVTableHelper& Helper) : AGameplayCueNotify_Actor_(Helper) {}
    
};
struct UGameplayCueSet_ : public UDataAsset {
  UGameplayCueSet_() = default;
  UGameplayCueSet_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct UGameplayCueTranslator_ : public UObject {
  UGameplayCueTranslator_() = default;
  UGameplayCueTranslator_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayCueTranslator_Test_ : public UGameplayCueTranslator_ {
  UGameplayCueTranslator_Test_() = default;
  UGameplayCueTranslator_Test_(FVTableHelper& Helper) : UGameplayCueTranslator_(Helper) {}
    
};
struct UGameplayEffectCalculation_ : public UObject {
  UGameplayEffectCalculation_() = default;
  UGameplayEffectCalculation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayEffectCustomApplicationRequirement_ : public UObject {
  UGameplayEffectCustomApplicationRequirement_() = default;
  UGameplayEffectCustomApplicationRequirement_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameplayEffectExecutionCalculation_ : public UGameplayEffectCalculation_ {
  UGameplayEffectExecutionCalculation_() = default;
  UGameplayEffectExecutionCalculation_(FVTableHelper& Helper) : UGameplayEffectCalculation_(Helper) {}
    
};
struct UGameplayModMagnitudeCalculation_ : public UGameplayEffectCalculation_ {
  UGameplayModMagnitudeCalculation_() = default;
  UGameplayModMagnitudeCalculation_(FVTableHelper& Helper) : UGameplayEffectCalculation_(Helper) {}
    
};
struct UGameplayTagReponseTable_ : public UDataAsset {
  UGameplayTagReponseTable_() = default;
  UGameplayTagReponseTable_(FVTableHelper& Helper) : UDataAsset(Helper) {}
    
};
struct UTickableAttributeSetInterface_ : public UInterface {
  UTickableAttributeSetInterface_() = default;
  UTickableAttributeSetInterface_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct FPredictionKeyNetSerializerConfig_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FGameplayAbilityRepAnimMontageNetSerializerConfig_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FMinimalReplicationTagCountMapNetSerializerConfig_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FMinimalGameplayCueReplicationProxyNetSerializerConfig_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FGameplayEffectContextNetSerializerConfig_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TSubclassOf<UGameplayEffect> TY__o5lmm3YGRQTdI9c9ccmTHabQ;
typedef TArray<TY__o5lmm3YGRQTdI9c9ccmTHabQ> TY__YWxhJKhKplqKD9bzBoR0fzQ;
struct FGameplayTagReponsePair_ {
	FGameplayTag tag{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	TY__o5lmm3YGRQTdI9c9ccmTHabQ responseGameplayEffect{};
	TY__YWxhJKhKplqKD9bzBoR0fzQ responseGameplayEffects{};
	NI32 softCountCap;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FGameplayTagResponseTableEntry_ {
	FGameplayTagReponsePair_ positive{};
	FGameplayTagReponsePair_ negative{};
};
struct FGameplayEffectContextHandleNetSerializerConfig_ {
	tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
typedef NU8 tyArray__vEOa9c5qaE9ajWxR5R4zwfQg[32];
typedef NU8 tyEnum_EGameplayCuePayloadType__QHvYj9cxEVspK3bO9cQZEMRQ;
struct FGameplayCuePendingExecute_ {
	tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
	FPredictionKey predictionKey{};
	tyEnum_EGameplayCuePayloadType__QHvYj9cxEVspK3bO9cQZEMRQ payloadType;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
	UAbilitySystemComponent* owningComponent;
	FGameplayEffectSpecForRPC fromSpec{};
	FGameplayCueParameters cueParameters{};
};
typedef TArray<AGameplayCueNotify_Actor_*> TY__ntaWYtDOxlmgcrRq4jKMRg;
struct FGameplayCueNotifyActorArray_ {
	TY__ntaWYtDOxlmgcrRq4jKMRg actors{};
};
typedef TMap<UClass* COMMA FGameplayCueNotifyActorArray_>  TY__FccDQ5AAW9cDVh9bPc9a8dGJQ;
typedef TSubclassOf<AGameplayCueNotify_Actor_> TY__ROB2i9cysobginb5ZaB34eQ;
typedef TArray<TY__ROB2i9cysobginb5ZaB34eQ> TY__yFf9bt3gETA9bmErFkGcaITA;
struct FPreallocationInfo_ {
	TY__FccDQ5AAW9cDVh9bPc9a8dGJQ preallocatedInstances{};
	TY__yFf9bt3gETA9bmErFkGcaITA classesNeedingPreallocation{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef NU8 tyEnum_EGameplayAbilityInputBinds__gxNBBDWDwKeEuT2YwW9bhTQ;
typedef TSubclassOf<UGameplayAbility> TY__DI8ISoHArYV9cXPAlxup7ow;
struct FGameplayAbilityBindInfo_ {
	tyEnum_EGameplayAbilityInputBinds__gxNBBDWDwKeEuT2YwW9bhTQ command;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
	TY__DI8ISoHArYV9cXPAlxup7ow gameplayAbilityClass{};
};
struct FGameplayCueObjectLibrary_ {
	TY__myhN0u2pNczwuaOhbdYPXw paths{};
	tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
	UObjectLibrary_* actorObjectLibrary;
	UObjectLibrary_* staticObjectLibrary;
	UGameplayCueSet_* cueSet;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	NIM_BOOL bShouldSyncScan;
	NIM_BOOL bShouldAsyncLoad;
	NIM_BOOL bShouldSyncLoad;
	NIM_BOOL bHasBeenInitialized;
};
typedef NU8 tyEnum_EGameplayCueNotify_LocallyControlledSource__UF9aDiEhe4SIhTQ23RLBfdA;
typedef NU8 tyEnum_EGameplayCueNotify_LocallyControlledPolicy__jC51JtVaN5J4iPbI9akqTEA;
typedef TArray<tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA> TY__TEr2nhUmC0Z6pBsZzEVmQw;
struct FGameplayCueNotify_SpawnCondition_ {
	tyEnum_EGameplayCueNotify_LocallyControlledSource__UF9aDiEhe4SIhTQ23RLBfdA locallyControlledSource;
	tyEnum_EGameplayCueNotify_LocallyControlledPolicy__jC51JtVaN5J4iPbI9akqTEA locallyControlledPolicy;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	NF32 chanceToPlay;
	TY__TEr2nhUmC0Z6pBsZzEVmQw allowedSurfaceTypes{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
	TY__TEr2nhUmC0Z6pBsZzEVmQw rejectedSurfaceTypes{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_2;
};
typedef NU8 tyEnum_EGameplayCueNotify_AttachPolicy__Li75monpMAfqjkIgqWJTig;
struct FGameplayCueNotify_PlacementInfo_ {
	FName socketName{};
	tyEnum_EGameplayCueNotify_AttachPolicy__Li75monpMAfqjkIgqWJTig attachPolicy;
	tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA attachmentRule;
	tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
	NIM_BOOL bOverrideRotation;
	NIM_BOOL bOverrideScale;
	tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_1;
	FRotator rotationOverride{};
	FVector scaleOverride{};
};
typedef TArray<UAudioComponent*> TY__xE9c0zpihvKbXMHhd47HI8Q;
typedef TArray<UCameraShakeBase_*> TY__4LC6SiNHnpLyZlKgHJd4Ew;
typedef TArray<TY__hvmi1aSu7TExY3gfL1PBlA> TY__lIY1kK6VORISVYAH9ctablg;
struct FGameplayCueNotify_SpawnResult_ {
	TY__Qu3WcNhn1GZqsD9bMGcV3pQ fxSystemComponents{};
	TY__xE9c0zpihvKbXMHhd47HI8Q audioComponents{};
	TY__4LC6SiNHnpLyZlKgHJd4Ew cameraShakes{};
	TY__lIY1kK6VORISVYAH9ctablg cameraLensEffects{};
	UForceFeedbackComponent_* forceFeedbackComponent;
	APlayerController* forceFeedbackTargetPC;
	UDecalComponent_* decalComponent;
};
typedef NU8 tyArray__39cnIm4v9c7pQp5XFRxTMpFg[5];
struct FGameplayCueNotify_ParticleInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bCastShadow;
	tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_1;
};
struct FGameplayCueNotify_SoundParameterInterfaceInfo_ {
	FName stopTriggerName{};
};
struct FGameplayCueNotify_SoundInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
	NF32 loopingFadeOutDuration;
	NF32 loopingFadeVolumeLevel;
	FGameplayCueNotify_SoundParameterInterfaceInfo_ soundParameterInterfaceInfo{};
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bUseSoundParameterInterface;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_1;
};
typedef NU8 tyEnum_EGameplayCueNotify_EffectPlaySpace__ls9bpY57c4u9cCGBtI5iQmaA;
struct FGameplayCueNotify_CameraShakeInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	TY__KQEDk1C09aJw5qI9c3NLtbyA cameraShake{};
	NF32 shakeScale;
	tyEnum_EGameplayCueNotify_EffectPlaySpace__ls9bpY57c4u9cCGBtI5iQmaA playSpace;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bPlayInWorld;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_1;
	NF32 worldInnerRadius;
	NF32 worldOuterRadius;
	NF32 worldFalloffExponent;
};
struct FGameplayCueNotify_CameraLensEffectInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	TY__9akcXb9b3ftlkdW8NDwR22Mg cameraLensEffect{};
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bPlayInWorld;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	NF32 worldInnerRadius;
	NF32 worldOuterRadius;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FGameplayCueNotify_ForceFeedbackInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	UForceFeedbackEffect_* forceFeedbackEffect;
	FName forceFeedbackTag{};
	NIM_BOOL bIsLooping;
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bPlayInWorld;
	NF32 worldIntensity;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	UForceFeedbackAttenuation_* worldAttenuation;
};
typedef TArray<TY__aqfsbs05nDl2Mv2M0XZFpg> TY__m7NHFYcy8yrkqPr9baQrh7A;
struct FGameplayCueNotify_InputDevicePropertyInfo_ {
	TY__m7NHFYcy8yrkqPr9baQrh7A deviceProperties{};
};
struct FGameplayCueNotify_DecalInfo_ {
	FGameplayCueNotify_SpawnCondition_ spawnConditionOverride{};
	FGameplayCueNotify_PlacementInfo_ placementInfoOverride{};
	UMaterialInterface* decalMaterial;
	FVector decalSize{};
	NIM_BOOL bOverrideSpawnCondition;
	NIM_BOOL bOverridePlacementInfo;
	NIM_BOOL bOverrideFadeOut;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	NF32 fadeOutStartDelay;
	NF32 fadeOutDuration;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
typedef TArray<FGameplayCueNotify_ParticleInfo_> TY__JPKFlIdlGkYMJ5qVPrWh9cA;
typedef TArray<FGameplayCueNotify_SoundInfo_> TY__ddwBOpW9cMK7s9bvoKc1ZRHQ;
struct FGameplayCueNotify_BurstEffects_ {
	TY__JPKFlIdlGkYMJ5qVPrWh9cA burstParticles{};
	TY__ddwBOpW9cMK7s9bvoKc1ZRHQ burstSounds{};
	FGameplayCueNotify_CameraShakeInfo_ burstCameraShake{};
	FGameplayCueNotify_CameraLensEffectInfo_ burstCameraLensEffect{};
	FGameplayCueNotify_ForceFeedbackInfo_ burstForceFeedback{};
	FGameplayCueNotify_InputDevicePropertyInfo_ burstDevicePropertyEffect{};
	FGameplayCueNotify_DecalInfo_ burstDecal{};
};
struct FGameplayCueNotify_LoopingEffects_ {
	TY__JPKFlIdlGkYMJ5qVPrWh9cA loopingParticles{};
	TY__ddwBOpW9cMK7s9bvoKc1ZRHQ loopingSounds{};
	FGameplayCueNotify_CameraShakeInfo_ loopingCameraShake{};
	FGameplayCueNotify_CameraLensEffectInfo_ loopingCameraLensEffect{};
	FGameplayCueNotify_ForceFeedbackInfo_ loopingForceFeedback{};
	FGameplayCueNotify_InputDevicePropertyInfo_ loopingInputDevicePropertyEffect{};
};
struct FGameplayCueNotifyData_ {
	FGameplayTag gameplayCueTag{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	FSoftObjectPath gameplayCueNotifyObj{};
	UClass* loadedGameplayCueClass;
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
struct FGameplayCueTranslatorNodeIndex_ {
	NI32 index;
};
struct FGameplayCueTranslationLink_ {
	UGameplayCueTranslator_* rulesCDO;
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TArray<FGameplayCueTranslationLink_> TY__oxZWcI5p63641JFpYX1cPw;
typedef NU8 tyArray__OquSYG9ba9cX0EVMypYKiWWQ[84];
struct FGameplayCueTranslatorNode_ {
	TY__oxZWcI5p63641JFpYX1cPw links{};
	FGameplayCueTranslatorNodeIndex_ cachedIndex;
	FGameplayTag cachedGameplayTag{};
	FName cachedGameplayTagName{};
	tyArray__OquSYG9ba9cX0EVMypYKiWWQ pad_0;
};
typedef TArray<FGameplayCueTranslatorNode_> TY__JtgItvMoOJTo49btMvWJ8nA;
typedef TMap<FName COMMA FGameplayCueTranslatorNodeIndex_>  TY__Y6UrN9b20hHpFTMWbUoBRCA;
struct FGameplayCueTranslationManager_ {
	TY__JtgItvMoOJTo49btMvWJ8nA translationLUT{};
	TY__Y6UrN9b20hHpFTMWbUoBRCA translationNameToIndexMap{};
	tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
};
typedef NU8 tyArray__MkdZYTPJCTDJaCPfmTk9bBw[248];
struct FGameplayEffectCustomExecutionParameters_ {
	tyArray__MkdZYTPJCTDJaCPfmTk9bBw pad_0;
};
typedef TArray<FGameplayModifierEvaluatedData> TY__hx07h4c4Ei7SP4sTrnRdyA;
struct FGameplayEffectCustomExecutionOutput_ {
	TY__hx07h4c4Ei7SP4sTrnRdyA outputModifiers{};
	NIM_BOOL bTriggerConditionalGameplayEffects;
	NIM_BOOL bHandledStackCountManually;
	NIM_BOOL bHandledGameplayCuesManually;
	tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_0;
};
typedef TArray<FGameplayAbilityBindInfo_> TY__c5YQSe1beacSx4MfVBpM6g;
typedef TSubclassOf<UGameplayEffectUIData_> TY__C5hI9bGz02aJQ8jd1yCg9aWw;
typedef TArray<FGameplayEffectSpecHandle> TY__ApMORIOJRIJuzL5PAQu9cEg;
typedef TScriptInterface<UGameplayCueInterface>  TY__sYXgxujJplhjPGLjVhFu2A;
typedef NU8 tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ;
typedef TArray<FAttributeDefaults> TY__SElPEbSc5uW3wbDAeOJeXw;
typedef TArray<AGameplayAbilityTargetActor_*> TY__UmMCwJHxy5cVkk9ctXMLdwA;
typedef TArray<UGameplayAbility*> TY__1iVhbK34EtpVHrTeNCGvNw;
typedef TArray<UAttributeSet*> TY__MTgP1q0moW3ktYPggh9a8TA;
typedef TMap<FGameplayTag COMMA NF32>  TY__UsuvlHgFUvpcHHVMn6XwRw;
typedef NU8 tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig;
typedef NU8 tyEnum_EEndPlayReason__83Jx3inG29af0RIg6BEVzPw;
typedef TSubclassOf<UAttributeSet> TY__JVcLxy5VxXvcRj365E9bclg;
typedef TSoftClassPtr<UGameplayEffect> TY__khlKMeIkNjMzqw2TfIXxWA;
typedef TArray<FGameplayAttribute> TY__0e5LS6UfmhaWdcjpiaKDgQ;
typedef TArray<FGameplayAbilitySpecHandle> TY__jBGmxbqnyTV447L3R9bbKnQ;
typedef TArray<FActiveGameplayEffectHandle> TY__x1jrflF2XK116qRMnTohKA;
typedef NU8 tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA;
typedef TArray<UClass*> TY__Oycn0Wv4Wvu5QjPDMJ4iYA;
typedef TArray<FGameplayCuePendingExecute_> TY__3EayRS3K5H6lKVUDWcwkUA;
typedef TArray<FPreallocationInfo_> TY__uqV1eG9a5U54FsunlxDWftQ;
typedef TArray<FGameplayCueNotifyData_> TY__iipK89cMQmmOQ9bmmnPnwHwQ;
typedef NU8 tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg;
typedef NU8 tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg;
typedef TArray<FGameplayModifierInfo> TY__SMXWF8IaQIMjnWJWW9aw9bWg;
typedef TArray<FGameplayEffectExecutionDefinition> TY__u78TYFr18r345jyU1USShA;
typedef TSubclassOf<UGameplayEffectCustomApplicationRequirement_> TY__7xWcfWXhuCWwWKsJ9aygnfQ;
typedef TArray<TY__7xWcfWXhuCWwWKsJ9aygnfQ> TY__JhMKUoilyazmRBfr9c6i9aAA;
typedef TArray<FConditionalGameplayEffect> TY__iyRh6NGfBn32Zv3ywMk9bgw;
typedef TArray<FGameplayEffectCue> TY__UjE9b8CGGMCLhKCOumAta4Q;
typedef NU8 tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ;
typedef NU8 tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A;
typedef NU8 tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw;
typedef NU8 tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA;
typedef TArray<FGameplayAbilitySpecDef> TY__Nfbibg9az9bLDonNBrt4vy4g;
typedef TArray<FGameplayEffectAttributeCaptureDefinition> TY__7dBu6g16YDeBHjA4ZfidNQ;
typedef TArray<FGameplayTagResponseTableEntry_> TY__9anH0Dz9c0Cr10xgCVjcFJzw;
struct UCppAttributeSet_ : public UAttributeSet {
  UCppAttributeSet_() = default;
  UCppAttributeSet_(FVTableHelper& Helper) : UAttributeSet(Helper) {}
    
};
struct UDelayOneFrame_ : public UBlueprintAsyncActionBase {
  UDelayOneFrame_() = default;
  UDelayOneFrame_(FVTableHelper& Helper) : UBlueprintAsyncActionBase(Helper) {}
    
};
struct FDelayOneFrameOutputPin_ : public FMulticastScriptDelegate {
};
struct UMovieScene2DTransformSection_ : public UObject {
  UMovieScene2DTransformSection_() = default;
  UMovieScene2DTransformSection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMovieSceneMarginSection_ : public UObject {
  UMovieSceneMarginSection_() = default;
  UMovieSceneMarginSection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UUMGSequencePlayer_ : public UObject {
  UUMGSequencePlayer_() = default;
  UUMGSequencePlayer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidgetAnimation_ : public UObject {
  UWidgetAnimation_() = default;
  UWidgetAnimation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidgetAnimationPlayCallbackProxy_ : public UObject {
  UWidgetAnimationPlayCallbackProxy_() = default;
  UWidgetAnimationPlayCallbackProxy_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UButtonStyleAsset_ : public UObject {
  UButtonStyleAsset_() = default;
  UButtonStyleAsset_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCheckBoxStyleAsset_ : public UObject {
  UCheckBoxStyleAsset_() = default;
  UCheckBoxStyleAsset_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USlateBrushAsset_ : public UObject {
  USlateBrushAsset_() = default;
  USlateBrushAsset_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidget_ : public UObject {
  UWidget_() = default;
  UWidget_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidgetComponent_ : public UMeshComponent {
  UWidgetComponent_() = default;
  UWidgetComponent_(FVTableHelper& Helper) : UMeshComponent(Helper) {}
    
};
struct UListView_ : public UListViewBase_ {
  UListView_() = default;
  UListView_(FVTableHelper& Helper) : UListViewBase_(Helper) {}
    
};
struct UBackgroundBlur_ : public UContentWidget_ {
  UBackgroundBlur_() = default;
  UBackgroundBlur_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UBackgroundBlurSlot_ : public UPanelSlot_ {
  UBackgroundBlurSlot_() = default;
  UBackgroundBlurSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UBorder_ : public UContentWidget_ {
  UBorder_() = default;
  UBorder_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UBorderSlot_ : public UPanelSlot_ {
  UBorderSlot_() = default;
  UBorderSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UButton_ : public UContentWidget_ {
  UButton_() = default;
  UButton_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UButtonSlot_ : public UPanelSlot_ {
  UButtonSlot_() = default;
  UButtonSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UCanvasPanelSlot_ : public UPanelSlot_ {
  UCanvasPanelSlot_() = default;
  UCanvasPanelSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UCheckBox_ : public UContentWidget_ {
  UCheckBox_() = default;
  UCheckBox_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UCircularThrobber_ : public UObject {
  UCircularThrobber_() = default;
  UCircularThrobber_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UComboBoxKey_ : public UObject {
  UComboBoxKey_() = default;
  UComboBoxKey_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UComboBoxString_ : public UObject {
  UComboBoxString_() = default;
  UComboBoxString_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDynamicEntryBoxBase_ : public UObject {
  UDynamicEntryBoxBase_() = default;
  UDynamicEntryBoxBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDynamicEntryBox_ : public UDynamicEntryBoxBase_ {
  UDynamicEntryBox_() = default;
  UDynamicEntryBox_(FVTableHelper& Helper) : UDynamicEntryBoxBase_(Helper) {}
    
};
struct UEditableText_ : public UObject {
  UEditableText_() = default;
  UEditableText_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UEditableTextBox_ : public UObject {
  UEditableTextBox_() = default;
  UEditableTextBox_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UExpandableArea_ : public UObject {
  UExpandableArea_() = default;
  UExpandableArea_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGridPanel_ : public UPanelWidget_ {
  UGridPanel_() = default;
  UGridPanel_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UGridSlot_ : public UPanelSlot_ {
  UGridSlot_() = default;
  UGridSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UHorizontalBoxSlot_ : public UPanelSlot_ {
  UHorizontalBoxSlot_() = default;
  UHorizontalBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UImage_ : public UObject {
  UImage_() = default;
  UImage_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UInputKeySelector_ : public UObject {
  UInputKeySelector_() = default;
  UInputKeySelector_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UInvalidationBox_ : public UContentWidget_ {
  UInvalidationBox_() = default;
  UInvalidationBox_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UMenuAnchor_ : public UContentWidget_ {
  UMenuAnchor_() = default;
  UMenuAnchor_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UTextLayoutWidget_ : public UObject {
  UTextLayoutWidget_() = default;
  UTextLayoutWidget_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMultiLineEditableText_ : public UTextLayoutWidget_ {
  UMultiLineEditableText_() = default;
  UMultiLineEditableText_(FVTableHelper& Helper) : UTextLayoutWidget_(Helper) {}
    
};
struct UMultiLineEditableTextBox_ : public UTextLayoutWidget_ {
  UMultiLineEditableTextBox_() = default;
  UMultiLineEditableTextBox_(FVTableHelper& Helper) : UTextLayoutWidget_(Helper) {}
    
};
struct UOverlaySlot_ : public UPanelSlot_ {
  UOverlaySlot_() = default;
  UOverlaySlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UProgressBar_ : public UObject {
  UProgressBar_() = default;
  UProgressBar_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct URetainerBox_ : public UContentWidget_ {
  URetainerBox_() = default;
  URetainerBox_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct URichTextBlock_ : public UTextLayoutWidget_ {
  URichTextBlock_() = default;
  URichTextBlock_(FVTableHelper& Helper) : UTextLayoutWidget_(Helper) {}
    
};
struct URichTextBlockImageDecorator_ : public URichTextBlockDecorator_ {
  URichTextBlockImageDecorator_() = default;
  URichTextBlockImageDecorator_(FVTableHelper& Helper) : URichTextBlockDecorator_(Helper) {}
    
};
struct USafeZone_ : public UContentWidget_ {
  USafeZone_() = default;
  USafeZone_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UScaleBox_ : public UContentWidget_ {
  UScaleBox_() = default;
  UScaleBox_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UScaleBoxSlot_ : public UPanelSlot_ {
  UScaleBoxSlot_() = default;
  UScaleBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UScrollBar_ : public UObject {
  UScrollBar_() = default;
  UScrollBar_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UScrollBox_ : public UPanelWidget_ {
  UScrollBox_() = default;
  UScrollBox_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UScrollBoxSlot_ : public UPanelSlot_ {
  UScrollBoxSlot_() = default;
  UScrollBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct USizeBox_ : public UContentWidget_ {
  USizeBox_() = default;
  USizeBox_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct USizeBoxSlot_ : public UPanelSlot_ {
  USizeBoxSlot_() = default;
  USizeBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct USlider_ : public UObject {
  USlider_() = default;
  USlider_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USpacer_ : public UObject {
  USpacer_() = default;
  USpacer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USpinBox_ : public UObject {
  USpinBox_() = default;
  USpinBox_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UStackBox_ : public UPanelWidget_ {
  UStackBox_() = default;
  UStackBox_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UTextBlock_ : public UTextLayoutWidget_ {
  UTextBlock_() = default;
  UTextBlock_(FVTableHelper& Helper) : UTextLayoutWidget_(Helper) {}
    
};
struct UThrobber_ : public UObject {
  UThrobber_() = default;
  UThrobber_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UTileView_ : public UListView_ {
  UTileView_() = default;
  UTileView_(FVTableHelper& Helper) : UListView_(Helper) {}
    
};
struct UTreeView_ : public UListView_ {
  UTreeView_() = default;
  UTreeView_(FVTableHelper& Helper) : UListView_(Helper) {}
    
};
struct UUniformGridPanel_ : public UPanelWidget_ {
  UUniformGridPanel_() = default;
  UUniformGridPanel_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UUniformGridSlot_ : public UPanelSlot_ {
  UUniformGridSlot_() = default;
  UUniformGridSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UVerticalBoxSlot_ : public UPanelSlot_ {
  UVerticalBoxSlot_() = default;
  UVerticalBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UViewport_ : public UContentWidget_ {
  UViewport_() = default;
  UViewport_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UWidgetInteractionComponent_ : public USceneComponent {
  UWidgetInteractionComponent_() = default;
  UWidgetInteractionComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UWidgetSwitcher_ : public UPanelWidget_ {
  UWidgetSwitcher_() = default;
  UWidgetSwitcher_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UWidgetSwitcherSlot_ : public UPanelSlot_ {
  UWidgetSwitcherSlot_() = default;
  UWidgetSwitcherSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UWindowTitleBarArea_ : public UContentWidget_ {
  UWindowTitleBarArea_() = default;
  UWindowTitleBarArea_(FVTableHelper& Helper) : UContentWidget_(Helper) {}
    
};
struct UWindowTitleBarAreaSlot_ : public UPanelSlot_ {
  UWindowTitleBarAreaSlot_() = default;
  UWindowTitleBarAreaSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
struct UWrapBox_ : public UPanelWidget_ {
  UWrapBox_() = default;
  UWrapBox_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UWrapBoxSlot_ : public UPanelSlot_ {
  UWrapBoxSlot_() = default;
  UWrapBoxSlot_(FVTableHelper& Helper) : UPanelSlot_(Helper) {}
    
};
typedef NU8 tyEnum_ETextShapingMethod__B2dNIKUbA18LrCAmTwu1bA;
typedef NU8 tyEnum_ETextFlowDirection__it3WpzuuPfNKE51KjghOBA;
struct FShapedTextOptions_ {
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	tyEnum_ETextShapingMethod__B2dNIKUbA18LrCAmTwu1bA textShapingMethod;
	tyEnum_ETextFlowDirection__it3WpzuuPfNKE51KjghOBA textFlowDirection;
};
struct FRadialBoxSettings_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_ESlateSizeRule__1MvHQwW2720UN9cA69alaKWg;
struct FSlateChildSize_ {
	NF32 value;
	tyEnum_ESlateSizeRule__1MvHQwW2720UN9cA69alaKWg sizeRule;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
};
struct FAnchorData_ {
	FMargin offsets{};
	FAnchors_ anchors{};
	FVector2D alignment{};
};
typedef NU8 tyArray__wknELTfNGbUq9aI09bLKcmWQ[240];
struct FRichImageRow_ {
	tyArray__wknELTfNGbUq9aI09bLKcmWQ pad_0;
};
typedef NU8 tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw;
typedef NU8 tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw;
typedef NU8 tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ;
typedef NU8 tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw;
typedef NU8 tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw;
typedef NU8 tyEnum_ETickMode__rpxnv5vHIZR9bdO1o6wQZXw;
typedef NU8 tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog;
typedef NU8 tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A;
typedef NU8 tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A;
typedef NU8 tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg;
typedef NU8 tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A;
typedef NU8 tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA;
typedef NU8 tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw;
typedef NU8 tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA;
typedef NU8 tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg;
typedef NU8 tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg;
typedef TArray<FVector2D> TY__fBi9aXEAuMMk9cMD1hVzuHSg;
typedef NU8 tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A;
typedef NU8 tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA;
typedef NU8 tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ;
typedef TSoftObjectPtr<UTexture2D> TY__mOiS9a9b9aowIwwaaQjcI1LkQ;
typedef TSoftObjectPtr<UMaterialInterface> TY__s6S1etbTGDD5NQkdAHEaiA;
typedef TScriptInterface<USlateTextureAtlasInterface_>  TY__ChHEiSofKQOcZRnlxAau9bg;
typedef NU8 tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA;
typedef NU8 tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww;
typedef NU8 tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA;
typedef NU8 tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA;
typedef NU8 tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ;
typedef TSubclassOf<URichTextBlockDecorator_> TY__wB9bgWhg9b9cgeGP1bZZpMvHw;
typedef TArray<TY__wB9bgWhg9b9cgeGP1bZZpMvHw> TY__fjyUyrp2lTh3XJrhJ8LRSQ;
typedef NU8 tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w;
typedef NU8 tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew;
typedef NU8 tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ;
typedef NU8 tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ;
typedef NU8 tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ;
struct FFieldValueChangedDynamicDelegate_ : public FScriptDelegate {
};
struct FCustomWidgetNavigationDelegate_ : public FScriptDelegate {
};
struct FOnMenuOpenChangedEvent_ : public FMulticastScriptDelegate {
};
struct FDownloadImageDelegate_ : public FMulticastScriptDelegate {
};
struct FOnButtonClickedEvent_ : public FMulticastScriptDelegate {
};
struct FOnButtonHoverEvent_ : public FMulticastScriptDelegate {
};
struct FOnButtonPressedEvent_ : public FMulticastScriptDelegate {
};
struct FOnButtonReleasedEvent_ : public FMulticastScriptDelegate {
};
struct FOnCheckBoxComponentStateChanged_ : public FMulticastScriptDelegate {
};
struct FOnConstructEvent_ : public FMulticastScriptDelegate {
};
struct FOnControllerCaptureBeginEvent_ : public FMulticastScriptDelegate {
};
struct FOnControllerCaptureEndEvent_ : public FMulticastScriptDelegate {
};
struct FOnDragDropMulticast_ : public FMulticastScriptDelegate {
};
struct FOnExpandableAreaExpansionChanged_ : public FMulticastScriptDelegate {
};
struct FOnFloatValueChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnGetItemChildrenDynamic_ : public FScriptDelegate {
};
struct FOnHoveredWidgetChanged_ : public FMulticastScriptDelegate {
};
struct FOnInputAction_ : public FScriptDelegate {
};
struct FOnItemExpansionChangedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnItemIsHoveredChangedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListEntryGeneratedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListEntryInitializedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListEntryReleasedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListItemScrolledIntoViewDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListItemSelectionChangedDynamic_ : public FMulticastScriptDelegate {
};
struct FOnListViewScrolledDynamic_ : public FMulticastScriptDelegate {
};
struct FOnMouseCaptureBeginEvent_ : public FMulticastScriptDelegate {
};
struct FOnMouseCaptureEndEvent_ : public FMulticastScriptDelegate {
};
struct FOnUserScrolledEvent_ : public FMulticastScriptDelegate {
};
struct FOnVisibilityChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnWidgetAnimationPlaybackStatusChanged_ : public FMulticastScriptDelegate {
};
struct FSimpleListItemEventDynamic_ : public FMulticastScriptDelegate {
};
struct FWidgetAnimationDynamicEvent_ : public FScriptDelegate {
};
struct FWidgetAnimationDynamicEvents_ : public FMulticastScriptDelegate {
};
struct FWidgetAnimationResult_ : public FMulticastScriptDelegate {
};
struct FOnGameWindowCloseButtonClickedDelegate_ : public FScriptDelegate {
};
struct FOnSpinBoxBeginSliderMovement_ : public FMulticastScriptDelegate {
};
struct FOnSpinBoxValueChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnSpinBoxValueCommittedEvent_ : public FMulticastScriptDelegate {
};
struct FOnMultiLineEditableTextBoxChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnMultiLineEditableTextBoxCommittedEvent_ : public FMulticastScriptDelegate {
};
struct FOnMultiLineEditableTextChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnMultiLineEditableTextCommittedEvent_ : public FMulticastScriptDelegate {
};
struct FGetUserWidget_ : public FScriptDelegate {
};
struct FOnIsSelectingKeyChanged_ : public FMulticastScriptDelegate {
};
struct FOnKeySelected_ : public FMulticastScriptDelegate {
};
struct FOnEditableTextBoxChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnEditableTextBoxCommittedEvent_ : public FMulticastScriptDelegate {
};
struct FOnEditableTextChangedEvent_ : public FMulticastScriptDelegate {
};
struct FOnEditableTextCommittedEvent_ : public FMulticastScriptDelegate {
};
struct UComboBoxString_FOnOpeningEvent_ : public FMulticastScriptDelegate {
};
struct UComboBoxString_FOnSelectionChangedEvent_ : public FMulticastScriptDelegate {
};
struct FGenerateWidgetEvent_ : public FScriptDelegate {
};
struct UComboBoxKey_FOnOpeningEvent_ : public FMulticastScriptDelegate {
};
struct UComboBoxKey_FOnSelectionChangedEvent_ : public FMulticastScriptDelegate {
};
struct USlateAccessibleWidgetData_FGetText_ : public FScriptDelegate {
};
struct FGenerateWidgetForObject_ : public FScriptDelegate {
};
struct FGenerateWidgetForString_ : public FScriptDelegate {
};
struct FGetBool_ : public FScriptDelegate {
};
struct FGetCheckBoxState_ : public FScriptDelegate {
};
struct FGetFloat_ : public FScriptDelegate {
};
struct FGetInt32_ : public FScriptDelegate {
};
struct FGetLinearColor_ : public FScriptDelegate {
};
struct FGetMouseCursor_ : public FScriptDelegate {
};
struct FGetSlateBrush_ : public FScriptDelegate {
};
struct FGetSlateColor_ : public FScriptDelegate {
};
struct FGetSlateVisibility_ : public FScriptDelegate {
};
struct FGetText_ : public FScriptDelegate {
};
struct FGetWidget_ : public FScriptDelegate {
};
struct FOnPointerEvent_ : public FScriptDelegate {
};
struct FOnReply_ : public FScriptDelegate {
};
struct UUserWidget_ : public UObject {
  UUserWidget_() = default;
  UUserWidget_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAsyncTaskDownloadImage_ : public UBlueprintAsyncActionBase {
  UAsyncTaskDownloadImage_() = default;
  UAsyncTaskDownloadImage_(FVTableHelper& Helper) : UBlueprintAsyncActionBase(Helper) {}
    
};
typedef NU8 tyArray__aU9aWOuC5AtjvRJWm9cUbeUg[28];
struct FWidgetNavigationData_ {
	tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	FName widgetToFocus{};
	tyArray__aU9aWOuC5AtjvRJWm9cUbeUg pad_1;
};
typedef NU8 tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw;
typedef TSubclassOf<UUserWidgetExtension_> TY__MF9aiABZZTdnJbCQRWxbIrg;
typedef NU8 tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA;
typedef TArray<UUserWidgetExtension_*> TY__scxiKf9aWv3hy9bytmcQJthg;
typedef NU8 tyEnum_EWidgetAnimationEvent__9aZSQO2S3MK3lhbZMiPssPA;
typedef NU8 tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA;
struct FFieldNotificationId_ {
	FName fieldName{};
};
struct FWidgetTransform_ {
	FVector2D translation{};
	FVector2D scale{};
	FVector2D shear{};
	NF32 angle;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct UNotifyFieldValueChanged_ : public UInterface {
  UNotifyFieldValueChanged_() = default;
  UNotifyFieldValueChanged_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UUserWidgetBlueprint_ : public UObject {
  UUserWidgetBlueprint_() = default;
  UUserWidgetBlueprint_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidgetBlueprintGeneratedClassExtension_ : public UObject {
  UWidgetBlueprintGeneratedClassExtension_() = default;
  UWidgetBlueprintGeneratedClassExtension_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UWidgetFieldNotificationExtension_ : public UUserWidgetExtension_ {
  UWidgetFieldNotificationExtension_() = default;
  UWidgetFieldNotificationExtension_(FVTableHelper& Helper) : UUserWidgetExtension_(Helper) {}
    
};
struct UMovieSceneWidgetMaterialSystem_ : public UObject {
  UMovieSceneWidgetMaterialSystem_() = default;
  UMovieSceneWidgetMaterialSystem_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UGameViewportSubsystem_ : public UEngineSubsystem {
  UGameViewportSubsystem_() = default;
  UGameViewportSubsystem_(FVTableHelper& Helper) : UEngineSubsystem(Helper) {}
    
};
struct UUserListEntry_ : public UInterface {
  UUserListEntry_() = default;
  UUserListEntry_(FVTableHelper& Helper) : UInterface(Helper) {}
    
};
struct UUserListEntryLibrary_ : public UBlueprintFunctionLibrary {
  UUserListEntryLibrary_() = default;
  UUserListEntryLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UUserObjectListEntry_ : public UUserListEntry_ {
  UUserObjectListEntry_() = default;
  UUserObjectListEntry_(FVTableHelper& Helper) : UUserListEntry_(Helper) {}
    
};
struct UUserObjectListEntryLibrary_ : public UBlueprintFunctionLibrary {
  UUserObjectListEntryLibrary_() = default;
  UUserObjectListEntryLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UCanvasPanel_ : public UPanelWidget_ {
  UCanvasPanel_() = default;
  UCanvasPanel_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UHorizontalBox_ : public UPanelWidget_ {
  UHorizontalBox_() = default;
  UHorizontalBox_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UOverlay_ : public UPanelWidget_ {
  UOverlay_() = default;
  UOverlay_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct UVerticalBox_ : public UPanelWidget_ {
  UVerticalBox_() = default;
  UVerticalBox_(FVTableHelper& Helper) : UPanelWidget_(Helper) {}
    
};
struct USlateBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  USlateBlueprintLibrary_() = default;
  USlateBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UWidgetBlueprintLibrary_ : public UBlueprintFunctionLibrary {
  UWidgetBlueprintLibrary_() = default;
  UWidgetBlueprintLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct UWidgetLayoutLibrary_ : public UBlueprintFunctionLibrary {
  UWidgetLayoutLibrary_() = default;
  UWidgetLayoutLibrary_(FVTableHelper& Helper) : UBlueprintFunctionLibrary(Helper) {}
    
};
struct FPaintContext_ {
	tyArray__imubzojaOiPVfv1g8EarTA pad_0;
};
typedef TScriptInterface<UUserListEntry_>  TY__M4mwXcspPRSAdUWKKmEmmQ;
typedef TScriptInterface<UUserObjectListEntry_>  TY__GhlSt2m1FF0wdkWz1n7qNQ;
typedef NU8 tyEnum_EColorVisionDeficiency__DU1qP5iJ6QOZvOs9aZQ1UTQ;
typedef TSubclassOf<UDragDropOperation_> TY__zPh84RcCsFVoqOO9cBQteOA;
struct UAbilityAsync_WaitAttributeChanged_ : public UAbilityAsync_ {
  UAbilityAsync_WaitAttributeChanged_() = default;
  UAbilityAsync_WaitAttributeChanged_(FVTableHelper& Helper) : UAbilityAsync_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayEffectApplied_ : public UAbilityAsync_ {
  UAbilityAsync_WaitGameplayEffectApplied_() = default;
  UAbilityAsync_WaitGameplayEffectApplied_(FVTableHelper& Helper) : UAbilityAsync_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayEvent_ : public UAbilityAsync_ {
  UAbilityAsync_WaitGameplayEvent_() = default;
  UAbilityAsync_WaitGameplayEvent_(FVTableHelper& Helper) : UAbilityAsync_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayTagAdded_ : public UAbilityAsync_WaitGameplayTag_ {
  UAbilityAsync_WaitGameplayTagAdded_() = default;
  UAbilityAsync_WaitGameplayTagAdded_(FVTableHelper& Helper) : UAbilityAsync_WaitGameplayTag_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayTagRemoved_ : public UAbilityAsync_WaitGameplayTag_ {
  UAbilityAsync_WaitGameplayTagRemoved_() = default;
  UAbilityAsync_WaitGameplayTagRemoved_(FVTableHelper& Helper) : UAbilityAsync_WaitGameplayTag_(Helper) {}
    
};
struct UAbilityAsync_WaitGameplayTagQuery_ : public UAbilityAsync_ {
  UAbilityAsync_WaitGameplayTagQuery_() = default;
  UAbilityAsync_WaitGameplayTagQuery_(FVTableHelper& Helper) : UAbilityAsync_(Helper) {}
    
};
struct AGameplayAbilityTargetActor_GroundTrace_ : public AGameplayAbilityTargetActor_Trace_ {
  AGameplayAbilityTargetActor_GroundTrace_() = default;
  AGameplayAbilityTargetActor_GroundTrace_(FVTableHelper& Helper) : AGameplayAbilityTargetActor_Trace_(Helper) {}
    
};
struct AGameplayAbilityTargetActor_ActorPlacement_ : public AGameplayAbilityTargetActor_GroundTrace_ {
  AGameplayAbilityTargetActor_ActorPlacement_() = default;
  AGameplayAbilityTargetActor_ActorPlacement_(FVTableHelper& Helper) : AGameplayAbilityTargetActor_GroundTrace_(Helper) {}
    
};
struct AGameplayAbilityTargetActor_Radius_ : public AGameplayAbilityTargetActor_ {
  AGameplayAbilityTargetActor_Radius_() = default;
  AGameplayAbilityTargetActor_Radius_(FVTableHelper& Helper) : AGameplayAbilityTargetActor_(Helper) {}
    
};
struct AGameplayAbilityWorldReticle_ : public AActor {
  AGameplayAbilityWorldReticle_() = default;
  AGameplayAbilityWorldReticle_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct AGameplayAbilityWorldReticle_ActorVisualization_ : public AGameplayAbilityWorldReticle_ {
  AGameplayAbilityWorldReticle_ActorVisualization_() = default;
  AGameplayAbilityWorldReticle_ActorVisualization_(FVTableHelper& Helper) : AGameplayAbilityWorldReticle_(Helper) {}
    
};
struct UGameplayAbility_Montage_ : public UGameplayAbility {
  UGameplayAbility_Montage_() = default;
  UGameplayAbility_Montage_(FVTableHelper& Helper) : UGameplayAbility(Helper) {}
    
};
struct UAbilityTask_ : public UObject {
  UAbilityTask_() = default;
  UAbilityTask_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotion_Base_ : public UAbilityTask_ {
  UAbilityTask_ApplyRootMotion_Base_() = default;
  UAbilityTask_ApplyRootMotion_Base_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotionConstantForce_ : public UAbilityTask_ApplyRootMotion_Base_ {
  UAbilityTask_ApplyRootMotionConstantForce_() = default;
  UAbilityTask_ApplyRootMotionConstantForce_(FVTableHelper& Helper) : UAbilityTask_ApplyRootMotion_Base_(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotionJumpForce_ : public UAbilityTask_ApplyRootMotion_Base_ {
  UAbilityTask_ApplyRootMotionJumpForce_() = default;
  UAbilityTask_ApplyRootMotionJumpForce_(FVTableHelper& Helper) : UAbilityTask_ApplyRootMotion_Base_(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotionMoveToActorForce_ : public UAbilityTask_ApplyRootMotion_Base_ {
  UAbilityTask_ApplyRootMotionMoveToActorForce_() = default;
  UAbilityTask_ApplyRootMotionMoveToActorForce_(FVTableHelper& Helper) : UAbilityTask_ApplyRootMotion_Base_(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotionMoveToForce_ : public UAbilityTask_ApplyRootMotion_Base_ {
  UAbilityTask_ApplyRootMotionMoveToForce_() = default;
  UAbilityTask_ApplyRootMotionMoveToForce_(FVTableHelper& Helper) : UAbilityTask_ApplyRootMotion_Base_(Helper) {}
    
};
struct UAbilityTask_ApplyRootMotionRadialForce_ : public UAbilityTask_ApplyRootMotion_Base_ {
  UAbilityTask_ApplyRootMotionRadialForce_() = default;
  UAbilityTask_ApplyRootMotionRadialForce_(FVTableHelper& Helper) : UAbilityTask_ApplyRootMotion_Base_(Helper) {}
    
};
struct UAbilityTask_MoveToLocation_ : public UAbilityTask_ {
  UAbilityTask_MoveToLocation_() = default;
  UAbilityTask_MoveToLocation_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_NetworkSyncPoint_ : public UAbilityTask_ {
  UAbilityTask_NetworkSyncPoint_() = default;
  UAbilityTask_NetworkSyncPoint_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_PlayMontageAndWait_ : public UAbilityTask_ {
  UAbilityTask_PlayMontageAndWait_() = default;
  UAbilityTask_PlayMontageAndWait_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_Repeat_ : public UAbilityTask_ {
  UAbilityTask_Repeat_() = default;
  UAbilityTask_Repeat_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_SpawnActor_ : public UAbilityTask_ {
  UAbilityTask_SpawnActor_() = default;
  UAbilityTask_SpawnActor_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_StartAbilityState_ : public UAbilityTask_ {
  UAbilityTask_StartAbilityState_() = default;
  UAbilityTask_StartAbilityState_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_VisualizeTargeting_ : public UAbilityTask_ {
  UAbilityTask_VisualizeTargeting_() = default;
  UAbilityTask_VisualizeTargeting_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitAbilityActivate_ : public UAbilityTask_ {
  UAbilityTask_WaitAbilityActivate_() = default;
  UAbilityTask_WaitAbilityActivate_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitAbilityCommit_ : public UAbilityTask_ {
  UAbilityTask_WaitAbilityCommit_() = default;
  UAbilityTask_WaitAbilityCommit_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitAttributeChange_ : public UAbilityTask_ {
  UAbilityTask_WaitAttributeChange_() = default;
  UAbilityTask_WaitAttributeChange_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitAttributeChangeRatioThreshold_ : public UAbilityTask_ {
  UAbilityTask_WaitAttributeChangeRatioThreshold_() = default;
  UAbilityTask_WaitAttributeChangeRatioThreshold_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitAttributeChangeThreshold_ : public UAbilityTask_ {
  UAbilityTask_WaitAttributeChangeThreshold_() = default;
  UAbilityTask_WaitAttributeChangeThreshold_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitCancel_ : public UAbilityTask_ {
  UAbilityTask_WaitCancel_() = default;
  UAbilityTask_WaitCancel_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitConfirm_ : public UAbilityTask_ {
  UAbilityTask_WaitConfirm_() = default;
  UAbilityTask_WaitConfirm_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitConfirmCancel_ : public UAbilityTask_ {
  UAbilityTask_WaitConfirmCancel_() = default;
  UAbilityTask_WaitConfirmCancel_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitDelay_ : public UAbilityTask_ {
  UAbilityTask_WaitDelay_() = default;
  UAbilityTask_WaitDelay_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectApplied_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayEffectApplied_() = default;
  UAbilityTask_WaitGameplayEffectApplied_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectApplied_Self_ : public UAbilityTask_WaitGameplayEffectApplied_ {
  UAbilityTask_WaitGameplayEffectApplied_Self_() = default;
  UAbilityTask_WaitGameplayEffectApplied_Self_(FVTableHelper& Helper) : UAbilityTask_WaitGameplayEffectApplied_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectApplied_Target_ : public UAbilityTask_WaitGameplayEffectApplied_ {
  UAbilityTask_WaitGameplayEffectApplied_Target_() = default;
  UAbilityTask_WaitGameplayEffectApplied_Target_(FVTableHelper& Helper) : UAbilityTask_WaitGameplayEffectApplied_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectBlockedImmunity_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayEffectBlockedImmunity_() = default;
  UAbilityTask_WaitGameplayEffectBlockedImmunity_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectRemoved_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayEffectRemoved_() = default;
  UAbilityTask_WaitGameplayEffectRemoved_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEffectStackChange_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayEffectStackChange_() = default;
  UAbilityTask_WaitGameplayEffectStackChange_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayEvent_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayEvent_() = default;
  UAbilityTask_WaitGameplayEvent_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayTag_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayTag_() = default;
  UAbilityTask_WaitGameplayTag_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayTagAdded_ : public UAbilityTask_WaitGameplayTag_ {
  UAbilityTask_WaitGameplayTagAdded_() = default;
  UAbilityTask_WaitGameplayTagAdded_(FVTableHelper& Helper) : UAbilityTask_WaitGameplayTag_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayTagRemoved_ : public UAbilityTask_WaitGameplayTag_ {
  UAbilityTask_WaitGameplayTagRemoved_() = default;
  UAbilityTask_WaitGameplayTagRemoved_(FVTableHelper& Helper) : UAbilityTask_WaitGameplayTag_(Helper) {}
    
};
struct UAbilityTask_WaitGameplayTagQuery_ : public UAbilityTask_ {
  UAbilityTask_WaitGameplayTagQuery_() = default;
  UAbilityTask_WaitGameplayTagQuery_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitInputPress_ : public UAbilityTask_ {
  UAbilityTask_WaitInputPress_() = default;
  UAbilityTask_WaitInputPress_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitInputRelease_ : public UAbilityTask_ {
  UAbilityTask_WaitInputRelease_() = default;
  UAbilityTask_WaitInputRelease_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitMovementModeChange_ : public UAbilityTask_ {
  UAbilityTask_WaitMovementModeChange_() = default;
  UAbilityTask_WaitMovementModeChange_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitOverlap_ : public UAbilityTask_ {
  UAbilityTask_WaitOverlap_() = default;
  UAbilityTask_WaitOverlap_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitTargetData_ : public UAbilityTask_ {
  UAbilityTask_WaitTargetData_() = default;
  UAbilityTask_WaitTargetData_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct UAbilityTask_WaitVelocityChange_ : public UAbilityTask_ {
  UAbilityTask_WaitVelocityChange_() = default;
  UAbilityTask_WaitVelocityChange_(FVTableHelper& Helper) : UAbilityTask_(Helper) {}
    
};
struct FWorldReticleParameters_ {
	FVector aOEScale{};
};
typedef NU8 tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g;
typedef NU8 tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg;
typedef NU8 tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A;
typedef NU8 tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w;
typedef TArray<FAbilityTriggerData> TY__otj1SVV0qRIXABYwhGjz8Q;
typedef TSubclassOf<AGameplayAbilityWorldReticle_> TY__BbC1f9cl7UvV7ShysOkJw9bQ;
typedef TArray<UGameplayEffect*> TY__HS3GOnZWYOzZ9c6h38vBKFQ;
typedef TWeakObjectPtr<UAbilitySystemComponent>  TY__fligw9bQyC3qCU9aQRZoRq8Q;
typedef NU8 tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ;
typedef NU8 tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow;
typedef NU8 tyEnum_EAbilityTaskNetSyncType__EgeSxV6iySO44lsR1IuGDQ;
typedef TSubclassOf<AGameplayAbilityTargetActor_> TY__BI8SmagfluPMTT9a6rFT3XQ;
typedef NU8 tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w;
typedef NU8 tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A;
struct UMovieSceneGameplayCueTriggerSection_ : public UObject {
  UMovieSceneGameplayCueTriggerSection_() = default;
  UMovieSceneGameplayCueTriggerSection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMovieSceneGameplayCueSection_ : public UObject {
  UMovieSceneGameplayCueSection_() = default;
  UMovieSceneGameplayCueSection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UMovieSceneGameplayCueTrack_ : public UObject {
  UMovieSceneGameplayCueTrack_() = default;
  UMovieSceneGameplayCueTrack_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FMovieSceneGameplayCueKey_ {
	FGameplayCueTag cue{};
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	FVector location{};
	FVector Normal{};
	FName attachSocketName{};
	NF32 normalizedMagnitude;
	tyArray__sH9avbK619blGCGFZhgSDaWg pad_1;
	UPhysicalMaterial* physicalMaterial;
	NI32 gameplayEffectLevel;
	NI32 abilityLevel;
	NIM_BOOL bAttachToBinding;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_2;
};
typedef TArray<FFrameNumber> TY__9bxQUE9aXtSTZGmHBx1ajVhA;
typedef TArray<FMovieSceneGameplayCueKey_> TY__5id0xYuFt50kJoCqeu1v0Q;
struct FMovieSceneGameplayCueChannel_ {
	tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
	TY__9bxQUE9aXtSTZGmHBx1ajVhA keyTimes{};
	TY__5id0xYuFt50kJoCqeu1v0Q keyValues{};
	tyArray__6qSULJVkHXjL25e22OI5AQ pad_1;
};
typedef TArray<FGameplayTag> TY__ZMJgErclqmQcDHkV4SsgZA;
typedef TArray<FVector_NetQuantize> TY__LKX7LCvA3lHIPHJ3AWa9c6w;
struct FMinimalGameplayCueReplicationProxyForNetSerializer_ {
	TY__ZMJgErclqmQcDHkV4SsgZA tags{};
	TY__LKX7LCvA3lHIPHJ3AWa9c6w locations{};
};
struct FMinimalReplicationTagCountMapForNetSerializer_ {
	TY__ZMJgErclqmQcDHkV4SsgZA tags{};
};
struct APartitionActor_ : public AActor {
  APartitionActor_() = default;
  APartitionActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UAISystemBase_ : public UObject {
  UAISystemBase_() = default;
  UAISystemBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNavCollisionBase_ : public UObject {
  UNavCollisionBase_() = default;
  UNavCollisionBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UNavigationDataChunk_ : public UObject {
  UNavigationDataChunk_() = default;
  UNavigationDataChunk_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAvoidanceManager_ : public UObject {
  UAvoidanceManager_() = default;
  UAvoidanceManager_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AAtmosphericFog_ : public AInfo {
  AAtmosphericFog_() = default;
  AAtmosphericFog_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct ACameraActor_ : public AActor {
  ACameraActor_() = default;
  ACameraActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UCameraModifier_ : public UObject {
  UCameraModifier_() = default;
  UCameraModifier_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FCameraShakeStartParams_ {
	NIM_BOOL bIsRestarting;
};
struct FCameraShakeUpdateParams_ {
	NF32 deltaTime;
	NF32 shakeScale;
	NF32 dynamicScale;
	NF32 blendingWeight;
	FMinimalViewInfo pOV{};
};
struct FCameraShakeScrubParams_ {
	NF32 absoluteTime;
	NF32 shakeScale;
	NF32 dynamicScale;
	NF32 blendingWeight;
	FMinimalViewInfo pOV{};
};
struct FCameraShakeStopParams_ {
	NIM_BOOL bImmediately;
};
struct FCameraShakeDuration_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCameraShakeInfo_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw;
typedef TSubclassOf<UCameraModifier_> TY__GYGn274MFCl9cAJqupIxNcA;
typedef TArray<TY__GYGn274MFCl9cAJqupIxNcA> TY__9bGGmzTmY6puojW0P5hirIA;
typedef NU8 tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w;
struct UCommandlet_ : public UObject {
  UCommandlet_() = default;
  UCommandlet_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UBoxReflectionCaptureComponent_ : public UReflectionCaptureComponent_ {
  UBoxReflectionCaptureComponent_() = default;
  UBoxReflectionCaptureComponent_(FVTableHelper& Helper) : UReflectionCaptureComponent_(Helper) {}
    
};
struct ULightmassPortalComponent_ : public USceneComponent {
  ULightmassPortalComponent_() = default;
  ULightmassPortalComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UPlaneReflectionCaptureComponent_ : public UReflectionCaptureComponent_ {
  UPlaneReflectionCaptureComponent_() = default;
  UPlaneReflectionCaptureComponent_(FVTableHelper& Helper) : UReflectionCaptureComponent_(Helper) {}
    
};
struct USphereReflectionCaptureComponent_ : public UReflectionCaptureComponent_ {
  USphereReflectionCaptureComponent_() = default;
  USphereReflectionCaptureComponent_(FVTableHelper& Helper) : UReflectionCaptureComponent_(Helper) {}
    
};
struct UStereoLayerShapeCylinder_ : public UStereoLayerShape_ {
  UStereoLayerShapeCylinder_() = default;
  UStereoLayerShapeCylinder_(FVTableHelper& Helper) : UStereoLayerShape_(Helper) {}
    
};
struct UStereoLayerShapeEquirect_ : public UStereoLayerShape_ {
  UStereoLayerShapeEquirect_() = default;
  UStereoLayerShapeEquirect_(FVTableHelper& Helper) : UStereoLayerShape_(Helper) {}
    
};
struct UStereoLayerComponent_ : public USceneComponent {
  UStereoLayerComponent_() = default;
  UStereoLayerComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UTimelineComponent_ : public UActorComponent {
  UTimelineComponent_() = default;
  UTimelineComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UVectorFieldComponent_ : public UPrimitiveComponent {
  UVectorFieldComponent_() = default;
  UVectorFieldComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UWindDirectionalSourceComponent_ : public USceneComponent {
  UWindDirectionalSourceComponent_() = default;
  UWindDirectionalSourceComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UApplicationLifecycleComponent_ : public UActorComponent {
  UApplicationLifecycleComponent_() = default;
  UApplicationLifecycleComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UBoundsCopyComponent_ : public UActorComponent {
  UBoundsCopyComponent_() = default;
  UBoundsCopyComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UBrushComponent_ : public UPrimitiveComponent {
  UBrushComponent_() = default;
  UBrushComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UDirectionalLightComponent_ : public ULightComponent {
  UDirectionalLightComponent_() = default;
  UDirectionalLightComponent_(FVTableHelper& Helper) : ULightComponent(Helper) {}
    
};
struct UDrawFrustumComponent_ : public UPrimitiveComponent {
  UDrawFrustumComponent_() = default;
  UDrawFrustumComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UInterpToMovementComponent_ : public UMovementComponent_ {
  UInterpToMovementComponent_() = default;
  UInterpToMovementComponent_(FVTableHelper& Helper) : UMovementComponent_(Helper) {}
    
};
struct ULODSyncComponent_ : public UActorComponent {
  ULODSyncComponent_() = default;
  ULODSyncComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UMaterialBillboardComponent_ : public UPrimitiveComponent {
  UMaterialBillboardComponent_() = default;
  UMaterialBillboardComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UModelComponent_ : public UPrimitiveComponent {
  UModelComponent_() = default;
  UModelComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct UPawnNoiseEmitterComponent_ : public UActorComponent {
  UPawnNoiseEmitterComponent_() = default;
  UPawnNoiseEmitterComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UPlatformEventsComponent_ : public UActorComponent {
  UPlatformEventsComponent_() = default;
  UPlatformEventsComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UPostProcessComponent_ : public USceneComponent {
  UPostProcessComponent_() = default;
  UPostProcessComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct ASkyAtmosphere_ : public AInfo {
  ASkyAtmosphere_() = default;
  ASkyAtmosphere_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct USplineComponent_ : public UPrimitiveComponent {
  USplineComponent_() = default;
  USplineComponent_(FVTableHelper& Helper) : UPrimitiveComponent(Helper) {}
    
};
struct USplineMeshComponent_ : public UStaticMeshComponent {
  USplineMeshComponent_() = default;
  USplineMeshComponent_(FVTableHelper& Helper) : UStaticMeshComponent(Helper) {}
    
};
struct UVolumetricCloudComponent_ : public USceneComponent {
  UVolumetricCloudComponent_() = default;
  UVolumetricCloudComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct AVolumetricCloud_ : public AInfo {
  AVolumetricCloud_() = default;
  AVolumetricCloud_(FVTableHelper& Helper) : AInfo(Helper) {}
    
};
struct UWorldPartitionStreamingSourceComponent_ : public UActorComponent {
  UWorldPartitionStreamingSourceComponent_() = default;
  UWorldPartitionStreamingSourceComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
typedef NU8 tyArray__akPGgPQbqzZVe609aayYXqA[15];
struct FInterpControlPoint_ {
	FVector positionControlPoint{};
	NIM_BOOL bPositionIsRelative;
	tyArray__akPGgPQbqzZVe609aayYXqA pad_0;
};
struct FExponentialHeightFogData_ {
	NF32 fogDensity;
	NF32 fogHeightFalloff;
	NF32 fogHeightOffset;
};
struct FEquirectProps_ {
	FBox2D leftUVRect{};
	FBox2D rightUVRect{};
	FVector2D leftScale{};
	FVector2D rightScale{};
	FVector2D leftBias{};
	FVector2D rightBias{};
};
struct FLODMappingData_ {
	TY__TxfK2fhRJXNHttPFRcL6fA mapping{};
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_ESyncOption__Wq9aDRl7DEltrSCAaJ7E7og;
struct FComponentSync_ {
	FName name{};
	tyEnum_ESyncOption__Wq9aDRl7DEltrSCAaJ7E7og syncOption;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
};
struct FMaterialSpriteElement_ {
	UMaterialInterface* material;
	UCurveFloat* distanceToOpacityCurve;
	NIM_BOOL bSizeIsInScreenSpace;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 baseSizeX;
	NF32 baseSizeY;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	UCurveFloat* distanceToSizeCurve;
};
struct FEngineShowFlagsSetting_ {
	FString showFlagName{};
	NIM_BOOL enabled;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
};
struct FTentDistribution_ {
	NF32 tipAltitude;
	NF32 tipValue;
	NF32 width;
};
typedef NU8 tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw;
struct FSplinePoint_ {
	NF32 inputKey;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	FVector position{};
	FVector arriveTangent{};
	FVector leaveTangent{};
	FRotator rotation{};
	FVector scale{};
	tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw type;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef NU8 tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g;
typedef NU8 tyEnum_ERelativeTransformSpace__SP35ggqlhgdAFoiyxcw8gg;
typedef TArray<USceneComponent*> TY__7Q1qw9bMtL8Ptbe5C3movyA;
typedef NU8 tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ;
typedef NU8 tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ;
typedef NU8 tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw;
typedef NU8 tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ;
typedef NU8 tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw;
typedef NU8 tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA;
typedef NU8 tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A;
typedef NU8 tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ;
typedef NU8 tyEnum_EDOFMode__Ae5jNwUvq1zlHN6TSX1GFA;
typedef NU8 tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA;
typedef NU8 tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q;
typedef NU8 tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg;
typedef TArray<UMaterialInterface*> TY__UxQQNE4PCeF9btDY9avFuEmA;
typedef TWeakObjectPtr<USkinnedMeshComponent>  TY__TroUwqr83BUH9a7zjBn89bmg;
typedef NU8 tyEnum_ESkinCacheUsage__V24C524t9ch9arnb2IiMsokA;
typedef TArray<tyEnum_ESkinCacheUsage__V24C524t9ch9arnb2IiMsokA> TY__wYMJCrtNG2j9b9bmJG11m7FA;
typedef NU8 tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog;
typedef TArray<FSkelMeshSkinWeightInfo> TY__PF9cKY57TwRad2X4MD2NIXg;
typedef NU8 tyEnum_EPhysBodyOp__ZRipZLaIbTXziX2enGnveA;
typedef NU8 tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg;
typedef NU8 tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ;
typedef NU8 tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA;
typedef NU8 tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg;
typedef TArray<FConstraintInstanceAccessor_> TY__JYFEBjy3RcdpO9bmahvDt9aw;
typedef NU8 tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg;
typedef NU8 tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg;
typedef NU8 tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA;
typedef NU8 tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw;
typedef TArray<FEngineShowFlagsSetting_> TY__AJALGMHKFGHcjpT3h8NRJw;
typedef NU8 tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg;
typedef NU8 tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A;
typedef NU8 tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg;
typedef NU8 tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA;
typedef NU8 tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg;
typedef NU8 tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw;
typedef NU8 tyEnum_ETimelineLengthMode__UwOSsi5M2vIG2zFofBn0NQ;
typedef NU8 tyEnum_EWindSourceType__tgASMiEzikMy2tfW9aLcEXw;
typedef NU8 tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw;
typedef TSet<USoundConcurrency_*>  TY__NR5I3JrURnzfmlYGr3FAVw;
typedef NU8 tyEnum_EAudioComponentPlayState__LNX4VedOxTvvUBfe9bW2uOQ;
typedef TArray<FSoundWaveSpectralDataPerSound> TY__c2I8cKDyC9czaUeSu84CUcg;
typedef TArray<FSoundWaveSpectralData> TY__7eS59amp9czNtrtz8r0Xjpgw;
typedef TArray<FSoundWaveEnvelopeDataPerSound> TY__VJ3WomG9bWfW9bg7f8TWiOgQ;
typedef NU8 tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q;
typedef NU8 tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw;
typedef TArray<FInterpControlPoint_> TY__LjHVX64yOnazUBJDmecIJA;
typedef NU8 tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ;
typedef TArray<FComponentSync_> TY__gZurzBmXXyKQxXQIP32pOw;
typedef TMap<FName COMMA FLODMappingData_>  TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ;
typedef TArray<FMaterialSpriteElement_> TY__Fu7t4gHlDqCFA1dFtsYkog;
typedef NU8 tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw;
typedef TArray<NF> TY__cXi18VefLjgCunTrTLkfGw;
typedef TArray<FSplinePoint_> TY__mBZUVg11b9ab5AFrh8yZkWw;
typedef NU8 tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA;
typedef NU8 tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow;
typedef NU8 tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA;
typedef TArray<UHLODLayer_*> TY__hE3Vl7BBAFmzClPscSpXag;
struct UCurveBase_ : public UObject {
  UCurveBase_() = default;
  UCurveBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UCurveLinearColorAtlas_ : public UTexture2D {
  UCurveLinearColorAtlas_() = default;
  UCurveLinearColorAtlas_(FVTableHelper& Helper) : UTexture2D(Helper) {}
    
};
typedef NU8 tyArray__qnms0DSyctxftPk8tqs9bpA[392];
struct FRuntimeVectorCurve_ {
	tyArray__qnms0DSyctxftPk8tqs9bpA pad_0;
};
struct FDataDrivenConsoleVariable_ {
	tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
};
struct UDistributionFloatParameterBase_ : public UObject {
  UDistributionFloatParameterBase_() = default;
  UDistributionFloatParameterBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDistributionVectorParameterBase_ : public UDistributionVector {
  UDistributionVectorParameterBase_() = default;
  UDistributionVectorParameterBase_(FVTableHelper& Helper) : UDistributionVector(Helper) {}
    
};
struct UEdGraphNode_Documentation_ : public UObject {
  UEdGraphNode_Documentation_() = default;
  UEdGraphNode_Documentation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAssetImportData_ : public UObject {
  UAssetImportData_() = default;
  UAssetImportData_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FTypedElementPasteOptions_ {
	tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
	NIM_BOOL bPasteAtLocation;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
	FVector pasteLocation{};
	tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_2;
};
struct FTypedElementDeletionOptions_ {
	NIM_BOOL bVerifyDeletionCanHappen;
	NIM_BOOL bWarnAboutReferences;
	NIM_BOOL bWarnAboutSoftReferences;
};
struct UExporter_ : public UObject {
  UExporter_() = default;
  UExporter_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef TArray<UAssetExportTask_*> TY__T8LsyrGmVj5MTxJHlTQQXA;
struct UHapticFeedbackEffect_Buffer_ : public UHapticFeedbackEffect_Base_ {
  UHapticFeedbackEffect_Buffer_() = default;
  UHapticFeedbackEffect_Buffer_(FVTableHelper& Helper) : UHapticFeedbackEffect_Base_(Helper) {}
    
};
struct UHapticFeedbackEffect_Curve_ : public UHapticFeedbackEffect_Base_ {
  UHapticFeedbackEffect_Curve_() = default;
  UHapticFeedbackEffect_Curve_(FVTableHelper& Helper) : UHapticFeedbackEffect_Base_(Helper) {}
    
};
struct UHapticFeedbackEffect_SoundWave_ : public UHapticFeedbackEffect_Base_ {
  UHapticFeedbackEffect_SoundWave_() = default;
  UHapticFeedbackEffect_SoundWave_(FVTableHelper& Helper) : UHapticFeedbackEffect_Base_(Helper) {}
    
};
struct UInstancedPlacemenClientSettings_ : public UObject {
  UInstancedPlacemenClientSettings_() = default;
  UInstancedPlacemenClientSettings_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AISMPartitionActor_ : public AActor {
  AISMPartitionActor_() = default;
  AISMPartitionActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UPlatformGameInstance_ : public UGameInstance {
  UPlatformGameInstance_() = default;
  UPlatformGameInstance_(FVTableHelper& Helper) : UGameInstance(Helper) {}
    
};
struct ALightmassPortal_ : public AActor {
  ALightmassPortal_() = default;
  ALightmassPortal_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct APrecomputedVisibilityOverrideVolume_ : public AVolume {
  APrecomputedVisibilityOverrideVolume_() = default;
  APrecomputedVisibilityOverrideVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct ULightmappedSurfaceCollection_ : public UObject {
  ULightmappedSurfaceCollection_() = default;
  ULightmappedSurfaceCollection_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ULightmassPrimitiveSettingsObject_ : public UObject {
  ULightmassPrimitiveSettingsObject_() = default;
  ULightmassPrimitiveSettingsObject_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AVolumetricLightmapDensityVolume_ : public AVolume {
  AVolumetricLightmapDensityVolume_() = default;
  AVolumetricLightmapDensityVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct UMaterialInstanceConstant_ : public UMaterialInstance {
  UMaterialInstanceConstant_() = default;
  UMaterialInstanceConstant_(FVTableHelper& Helper) : UMaterialInstance(Helper) {}
    
};
struct UMaterialExpressionAbs_ : public UMaterialExpression {
  UMaterialExpressionAbs_() = default;
  UMaterialExpressionAbs_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionAbsorptionMediumMaterialOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionAbsorptionMediumMaterialOutput_() = default;
  UMaterialExpressionAbsorptionMediumMaterialOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionAdd_ : public UMaterialExpression {
  UMaterialExpressionAdd_() = default;
  UMaterialExpressionAdd_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionAntialiasedTextureMask_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionAntialiasedTextureMask_() = default;
  UMaterialExpressionAntialiasedTextureMask_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionAppendVector_ : public UMaterialExpression {
  UMaterialExpressionAppendVector_() = default;
  UMaterialExpressionAppendVector_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionArccosine_ : public UMaterialExpression {
  UMaterialExpressionArccosine_() = default;
  UMaterialExpressionArccosine_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionArcsine_ : public UMaterialExpression {
  UMaterialExpressionArcsine_() = default;
  UMaterialExpressionArcsine_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionArctangent_ : public UMaterialExpression {
  UMaterialExpressionArctangent_() = default;
  UMaterialExpressionArctangent_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionArctangent2_ : public UMaterialExpression {
  UMaterialExpressionArctangent2_() = default;
  UMaterialExpressionArctangent2_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionBlackBody_ : public UMaterialExpression {
  UMaterialExpressionBlackBody_() = default;
  UMaterialExpressionBlackBody_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionBlendMaterialAttributes_ : public UMaterialExpression {
  UMaterialExpressionBlendMaterialAttributes_() = default;
  UMaterialExpressionBlendMaterialAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionBreakMaterialAttributes_ : public UMaterialExpression {
  UMaterialExpressionBreakMaterialAttributes_() = default;
  UMaterialExpressionBreakMaterialAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionBumpOffset_ : public UMaterialExpression {
  UMaterialExpressionBumpOffset_() = default;
  UMaterialExpressionBumpOffset_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionCeil_ : public UMaterialExpression {
  UMaterialExpressionCeil_() = default;
  UMaterialExpressionCeil_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVectorParameter_ : public UMaterialExpressionParameter {
  UMaterialExpressionVectorParameter_() = default;
  UMaterialExpressionVectorParameter_(FVTableHelper& Helper) : UMaterialExpressionParameter(Helper) {}
    
};
struct UMaterialExpressionChannelMaskParameter_ : public UMaterialExpressionVectorParameter_ {
  UMaterialExpressionChannelMaskParameter_() = default;
  UMaterialExpressionChannelMaskParameter_(FVTableHelper& Helper) : UMaterialExpressionVectorParameter_(Helper) {}
    
};
struct UMaterialExpressionClamp_ : public UMaterialExpression {
  UMaterialExpressionClamp_() = default;
  UMaterialExpressionClamp_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionClearCoatNormalCustomOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionClearCoatNormalCustomOutput_() = default;
  UMaterialExpressionClearCoatNormalCustomOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionCollectionParameter_ : public UMaterialExpression {
  UMaterialExpressionCollectionParameter_() = default;
  UMaterialExpressionCollectionParameter_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionComment_ : public UMaterialExpression {
  UMaterialExpressionComment_() = default;
  UMaterialExpressionComment_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionComponentMask_ : public UMaterialExpression {
  UMaterialExpressionComponentMask_() = default;
  UMaterialExpressionComponentMask_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionComposite_ : public UMaterialExpression {
  UMaterialExpressionComposite_() = default;
  UMaterialExpressionComposite_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstant_ : public UMaterialExpression {
  UMaterialExpressionConstant_() = default;
  UMaterialExpressionConstant_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstant2Vector_ : public UMaterialExpression {
  UMaterialExpressionConstant2Vector_() = default;
  UMaterialExpressionConstant2Vector_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstant3Vector_ : public UMaterialExpression {
  UMaterialExpressionConstant3Vector_() = default;
  UMaterialExpressionConstant3Vector_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstant4Vector_ : public UMaterialExpression {
  UMaterialExpressionConstant4Vector_() = default;
  UMaterialExpressionConstant4Vector_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstantBiasScale_ : public UMaterialExpression {
  UMaterialExpressionConstantBiasScale_() = default;
  UMaterialExpressionConstantBiasScale_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionCosine_ : public UMaterialExpression {
  UMaterialExpressionCosine_() = default;
  UMaterialExpressionCosine_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionCrossProduct_ : public UMaterialExpression {
  UMaterialExpressionCrossProduct_() = default;
  UMaterialExpressionCrossProduct_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionScalarParameter_ : public UMaterialExpressionParameter {
  UMaterialExpressionScalarParameter_() = default;
  UMaterialExpressionScalarParameter_(FVTableHelper& Helper) : UMaterialExpressionParameter(Helper) {}
    
};
struct UMaterialExpressionCurveAtlasRowParameter_ : public UMaterialExpressionScalarParameter_ {
  UMaterialExpressionCurveAtlasRowParameter_() = default;
  UMaterialExpressionCurveAtlasRowParameter_(FVTableHelper& Helper) : UMaterialExpressionScalarParameter_(Helper) {}
    
};
struct UMaterialExpressionCustom_ : public UMaterialExpression {
  UMaterialExpressionCustom_() = default;
  UMaterialExpressionCustom_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_ : public UMaterialExpression {
  UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_() = default;
  UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDDX_ : public UMaterialExpression {
  UMaterialExpressionDDX_() = default;
  UMaterialExpressionDDX_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDDY_ : public UMaterialExpression {
  UMaterialExpressionDDY_() = default;
  UMaterialExpressionDDY_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDesaturation_ : public UMaterialExpression {
  UMaterialExpressionDesaturation_() = default;
  UMaterialExpressionDesaturation_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDistance_ : public UMaterialExpression {
  UMaterialExpressionDistance_() = default;
  UMaterialExpressionDistance_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDivide_ : public UMaterialExpression {
  UMaterialExpressionDivide_() = default;
  UMaterialExpressionDivide_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDotProduct_ : public UMaterialExpression {
  UMaterialExpressionDotProduct_() = default;
  UMaterialExpressionDotProduct_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionDoubleVectorParameter_ : public UMaterialExpressionParameter {
  UMaterialExpressionDoubleVectorParameter_() = default;
  UMaterialExpressionDoubleVectorParameter_(FVTableHelper& Helper) : UMaterialExpressionParameter(Helper) {}
    
};
struct UMaterialExpressionDynamicParameter_ : public UMaterialExpression {
  UMaterialExpressionDynamicParameter_() = default;
  UMaterialExpressionDynamicParameter_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionExecBegin_ : public UMaterialExpression {
  UMaterialExpressionExecBegin_() = default;
  UMaterialExpressionExecBegin_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFeatureLevelSwitch_ : public UMaterialExpression {
  UMaterialExpressionFeatureLevelSwitch_() = default;
  UMaterialExpressionFeatureLevelSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFloor_ : public UMaterialExpression {
  UMaterialExpressionFloor_() = default;
  UMaterialExpressionFloor_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFmod_ : public UMaterialExpression {
  UMaterialExpressionFmod_() = default;
  UMaterialExpressionFmod_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFontSample_ : public UMaterialExpression {
  UMaterialExpressionFontSample_() = default;
  UMaterialExpressionFontSample_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionForLoop_ : public UMaterialExpression {
  UMaterialExpressionForLoop_() = default;
  UMaterialExpressionForLoop_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFrac_ : public UMaterialExpression {
  UMaterialExpressionFrac_() = default;
  UMaterialExpressionFrac_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFresnel_ : public UMaterialExpression {
  UMaterialExpressionFresnel_() = default;
  UMaterialExpressionFresnel_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionFunctionInput_ : public UMaterialExpression {
  UMaterialExpressionFunctionInput_() = default;
  UMaterialExpressionFunctionInput_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionConstantDouble_ : public UMaterialExpressionGenericConstant_ {
  UMaterialExpressionConstantDouble_() = default;
  UMaterialExpressionConstantDouble_(FVTableHelper& Helper) : UMaterialExpressionGenericConstant_(Helper) {}
    
};
struct UMaterialExpressionGetLocal_ : public UMaterialExpression {
  UMaterialExpressionGetLocal_() = default;
  UMaterialExpressionGetLocal_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionGetMaterialAttributes_ : public UMaterialExpression {
  UMaterialExpressionGetMaterialAttributes_() = default;
  UMaterialExpressionGetMaterialAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionHairAttributes_ : public UMaterialExpression {
  UMaterialExpressionHairAttributes_() = default;
  UMaterialExpressionHairAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionHairColor_ : public UMaterialExpression {
  UMaterialExpressionHairColor_() = default;
  UMaterialExpressionHairColor_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionIf_ : public UMaterialExpression {
  UMaterialExpressionIf_() = default;
  UMaterialExpressionIf_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionIfThenElse_ : public UMaterialExpression {
  UMaterialExpressionIfThenElse_() = default;
  UMaterialExpressionIfThenElse_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionInverseLinearInterpolate_ : public UMaterialExpression {
  UMaterialExpressionInverseLinearInterpolate_() = default;
  UMaterialExpressionInverseLinearInterpolate_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionLinearInterpolate_ : public UMaterialExpression {
  UMaterialExpressionLinearInterpolate_() = default;
  UMaterialExpressionLinearInterpolate_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionLogarithm10_ : public UMaterialExpression {
  UMaterialExpressionLogarithm10_() = default;
  UMaterialExpressionLogarithm10_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionLogarithm2_ : public UMaterialExpression {
  UMaterialExpressionLogarithm2_() = default;
  UMaterialExpressionLogarithm2_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionMakeMaterialAttributes_ : public UMaterialExpression {
  UMaterialExpressionMakeMaterialAttributes_() = default;
  UMaterialExpressionMakeMaterialAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionMax_ : public UMaterialExpression {
  UMaterialExpressionMax_() = default;
  UMaterialExpressionMax_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionMin_ : public UMaterialExpression {
  UMaterialExpressionMin_() = default;
  UMaterialExpressionMin_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionMultiply_ : public UMaterialExpression {
  UMaterialExpressionMultiply_() = default;
  UMaterialExpressionMultiply_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionNoise_ : public UMaterialExpression {
  UMaterialExpressionNoise_() = default;
  UMaterialExpressionNoise_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionNormalize_ : public UMaterialExpression {
  UMaterialExpressionNormalize_() = default;
  UMaterialExpressionNormalize_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionOneMinus_ : public UMaterialExpression {
  UMaterialExpressionOneMinus_() = default;
  UMaterialExpressionOneMinus_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPanner_ : public UMaterialExpression {
  UMaterialExpressionPanner_() = default;
  UMaterialExpressionPanner_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionParticleSubUV_ : public UMaterialExpressionTextureBase_ {
  UMaterialExpressionParticleSubUV_() = default;
  UMaterialExpressionParticleSubUV_(FVTableHelper& Helper) : UMaterialExpressionTextureBase_(Helper) {}
    
};
struct UMaterialExpressionPinBase_ : public UMaterialExpression {
  UMaterialExpressionPinBase_() = default;
  UMaterialExpressionPinBase_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPower_ : public UMaterialExpression {
  UMaterialExpressionPower_() = default;
  UMaterialExpressionPower_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionPreviousFrameSwitch_ : public UMaterialExpression {
  UMaterialExpressionPreviousFrameSwitch_() = default;
  UMaterialExpressionPreviousFrameSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionQualitySwitch_ : public UMaterialExpression {
  UMaterialExpressionQualitySwitch_() = default;
  UMaterialExpressionQualitySwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionReflectionVectorWS_ : public UMaterialExpression {
  UMaterialExpressionReflectionVectorWS_() = default;
  UMaterialExpressionReflectionVectorWS_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionRotateAboutAxis_ : public UMaterialExpression {
  UMaterialExpressionRotateAboutAxis_() = default;
  UMaterialExpressionRotateAboutAxis_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionRuntimeVirtualTextureSampleParameter_ : public UMaterialExpression {
  UMaterialExpressionRuntimeVirtualTextureSampleParameter_() = default;
  UMaterialExpressionRuntimeVirtualTextureSampleParameter_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSaturate_ : public UMaterialExpression {
  UMaterialExpressionSaturate_() = default;
  UMaterialExpressionSaturate_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSetLocal_ : public UMaterialExpression {
  UMaterialExpressionSetLocal_() = default;
  UMaterialExpressionSetLocal_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSetMaterialAttributes_ : public UMaterialExpression {
  UMaterialExpressionSetMaterialAttributes_() = default;
  UMaterialExpressionSetMaterialAttributes_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionShaderStageSwitch_ : public UMaterialExpression {
  UMaterialExpressionShaderStageSwitch_() = default;
  UMaterialExpressionShaderStageSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionShadingModel_ : public UMaterialExpression {
  UMaterialExpressionShadingModel_() = default;
  UMaterialExpressionShadingModel_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionShadingPathSwitch_ : public UMaterialExpression {
  UMaterialExpressionShadingPathSwitch_() = default;
  UMaterialExpressionShadingPathSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSine_ : public UMaterialExpression {
  UMaterialExpressionSine_() = default;
  UMaterialExpressionSine_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSingleLayerWaterMaterialOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionSingleLayerWaterMaterialOutput_() = default;
  UMaterialExpressionSingleLayerWaterMaterialOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionSmoothStep_ : public UMaterialExpression {
  UMaterialExpressionSmoothStep_() = default;
  UMaterialExpressionSmoothStep_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSobol_ : public UMaterialExpression {
  UMaterialExpressionSobol_() = default;
  UMaterialExpressionSobol_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSparseVolumeTextureSampleParameter_ : public UMaterialExpression {
  UMaterialExpressionSparseVolumeTextureSampleParameter_() = default;
  UMaterialExpressionSparseVolumeTextureSampleParameter_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSpeedTree_ : public UMaterialExpression {
  UMaterialExpressionSpeedTree_() = default;
  UMaterialExpressionSpeedTree_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSphereMask_ : public UMaterialExpression {
  UMaterialExpressionSphereMask_() = default;
  UMaterialExpressionSphereMask_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSquareRoot_ : public UMaterialExpression {
  UMaterialExpressionSquareRoot_() = default;
  UMaterialExpressionSquareRoot_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionStaticBool_ : public UMaterialExpression {
  UMaterialExpressionStaticBool_() = default;
  UMaterialExpressionStaticBool_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionStaticBoolParameter_ : public UMaterialExpressionParameter {
  UMaterialExpressionStaticBoolParameter_() = default;
  UMaterialExpressionStaticBoolParameter_(FVTableHelper& Helper) : UMaterialExpressionParameter(Helper) {}
    
};
struct UMaterialExpressionStaticComponentMaskParameter_ : public UMaterialExpressionParameter {
  UMaterialExpressionStaticComponentMaskParameter_() = default;
  UMaterialExpressionStaticComponentMaskParameter_(FVTableHelper& Helper) : UMaterialExpressionParameter(Helper) {}
    
};
struct UMaterialExpressionStaticSwitch_ : public UMaterialExpression {
  UMaterialExpressionStaticSwitch_() = default;
  UMaterialExpressionStaticSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionStaticSwitchParameter_ : public UMaterialExpressionStaticBoolParameter_ {
  UMaterialExpressionStaticSwitchParameter_() = default;
  UMaterialExpressionStaticSwitchParameter_(FVTableHelper& Helper) : UMaterialExpressionStaticBoolParameter_(Helper) {}
    
};
struct UMaterialExpressionStep_ : public UMaterialExpression {
  UMaterialExpressionStep_() = default;
  UMaterialExpressionStep_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionStrataLegacyConversion_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataLegacyConversion_() = default;
  UMaterialExpressionStrataLegacyConversion_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataSlabBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataSlabBSDF_() = default;
  UMaterialExpressionStrataSlabBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataSimpleClearCoatBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataSimpleClearCoatBSDF_() = default;
  UMaterialExpressionStrataSimpleClearCoatBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataVolumetricFogCloudBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataVolumetricFogCloudBSDF_() = default;
  UMaterialExpressionStrataVolumetricFogCloudBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataUnlitBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataUnlitBSDF_() = default;
  UMaterialExpressionStrataUnlitBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataHairBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataHairBSDF_() = default;
  UMaterialExpressionStrataHairBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataEyeBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataEyeBSDF_() = default;
  UMaterialExpressionStrataEyeBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataSingleLayerWaterBSDF_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataSingleLayerWaterBSDF_() = default;
  UMaterialExpressionStrataSingleLayerWaterBSDF_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataLightFunction_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataLightFunction_() = default;
  UMaterialExpressionStrataLightFunction_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataPostProcess_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataPostProcess_() = default;
  UMaterialExpressionStrataPostProcess_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataUI_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataUI_() = default;
  UMaterialExpressionStrataUI_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataConvertToDecal_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataConvertToDecal_() = default;
  UMaterialExpressionStrataConvertToDecal_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataHorizontalMixing_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataHorizontalMixing_() = default;
  UMaterialExpressionStrataHorizontalMixing_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataVerticalLayering_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataVerticalLayering_() = default;
  UMaterialExpressionStrataVerticalLayering_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataAdd_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataAdd_() = default;
  UMaterialExpressionStrataAdd_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataWeight_ : public UMaterialExpressionStrataBSDF_ {
  UMaterialExpressionStrataWeight_() = default;
  UMaterialExpressionStrataWeight_(FVTableHelper& Helper) : UMaterialExpressionStrataBSDF_(Helper) {}
    
};
struct UMaterialExpressionStrataTransmittanceToMFP_ : public UMaterialExpressionStrataUtilityBase_ {
  UMaterialExpressionStrataTransmittanceToMFP_() = default;
  UMaterialExpressionStrataTransmittanceToMFP_(FVTableHelper& Helper) : UMaterialExpressionStrataUtilityBase_(Helper) {}
    
};
struct UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0_ : public UMaterialExpressionStrataUtilityBase_ {
  UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0_() = default;
  UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0_(FVTableHelper& Helper) : UMaterialExpressionStrataUtilityBase_(Helper) {}
    
};
struct UMaterialExpressionStrataHazinessToSecondaryRoughness_ : public UMaterialExpressionStrataUtilityBase_ {
  UMaterialExpressionStrataHazinessToSecondaryRoughness_() = default;
  UMaterialExpressionStrataHazinessToSecondaryRoughness_(FVTableHelper& Helper) : UMaterialExpressionStrataUtilityBase_(Helper) {}
    
};
struct UMaterialExpressionStrataThinFilm_ : public UMaterialExpressionStrataUtilityBase_ {
  UMaterialExpressionStrataThinFilm_() = default;
  UMaterialExpressionStrataThinFilm_(FVTableHelper& Helper) : UMaterialExpressionStrataUtilityBase_(Helper) {}
    
};
struct UMaterialExpressionSubsurfaceMediumMaterialOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionSubsurfaceMediumMaterialOutput_() = default;
  UMaterialExpressionSubsurfaceMediumMaterialOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionSubtract_ : public UMaterialExpression {
  UMaterialExpressionSubtract_() = default;
  UMaterialExpressionSubtract_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionSwitch_ : public UMaterialExpression {
  UMaterialExpressionSwitch_() = default;
  UMaterialExpressionSwitch_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTangent_ : public UMaterialExpression {
  UMaterialExpressionTangent_() = default;
  UMaterialExpressionTangent_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTangentOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionTangentOutput_() = default;
  UMaterialExpressionTangentOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionTemporalSobol_ : public UMaterialExpression {
  UMaterialExpressionTemporalSobol_() = default;
  UMaterialExpressionTemporalSobol_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTextureCoordinate_ : public UMaterialExpression {
  UMaterialExpressionTextureCoordinate_() = default;
  UMaterialExpressionTextureCoordinate_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTextureSampleParameterSubUV_ : public UMaterialExpressionTextureSampleParameter {
  UMaterialExpressionTextureSampleParameterSubUV_() = default;
  UMaterialExpressionTextureSampleParameterSubUV_(FVTableHelper& Helper) : UMaterialExpressionTextureSampleParameter(Helper) {}
    
};
struct UMaterialExpressionThinTranslucentMaterialOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionThinTranslucentMaterialOutput_() = default;
  UMaterialExpressionThinTranslucentMaterialOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionTime_ : public UMaterialExpression {
  UMaterialExpressionTime_() = default;
  UMaterialExpressionTime_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTransform_ : public UMaterialExpression {
  UMaterialExpressionTransform_() = default;
  UMaterialExpressionTransform_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTransformPosition_ : public UMaterialExpression {
  UMaterialExpressionTransformPosition_() = default;
  UMaterialExpressionTransformPosition_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionTruncateLWC_ : public UMaterialExpression {
  UMaterialExpressionTruncateLWC_() = default;
  UMaterialExpressionTruncateLWC_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVectorNoise_ : public UMaterialExpression {
  UMaterialExpressionVectorNoise_() = default;
  UMaterialExpressionVectorNoise_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVertexInterpolator_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionVertexInterpolator_() = default;
  UMaterialExpressionVertexInterpolator_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionViewProperty_ : public UMaterialExpression {
  UMaterialExpressionViewProperty_() = default;
  UMaterialExpressionViewProperty_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionVolumetricAdvancedMaterialOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionVolumetricAdvancedMaterialOutput_() = default;
  UMaterialExpressionVolumetricAdvancedMaterialOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput_ : public UMaterialExpressionCustomOutput_ {
  UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput_() = default;
  UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput_(FVTableHelper& Helper) : UMaterialExpressionCustomOutput_(Helper) {}
    
};
struct UMaterialExpressionWhileLoop_ : public UMaterialExpression {
  UMaterialExpressionWhileLoop_() = default;
  UMaterialExpressionWhileLoop_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct UMaterialExpressionWorldPosition_ : public UMaterialExpression {
  UMaterialExpressionWorldPosition_() = default;
  UMaterialExpressionWorldPosition_(FVTableHelper& Helper) : UMaterialExpression(Helper) {}
    
};
struct AMaterialInstanceActor_ : public AActor {
  AMaterialInstanceActor_() = default;
  AMaterialInstanceActor_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
typedef NU8 tyEnum_EMaterialParameterAssociation__bQ0QFzWtAc9bK1kySiJFxnA;
typedef NU8 tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA;
typedef NU8 tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ;
typedef NU8 tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA;
typedef NU8 tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ;
typedef TArray<FScalarParameterValue> TY__wpkkvw3QAwKf7ZaACMVTtA;
typedef TArray<FVectorParameterValue> TY__sddSY5hxII7T4XO9a1Mez7g;
typedef TArray<FDoubleVectorParameterValue> TY__MjN8bA2J7QGs87X9b69cz9ciA;
typedef TArray<FTextureParameterValue> TY__2e2kXW4qc0U6k9bt5o0wgDg;
typedef TArray<FRuntimeVirtualTextureParameterValue> TY__2kfN9asIen9adfoHPjm0OHLg;
typedef TArray<FSparseVolumeTextureParameterValue> TY__rZldDsDtIj9c5z9bC1DdMiHQ;
typedef TArray<FFontParameterValue> TY__FGDznZ1p2MJe6xaB8q4CCQ;
typedef NU8 tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg;
typedef NU8 tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ;
struct UVOIPTalker_ : public UActorComponent {
  UVOIPTalker_() = default;
  UVOIPTalker_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct FVoiceSettings_ {
	USceneComponent* componentToAttachTo;
	USoundAttenuation* attenuationSettings;
	USoundEffectSourcePresetChain* sourceEffectChain;
};
struct AEmitterCameraLensEffectBase_ : public AActor {
  AEmitterCameraLensEffectBase_() = default;
  AEmitterCameraLensEffectBase_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct UParticleLODLevel_ : public UObject {
  UParticleLODLevel_() = default;
  UParticleLODLevel_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UParticleModuleAccelerationBase_ : public UParticleModule_ {
  UParticleModuleAccelerationBase_() = default;
  UParticleModuleAccelerationBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleAcceleration_ : public UParticleModuleAccelerationBase_ {
  UParticleModuleAcceleration_() = default;
  UParticleModuleAcceleration_(FVTableHelper& Helper) : UParticleModuleAccelerationBase_(Helper) {}
    
};
struct UParticleModuleAccelerationConstant_ : public UParticleModuleAccelerationBase_ {
  UParticleModuleAccelerationConstant_() = default;
  UParticleModuleAccelerationConstant_(FVTableHelper& Helper) : UParticleModuleAccelerationBase_(Helper) {}
    
};
struct UParticleModuleAccelerationDrag_ : public UParticleModuleAccelerationBase_ {
  UParticleModuleAccelerationDrag_() = default;
  UParticleModuleAccelerationDrag_(FVTableHelper& Helper) : UParticleModuleAccelerationBase_(Helper) {}
    
};
struct UParticleModuleAccelerationDragScaleOverLife_ : public UParticleModuleAccelerationBase_ {
  UParticleModuleAccelerationDragScaleOverLife_() = default;
  UParticleModuleAccelerationDragScaleOverLife_(FVTableHelper& Helper) : UParticleModuleAccelerationBase_(Helper) {}
    
};
struct UParticleModuleAccelerationOverLifetime_ : public UParticleModuleAccelerationBase_ {
  UParticleModuleAccelerationOverLifetime_() = default;
  UParticleModuleAccelerationOverLifetime_(FVTableHelper& Helper) : UParticleModuleAccelerationBase_(Helper) {}
    
};
struct UParticleModuleAttractorLine_ : public UParticleModuleAttractorBase_ {
  UParticleModuleAttractorLine_() = default;
  UParticleModuleAttractorLine_(FVTableHelper& Helper) : UParticleModuleAttractorBase_(Helper) {}
    
};
struct UParticleModuleAttractorParticle_ : public UParticleModuleAttractorBase_ {
  UParticleModuleAttractorParticle_() = default;
  UParticleModuleAttractorParticle_(FVTableHelper& Helper) : UParticleModuleAttractorBase_(Helper) {}
    
};
struct UParticleModuleAttractorPoint_ : public UParticleModuleAttractorBase_ {
  UParticleModuleAttractorPoint_() = default;
  UParticleModuleAttractorPoint_(FVTableHelper& Helper) : UParticleModuleAttractorBase_(Helper) {}
    
};
struct UParticleModuleBeamNoise_ : public UParticleModuleBeamBase_ {
  UParticleModuleBeamNoise_() = default;
  UParticleModuleBeamNoise_(FVTableHelper& Helper) : UParticleModuleBeamBase_(Helper) {}
    
};
struct UParticleModuleBeamSource_ : public UParticleModuleBeamBase_ {
  UParticleModuleBeamSource_() = default;
  UParticleModuleBeamSource_(FVTableHelper& Helper) : UParticleModuleBeamBase_(Helper) {}
    
};
struct UParticleModuleBeamTarget_ : public UParticleModuleBeamBase_ {
  UParticleModuleBeamTarget_() = default;
  UParticleModuleBeamTarget_(FVTableHelper& Helper) : UParticleModuleBeamBase_(Helper) {}
    
};
struct UParticleModuleCameraOffset_ : public UParticleModuleCameraBase_ {
  UParticleModuleCameraOffset_() = default;
  UParticleModuleCameraOffset_(FVTableHelper& Helper) : UParticleModuleCameraBase_(Helper) {}
    
};
struct UParticleModuleCollision_ : public UParticleModuleCollisionBase_ {
  UParticleModuleCollision_() = default;
  UParticleModuleCollision_(FVTableHelper& Helper) : UParticleModuleCollisionBase_(Helper) {}
    
};
struct UParticleModuleCollisionGPU_ : public UParticleModuleCollisionBase_ {
  UParticleModuleCollisionGPU_() = default;
  UParticleModuleCollisionGPU_(FVTableHelper& Helper) : UParticleModuleCollisionBase_(Helper) {}
    
};
struct UParticleModuleColorOverLife_ : public UParticleModuleColorBase_ {
  UParticleModuleColorOverLife_() = default;
  UParticleModuleColorOverLife_(FVTableHelper& Helper) : UParticleModuleColorBase_(Helper) {}
    
};
struct UParticleModuleColorScaleOverLife_ : public UParticleModuleColorBase_ {
  UParticleModuleColorScaleOverLife_() = default;
  UParticleModuleColorScaleOverLife_(FVTableHelper& Helper) : UParticleModuleColorBase_(Helper) {}
    
};
struct UParticleModuleEventGenerator_ : public UParticleModuleEventBase_ {
  UParticleModuleEventGenerator_() = default;
  UParticleModuleEventGenerator_(FVTableHelper& Helper) : UParticleModuleEventBase_(Helper) {}
    
};
struct UParticleModuleEventReceiverBase_ : public UParticleModuleEventBase_ {
  UParticleModuleEventReceiverBase_() = default;
  UParticleModuleEventReceiverBase_(FVTableHelper& Helper) : UParticleModuleEventBase_(Helper) {}
    
};
struct UParticleModuleLifetime_ : public UParticleModuleLifetimeBase_ {
  UParticleModuleLifetime_() = default;
  UParticleModuleLifetime_(FVTableHelper& Helper) : UParticleModuleLifetimeBase_(Helper) {}
    
};
struct UParticleModuleLight_ : public UParticleModuleLightBase_ {
  UParticleModuleLight_() = default;
  UParticleModuleLight_(FVTableHelper& Helper) : UParticleModuleLightBase_(Helper) {}
    
};
struct UParticleModuleLight_Seeded_ : public UParticleModuleLight_ {
  UParticleModuleLight_Seeded_() = default;
  UParticleModuleLight_Seeded_(FVTableHelper& Helper) : UParticleModuleLight_(Helper) {}
    
};
struct UParticleModuleMeshMaterial_ : public UParticleModuleMaterialBase_ {
  UParticleModuleMeshMaterial_() = default;
  UParticleModuleMeshMaterial_(FVTableHelper& Helper) : UParticleModuleMaterialBase_(Helper) {}
    
};
struct UParticleModuleMeshRotation_ : public UParticleModuleRotationBase_ {
  UParticleModuleMeshRotation_() = default;
  UParticleModuleMeshRotation_(FVTableHelper& Helper) : UParticleModuleRotationBase_(Helper) {}
    
};
struct UParticleModuleMeshRotationRate_ : public UParticleModuleRotationRateBase_ {
  UParticleModuleMeshRotationRate_() = default;
  UParticleModuleMeshRotationRate_(FVTableHelper& Helper) : UParticleModuleRotationRateBase_(Helper) {}
    
};
struct UParticleModuleOrbitBase_ : public UParticleModule_ {
  UParticleModuleOrbitBase_() = default;
  UParticleModuleOrbitBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleOrbit_ : public UParticleModuleOrbitBase_ {
  UParticleModuleOrbit_() = default;
  UParticleModuleOrbit_(FVTableHelper& Helper) : UParticleModuleOrbitBase_(Helper) {}
    
};
struct UParticleModuleParameterDynamic_ : public UParticleModuleParameterBase_ {
  UParticleModuleParameterDynamic_() = default;
  UParticleModuleParameterDynamic_(FVTableHelper& Helper) : UParticleModuleParameterBase_(Helper) {}
    
};
struct UParticleModuleRequired_ : public UParticleModule_ {
  UParticleModuleRequired_() = default;
  UParticleModuleRequired_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleRotation_ : public UParticleModuleRotationBase_ {
  UParticleModuleRotation_() = default;
  UParticleModuleRotation_(FVTableHelper& Helper) : UParticleModuleRotationBase_(Helper) {}
    
};
struct UParticleModuleRotationOverLifetime_ : public UParticleModuleRotationBase_ {
  UParticleModuleRotationOverLifetime_() = default;
  UParticleModuleRotationOverLifetime_(FVTableHelper& Helper) : UParticleModuleRotationBase_(Helper) {}
    
};
struct UParticleModuleRotationRate_ : public UParticleModuleRotationRateBase_ {
  UParticleModuleRotationRate_() = default;
  UParticleModuleRotationRate_(FVTableHelper& Helper) : UParticleModuleRotationRateBase_(Helper) {}
    
};
struct UParticleModuleRotationRateMultiplyLife_ : public UParticleModuleRotationRateBase_ {
  UParticleModuleRotationRateMultiplyLife_() = default;
  UParticleModuleRotationRateMultiplyLife_(FVTableHelper& Helper) : UParticleModuleRotationRateBase_(Helper) {}
    
};
struct UParticleModuleSize_ : public UParticleModuleSizeBase_ {
  UParticleModuleSize_() = default;
  UParticleModuleSize_(FVTableHelper& Helper) : UParticleModuleSizeBase_(Helper) {}
    
};
struct UParticleModuleSizeMultiplyLife_ : public UParticleModuleSizeBase_ {
  UParticleModuleSizeMultiplyLife_() = default;
  UParticleModuleSizeMultiplyLife_(FVTableHelper& Helper) : UParticleModuleSizeBase_(Helper) {}
    
};
struct UParticleModuleSizeScale_ : public UParticleModuleSizeBase_ {
  UParticleModuleSizeScale_() = default;
  UParticleModuleSizeScale_(FVTableHelper& Helper) : UParticleModuleSizeBase_(Helper) {}
    
};
struct UParticleModuleSizeScaleBySpeed_ : public UParticleModuleSizeBase_ {
  UParticleModuleSizeScaleBySpeed_() = default;
  UParticleModuleSizeScaleBySpeed_(FVTableHelper& Helper) : UParticleModuleSizeBase_(Helper) {}
    
};
struct UParticleModuleSpawnBase_ : public UParticleModule_ {
  UParticleModuleSpawnBase_() = default;
  UParticleModuleSpawnBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleSpawn_ : public UParticleModuleSpawnBase_ {
  UParticleModuleSpawn_() = default;
  UParticleModuleSpawn_(FVTableHelper& Helper) : UParticleModuleSpawnBase_(Helper) {}
    
};
struct UParticleModuleSpawnPerUnit_ : public UParticleModuleSpawnBase_ {
  UParticleModuleSpawnPerUnit_() = default;
  UParticleModuleSpawnPerUnit_(FVTableHelper& Helper) : UParticleModuleSpawnBase_(Helper) {}
    
};
struct UParticleModuleSubUV_ : public UParticleModuleSubUVBase_ {
  UParticleModuleSubUV_() = default;
  UParticleModuleSubUV_(FVTableHelper& Helper) : UParticleModuleSubUVBase_(Helper) {}
    
};
struct UParticleModuleSubUVMovie_ : public UParticleModuleSubUV_ {
  UParticleModuleSubUVMovie_() = default;
  UParticleModuleSubUVMovie_(FVTableHelper& Helper) : UParticleModuleSubUV_(Helper) {}
    
};
struct UParticleModuleTrailSource_ : public UParticleModuleTrailBase_ {
  UParticleModuleTrailSource_() = default;
  UParticleModuleTrailSource_(FVTableHelper& Helper) : UParticleModuleTrailBase_(Helper) {}
    
};
struct UParticleModuleTypeDataAnimTrail_ : public UParticleModuleTypeDataBase_ {
  UParticleModuleTypeDataAnimTrail_() = default;
  UParticleModuleTypeDataAnimTrail_(FVTableHelper& Helper) : UParticleModuleTypeDataBase_(Helper) {}
    
};
struct UParticleModuleTypeDataBeam2_ : public UParticleModuleTypeDataBase_ {
  UParticleModuleTypeDataBeam2_() = default;
  UParticleModuleTypeDataBeam2_(FVTableHelper& Helper) : UParticleModuleTypeDataBase_(Helper) {}
    
};
struct UParticleModuleTypeDataGpu_ : public UParticleModuleTypeDataBase_ {
  UParticleModuleTypeDataGpu_() = default;
  UParticleModuleTypeDataGpu_(FVTableHelper& Helper) : UParticleModuleTypeDataBase_(Helper) {}
    
};
struct UParticleModuleTypeDataMesh_ : public UParticleModuleTypeDataBase_ {
  UParticleModuleTypeDataMesh_() = default;
  UParticleModuleTypeDataMesh_(FVTableHelper& Helper) : UParticleModuleTypeDataBase_(Helper) {}
    
};
struct UParticleModuleTypeDataRibbon_ : public UParticleModuleTypeDataBase_ {
  UParticleModuleTypeDataRibbon_() = default;
  UParticleModuleTypeDataRibbon_(FVTableHelper& Helper) : UParticleModuleTypeDataBase_(Helper) {}
    
};
struct UParticleModuleVectorFieldLocal_ : public UParticleModuleVectorFieldBase_ {
  UParticleModuleVectorFieldLocal_() = default;
  UParticleModuleVectorFieldLocal_(FVTableHelper& Helper) : UParticleModuleVectorFieldBase_(Helper) {}
    
};
struct UParticleModuleVectorFieldRotationRate_ : public UParticleModuleVectorFieldBase_ {
  UParticleModuleVectorFieldRotationRate_() = default;
  UParticleModuleVectorFieldRotationRate_(FVTableHelper& Helper) : UParticleModuleVectorFieldBase_(Helper) {}
    
};
struct UParticleModuleVectorFieldScale_ : public UParticleModuleVectorFieldBase_ {
  UParticleModuleVectorFieldScale_() = default;
  UParticleModuleVectorFieldScale_(FVTableHelper& Helper) : UParticleModuleVectorFieldBase_(Helper) {}
    
};
struct UParticleModuleVectorFieldScaleOverLife_ : public UParticleModuleVectorFieldBase_ {
  UParticleModuleVectorFieldScaleOverLife_() = default;
  UParticleModuleVectorFieldScaleOverLife_(FVTableHelper& Helper) : UParticleModuleVectorFieldBase_(Helper) {}
    
};
struct UParticleModuleVelocityBase_ : public UParticleModule_ {
  UParticleModuleVelocityBase_() = default;
  UParticleModuleVelocityBase_(FVTableHelper& Helper) : UParticleModule_(Helper) {}
    
};
struct UParticleModuleVelocity_ : public UParticleModuleVelocityBase_ {
  UParticleModuleVelocity_() = default;
  UParticleModuleVelocity_(FVTableHelper& Helper) : UParticleModuleVelocityBase_(Helper) {}
    
};
struct UParticleModuleVelocityCone_ : public UParticleModuleVelocityBase_ {
  UParticleModuleVelocityCone_() = default;
  UParticleModuleVelocityCone_(FVTableHelper& Helper) : UParticleModuleVelocityBase_(Helper) {}
    
};
struct UParticleModuleVelocityInheritParent_ : public UParticleModuleVelocityBase_ {
  UParticleModuleVelocityInheritParent_() = default;
  UParticleModuleVelocityInheritParent_(FVTableHelper& Helper) : UParticleModuleVelocityBase_(Helper) {}
    
};
struct UParticleModuleVelocityOverLifetime_ : public UParticleModuleVelocityBase_ {
  UParticleModuleVelocityOverLifetime_() = default;
  UParticleModuleVelocityOverLifetime_(FVTableHelper& Helper) : UParticleModuleVelocityBase_(Helper) {}
    
};
struct USubUVAnimation_ : public UObject {
  USubUVAnimation_() = default;
  USubUVAnimation_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
typedef NU8 tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg;
typedef TArray<FParticleSysParam> TY__hRNirpXzEmqf49cUfEqEUHQ;
struct UPhysicalMaterialMask_ : public UObject {
  UPhysicalMaterialMask_() = default;
  UPhysicalMaterialMask_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UAsyncPhysicsInputComponent_ : public UActorComponent {
  UAsyncPhysicsInputComponent_() = default;
  UAsyncPhysicsInputComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct UPhysicsSpringComponent_ : public USceneComponent {
  UPhysicsSpringComponent_() = default;
  UPhysicsSpringComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UPhysicsThrusterComponent_ : public USceneComponent {
  UPhysicsThrusterComponent_() = default;
  UPhysicsThrusterComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct ARadialForceActor_ : public ARigidBodyBase_ {
  ARadialForceActor_() = default;
  ARadialForceActor_(FVTableHelper& Helper) : ARigidBodyBase_(Helper) {}
    
};
struct UPhysicsCollisionHandler_ : public UObject {
  UPhysicsCollisionHandler_() = default;
  UPhysicsCollisionHandler_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct APhysicsConstraintActor_ : public ARigidBodyBase_ {
  APhysicsConstraintActor_() = default;
  APhysicsConstraintActor_(FVTableHelper& Helper) : ARigidBodyBase_(Helper) {}
    
};
struct UPhysicsConstraintComponent_ : public USceneComponent {
  UPhysicsConstraintComponent_() = default;
  UPhysicsConstraintComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UPhysicsConstraintTemplate_ : public UObject {
  UPhysicsConstraintTemplate_() = default;
  UPhysicsConstraintTemplate_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UPhysicsHandleComponent_ : public UActorComponent {
  UPhysicsHandleComponent_() = default;
  UPhysicsHandleComponent_(FVTableHelper& Helper) : UActorComponent(Helper) {}
    
};
struct URadialForceComponent_ : public USceneComponent {
  URadialForceComponent_() = default;
  URadialForceComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
typedef NU8 tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q;
struct USoundNodeModulatorContinuous_ : public USoundNode_ {
  USoundNodeModulatorContinuous_() = default;
  USoundNodeModulatorContinuous_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct AAmbientSound_ : public AActor {
  AAmbientSound_() = default;
  AAmbientSound_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct AAudioVolume_ : public AVolume {
  AAudioVolume_() = default;
  AAudioVolume_(FVTableHelper& Helper) : AVolume(Helper) {}
    
};
struct USoundCue_ : public UObject {
  USoundCue_() = default;
  USoundCue_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct USoundNodeAttenuation_ : public USoundNode_ {
  USoundNodeAttenuation_() = default;
  USoundNodeAttenuation_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeBranch_ : public USoundNode_ {
  USoundNodeBranch_() = default;
  USoundNodeBranch_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeConcatenator_ : public USoundNode_ {
  USoundNodeConcatenator_() = default;
  USoundNodeConcatenator_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeDelay_ : public USoundNode_ {
  USoundNodeDelay_() = default;
  USoundNodeDelay_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeDialoguePlayer_ : public USoundNode_ {
  USoundNodeDialoguePlayer_() = default;
  USoundNodeDialoguePlayer_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeDistanceCrossFade_ : public USoundNode_ {
  USoundNodeDistanceCrossFade_() = default;
  USoundNodeDistanceCrossFade_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeEnveloper_ : public USoundNode_ {
  USoundNodeEnveloper_() = default;
  USoundNodeEnveloper_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeGroupControl_ : public USoundNode_ {
  USoundNodeGroupControl_() = default;
  USoundNodeGroupControl_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeLooping_ : public USoundNode_ {
  USoundNodeLooping_() = default;
  USoundNodeLooping_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeMixer_ : public USoundNode_ {
  USoundNodeMixer_() = default;
  USoundNodeMixer_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeModulator_ : public USoundNode_ {
  USoundNodeModulator_() = default;
  USoundNodeModulator_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeParamCrossFade_ : public USoundNodeDistanceCrossFade_ {
  USoundNodeParamCrossFade_() = default;
  USoundNodeParamCrossFade_(FVTableHelper& Helper) : USoundNodeDistanceCrossFade_(Helper) {}
    
};
struct USoundNodeQualityLevel_ : public USoundNode_ {
  USoundNodeQualityLevel_() = default;
  USoundNodeQualityLevel_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeRandom_ : public USoundNode_ {
  USoundNodeRandom_() = default;
  USoundNodeRandom_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeSoundClass_ : public USoundNode_ {
  USoundNodeSoundClass_() = default;
  USoundNodeSoundClass_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeSwitch_ : public USoundNode_ {
  USoundNodeSwitch_() = default;
  USoundNodeSwitch_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeWaveParam_ : public USoundNode_ {
  USoundNodeWaveParam_() = default;
  USoundNodeWaveParam_(FVTableHelper& Helper) : USoundNode_(Helper) {}
    
};
struct USoundNodeWavePlayer_ : public USoundNodeAssetReferencer_ {
  USoundNodeWavePlayer_() = default;
  USoundNodeWavePlayer_(FVTableHelper& Helper) : USoundNodeAssetReferencer_(Helper) {}
    
};
struct USoundSubmixWithParentBase_ : public USoundSubmixBase_ {
  USoundSubmixWithParentBase_() = default;
  USoundSubmixWithParentBase_(FVTableHelper& Helper) : USoundSubmixBase_(Helper) {}
    
};
struct USoundSubmix_ : public USoundSubmixWithParentBase_ {
  USoundSubmix_() = default;
  USoundSubmix_(FVTableHelper& Helper) : USoundSubmixWithParentBase_(Helper) {}
    
};
struct USoundfieldSubmix_ : public USoundSubmixWithParentBase_ {
  USoundfieldSubmix_() = default;
  USoundfieldSubmix_(FVTableHelper& Helper) : USoundSubmixWithParentBase_(Helper) {}
    
};
struct UEndpointSubmix_ : public USoundSubmixBase_ {
  UEndpointSubmix_() = default;
  UEndpointSubmix_(FVTableHelper& Helper) : USoundSubmixBase_(Helper) {}
    
};
struct USoundfieldEndpointSubmix_ : public USoundSubmixBase_ {
  USoundfieldEndpointSubmix_() = default;
  USoundfieldEndpointSubmix_(FVTableHelper& Helper) : USoundSubmixBase_(Helper) {}
    
};
struct FReverbSettings_ {
	NIM_BOOL bApplyReverb;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
	UReverbEffect_* reverbEffect;
	USoundEffectSubmixPreset_* reverbPluginEffect;
	NF32 volume;
	NF32 fadeTime;
};
typedef NU8 tyEnum_EAudioVolumeLocationState__cgdNqGrtoyp23ISYdoxqLw;
typedef TArray<FSoundSubmixSendInfo> TY__mYFRCs9aMXMCd4LKh8IWtiQ;
struct FAudioVolumeSubmixSendSettings_ {
	tyEnum_EAudioVolumeLocationState__cgdNqGrtoyp23ISYdoxqLw listenerLocationState;
	tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
	TY__mYFRCs9aMXMCd4LKh8IWtiQ submixSends{};
};
typedef TArray<USoundEffectSubmixPreset_*> TY__vn4YR8N1PwW0D5S5BkY6Bw;
struct FAudioVolumeSubmixOverrideSettings_ {
	USoundSubmix_* submix;
	TY__vn4YR8N1PwW0D5S5BkY6Bw submixEffectChain{};
	NF32 crossfadeTime;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FInteriorSettings_ {
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
	NF32 exteriorVolume;
	NF32 exteriorTime;
	NF32 exteriorLPF;
	NF32 exteriorLPFTime;
	NF32 interiorVolume;
	NF32 interiorTime;
	NF32 interiorLPF;
	NF32 interiorLPFTime;
};
typedef NU8 tyEnum_EMaxConcurrentResolutionRule__EzFMbBcK6m8QM1ovJjwNrA;
typedef NU8 tyEnum_EConcurrencyVolumeScaleMode__fu9btzHKAaOGmZR0XojVHRQ;
struct FSoundConcurrencySettings_ {
	NI32 maxCount;
	NIM_BOOL bLimitToOwner;
	NIM_BOOL bVolumeScaleCanRelease;
	tyEnum_EMaxConcurrentResolutionRule__EzFMbBcK6m8QM1ovJjwNrA resolutionRule;
	tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
	NF32 retriggerTime;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
	tyEnum_EConcurrencyVolumeScaleMode__fu9btzHKAaOGmZR0XojVHRQ volumeScaleMode;
	NF32 volumeScaleAttackTime;
	NF32 volumeScaleReleaseTime;
	NF32 voiceStealReleaseTime;
};
struct FSoundClassAdjuster_ {
	USoundClass* soundClassObject;
	NF32 volumeAdjuster;
	NF32 pitchAdjuster;
	NF32 lowPassFilterFrequency;
	NIM_BOOL bApplyToChildren;
	tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
	NF32 voiceCenterChannelVolumeAdjuster;
	tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
typedef NU8 tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw;
typedef TArray<FSoundSourceBusSendInfo> TY__E1cF89aBHPPsJaR6qT9cRcgw;
typedef TArray<FSoundWaveCuePoint> TY__BOJ5ThsWgCz3WmPBwfzXrQ;
typedef TArray<FSubtitleCue> TY__J5oi1L6HY7OmrYakjq3uIg;
typedef NU8 tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg;
typedef TArray<FAudioVolumeSubmixSendSettings_> TY__0P3QE6CnwcQtnLUClvj1AQ;
typedef TArray<FAudioVolumeSubmixOverrideSettings_> TY__KW4wPWVxwu2sHCJkJbVpzA;
typedef TArray<USoundClass*> TY__pVtcV5B6QAzor9cajvYb6Rw;
typedef TArray<FPassiveSoundMixModifier> TY__gUl6WccpnVptdwE9bBR9a1YA;
typedef TArray<FSoundClassAdjuster_> TY__rlPCp7fOS9bDL40uDDNAn7Q;
typedef TArray<USoundSubmixBase_*> TY__Qd9alkOGuaEndLtq9bIq1VEg;
typedef NU8 tyEnum_EAudioRecordingExportType__qlXKZXxaYYHpNNXF9c6VXpw;
typedef NU8 tyEnum_EFFTSize__No3IgC1Ccv23sZ7WxluZ9bA;
typedef NU8 tyEnum_EFFTPeakInterpolationMethod__zmX0701g3VBVwdHQWTBJcA;
typedef NU8 tyEnum_EFFTWindowType__9bGZdJ7a6H0fb4ugFfpr9bxQ;
typedef NU8 tyEnum_EAudioSpectrumType__TBhtE9b2LCSM7FAMCe4f7ow;
typedef TArray<FSoundSubmixSpectralAnalysisBandSettings> TY__LOMy3VrBsbR5p06Yi7CKVg;
struct UStaticSparseVolumeTexture_ : public USparseVolumeTexture_ {
  UStaticSparseVolumeTexture_() = default;
  UStaticSparseVolumeTexture_(FVTableHelper& Helper) : USparseVolumeTexture_(Helper) {}
    
};
struct UAnimatedSparseVolumeTexture_ : public USparseVolumeTexture_ {
  UAnimatedSparseVolumeTexture_() = default;
  UAnimatedSparseVolumeTexture_(FVTableHelper& Helper) : USparseVolumeTexture_(Helper) {}
    
};
struct UVectorField_ : public UObject {
  UVectorField_() = default;
  UVectorField_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UVectorFieldAnimated_ : public UObject {
  UVectorFieldAnimated_() = default;
  UVectorFieldAnimated_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UVectorFieldStatic_ : public UObject {
  UVectorFieldStatic_() = default;
  UVectorFieldStatic_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct AVectorFieldVolume_ : public AActor {
  AVectorFieldVolume_() = default;
  AVectorFieldVolume_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
struct URuntimeVirtualTexture_ : public UObject {
  URuntimeVirtualTexture_() = default;
  URuntimeVirtualTexture_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct ARuntimeVirtualTextureVolume_ : public AActor {
  ARuntimeVirtualTextureVolume_() = default;
  ARuntimeVirtualTextureVolume_(FVTableHelper& Helper) : AActor(Helper) {}
    
};
typedef NU8 tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w;
struct UHLODBuilder_ : public UObject {
  UHLODBuilder_() = default;
  UHLODBuilder_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDEPRECATED_DataLayer_ : public UObject {
  UDEPRECATED_DataLayer_() = default;
  UDEPRECATED_DataLayer_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDataLayerAsset_ : public UObject {
  UDataLayerAsset_() = default;
  UDataLayerAsset_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct UDataLayerSubsystem_ : public UWorldSubsystem {
  UDataLayerSubsystem_() = default;
  UDataLayerSubsystem_(FVTableHelper& Helper) : UWorldSubsystem(Helper) {}
    
};
struct UWorldPartitionDestructibleHLODComponent_ : public USceneComponent {
  UWorldPartitionDestructibleHLODComponent_() = default;
  UWorldPartitionDestructibleHLODComponent_(FVTableHelper& Helper) : USceneComponent(Helper) {}
    
};
struct UWorldPartitionRuntimeCell_ : public UObject {
  UWorldPartitionRuntimeCell_() = default;
  UWorldPartitionRuntimeCell_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct URuntimeHashExternalStreamingObjectBase_ : public UObject {
  URuntimeHashExternalStreamingObjectBase_() = default;
  URuntimeHashExternalStreamingObjectBase_(FVTableHelper& Helper) : UObject(Helper) {}
    
};
struct FWorldPartitionHLODDestructionTag_ {
	tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA;
typedef NU8 tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A;
typedef NU8 tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ;
extern "C" N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, getClassByName)(FString className_p0);
N_LIB_PRIVATE N_NIMCALL(UScriptStruct*, getScriptStructByName)(FString strName_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getDefaultObjectFromClassName)(FString clsName_p0);
extern "C" N_LIB_IMPORT N_CDECL(tyObject_UEEmitter__yFEGdOoEpsg7Gf9aKb9cZKbQ*, getGlobalEmitterPtr)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepAssetRegistry)(void);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, toSoftObjectPath_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(FARFilter, setFilterTagsAndValues_)(FARFilter& inFilter_p0, TY__HdzeEk4HpX19bllurNUyndA& inTagsAndValues_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUAsset_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRedirector_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAssetLoaded_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTagValue_)(FAssetData& inAssetData_p0, FName& inTagName_p1, FString& outTagValue_p2);
N_LIB_PRIVATE N_NIMCALL(FString, getFullName_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getExportTextName_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, getClass_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(void, getBlueprintAssets_)(FARFilter& inFilter_p0, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p1);
N_LIB_PRIVATE N_NIMCALL(TY__IYNsvvBlfnKuRz5TNKUqnw, getAssetRegistry_)(void);
N_LIB_PRIVATE N_NIMCALL(UObject*, getAsset_)(FAssetData& inAssetData_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, findAssetNativeClass_)(FAssetData& assetData_p0);
N_LIB_PRIVATE N_NIMCALL(FAssetData, createAssetData_)(UObject* inAsset_p0, NIM_BOOL bAllowBlueprintClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, waitForPackage_)(UAssetRegistry* self_p0, FString packageName_p1);
N_LIB_PRIVATE N_NIMCALL(void, waitForCompletion_)(UAssetRegistry* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, useFilterToExcludeAssets_)(UAssetRegistry* self_p0, TY__8erC4L7o5X0VmnCzY0GMhQ& assetDataList_p1, FARFilter& filter_p2);
N_LIB_PRIVATE N_NIMCALL(void, searchAllAssets_)(UAssetRegistry* self_p0, NIM_BOOL bSynchronousSearch_p1);
N_LIB_PRIVATE N_NIMCALL(void, scanPathsSynchronous_)(UAssetRegistry* self_p0, TY__myhN0u2pNczwuaOhbdYPXw& inPaths_p1, NIM_BOOL bForceRescan_p2, NIM_BOOL bIgnoreDenyListScanFilters_p3);
N_LIB_PRIVATE N_NIMCALL(void, scanModifiedAssetFiles_)(UAssetRegistry* self_p0, TY__myhN0u2pNczwuaOhbdYPXw& inFilePaths_p1);
N_LIB_PRIVATE N_NIMCALL(void, scanFilesSynchronous_)(UAssetRegistry* self_p0, TY__myhN0u2pNczwuaOhbdYPXw& inFilePaths_p1, NIM_BOOL bForceRescan_p2);
N_LIB_PRIVATE N_NIMCALL(void, runAssetsThroughFilter_)(UAssetRegistry* self_p0, TY__8erC4L7o5X0VmnCzY0GMhQ& assetDataList_p1, FARFilter& filter_p2);
N_LIB_PRIVATE N_NIMCALL(void, prioritizeSearchPath_)(UAssetRegistry* self_p0, FString pathToPrioritize_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getReferencers_)(UAssetRegistry* self_p0, FName packageName_p1, FAssetRegistryDependencyOptions& referenceOptions_p2, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outReferencers_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDependencies_)(UAssetRegistry* self_p0, FName packageName_p1, FAssetRegistryDependencyOptions& dependencyOptions_p2, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outDependencies_p3);
N_LIB_PRIVATE N_NIMCALL(FAssetData, k2_GetAssetByObjectPath_)(UAssetRegistry* self_p0, FSoftObjectPath& objectPath_p1, NIM_BOOL bIncludeOnlyOnDiskAssets_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSearchAsync_)(UAssetRegistry* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSearchAllAssets_)(UAssetRegistry* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoadingAssets_)(UAssetRegistry* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAssets_)(UAssetRegistry* self_p0, FName packagePath_p1, NIM_BOOL bRecursive_p2);
N_LIB_PRIVATE N_NIMCALL(void, getSubPaths_)(UAssetRegistry* self_p0, FString inBasePath_p1, TY__myhN0u2pNczwuaOhbdYPXw& outPathList_p2, NIM_BOOL bInRecurse_p3);
N_LIB_PRIVATE N_NIMCALL(void, getDerivedClassNames_)(UAssetRegistry* self_p0, TY__PRe8Jrdf8eYAEJilcBMaEQ& classNames_p1, TY__PRSVFfQEtqNnXT9a7lc0o6A& excludedClassNames_p2, TY__PRSVFfQEtqNnXT9a7lc0o6A& outDerivedClassNames_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPaths_)(UAssetRegistry* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ packagePaths_p1, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p2, NIM_BOOL bRecursive_p3, NIM_BOOL bIncludeOnlyOnDiskAssets_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPath_)(UAssetRegistry* self_p0, FName packagePath_p1, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p2, NIM_BOOL bRecursive_p3, NIM_BOOL bIncludeOnlyOnDiskAssets_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPackageName_)(UAssetRegistry* self_p0, FName packageName_p1, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p2, NIM_BOOL bIncludeOnlyOnDiskAssets_p3, NIM_BOOL bSkipARFilteredAssets_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByClass_)(UAssetRegistry* self_p0, FTopLevelAssetPath classPathName_p1, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p2, NIM_BOOL bSearchSubClasses_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssets_)(UAssetRegistry* self_p0, FARFilter& filter_p1, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p2, NIM_BOOL bSkipARFilteredAssets_p3);
N_LIB_PRIVATE N_NIMCALL(FAssetData, getAssetByObjectPath_)(UAssetRegistry* self_p0, FName objectPath_p1, NIM_BOOL bIncludeOnlyOnDiskAssets_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAncestorClassNames_)(UAssetRegistry* self_p0, FTopLevelAssetPath classPathName_p1, TY__PRe8Jrdf8eYAEJilcBMaEQ& outAncestorClassNames_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAllCachedPaths_)(UAssetRegistry* self_p0, TY__myhN0u2pNczwuaOhbdYPXw& outPathList_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllAssets_)(UAssetRegistry* self_p0, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData_p1, NIM_BOOL bIncludeOnlyOnDiskAssets_p2);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepChaos)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCommon)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEnums)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepInputCore)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepSlateCore)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepPhysicsCore)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, staticFriction)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticFriction)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, restitution)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrestitution)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, linearEtherDrag)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlinearEtherDrag)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, angularEtherDrag)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setangularEtherDrag)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepingLinearVelocityThreshold)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsleepingLinearVelocityThreshold)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepingAngularVelocityThreshold)(UChaosPhysicalMaterial_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsleepingAngularVelocityThreshold)(UChaosPhysicalMaterial_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, staticFriction)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticFriction)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ, frictionCombineMode)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrictionCombineMode)(UPhysicalMaterial* obj_p0, tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideFrictionCombineMode)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideFrictionCombineMode)(UPhysicalMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, restitution)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrestitution)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ, restitutionCombineMode)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrestitutionCombineMode)(UPhysicalMaterial* obj_p0, tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideRestitutionCombineMode)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideRestitutionCombineMode)(UPhysicalMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, density)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdensity)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepLinearVelocityThreshold)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsleepLinearVelocityThreshold)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepAngularVelocityThreshold)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsleepAngularVelocityThreshold)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sleepCounterThreshold)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsleepCounterThreshold)(UPhysicalMaterial* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, raiseMassToPower)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setraiseMassToPower)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamageThresholdScale)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamageThresholdScale)(UPhysicalMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA, surfaceType)(UPhysicalMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsurfaceType)(UPhysicalMaterial* obj_p0, tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepSlate)(void);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, buttonStyle)(UButtonWidgetStyle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbuttonStyle)(UButtonWidgetStyle_* obj_p0, FButtonStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FProgressBarStyle*, progressBarStyle)(UProgressWidgetStyle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprogressBarStyle)(UProgressWidgetStyle_* obj_p0, FProgressBarStyle val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEngine)(void);
N_LIB_PRIVATE N_NIMCALL(UObject*, object)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setobject)(UAssetExportTask_* obj_p0, UObject* val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, filename)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfilename)(UAssetExportTask_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSelected)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSelected)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplaceIdentical)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplaceIdentical)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPrompt)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPrompt)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutomated)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutomated)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFileArchive)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFileArchive)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWriteEmptyFiles)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWriteEmptyFiles)(UAssetExportTask_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA*, ignoreObjectList)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setignoreObjectList)(UAssetExportTask_* obj_p0, TY__meGclu4l9cwnqbgiIjRtfhA val_p1);
N_LIB_PRIVATE N_NIMCALL(UObject*, options)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoptions)(UAssetExportTask_* obj_p0, UObject* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, errors)(UAssetExportTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, seterrors)(UAssetExportTask_* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(UBlueprintAsyncActionBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkyLightComponent_*, lightComponent)(ASkyLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightComponent)(ASkyLight_* obj_p0, USkyLightComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numCinematicMipLevels)(UStreamableRenderAsset* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumCinematicMipLevels)(UStreamableRenderAsset* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, neverStream)(UStreamableRenderAsset* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setneverStream)(UStreamableRenderAsset* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGlobalForceMipLevelsToBeResident)(UStreamableRenderAsset* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbGlobalForceMipLevelsToBeResident)(UStreamableRenderAsset* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceMipLevelsToBeResident_)(UStreamableRenderAsset* self_p0, NF32 seconds_p1, NI32 cinematicLODGroupMask_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustBrightness)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustBrightness)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustBrightnessCurve)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustBrightnessCurve)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustVibrance)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustVibrance)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustSaturation)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustSaturation)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustRGBCurve)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustRGBCurve)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustHue)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustHue)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustMinAlpha)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustMinAlpha)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustMaxAlpha)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadjustMaxAlpha)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, compressionNoAlpha)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionNoAlpha)(UTexture* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, compressFinal)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompressFinal)(UTexture* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, deferCompression)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeferCompression)(UTexture* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ, lossyCompressionAmount)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlossyCompressionAmount)(UTexture* obj_p0, tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, oodleTextureSdkVersion)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoodleTextureSdkVersion)(UTexture* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxTextureSize)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxTextureSize)(UTexture* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg, compressionQuality)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionQuality)(UTexture* obj_p0, tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoScaleMipsForAlphaCoverage)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDoScaleMipsForAlphaCoverage)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4*, alphaCoverageThresholds)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalphaCoverageThresholds)(UTexture* obj_p0, FVector4 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseNewMipFilter)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseNewMipFilter)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPreserveBorder)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPreserveBorder)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFlipGreenChannel)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFlipGreenChannel)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g, powerOfTwoMode)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpowerOfTwoMode)(UTexture* obj_p0, tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, paddingColor)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpaddingColor)(UTexture* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bChromaKeyTexture)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbChromaKeyTexture)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, chromaKeyThreshold)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchromaKeyThreshold)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, chromaKeyColor)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchromaKeyColor)(UTexture* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ, mipGenSettings)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmipGenSettings)(UTexture* obj_p0, tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, compositeTexture)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeTexture)(UTexture* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig, compositeTextureMode)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeTextureMode)(UTexture* obj_p0, tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, compositePower)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompositePower)(UTexture* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, lODBias)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODBias)(UTexture* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw, compressionSettings)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionSettings)(UTexture* obj_p0, tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag, filter)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfilter)(UTexture* obj_p0, tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw, mipLoadOptions)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmipLoadOptions)(UTexture* obj_p0, tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg, cookPlatformTilingSettings)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcookPlatformTilingSettings)(UTexture* obj_p0, tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw, lODGroup)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODGroup)(UTexture* obj_p0, tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, sRGB)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsRGB)(UTexture* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNormalizeNormals)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNormalizeNormals)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLegacyGamma)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLegacyGamma)(UTexture* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FTextureSourceColorSettings*, sourceColorSettings)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceColorSettings)(UTexture* obj_p0, FTextureSourceColorSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, virtualTextureStreaming)(UTexture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureStreaming)(UTexture* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, computeTextureSourceChannelMinMax_)(UTexture* self_p0, FLinearColor& outColorMin_p1, FLinearColor& outColorMax_p2);
N_LIB_PRIVATE N_NIMCALL(void, blueprint_GetTextureSourceDiskAndMemorySize_)(UTexture* self_p0, NI64& outDiskSize_p1, NI64& outMemorySize_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, blueprint_GetMemorySize_)(UTexture* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTimecode, getTimecode_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETimecodeProviderSynchronizationState__7yX6oALT9bm9caipovYyZdxQ, getSynchronizationState_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, getQualifiedFrameTime_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, getFrameRate_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTimecode, getDelayedTimecode_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, getDelayedQualifiedFrameTime_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fetchTimecode_)(UTimecodeProvider_* self_p0, FQualifiedFrameTime& outFrameTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, fetchAndUpdate_)(UTimecodeProvider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshComponent*, staticMeshComponent)(AStaticMeshActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMeshComponent)(AStaticMeshActor_* obj_p0, UStaticMeshComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMobility_)(AStaticMeshActor_* self_p0, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg inMobility_p1);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, getSkeleton_)(UAnimationAsset* inAsset_p0);
N_LIB_PRIVATE N_NIMCALL(FEmptyPayload_, getPayload_)(FAnimDataModelNotifPayload_& payload_p0);
N_LIB_PRIVATE N_NIMCALL(void, copyPayload_)(FAnimDataModelNotifPayload_& payload_p0, UScriptStruct* expectedStruct_p1, FEmptyPayload_& outPayload_p2);
N_LIB_PRIVATE N_NIMCALL(TY__Bz8EFFwaAOJiUrMHOIgVGw, getScaleKeys_)(FRawAnimSequenceTrack& track_p0);
N_LIB_PRIVATE N_NIMCALL(TY__r61x9a9aUIJyVmP9bIukwh3zg, getRotationalKeys_)(FRawAnimSequenceTrack& track_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Bz8EFFwaAOJiUrMHOIgVGw, getPositionalKeys_)(FRawAnimSequenceTrack& track_p0);
N_LIB_PRIVATE N_NIMCALL(UReflectionCaptureComponent_*, captureComponent)(AReflectionCapture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponent)(AReflectionCapture_* obj_p0, UReflectionCaptureComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addTransformAttribute_)(UAnimSequenceBase* animSequenceBase_p0, FName& attributeName_p1, FName& boneName_p2, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& keys_p3, TY__ZRKjvD0LxpBKI8XAOc3PKg& values_p4);
N_LIB_PRIVATE N_NIMCALL(ULightComponent*, lightComponent)(ALight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightComponent)(ALight_* obj_p0, ULightComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleEnabled_)(ALight_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionScale_)(ALight_* self_p0, FVector newLightFunctionScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionMaterial_)(ALight_* self_p0, UMaterialInterface* newLightFunctionMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionFadeDistance_)(ALight_* self_p0, NF32 newLightFunctionFadeDistance_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(ALight_* self_p0, FLinearColor newLightColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnabled_)(ALight_* self_p0, NIM_BOOL bSetEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadows_)(ALight_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrightness_)(ALight_* self_p0, NF32 newBrightness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectTranslucentLighting_)(ALight_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEnabled_)(ALight_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLightColor_)(ALight_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getBrightness_)(ALight_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UExponentialHeightFogComponent_*, component)(AExponentialHeightFog_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcomponent)(AExponentialHeightFog_* obj_p0, UExponentialHeightFogComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(USpotLightComponent*, spotLightComponent)(ASpotLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspotLightComponent)(ASpotLight_* obj_p0, USpotLightComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOuterConeAngle_)(ASpotLight_* self_p0, NF32 newOuterConeAngle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInnerConeAngle_)(ASpotLight_* self_p0, NF32 newInnerConeAngle_p1);
N_LIB_PRIVATE N_NIMCALL(void, updateCurveNamesFromSkeleton_)(UAnimationDataController* self_p0, USkeleton* skeleton_p1, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setTransformCurveKeys_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, TY__ZRKjvD0LxpBKI8XAOc3PKg& transformValues_p2, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setTransformCurveKey_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NF32 time_p2, FTransform& value_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(void, setPlayLength_)(UAnimationDataController* self_p0, NF32 length_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfFrames_)(UAnimationDataController* self_p0, FFrameNumber newLengthInFrames_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(void, setModel_)(UAnimationDataController* self_p0, TY__2oFl2vye442IAermOsWYpg inModel_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFrameRate_)(UAnimationDataController* self_p0, FFrameRate frameRate_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveKeys_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, TY__vtilWHQcza9aBHc3YkFx5Bw& curveKeys_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveKey_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, FRichCurveKey& key_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveFlags_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NI32 flags_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveFlag_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, tyEnum_EAnimAssetCurveFlags__rdCcgUF0ueMLtHjAQ9a49a3Q flag_p2, NIM_BOOL bState_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveColor_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, FLinearColor color_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setBoneTrackKeys_)(UAnimationDataController* self_p0, FName boneName_p1, TY__Bz8EFFwaAOJiUrMHOIgVGw& positionalKeys_p2, TY__r61x9a9aUIJyVmP9bIukwh3zg& rotationalKeys_p3, TY__Bz8EFFwaAOJiUrMHOIgVGw& scalingKeys_p4, NIM_BOOL bShouldTransact_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, scaleCurve_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NF32 origin_p2, NF32 factor_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(void, resizePlayLength_)(UAnimationDataController* self_p0, NF32 newLength_p1, NF32 t0_p2, NF32 t1_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(void, resizeNumberOfFrames_)(UAnimationDataController* self_p0, FFrameNumber newLengthInFrames_p1, FFrameNumber t0_p2, FFrameNumber t1_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(void, resizeInFrames_)(UAnimationDataController* self_p0, FFrameNumber newLengthInFrames_p1, FFrameNumber t0_p2, FFrameNumber t1_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(void, resize_)(UAnimationDataController* self_p0, NF32 length_p1, NF32 t0_p2, NF32 t1_p3, NIM_BOOL bShouldTransact_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renameCurve_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveToRenameId_p1, FAnimationCurveIdentifier_& newCurveId_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeTransformCurveKey_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NF32 time_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCurveKey_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NF32 time_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCurve_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeBoneTrack_)(UAnimationDataController* self_p0, FName boneName_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeAttributeKey_)(UAnimationDataController* self_p0, FAnimationAttributeIdentifier_& attributeIdentifier_p1, NF32 time_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeAttribute_)(UAnimationDataController* self_p0, FAnimationAttributeIdentifier_& attributeIdentifier_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCurvesOfType_)(UAnimationDataController* self_p0, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeAllBoneTracks_)(UAnimationDataController* self_p0, NIM_BOOL bShouldTransact_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllAttributesForBone_)(UAnimationDataController* self_p0, FName& boneName_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllAttributes_)(UAnimationDataController* self_p0, NIM_BOOL bShouldTransact_p1);
N_LIB_PRIVATE N_NIMCALL(void, openBracket_)(UAnimationDataController* self_p0, FText& inTitle_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, insertBoneTrack_)(UAnimationDataController* self_p0, FName boneName_p1, NI32 desiredIndex_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(TY__2oFl2vye442IAermOsWYpg, getModelInterface_)(UAnimationDataController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, findOrAddCurveNamesOnSkeleton_)(UAnimationDataController* self_p0, USkeleton* skeleton_p1, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, duplicateCurve_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& copyCurveId_p1, FAnimationCurveIdentifier_& newCurveId_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, duplicateAttribute_)(UAnimationDataController* self_p0, FAnimationAttributeIdentifier_& attributeIdentifier_p1, FAnimationAttributeIdentifier_& newAttributeIdentifier_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(void, closeBracket_)(UAnimationDataController* self_p0, NIM_BOOL bShouldTransact_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addCurve_)(UAnimationDataController* self_p0, FAnimationCurveIdentifier_& curveId_p1, NI32 curveFlags_p2, NIM_BOOL bShouldTransact_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, addBoneTrack_)(UAnimationDataController* self_p0, FName boneName_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addBoneCurve_)(UAnimationDataController* self_p0, FName boneName_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addAttribute_)(UAnimationDataController* self_p0, FAnimationAttributeIdentifier_& attributeIdentifier_p1, NIM_BOOL bShouldTransact_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidBoneTrackName_)(UAnimationDataModel_* self_p0, FName& trackName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidBoneTrackIndex_)(UAnimationDataModel_* self_p0, NI32 trackIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF, getPlayLength_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumBoneTracks_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfTransformCurves_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfKeys_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfFrames_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfFloatCurves_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, getFrameRate_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getBoneTrackNames_)(UAnimationDataModel_* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneTrackIndexByName_)(UAnimationDataModel_* self_p0, FName trackName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneTrackIndex_)(UAnimationDataModel_* self_p0, FBoneAnimationTrack_& track_p1);
N_LIB_PRIVATE N_NIMCALL(FBoneAnimationTrack_, getBoneTrackByName_)(UAnimationDataModel_* self_p0, FName trackName_p1);
N_LIB_PRIVATE N_NIMCALL(FBoneAnimationTrack_, getBoneTrackByIndex_)(UAnimationDataModel_* self_p0, NI32 trackIndex_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Gur0dFjg9byOJEgqd1KOiLg, getBoneAnimationTracks_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAnimSequence_*, getAnimationSequence_)(UAnimationDataModel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimTrailing_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimPrecedingAndTrailing_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimPreceding_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textToUpper_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textToLower_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsTransient_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsFromStringTable_)(FText& text_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsEmpty_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsCultureInvariant_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, textFromStringTable_)(FName tableId_p0, FString key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, stringTableIdAndKeyFromText_)(FText text_p0, FName& outTableId_p1, FString& outKey_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_TextText_)(FText& a_p0, FText& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_IgnoreCase_TextText_)(FText& a_p0, FText& b_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getEmptyText_)(void);
N_LIB_PRIVATE N_NIMCALL(FText, format_)(FText inPattern_p0, TY__Hr8ModhbWslsFNX2oLz1GA inArgs_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, findTextInLocalizationTable_)(FString namespace_p0, FString key_p1, FText& outText_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_TextText_)(FText& a_p0, FText& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_IgnoreCase_TextText_)(FText& a_p0, FText& b_p1);
N_LIB_PRIVATE N_NIMCALL(FText, conv_VectorToText_)(FVector inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_Vector2dToText_)(FVector2D inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_TransformToText_)(FTransform& inTrans_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_TextToString_)(FText& inText_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_StringToText_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_RotatorToText_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ObjectToText_)(UObject* inObj_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_NameToText_)(FName inName_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_IntToText_)(NI32 value_p0, NIM_BOOL bAlwaysSign_p1, NIM_BOOL bUseGrouping_p2, NI32 minimumIntegralDigits_p3, NI32 maximumIntegralDigits_p4);
N_LIB_PRIVATE N_NIMCALL(FText, conv_Int64ToText_)(NI64 value_p0, NIM_BOOL bAlwaysSign_p1, NIM_BOOL bUseGrouping_p2, NI32 minimumIntegralDigits_p3, NI32 maximumIntegralDigits_p4);
N_LIB_PRIVATE N_NIMCALL(FText, conv_DoubleToText_)(NF value_p0, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode_p1, NIM_BOOL bAlwaysSign_p2, NIM_BOOL bUseGrouping_p3, NI32 minimumIntegralDigits_p4, NI32 maximumIntegralDigits_p5, NI32 minimumFractionalDigits_p6, NI32 maximumFractionalDigits_p7);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ColorToText_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ByteToText_)(NU8 value_p0);
N_LIB_PRIVATE N_NIMCALL(FText, conv_BoolToText_)(NIM_BOOL inBool_p0);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneTime_DateTime_)(FDateTime& inDateTime_p0, FString inTimeZone_p1);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneDateTime_DateTime_)(FDateTime& inDateTime_p0, FString inTimeZone_p1);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneDate_DateTime_)(FDateTime& inDateTime_p0, FString inTimeZone_p1);
N_LIB_PRIVATE N_NIMCALL(FText, asTimespan_Timespan_)(FTimespan& inTimespan_p0);
N_LIB_PRIVATE N_NIMCALL(FText, asTime_DateTime_)(FDateTime& in_p0);
N_LIB_PRIVATE N_NIMCALL(FText, asPercent_Float_)(NF32 value_p0, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode_p1, NIM_BOOL bAlwaysSign_p2, NIM_BOOL bUseGrouping_p3, NI32 minimumIntegralDigits_p4, NI32 maximumIntegralDigits_p5, NI32 minimumFractionalDigits_p6, NI32 maximumFractionalDigits_p7);
N_LIB_PRIVATE N_NIMCALL(FText, asDateTime_DateTime_)(FDateTime& in_p0);
N_LIB_PRIVATE N_NIMCALL(FText, asDate_DateTime_)(FDateTime& inDateTime_p0);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrencyBase_)(NI32 baseValue_p0, FString currencyCode_p1);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrency_Integer_)(NI32 value_p0, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode_p1, NIM_BOOL bAlwaysSign_p2, NIM_BOOL bUseGrouping_p3, NI32 minimumIntegralDigits_p4, NI32 maximumIntegralDigits_p5, NI32 minimumFractionalDigits_p6, NI32 maximumFractionalDigits_p7, FString currencyCode_p8);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrency_Float_)(NF32 value_p0, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode_p1, NIM_BOOL bAlwaysSign_p2, NIM_BOOL bUseGrouping_p3, NI32 minimumIntegralDigits_p4, NI32 maximumIntegralDigits_p5, NI32 minimumFractionalDigits_p6, NI32 maximumFractionalDigits_p7, FString currencyCode_p8);
N_LIB_PRIVATE N_NIMCALL(TY__9cPzWpX39aro9ack5dbCvRImQ, worldAsset)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setworldAsset)(ULevelStreaming_* obj_p0, TY__9cPzWpX39aro9ack5dbCvRImQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, streamingPriority)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingPriority)(ULevelStreaming_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform*, levelTransform)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlevelTransform)(ULevelStreaming_* obj_p0, FTransform val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, levelLODIndex)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlevelLODIndex)(ULevelStreaming_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBeVisible)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBeVisible)(ULevelStreaming_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBeLoaded)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBeLoaded)(ULevelStreaming_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBlockOnLoad)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBlockOnLoad)(ULevelStreaming_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBlockOnUnload)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBlockOnUnload)(ULevelStreaming_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableDistanceStreaming)(ULevelStreaming_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableDistanceStreaming)(ULevelStreaming_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldBeLoaded_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBeVisible_)(ULevelStreaming_* self_p0, NIM_BOOL bInShouldBeVisible_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBeLoaded_)(ULevelStreaming_* self_p0, NIM_BOOL bInShouldBeLoaded_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(ULevelStreaming_* self_p0, NI32 newPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLevelLODIndex_)(ULevelStreaming_* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsRequestingUnloadAndRemoval_)(ULevelStreaming_* self_p0, NIM_BOOL bInIsRequestingUnloadAndRemoval_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingStatePending_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLevelVisible_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLevelLoaded_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getWorldAssetPackageFName_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(ULevel*, getLoadedLevel_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(ALevelScriptActor_*, getLevelScriptActor_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsRequestingUnloadAndRemoval_)(ULevelStreaming_* self_p0);
N_LIB_PRIVATE N_NIMCALL(ULevelStreaming_*, createInstance_)(ULevelStreaming_* self_p0, FString uniqueInstanceName_p1);
N_LIB_PRIVATE N_NIMCALL(ULevelStreamingDynamic_*, loadLevelInstanceBySoftObjectPtr_)(UObject* worldContextObject_p0, TY__9cPzWpX39aro9ack5dbCvRImQ level_p1, FVector location_p2, FRotator rotation_p3, NIM_BOOL& bOutSuccess_p4, FString optionalLevelNameOverride_p5, TY__cf9bOIrRZamf1HVVF7c2pXA optionalLevelStreamingClass_p6, NIM_BOOL bLoadAsTempPackage_p7);
N_LIB_PRIVATE N_NIMCALL(ULevelStreamingDynamic_*, loadLevelInstance_)(UObject* worldContextObject_p0, FString levelName_p1, FVector location_p2, FRotator rotation_p3, NIM_BOOL& bOutSuccess_p4, FString optionalLevelNameOverride_p5, TY__cf9bOIrRZamf1HVVF7c2pXA optionalLevelStreamingClass_p6, NIM_BOOL bLoadAsTempPackage_p7);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, streamingLevelNames)(ALevelStreamingVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingLevelNames)(ALevelStreamingVolume_* obj_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEditorPreVisOnly)(ALevelStreamingVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEditorPreVisOnly)(ALevelStreamingVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisabled)(ALevelStreamingVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisabled)(ALevelStreamingVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw, streamingUsage)(ALevelStreamingVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingUsage)(ALevelStreamingVolume_* obj_p0, tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UTexture2D* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UTexture2D* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UTexture2D* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UTexture2D* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, blueprint_GetSizeY_)(UTexture2D* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, blueprint_GetSizeX_)(UTexture2D* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, FVector param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setUseAutoManageAttachment_)(UFXSystemComponent* self_p0, NIM_BOOL bAutoManage_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIntParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, NI32 param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, NF32 param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEmitterEnable_)(UFXSystemComponent* self_p0, FName emitterName_p1, NIM_BOOL bNewEnableState_p2);
N_LIB_PRIVATE N_NIMCALL(void, setColorParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, FLinearColor param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBoolParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, NIM_BOOL param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAutoAttachmentParameters_)(UFXSystemComponent* self_p0, USceneComponent* parent_p1, FName socketName_p2, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule_p3, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule_p4, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule_p5);
N_LIB_PRIVATE N_NIMCALL(void, setActorParameter_)(UFXSystemComponent* self_p0, FName parameterName_p1, AActor* param_p2);
N_LIB_PRIVATE N_NIMCALL(void, releaseToPool_)(UFXSystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UFXSystemAsset*, getFXSystemAsset_)(UFXSystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getPhysicsObjectWorldTransform_)(UPrimitiveComponent* component_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, getClosestPhysicsObjectFromWorldLocation_)(UPrimitiveComponent* component_p0, FVector& worldLocation_p1, FClosestPhysicsObjectResult_* Result);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, extractClosestPhysicsObjectResults_)(FClosestPhysicsObjectResult_& Result_p0, FName& outName_p1);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(FBodyInstanceAsyncPhysicsTickHandle handle_p0, FVector force_p1, NIM_BOOL bAccelChange_p2);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, sceneComponent)(ASceneCapture* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsceneComponent)(ASceneCapture* obj_p0, USceneComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UPlanarReflectionComponent_*, planarReflectionComponent)(APlanarReflection_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplanarReflectionComponent)(APlanarReflection_* obj_p0, UPlanarReflectionComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(APlanarReflection_* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPluginMounted_)(FString pluginName_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginVersionName_)(FString pluginName_p0, FString& outVersionName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginVersion_)(FString pluginName_p0, NI32& outVersion_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginNameForObjectPath_)(FSoftObjectPath& objectPath_p0, FString& outPluginName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginMountedAssetPath_)(FString pluginName_p0, FString& outAssetPath_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginEditorCustomVirtualPath_)(FString pluginName_p0, FString& outVirtualPath_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginDescriptorFilePath_)(FString pluginName_p0, FString& outFilePath_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginDescription_)(FString pluginName_p0, FString& outDescription_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginContentDir_)(FString pluginName_p0, FString& outContentDir_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginBaseDir_)(FString pluginName_p0, FString& outBaseDir_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEnabledPluginNames_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAdditionalProjectPluginSearchPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAdditionalPluginSearchPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(UPointLightComponent*, pointLightComponent)(APointLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpointLightComponent)(APointLight_* obj_p0, UPointLightComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(APointLight_* self_p0, NF32 newRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFalloffExponent_)(APointLight_* self_p0, NF32 newLightFalloffExponent_p1);
N_LIB_PRIVATE N_NIMCALL(USceneCaptureComponent2D_*, captureComponent2D)(ASceneCapture2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponent2D)(ASceneCapture2D_* obj_p0, USceneCaptureComponent2D_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(ASceneCapture2D_* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(USceneCaptureComponentCube_*, captureComponentCube)(ASceneCaptureCube_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponentCube)(ASceneCaptureCube_* obj_p0, USceneCaptureComponentCube_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(ASceneCaptureCube_* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, socketName)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsocketName)(USkeletalMeshSocket_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, boneName)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setboneName)(USkeletalMeshSocket_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(USkeletalMeshSocket_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(USkeletalMeshSocket_* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale)(USkeletalMeshSocket_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceAlwaysAnimated)(USkeletalMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceAlwaysAnimated)(USkeletalMeshSocket_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, initializeSocketFromLocation_)(USkeletalMeshSocket_* self_p0, USkeletalMeshComponent* skelComp_p1, FVector worldLocation_p2, FVector worldNormal_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getSocketLocation_)(USkeletalMeshSocket_* self_p0, USkeletalMeshComponent* skelComp_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, socketName)(UStaticMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsocketName)(UStaticMeshSocket_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(UStaticMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(UStaticMeshSocket_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(UStaticMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(UStaticMeshSocket_* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale)(UStaticMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale)(UStaticMeshSocket_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, tag)(UStaticMeshSocket_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settag)(UStaticMeshSocket_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextRenderComponent_*, textRender)(ATextRenderActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextRender)(ATextRenderActor_* obj_p0, UTextRenderComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UShapeComponent*, collisionComponent)(ATriggerBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(ATriggerBase_* obj_p0, UShapeComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UBillboardComponent_*, spriteComponent)(ATriggerBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspriteComponent)(ATriggerBase_* obj_p0, UBillboardComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notifyStateReachedEnd_)(FAnimNotifyEventReference& eventReference_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTriggeredByMirroredAnimation_)(FAnimNotifyEventReference& eventReference_p0);
N_LIB_PRIVATE N_NIMCALL(UMirrorDataTable_*, getMirrorDataTable_)(FAnimNotifyEventReference& eventReference_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAnimationAttributeIdentifier_& identifier_p0);
N_LIB_PRIVATE N_NIMCALL(FAnimationAttributeIdentifier_, createAttributeIdentifier_)(UAnimationAsset* animationAsset_p0, FName attributeName_p1, FName boneName_p2, UScriptStruct* attributeType_p3, NIM_BOOL bValidateExistsOnAsset_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAnimationCurveIdentifier_& identifier_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg, getType_)(FAnimationCurveIdentifier_& identifier_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformChildCurveIdentifier_)(FAnimationCurveIdentifier_& inOutIdentifier_p0, tyEnum_ETransformCurveChannel__sG9cBroBwptcTasMM12j8Dg channel_p1, tyEnum_EVectorCurveChannel__58B9b1w9bqluWs3jPQdB1c6A axis_p2);
N_LIB_PRIVATE N_NIMCALL(FName, getName_)(FAnimationCurveIdentifier_& identifier_p0);
N_LIB_PRIVATE N_NIMCALL(TY__q0YKngudVysxlVXqMDII4A, getCurveIdentifiers_)(USkeleton* inSkeleton_p0, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType_p1);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveIdentifier_, getCurveIdentifier_)(USkeleton* inSkeleton_p0, FName name_p1, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType_p2);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveIdentifier_, findCurveIdentifier_)(USkeleton* inSkeleton_p0, FName name_p1, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType_p2);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAsset*, asyncLoadPrimaryAsset_)(UObject* worldContextObject_p0, FPrimaryAssetId primaryAsset_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles_p2);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetClass*, asyncLoadPrimaryAssetClass_)(UObject* worldContextObject_p0, FPrimaryAssetId primaryAsset_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles_p2);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetList*, asyncLoadPrimaryAssetList_)(UObject* worldContextObject_p0, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles_p2);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetClassList*, asyncLoadPrimaryAssetClassList_)(UObject* worldContextObject_p0, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles_p2);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionChangePrimaryAssetBundles*, asyncChangeBundleStateForPrimaryAssetList_)(UObject* worldContextObject_p0, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& addBundles_p2, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& removeBundles_p3);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionChangePrimaryAssetBundles*, asyncChangeBundleStateForMatchingPrimaryAssets_)(UObject* worldContextObject_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& newBundles_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& oldBundles_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSunMultiplier_)(UAtmosphericFogComponent_* self_p0, NF32 newSunMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStartDistance_)(UAtmosphericFogComponent_* self_p0, NF32 newStartDistance_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPrecomputeParams_)(UAtmosphericFogComponent_* self_p0, NF32 densityHeight_p1, NI32 maxScatteringOrder_p2, NI32 inscatterAltitudeSampleNum_p3);
N_LIB_PRIVATE N_NIMCALL(void, setFogMultiplier_)(UAtmosphericFogComponent_* self_p0, NF32 newFogMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceScale_)(UAtmosphericFogComponent_* self_p0, NF32 newDistanceScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceOffset_)(UAtmosphericFogComponent_* self_p0, NF32 newDistanceOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDensityOffset_)(UAtmosphericFogComponent_* self_p0, NF32 newDensityOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDensityMultiplier_)(UAtmosphericFogComponent_* self_p0, NF32 newDensityMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultLightColor_)(UAtmosphericFogComponent_* self_p0, FLinearColor newLightColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultBrightness_)(UAtmosphericFogComponent_* self_p0, NF32 newBrightness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAltitudeScale_)(UAtmosphericFogComponent_* self_p0, NF32 newAltitudeScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, disableSunDisk_)(UAtmosphericFogComponent_* self_p0, NIM_BOOL newSunDisk_p1);
N_LIB_PRIVATE N_NIMCALL(void, disableGroundScattering_)(UAtmosphericFogComponent_* self_p0, NIM_BOOL newGroundScattering_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMapPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__wpSBE9cf2usnCI0KGFU04xQ& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, map_Values_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, TY__TxfK2fhRJXNHttPFRcL6fA& values_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Remove_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, NI32& key_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, map_Length_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0);
N_LIB_PRIVATE N_NIMCALL(void, map_Keys_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, TY__TxfK2fhRJXNHttPFRcL6fA& keys_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_IsNotEmpty_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_IsEmpty_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Find_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, NI32& key_p1, NI32& value_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Contains_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, NI32& key_p1);
N_LIB_PRIVATE N_NIMCALL(void, map_Clear_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0);
N_LIB_PRIVATE N_NIMCALL(void, map_Add_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap_p0, NI32& key_p1, NI32& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSetPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__bdlO5kVNTRv59cPOoXMIbHw& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, set_Union_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a_p0, TY__bdlO5kVNTRv59cPOoXMIbHw& b_p1, TY__bdlO5kVNTRv59cPOoXMIbHw& Result_p2);
N_LIB_PRIVATE N_NIMCALL(void, set_ToArray_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a_p0, TY__TxfK2fhRJXNHttPFRcL6fA& Result_p1);
N_LIB_PRIVATE N_NIMCALL(void, set_RemoveItems_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0, TY__TxfK2fhRJXNHttPFRcL6fA& items_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_Remove_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0, NI32& item_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, set_Length_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_IsNotEmpty_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_IsEmpty_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0);
N_LIB_PRIVATE N_NIMCALL(void, set_Intersection_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a_p0, TY__bdlO5kVNTRv59cPOoXMIbHw& b_p1, TY__bdlO5kVNTRv59cPOoXMIbHw& Result_p2);
N_LIB_PRIVATE N_NIMCALL(void, set_Difference_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a_p0, TY__bdlO5kVNTRv59cPOoXMIbHw& b_p1, TY__bdlO5kVNTRv59cPOoXMIbHw& Result_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_Contains_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0, NI32& itemToFind_p1);
N_LIB_PRIVATE N_NIMCALL(void, set_Clear_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0);
N_LIB_PRIVATE N_NIMCALL(void, set_AddItems_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0, TY__TxfK2fhRJXNHttPFRcL6fA& newItems_p1);
N_LIB_PRIVATE N_NIMCALL(void, set_Add_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet_p0, NI32& newItem_p1);
N_LIB_PRIVATE N_NIMCALL(UFXSystemComponent*, getPrimaryParticleComponent_)(UCameraLensEffectInterface_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Qu3WcNhn1GZqsD9bMGcV3pQ, getParticleComponents_)(UCameraLensEffectInterface_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setInterfaceClass_)(TY__9akcXb9b3ftlkdW8NDwR22Mg class_p0, FCameraLensInterfaceClassSupport_& var_p1, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result_p2);
N_LIB_PRIVATE N_NIMCALL(void, isInterfaceValid_)(TY__hvmi1aSu7TExY3gfL1PBlA& cameraLens_p0, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result_p1);
N_LIB_PRIVATE N_NIMCALL(void, isInterfaceClassValid_)(FCameraLensInterfaceClassSupport_& cameraLens_p0, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, getInterfaceClass_)(FCameraLensInterfaceClassSupport_& cameraLens_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, targetGamma)(UTextureRenderTarget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetGamma)(UTextureRenderTarget_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTarget2D_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTarget2D_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, clearColor)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclearColor)(UTextureRenderTarget2D_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UTextureRenderTarget2D_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UTextureRenderTarget2D_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGPUSharedFlag)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbGPUSharedFlag)(UTextureRenderTarget2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w, renderTargetFormat)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrenderTargetFormat)(UTextureRenderTarget2D_* obj_p0, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoGenerateMips)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoGenerateMips)(UTextureRenderTarget2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag, mipsSamplerFilter)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmipsSamplerFilter)(UTextureRenderTarget2D_* obj_p0, tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, mipsAddressU)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmipsAddressU)(UTextureRenderTarget2D_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, mipsAddressV)(UTextureRenderTarget2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmipsAddressV)(UTextureRenderTarget2D_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, updateResource_)(UCanvasRenderTarget2D_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getSize_)(UCanvasRenderTarget2D_* self_p0, NI32& width_p1, NI32& height_p2);
N_LIB_PRIVATE N_NIMCALL(UCanvasRenderTarget2D_*, createCanvasRenderTarget2D_)(UObject* worldContextObject_p0, TY__cyRmGPtN9aq0VukEVoX3rGg canvasRenderTarget2DClass_p1, NI32 width_p2, NI32 height_p3);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UCheatManagerExtension_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setBoneTransformByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, FTransform& inTransform_p2, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBoneScaleByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, FVector inScale3D_p2, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBoneRotationByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, FRotator inRotation_p2, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBoneLocationByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, FVector inLocation_p2, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p3);
N_LIB_PRIVATE N_NIMCALL(void, resetBoneTransformByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform, getBoneTransformByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneScaleByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBoneRotationByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneLocationByName_)(UPoseableMeshComponent_* self_p0, FName boneName_p1, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace_p2);
N_LIB_PRIVATE N_NIMCALL(void, copyPoseFromSkeletalComponent_)(UPoseableMeshComponent_* self_p0, USkeletalMeshComponent* inComponentToCopy_p1);
N_LIB_PRIVATE N_NIMCALL(TY__M4MmxYh2DRWibpvAY9b1bhg*, parentTables)(UCompositeCurveTable_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparentTables)(UCompositeCurveTable_* obj_p0, TY__M4MmxYh2DRWibpvAY9b1bhg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__CsVeHH6fpx8ZgI6qaaSz3A*, parentTables)(UCompositeDataTable_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparentTables)(UCompositeDataTable_* obj_p0, TY__CsVeHH6fpx8ZgI6qaaSz3A val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__IqXdAzIoi9cCuZiE2VD1lMg*, cullDistances)(ACullDistanceVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcullDistances)(ACullDistanceVolume_* obj_p0, TY__IqXdAzIoi9cCuZiE2VD1lMg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(ACullDistanceVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(ACullDistanceVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, getDataTableRowNames_)(UDataTable* table_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outRowNames_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDataTableRowFromName_)(UDataTable* table_p0, FName rowName_p1, FTableRowBase& outRow_p2);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getDataTableColumnAsString_)(UDataTable* dataTable_p0, FName propertyName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromJSONString_)(UDataTable* dataTable_p0, FString jSONString_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromJSONFile_)(UDataTable* dataTable_p0, FString jSONFilePath_p1, UScriptStruct* importRowStruct_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromCSVString_)(UDataTable* dataTable_p0, FString cSVString_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromCSVFile_)(UDataTable* dataTable_p0, FString cSVFilePath_p1);
N_LIB_PRIVATE N_NIMCALL(void, evaluateCurveTableRow_)(UCurveTable* curveTable_p0, FName rowName_p1, NF32 inXY_p2, tyEnum_EEvaluateCurveTableResult__Cz3R9cE75Z6VtgD7SPlaxXg& outResult_p3, NF32& outXY_p4, FString contextString_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesDataTableRowExist_)(UDataTable* table_p0, FName rowName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, speedScale)(ADebugCameraController_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspeedScale)(ADebugCameraController_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialMaxSpeed)(ADebugCameraController_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialMaxSpeed)(ADebugCameraController_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialAccel)(ADebugCameraController_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialAccel)(ADebugCameraController_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialDecel)(ADebugCameraController_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialDecel)(ADebugCameraController_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleDisplay_)(ADebugCameraController_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setPawnMovementSpeedScale_)(ADebugCameraController_* self_p0, NF32 newSpeedScale_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, getSelectedActor_)(ADebugCameraController_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, decal)(ADecalActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdecal)(ADecalActor_* obj_p0, UDecalComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDecalMaterial_)(ADecalActor_* self_p0, UMaterialInterface* newDecalMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getDecalMaterial_)(ADecalActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(ADecalActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(UCancellableAsyncAction_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeDisplayDelegate_)(UViewportStatsSubsystem_* self_p0, NI32 indexToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(void, addTimedDisplay_)(UViewportStatsSubsystem_* self_p0, FText text_p1, FLinearColor color_p2, NF32 duration_p3, FVector2D& displayOffset_p4);
N_LIB_PRIVATE N_NIMCALL(void, addTimedDisplay_)(UViewportStatsSubsystem_* self_p0, FText text_p1, FLinearColor color_p2, NF32 duration_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, addDisplayDelegate_)(UViewportStatsSubsystem_* self_p0, FViewportDisplayCallback_& delegate_p1);
N_LIB_PRIVATE N_NIMCALL(FString, sourceFilename)(UFontFace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceFilename)(UFontFace_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ, hinting)(UFontFace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethinting)(UFontFace_* obj_p0, tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ, loadingPolicy)(UFontFace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setloadingPolicy)(UFontFace_* obj_p0, tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w, layoutMethod)(UFontFace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlayoutMethod)(UFontFace_* obj_p0, tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unRetainAllSoundsInSoundClass_)(USoundClass* inSoundClass_p0);
N_LIB_PRIVATE N_NIMCALL(void, unloadStreamLevelBySoftObjectPtr_)(UObject* worldContextObject_p0, TY__9cPzWpX39aro9ack5dbCvRImQ level_p1, FLatentActionInfo latentInfo_p2, NIM_BOOL bShouldBlockOnUnload_p3);
N_LIB_PRIVATE N_NIMCALL(void, unloadStreamLevel_)(UObject* worldContextObject_p0, FName levelName_p1, FLatentActionInfo latentInfo_p2, NIM_BOOL bShouldBlockOnUnload_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, suggestProjectileVelocity_CustomArc_)(UObject* worldContextObject_p0, FVector& outLaunchVelocity_p1, FVector startPos_p2, FVector endPos_p3, NF32 overrideGravityZ_p4, NF32 arcParam_p5);
N_LIB_PRIVATE N_NIMCALL(UObject*, spawnObject_)(TY__Gdb8rCprT6WGagrQes2BIg objectClass_p0, UObject* outer_p1);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackComponent_*, spawnForceFeedbackAttached_)(UForceFeedbackEffect_* forceFeedbackEffect_p0, USceneComponent* attachToComponent_p1, FName attachPointName_p2, FVector location_p3, FRotator rotation_p4, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType_p5, NIM_BOOL bStopWhenAttachedToDestroyed_p6, NIM_BOOL bLooping_p7, NF32 intensityMultiplier_p8, NF32 startTime_p9, UForceFeedbackAttenuation_* attenuationSettings_p10, NIM_BOOL bAutoDestroy_p11);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackComponent_*, spawnForceFeedbackAtLocation_)(UObject* worldContextObject_p0, UForceFeedbackEffect_* forceFeedbackEffect_p1, FVector location_p2, FRotator rotation_p3, NIM_BOOL bLooping_p4, NF32 intensityMultiplier_p5, NF32 startTime_p6, UForceFeedbackAttenuation_* attenuationSettings_p7, NIM_BOOL bAutoDestroy_p8);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, spawnEmitterAttached_)(UParticleSystem* emitterTemplate_p0, USceneComponent* attachToComponent_p1, FName attachPointName_p2, FVector location_p3, FRotator rotation_p4, FVector scale_p5, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType_p6, NIM_BOOL bAutoDestroy_p7, tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw poolingMethod_p8, NIM_BOOL bAutoActivate_p9);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, spawnEmitterAtLocation_)(UObject* worldContextObject_p0, UParticleSystem* emitterTemplate_p1, FVector location_p2, FRotator rotation_p3, FVector scale_p4, NIM_BOOL bAutoDestroy_p5, tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw poolingMethod_p6, NIM_BOOL bAutoActivateSystem_p7);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogueAttached_)(UDialogueWave_* dialogue_p0, FDialogueContext& context_p1, USceneComponent* attachToComponent_p2, FName attachPointName_p3, FVector location_p4, FRotator rotation_p5, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType_p6, NIM_BOOL bStopWhenAttachedToDestroyed_p7, NF32 volumeMultiplier_p8, NF32 pitchMultiplier_p9, NF32 startTime_p10, USoundAttenuation* attenuationSettings_p11, NIM_BOOL bAutoDestroy_p12);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogueAtLocation_)(UObject* worldContextObject_p0, UDialogueWave_* dialogue_p1, FDialogueContext& context_p2, FVector location_p3, FRotator rotation_p4, NF32 volumeMultiplier_p5, NF32 pitchMultiplier_p6, NF32 startTime_p7, USoundAttenuation* attenuationSettings_p8, NIM_BOOL bAutoDestroy_p9);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogue2D_)(UObject* worldContextObject_p0, UDialogueWave_* dialogue_p1, FDialogueContext& context_p2, NF32 volumeMultiplier_p3, NF32 pitchMultiplier_p4, NF32 startTime_p5, NIM_BOOL bAutoDestroy_p6);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, spawnDecalAttached_)(UMaterialInterface* decalMaterial_p0, FVector decalSize_p1, USceneComponent* attachToComponent_p2, FName attachPointName_p3, FVector location_p4, FRotator rotation_p5, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType_p6, NF32 lifeSpan_p7);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, spawnDecalAtLocation_)(UObject* worldContextObject_p0, UMaterialInterface* decalMaterial_p1, FVector decalSize_p2, FVector location_p3, FRotator rotation_p4, NF32 lifeSpan_p5);
N_LIB_PRIVATE N_NIMCALL(void, setWorldOriginLocation_)(UObject* worldContextObject_p0, FIntVector newLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewportMouseCaptureMode_)(UObject* worldContextObject_p0, tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g mouseCaptureMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSubtitlesEnabled_)(NIM_BOOL bEnabled_p0);
N_LIB_PRIVATE N_NIMCALL(void, setSoundMixClassOverride_)(UObject* worldContextObject_p0, USoundMix_* inSoundMixModifier_p1, USoundClass* inSoundClass_p2, NF32 volume_p3, NF32 pitch_p4, NF32 fadeInTime_p5, NIM_BOOL bApplyToChildren_p6);
N_LIB_PRIVATE N_NIMCALL(void, setSoundClassDistanceScale_)(UObject* worldContextObject_p0, USoundClass* soundClass_p1, NF32 distanceAttenuationScale_p2, NF32 timeSec_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPlayerPlatformUserId_)(APlayerController* playerController_p0, FPlatformUserId userId_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlayerControllerID_)(APlayerController* player_p0, NI32 controllerId_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxAudioChannelsScaled_)(UObject* worldContextObject_p0, NF32 maxChannelCountScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalTimeDilation_)(UObject* worldContextObject_p0, NF32 timeDilation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalPitchModulation_)(UObject* worldContextObject_p0, NF32 pitchModulation_p1, NF32 timeSec_p2);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalListenerFocusParameters_)(UObject* worldContextObject_p0, NF32 focusAzimuthScale_p1, NF32 nonFocusAzimuthScale_p2, NF32 focusDistanceScale_p3, NF32 nonFocusDistanceScale_p4, NF32 focusVolumeScale_p5, NF32 nonFocusVolumeScale_p6, NF32 focusPriorityScale_p7, NF32 nonFocusPriorityScale_p8);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setGamePaused_)(UObject* worldContextObject_p0, NIM_BOOL bPaused_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceDisableSplitscreen_)(UObject* worldContextObject_p0, NIM_BOOL bDisable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnableWorldRendering_)(UObject* worldContextObject_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBaseSoundMix_)(UObject* worldContextObject_p0, USoundMix_* inSoundMix_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActiveSpatialPluginByName_)(UObject* worldContextObject_p0, FName inPluginName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, saveGameToSlot_)(USaveGame_* saveGameObject_p0, FString slotName_p1, NI32 userIndex_p2);
N_LIB_PRIVATE N_NIMCALL(void, removePlayer_)(APlayerController* player_p0, NIM_BOOL bDestroyPawn_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, rebaseZeroOriginOntoLocal_)(UObject* worldContextObject_p0, FVector worldLocation_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, rebaseLocalOriginOntoZero_)(UObject* worldContextObject_p0, FVector worldLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, pushSoundMixModifier_)(UObject* worldContextObject_p0, USoundMix_* inSoundMixModifier_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldToScreen_)(APlayerController* player_p0, FVector& worldPosition_p1, FVector2D& screenPosition_p2, NIM_BOOL bPlayerViewportRelative_p3);
N_LIB_PRIVATE N_NIMCALL(void, primeAllSoundsInSoundClass_)(USoundClass* inSoundClass_p0);
N_LIB_PRIVATE N_NIMCALL(void, popSoundMixModifier_)(UObject* worldContextObject_p0, USoundMix_* inSoundMixModifier_p1);
N_LIB_PRIVATE N_NIMCALL(void, playWorldCameraShake_)(UObject* worldContextObject_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, FVector epicenter_p2, NF32 innerRadius_p3, NF32 outerRadius_p4, NF32 falloff_p5, NIM_BOOL bOrientShakeTowardsEpicenter_p6);
N_LIB_PRIVATE N_NIMCALL(void, playDialogueAtLocation_)(UObject* worldContextObject_p0, UDialogueWave_* dialogue_p1, FDialogueContext& context_p2, FVector location_p3, FRotator rotation_p4, NF32 volumeMultiplier_p5, NF32 pitchMultiplier_p6, NF32 startTime_p7, USoundAttenuation* attenuationSettings_p8);
N_LIB_PRIVATE N_NIMCALL(void, playDialogue2D_)(UObject* worldContextObject_p0, UDialogueWave_* dialogue_p1, FDialogueContext& context_p2, NF32 volumeMultiplier_p3, NF32 pitchMultiplier_p4, NF32 startTime_p5);
N_LIB_PRIVATE N_NIMCALL(FString, parseOption_)(FString options_p0, FString key_p1);
N_LIB_PRIVATE N_NIMCALL(void, openLevelBySoftObjectPtr_)(UObject* worldContextObject_p0, TY__9cPzWpX39aro9ack5dbCvRImQ level_p1, NIM_BOOL bAbsolute_p2, FString options_p3);
N_LIB_PRIVATE N_NIMCALL(void, openLevel_)(UObject* worldContextObject_p0, FName levelName_p1, NIM_BOOL bAbsolute_p2, FString options_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, objectIsA_)(UObject* object_p0, TY__Gdb8rCprT6WGagrQes2BIg objectClass_p1);
N_LIB_PRIVATE N_NIMCALL(FHitResult, makeHitResult_)(NIM_BOOL bBlockingHit_p0, NIM_BOOL bInitialOverlap_p1, NF32 time_p2, NF32 distance_p3, FVector location_p4, FVector impactPoint_p5, FVector normal_p6, FVector impactNormal_p7, UPhysicalMaterial* physMat_p8, AActor* hitActor_p9, UPrimitiveComponent* hitComponent_p10, FName hitBoneName_p11, FName boneName_p12, NI32 hitItem_p13, NI32 elementIndex_p14, NI32 faceIndex_p15, FVector traceStart_p16, FVector traceEnd_p17);
N_LIB_PRIVATE N_NIMCALL(void, loadStreamLevelBySoftObjectPtr_)(UObject* worldContextObject_p0, TY__9cPzWpX39aro9ack5dbCvRImQ level_p1, NIM_BOOL bMakeVisibleAfterLoad_p2, NIM_BOOL bShouldBlockOnLoad_p3, FLatentActionInfo latentInfo_p4);
N_LIB_PRIVATE N_NIMCALL(void, loadStreamLevel_)(UObject* worldContextObject_p0, FName levelName_p1, NIM_BOOL bMakeVisibleAfterLoad_p2, NIM_BOOL bShouldBlockOnLoad_p3, FLatentActionInfo latentInfo_p4);
N_LIB_PRIVATE N_NIMCALL(USaveGame_*, loadGameFromSlot_)(FString slotName_p0, NI32 userIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSplitscreenForceDisabled_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGamePaused_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasOption_)(FString options_p0, FString inKey_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasLaunchOption_)(FString optionToCheck_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, grassOverlappingSphereCount_)(UObject* worldContextObject_p0, UStaticMesh* staticMesh_p1, FVector centerPosition_p2, NF32 radius_p3);
N_LIB_PRIVATE N_NIMCALL(FIntVector, getWorldOriginLocation_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getWorldDeltaSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, getViewProjectionMatrix_)(FMinimalViewInfo desiredView_p0, FMatrix& viewMatrix_p1, FMatrix& projectionMatrix_p2, FMatrix& viewProjectionMatrix_p3);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g, getViewportMouseCaptureMode_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getUnpausedTimeSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getTimeSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA, getSurfaceType_)(FHitResult& hit_p0);
N_LIB_PRIVATE N_NIMCALL(ULevelStreaming_*, getStreamingLevel_)(UObject* worldContextObject_p0, FName packageName_p1);
N_LIB_PRIVATE N_NIMCALL(NF, getRealTimeSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, getPlayerStateFromUniqueNetId_)(UObject* worldContextObject_p0, FUniqueNetIdRepl& uniqueId_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, getPlayerState_)(UObject* worldContextObject_p0, NI32 playerStateIndex_p1);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPlayerPawn_)(UObject* worldContextObject_p0, NI32 playerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getPlayerControllerID_)(APlayerController* player_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromPlatformUser_)(UObject* worldContextObject_p0, FPlatformUserId userId_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromID_)(UObject* worldContextObject_p0, NI32 controllerID_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UObject* worldContextObject_p0, NI32 playerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(ACharacter*, getPlayerCharacter_)(UObject* worldContextObject_p0, NI32 playerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, getPlayerCameraManager_)(UObject* worldContextObject_p0, NI32 playerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformName_)(void);
N_LIB_PRIVATE N_NIMCALL(UClass*, getObjectClass_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayerStates_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayerControllers_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLocalPlayerControllers_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaxAudioChannelCount_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, getKeyValue_)(FString pair_p0, FString& key_p1, FString& value_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getIntOption_)(FString options_p0, FString key_p1, NI32 defaultValue_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getGlobalTimeDilation_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(AGameStateBase_*, getGameState_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(AGameModeBase*, getGameMode_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(UGameInstance*, getGameInstance_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getEnableWorldRendering_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(UReverbEffect_*, getCurrentReverbEffect_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLevelName_)(UObject* worldContextObject_p0, NIM_BOOL bRemovePrefixString_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getClosestListenerLocation_)(UObject* worldContextObject_p0, FVector& location_p1, NF32 maximumRange_p2, NIM_BOOL bAllowAttenuationOverride_p3, FVector& listenerPosition_p4);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getAvailableSpatialPluginNames_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getAudioTimeSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsWithTag_)(UObject* worldContextObject_p0, FName tag_p1, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsWithInterface_)(UObject* worldContextObject_p0, TY__KI5t49abR3sL6OsGNxWlhiQ interface_p1, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsOfClassWithTag_)(UObject* worldContextObject_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass_p1, FName tag_p2, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p3);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsOfClass_)(UObject* worldContextObject_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass_p1, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p2);
N_LIB_PRIVATE N_NIMCALL(AActor*, getActorOfClass_)(UObject* worldContextObject_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, getActorArrayBounds_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actors_p0, NIM_BOOL bOnlyCollidingComponents_p1, FVector& center_p2, FVector& boxExtent_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorArrayAverageLocation_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actors_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getActiveSpatialPluginName_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, getAccurateRealTime_)(NI32& seconds_p0, NF& partialSeconds_p1);
N_LIB_PRIVATE N_NIMCALL(void, flushLevelStreaming_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, finishSpawningActor_)(AActor* actor_p0, FTransform& spawnTransform_p1, tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg transformScaleMethod_p2);
N_LIB_PRIVATE N_NIMCALL(AActor*, findNearestActor_)(FVector origin_p0, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToCheck_p1, NF32& distance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, findCollisionUV_)(FHitResult& hit_p0, NI32 uVChannel_p1, FVector2D& uV_p2);
N_LIB_PRIVATE N_NIMCALL(void, enableLiveStreaming_)(NIM_BOOL enable_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesSaveGameExist_)(FString slotName_p0, NI32 userIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectScreenToWorld_)(APlayerController* player_p0, FVector2D& screenPosition_p1, FVector& worldPosition_p2, FVector& worldDirection_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectSceneCaptureToWorld_)(ASceneCapture2D_* sceneCapture2D_p0, FVector2D& targetUV_p1, FVector& worldPosition_p2, FVector& worldDirection_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deleteGameInSlot_)(FString slotName_p0, NI32 userIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, deactivateReverbEffect_)(UObject* worldContextObject_p0, FName tagName_p1);
N_LIB_PRIVATE N_NIMCALL(USaveGame_*, createSaveGameObject_)(TY__oMknOVX79awua0tCYRTqEkw saveGameClass_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, createPlayerFromPlatformUser_)(UObject* worldContextObject_p0, FPlatformUserId userId_p1, NIM_BOOL bSpawnPlayerController_p2);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, createPlayer_)(UObject* worldContextObject_p0, NI32 controllerId_p1, NIM_BOOL bSpawnPlayerController_p2);
N_LIB_PRIVATE N_NIMCALL(void, clearSoundMixModifiers_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearSoundMixClassOverride_)(UObject* worldContextObject_p0, USoundMix_* inSoundMixModifier_p1, USoundClass* inSoundClass_p2, NF32 fadeOutTime_p3);
N_LIB_PRIVATE N_NIMCALL(void, cancelAsyncLoading_)(void);
N_LIB_PRIVATE N_NIMCALL(void, breakHitResult_)(FHitResult& hit_p0, NIM_BOOL& bBlockingHit_p1, NIM_BOOL& bInitialOverlap_p2, NF32& time_p3, NF32& distance_p4, FVector& location_p5, FVector& impactPoint_p6, FVector& normal_p7, FVector& impactNormal_p8, UPhysicalMaterial*& physMat_p9, AActor*& hitActor_p10, UPrimitiveComponent*& hitComponent_p11, FName& hitBoneName_p12, FName& boneName_p13, NI32& hitItem_p14, NI32& elementIndex_p15, NI32& faceIndex_p16, FVector& traceStart_p17, FVector& traceEnd_p18);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprintSuggestProjectileVelocity_)(UObject* worldContextObject_p0, FVector& tossVelocity_p1, FVector startLocation_p2, FVector endLocation_p3, NF32 launchSpeed_p4, NF32 overrideGravityZ_p5, tyEnum_ESuggestProjVelocityTraceOption__KuHBSpJifpeqmLf689cx8uA traceOption_p6, NF32 collisionRadius_p7, NIM_BOOL bFavorHighArc_p8, NIM_BOOL bDrawDebug_p9);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_ByTraceChannel_)(UObject* worldContextObject_p0, FHitResult& outHit_p1, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPathPositions_p2, FVector& outLastTraceDestination_p3, FVector startPos_p4, FVector launchVelocity_p5, NIM_BOOL bTracePath_p6, NF32 projectileRadius_p7, ECollisionChannel traceChannel_p8, NIM_BOOL bTraceComplex_p9, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p10, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p11, NF32 drawDebugTime_p12, NF32 simFrequency_p13, NF32 maxSimTime_p14, NF32 overrideGravityZ_p15);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_ByObjectType_)(UObject* worldContextObject_p0, FHitResult& outHit_p1, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPathPositions_p2, FVector& outLastTraceDestination_p3, FVector startPos_p4, FVector launchVelocity_p5, NIM_BOOL bTracePath_p6, NF32 projectileRadius_p7, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p8, NIM_BOOL bTraceComplex_p9, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p10, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p11, NF32 drawDebugTime_p12, NF32 simFrequency_p13, NF32 maxSimTime_p14, NF32 overrideGravityZ_p15);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_Advanced_)(UObject* worldContextObject_p0, FPredictProjectilePathParams_& predictParams_p1, FPredictProjectilePathResult_& predictResult_p2);
N_LIB_PRIVATE N_NIMCALL(AActor*, beginSpawningActorFromBlueprint_)(UObject* worldContextObject_p0, UBlueprint* blueprint_p1, FTransform& spawnTransform_p2, NIM_BOOL bNoCollisionFail_p3);
N_LIB_PRIVATE N_NIMCALL(AActor*, beginDeferredActorSpawnFromClass_)(UObject* worldContextObject_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass_p1, FTransform& spawnTransform_p2, tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ collisionHandlingOverride_p3, AActor* owner_p4, tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg transformScaleMethod_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, areSubtitlesEnabled_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, areAnyListenersWithinRange_)(UObject* worldContextObject_p0, FVector& location_p1, NF32 maximumRange_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, applyRadialDamageWithFalloff_)(UObject* worldContextObject_p0, NF32 baseDamage_p1, NF32 minimumDamage_p2, FVector& origin_p3, NF32 damageInnerRadius_p4, NF32 damageOuterRadius_p5, NF32 damageFalloff_p6, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass_p7, TY__kbK03O9cVTTS0GR9cjPhedTg& ignoreActors_p8, AActor* damageCauser_p9, AController* instigatedByController_p10, ECollisionChannel damagePreventionChannel_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, applyRadialDamage_)(UObject* worldContextObject_p0, NF32 baseDamage_p1, FVector& origin_p2, NF32 damageRadius_p3, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& ignoreActors_p5, AActor* damageCauser_p6, AController* instigatedByController_p7, NIM_BOOL bDoFullDamage_p8, ECollisionChannel damagePreventionChannel_p9);
N_LIB_PRIVATE N_NIMCALL(NF32, applyPointDamage_)(AActor* damagedActor_p0, NF32 baseDamage_p1, FVector& hitFromDirection_p2, FHitResult& hitInfo_p3, AController* eventInstigator_p4, AActor* damageCauser_p5, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass_p6);
N_LIB_PRIVATE N_NIMCALL(NF32, applyDamage_)(AActor* damagedActor_p0, NF32 baseDamage_p1, AController* eventInstigator_p2, AActor* damageCauser_p3, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass_p4);
N_LIB_PRIVATE N_NIMCALL(void, announceAccessibleString_)(FString announcementString_p0);
N_LIB_PRIVATE N_NIMCALL(void, activateReverbEffect_)(UObject* worldContextObject_p0, UReverbEffect_* reverbEffect_p1, FName tagName_p2, NF32 priority_p3, NF32 volume_p4, NF32 fadeTime_p5);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, platformUserId_None_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FPlatformUserId a_p0, FPlatformUserId b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FInputDeviceId a_p0, FInputDeviceId b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidPlatformId_)(FPlatformUserId userId_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidInputDevice_)(FInputDeviceId deviceId_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnpairedUserId_)(FPlatformUserId platformId_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInputDeviceMappedToUnpairedUser_)(FInputDeviceId inputDevice_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDevicePropertyHandleValid_)(FInputDevicePropertyHandle_& inHandle_p0);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, inputDeviceId_None_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getUserForUnpairedInputDevices_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getUserForInputDevice_)(FInputDeviceId deviceId_p0);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPrimaryPlatformUser_)(void);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, getPrimaryInputDeviceForUser_)(FPlatformUserId userId_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromPlatformUser_)(FPlatformUserId userId_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromInputDevice_)(FInputDeviceId deviceId_p0);
N_LIB_PRIVATE N_NIMCALL(EInputDeviceConnectionState, getInputDeviceConnectionState_)(FInputDeviceId deviceId_p0);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, getDefaultInputDevice_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllInputDevicesForUser_)(FPlatformUserId userId_p0, TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllInputDevices_)(TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllConnectedInputDevices_)(TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllActiveUsers_)(TY__0LGdQsbQ049aRvnlezZzVcQ& outUsers_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FPlatformUserId a_p0, FPlatformUserId b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FInputDeviceId a_p0, FInputDeviceId b_p1);
N_LIB_PRIVATE N_NIMCALL(void, setArrayPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__TxfK2fhRJXNHttPFRcL6fA& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, filterArray_)(TY__kbK03O9cVTTS0GR9cjPhedTg& targetArray_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg filterClass_p1, TY__kbK03O9cVTTS0GR9cjPhedTg& filteredArray_p2);
N_LIB_PRIVATE N_NIMCALL(void, array_Swap_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 firstIndex_p1, NI32 secondIndex_p2);
N_LIB_PRIVATE N_NIMCALL(void, array_Shuffle_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(void, array_Set_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 index_p1, NI32& item_p2, NIM_BOOL bSizeToFit_p3);
N_LIB_PRIVATE N_NIMCALL(void, array_Reverse_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(void, array_Resize_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 size_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_RemoveItem_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& item_p1);
N_LIB_PRIVATE N_NIMCALL(void, array_Remove_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 indexToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(void, array_RandomFromStream_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, FRandomStream& randomStream_p1, NI32& outItem_p2, NI32& outIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, array_Random_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& outItem_p1, NI32& outIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Length_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, array_LastIndex_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsValidIndex_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 indexToTest_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsNotEmpty_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsEmpty_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(void, array_Insert_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& newItem_p1, NI32 index_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_Identical_)(TY__TxfK2fhRJXNHttPFRcL6fA& arrayA_p0, TY__TxfK2fhRJXNHttPFRcL6fA& arrayB_p1);
N_LIB_PRIVATE N_NIMCALL(void, array_Get_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32 index_p1, NI32& item_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Find_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& itemToFind_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_Contains_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& itemToFind_p1);
N_LIB_PRIVATE N_NIMCALL(void, array_Clear_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0);
N_LIB_PRIVATE N_NIMCALL(void, array_Append_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, TY__TxfK2fhRJXNHttPFRcL6fA& sourceArray_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, array_AddUnique_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& newItem_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Add_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray_p0, NI32& newItem_p1);
N_LIB_PRIVATE N_NIMCALL(void, parse_StringToGuid_)(FString guidString_p0, FGuid& outGuid_p1, NIM_BOOL& success_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GuidGuid_)(FGuid& a_p0, FGuid& b_p1);
N_LIB_PRIVATE N_NIMCALL(FGuid, newGuid_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_Guid_)(FGuid& inGuid_p0);
N_LIB_PRIVATE N_NIMCALL(void, invalidate_Guid_)(FGuid& inGuid_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GuidGuid_)(FGuid& a_p0, FGuid& b_p1);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FGuid& inGuid_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointerEvent_IsTouchEvent_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointerEvent_IsMouseButtonDown_)(FPointerEvent& input_p0, FKey mouseButton_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pointerEvent_GetWheelDelta_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetUserIndex_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetTouchpadIndex_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetScreenSpacePosition_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetPointerIndex_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetLastScreenSpacePosition_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESlateGesture__Pscv9bCSeopgM2S4iny2Wjw, pointerEvent_GetGestureType_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetGestureDelta_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FKey, pointerEvent_GetEffectingButton_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetCursorDelta_)(FPointerEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsShiftDown_)(FSlateModifierKeysState_& keysState_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsControlDown_)(FSlateModifierKeysState_& keysState_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsCommandDown_)(FSlateModifierKeysState_& keysState_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsAltDown_)(FSlateModifierKeysState_& keysState_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsVectorAxis_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsValid_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsMouseButton_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsModifierKey_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsKeyboardKey_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsGamepadKey_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsDigital_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsButtonAxis_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis3D_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis2D_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis1D_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAnalog_)(FKey& key_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ, key_GetNavigationDirectionFromKey_)(FKeyEvent& inKeyEvent_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ, key_GetNavigationDirectionFromAnalog_)(FAnalogInputEvent& inAnalogEvent_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA, key_GetNavigationActionFromKey_)(FKeyEvent& inKeyEvent_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA, key_GetNavigationAction_)(FKey& inKey_p0);
N_LIB_PRIVATE N_NIMCALL(FText, key_GetDisplayName_)(FKey& key_p0, NIM_BOOL bLongDisplayName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsShiftDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightShiftDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightControlDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightCommandDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightAltDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRepeat_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftShiftDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftControlDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftCommandDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftAltDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsControlDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsCommandDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsAltDown_)(FInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FText, inputChord_GetDisplayName_)(FInputChord& key_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getUserIndex_)(FKeyEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(FSlateModifierKeysState_, getModifierKeysState_)(void);
N_LIB_PRIVATE N_NIMCALL(FKey, getKey_)(FKeyEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnalogValue_)(FAnalogInputEvent& input_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_KeyKey_)(FKey a_p0, FKey b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_InputChordInputChord_)(FInputChord a_p0, FInputChord b_p1);
N_LIB_PRIVATE N_NIMCALL(void, calibrateTilt_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLocale_)(FString culture_p0, NIM_BOOL saveToConfig_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLanguageAndLocale_)(FString culture_p0, NIM_BOOL saveToConfig_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLanguage_)(FString culture_p0, NIM_BOOL saveToConfig_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentCulture_)(FString culture_p0, NIM_BOOL saveToConfig_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentAssetGroupCulture_)(FName assetGroup_p0, FString culture_p1, NIM_BOOL saveToConfig_p2);
N_LIB_PRIVATE N_NIMCALL(FString, getSuitableCulture_)(TY__myhN0u2pNczwuaOhbdYPXw& availableCultures_p0, FString cultureToMatch_p1, FString fallbackCulture_p2);
N_LIB_PRIVATE N_NIMCALL(FString, getNativeCulture_)(tyEnum_ELocalizedTextSourceCategory__3Ltn8YdL2zodLqTHWaOvUQ textCategory_p0);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getLocalizedCultures_)(NIM_BOOL includeGame_p0, NIM_BOOL includeEngine_p1, NIM_BOOL includeEditor_p2, NIM_BOOL includeAdditional_p3);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLocale_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLanguage_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentCulture_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentAssetGroupCulture_)(FName assetGroup_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getCultureDisplayName_)(FString culture_p0, NIM_BOOL localized_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearCurrentAssetGroupCulture_)(FName assetGroup_p0, NIM_BOOL saveToConfig_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValue_)(UObject* worldContextObject_p0, UMaterialParameterCollection_* collection_p1, FName parameterName_p2, FLinearColor& parameterValue_p3);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValue_)(UObject* worldContextObject_p0, UMaterialParameterCollection_* collection_p1, FName parameterName_p2, NF32 parameterValue_p3);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UObject* worldContextObject_p0, UMaterialParameterCollection_* collection_p1, FName parameterName_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UObject* worldContextObject_p0, UMaterialParameterCollection_* collection_p1, FName parameterName_p2);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UObject* worldContextObject_p0, UMaterialInterface* parent_p1, FName optionalName_p2, tyEnum_EMIDCreationFlags__VI0UMZsMNapQIo2qZneX9bQ creationFlags_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, xor_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, xor_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, wrap_)(NI32 value_p0, NI32 min_p1, NI32 max_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, weightedMovingAverage_FVector_)(FVector currentSample_p0, FVector previousSample_p1, NF32 weight_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, weightedMovingAverage_FRotator_)(FRotator currentSample_p0, FRotator previousSample_p1, NF32 weight_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, weightedMovingAverage_Float_)(NF32 currentSample_p0, NF32 previousSample_p1, NF32 weight_p2);
N_LIB_PRIVATE N_NIMCALL(NF, length2DSquared_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, length2D_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, lerpTo_)(FVector a_p0, FVector b_p1, NF32 alpha_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, interpToConstant_)(FVector current_p0, FVector target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, interpTo_)(FVector current_p0, FVector target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, interpSpringTo_)(FVector current_p0, FVector target_p1, FVectorSpringState_& springState_p2, NF32 stiffness_p3, NF32 criticalDampingFactor_p4, NF32 deltaTime_p5, NF32 mass_p6, NF32 targetVelocityAmount_p7, NIM_BOOL bClamp_p8, FVector minValue_p9, FVector maxValue_p10, NIM_BOOL bInitializeFromTarget_p11);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Up_)(void);
N_LIB_PRIVATE N_NIMCALL(void, unwindEuler_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, unitCartesianToSpherical_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, toRadians_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, toDegrees_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, snappedToGrid_)(FVector inVect_p0, NF32 inGridSize_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, slerpVectors_)(FVector vector_p0, FVector direction_p1, NF alpha_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, slerpNormals_)(FVector normalA_p0, FVector normalB_p1, NF alpha_p2);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector& a_p0, NF x_p1, NF y_p2, NF z_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Right_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, reciprocal_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnToNormal_)(FVector v_p0, FVector inNormal_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, normalUnsafe_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FVector& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, normal2D_)(FVector a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorByPlane_)(FVector a_p0, FPlane& inPlane_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Left_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnit_)(FVector& a_p0, NF32 squaredLenthTolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUniform_)(FVector& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormal_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero_)(FVector& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNAN_)(FVector& a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, headingAngle_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getSignVector_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getProjection_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMin_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMax_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getAbs_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Forward_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Down_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, distanceSquared_)(FVector v1_p0, FVector v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, distance2DSquared_)(FVector v1_p0, FVector v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, distance2D_)(FVector v1_p0, FVector v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, distance_)(FVector v1_p0, FVector v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, cosineAngle2D_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getMin_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getMax_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSizeMax2D_)(FVector a_p0, NF max_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSizeMax_)(FVector a_p0, NF max_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSize2D_)(FVector a_p0, NF min_p1, NF max_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, boundedToCube_)(FVector inVect_p0, NF32 inRadius_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, boundedToBox_)(FVector inVect_p0, FVector inBoxMin_p1, FVector inBoxMax_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Backward_)(void);
N_LIB_PRIVATE N_NIMCALL(void, assign_)(FVector& a_p0, FVector& inVector_p1);
N_LIB_PRIVATE N_NIMCALL(void, addBounded_)(FVector& a_p0, FVector inAddVect_p1, NF32 inRadius_p2);
N_LIB_PRIVATE N_NIMCALL(FVector4, vector4_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared3_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, length3_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector4& a_p0, NF x_p1, NF y_p2, NF z_p3, NF w_p4);
N_LIB_PRIVATE N_NIMCALL(FVector4, normalUnsafe3_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(void, normalize3_)(FVector4& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, normal3_)(FVector4& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, negated_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector4, mirrorByVector3_)(FVector4& direction_p0, FVector4& surfaceNormal_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnit3_)(FVector4& a_p0, NF32 squaredLenthTolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormal3_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero3_)(FVector4& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNAN_)(FVector4& a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, dot3_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, cross3_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(void, assign_)(FVector4& a_p0, FVector4& inVector_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, interpToConstant_)(FVector2D current_p0, FVector2D target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, interpTo_)(FVector2D current_p0, FVector2D target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_Unit45Deg_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vEase_)(FVector a_p0, FVector b_p1, NF32 alpha_p2, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc_p3, NF32 blendExp_p4, NI32 steps_p5);
N_LIB_PRIVATE N_NIMCALL(FDateTime, utcNow_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector4_)(FMatrix& matrix_p0, FVector4& vec4_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, transformRotation_)(FTransform& t_p0, FRotator rotation_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, transformLocation_)(FTransform& t_p0, FVector location_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, transformDirection_)(FTransform& t_p0, FVector direction_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, determinant_)(FTransform& transform_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, toSign_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, toRounded_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(void, toDirectionAndLength_)(FVector2D a_p0, FVector2D& outDir_p1, NF& outLength_p2);
N_LIB_PRIVATE N_NIMCALL(FDateTime, today_)(void);
N_LIB_PRIVATE N_NIMCALL(FTransform, lerp_)(FTransform& a_p0, FTransform& b_p1, NF32 alpha_p2, tyEnum_ELerpInterpolationMode__1hcOsNVo9arJEZAb4iAEcLg interpMode_p3);
N_LIB_PRIVATE N_NIMCALL(FTransform, interpTo_)(FTransform& current_p0, FTransform& target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanZeroValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, timespanRatio_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanMinValue_)(void);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanMaxValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timespanFromString_)(FString timespanString_p0, FTimespan& Result_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform, ease_)(FTransform& a_p0, FTransform& b_p1, NF32 alpha_p2, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc_p3, NF32 blendExp_p4, NI32 steps_p5);
N_LIB_PRIVATE N_NIMCALL(NF, tan_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, subtract_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, subtractInt_)(FVector a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, subtractFloat_)(FVector a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, subtract_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, subtract_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, subtractFloat_)(FVector2D a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, subtract_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, subtract_)(FQuat& a_p0, FQuat& b_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, subtract_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, subtract_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, subtractInt_)(FIntPoint a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, subtract_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, subtract_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, subtract_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, subtract_DateTimeTimespan_)(FDateTime a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, subtract_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, subtract_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, square_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, sqrt_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, sphericalToUnitCartesian_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, sin_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, signOfInteger64_)(NI64 a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, signOfInteger_)(NI32 a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, signOfFloat_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorSpringStateVelocity_)(FVectorSpringState_& springState_p0, FVector velocity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSeed_)(FRandomStream& stream_p0, NI32 newSeed_p1);
N_LIB_PRIVATE N_NIMCALL(void, setQuaternionSpringStateAngularVelocity_)(FQuaternionSpringState_& springState_p0, FVector angularVelocity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFloatSpringStateVelocity_)(FFloatSpringState_& springState_p0, NF32 velocity_p1);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector2D& a_p0, NF x_p1, NF y_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, selectVector_)(FVector a_p0, FVector b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(FTransform, selectTransform_)(FTransform& a_p0, FTransform& b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(FString, selectString_)(FString a_p0, FString b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, selectRotator_)(FRotator a_p0, FRotator b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(UObject*, selectObject_)(UObject* a_p0, UObject* b_p1, NIM_BOOL bSelectA_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, selectInt_)(NI32 a_p0, NI32 b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(NF, selectFloat_)(NF a_p0, NF b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, selectColor_)(FLinearColor a_p0, FLinearColor b_p1, NIM_BOOL bPickA_p2);
N_LIB_PRIVATE N_NIMCALL(UClass*, selectClass_)(UClass* a_p0, UClass* b_p1, NIM_BOOL bSelectA_p2);
N_LIB_PRIVATE N_NIMCALL(void, generateNewSeed_)(FRandomStream& stream_p0);
N_LIB_PRIVATE N_NIMCALL(NF, safeDivide_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, round64_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, round_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotatorFromAxisAndAngle_)(FVector axis_p0, NF32 angle_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, rotateAngleAxis_)(FVector inVect_p0, NF32 angleDeg_p1, FVector axis_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, lerp_)(FRotator a_p0, FRotator b_p1, NF32 alpha_p2, NIM_BOOL bShortestPath_p3);
N_LIB_PRIVATE N_NIMCALL(FRotator, rInterpTo_Constant_)(FRotator current_p0, FRotator target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(FRotator, rInterpTo_)(FRotator current_p0, FRotator target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(void, rGBIntoHSV_)(FLinearColor rGB_p0, FLinearColor& hSV_p1);
N_LIB_PRIVATE N_NIMCALL(void, rGBIntoHSVComponents_)(FLinearColor inColor_p0, NF32& h_p1, NF32& s_p2, NF32& v_p3, NF32& a_p4);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, rGBToHSV_)(FLinearColor rGB_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetVectorSpringState_)(FVectorSpringState_& springState_p0);
N_LIB_PRIVATE N_NIMCALL(void, reset_)(FRandomStream& stream_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetQuaternionSpringState_)(FQuaternionSpringState_& springState_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetFloatSpringState_)(FFloatSpringState_& springState_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, ease_)(FRotator a_p0, FRotator b_p1, NF32 alpha_p2, NIM_BOOL bShortestPath_p3, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc_p4, NF32 blendExp_p5, NI32 steps_p6);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInRadians_)(FRandomStream& stream_p0, FVector& coneDir_p1, NF32 maxYawInRadians_p2, NF32 maxPitchInRadians_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInRadians_)(FVector coneDir_p0, NF32 maxYawInRadians_p1, NF32 maxPitchInRadians_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInDegrees_)(FRandomStream& stream_p0, FVector& coneDir_p1, NF32 maxYawInDegrees_p2, NF32 maxPitchInDegrees_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInDegrees_)(FVector coneDir_p0, NF32 maxYawInDegrees_p1, NF32 maxPitchInDegrees_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInRadians_)(FRandomStream& stream_p0, FVector& coneDir_p1, NF32 coneHalfAngleInRadians_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInRadians_)(FVector coneDir_p0, NF32 coneHalfAngleInRadians_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInDegrees_)(FRandomStream& stream_p0, FVector& coneDir_p1, NF32 coneHalfAngleInDegrees_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInDegrees_)(FVector coneDir_p0, NF32 coneHalfAngleInDegrees_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVector_)(FRandomStream& stream_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVector_)(void);
N_LIB_PRIVATE N_NIMCALL(FRotator, randomRotator_)(FRandomStream& stream_p0, NIM_BOOL bRoll_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, randomRotator_)(NIM_BOOL bRoll_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBox_)(FRandomStream& stream_p0, FBox box_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoundedBox_)(FRandomStream& stream_p0, FVector center_p1, FVector halfSize_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoxExtents_)(FBox box_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoxExtents_)(FVector center_p0, FVector halfSize_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, randomIntInRange_)(FRandomStream& stream_p0, NI32 min_p1, NI32 max_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, randomIntegerInRange_)(NI32 min_p0, NI32 max_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, randomInt_)(FRandomStream& stream_p0, NI32 max_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, randomInteger64InRange_)(NI64 min_p0, NI64 max_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, randomInteger64_)(NI64 max_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, randomInteger_)(NI32 max_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, randomFloatInRange_)(FRandomStream& stream_p0, NF32 min_p1, NF32 max_p2);
N_LIB_PRIVATE N_NIMCALL(NF, randomFloatInRange_)(NF min_p0, NF max_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, randomFloat_)(FRandomStream& stream_p0);
N_LIB_PRIVATE N_NIMCALL(NF, randomFloat_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBoolWithWeight_)(FRandomStream& randomStream_p0, NF32 weight_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBoolWithWeight_)(NF32 weight_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBool_)(FRandomStream& stream_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBool_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, radiansToDegrees_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, interpSpringTo_)(FQuat current_p0, FQuat target_p1, FQuaternionSpringState_& springState_p2, NF32 stiffness_p3, NF32 criticalDampingFactor_p4, NF32 deltaTime_p5, NF32 mass_p6, NF32 targetVelocityAmount_p7, NIM_BOOL bInitializeFromTarget_p8);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorUp_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorRight_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorForward_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, unrotateVector_)(FQuat& q_p0, FVector& v_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, slerpQuat_)(FQuat& a_p0, FQuat& b_p1, NF alpha_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, sizeSquared_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, size_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(void, setFromEuler_)(FQuat& q_p0, FVector& euler_p1);
N_LIB_PRIVATE N_NIMCALL(void, setComponents_)(FQuat& q_p0, NF32 x_p1, NF32 y_p2, NF32 z_p3, NF32 w_p4);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, rotateVector_)(FQuat& q_p0, FVector& v_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, normalized_)(FQuat& q_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FQuat& q_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, quat_MakeFromEuler_)(FVector& euler_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, log_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormalized_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNonFinite_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isIdentity_)(FQuat& q_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFinite_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, inversed_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, quat_Identity_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, getRotationAxis_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisZ_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisY_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisX_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getAngle_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, findQuatBetweenVectors_)(FVector start_p0, FVector end_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, findQuatBetweenNormals_)(FVector startNormal_p0, FVector endNormal_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, exp_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, euler_)(FQuat& q_p0);
N_LIB_PRIVATE N_NIMCALL(void, ensureShortestArcTo_)(FQuat& a_p0, FQuat& b_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, angularDistance_)(FQuat& a_p0, FQuat& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnTo_)(FVector v_p0, FVector target_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnToPlane_)(FVector v_p0, FVector planeNormal_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, projectPointOnToPlane_)(FVector point_p0, FVector planeBase_p1, FVector planeNormal_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointsAreCoplanar_)(TY__Bz8EFFwaAOJiUrMHOIgVGw& points_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, perlinNoise1D_)(NF32 value_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, percent_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, percent_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, percent_FloatFloat_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, percent_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, or_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, or_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, now_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector a_p0, FVector b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector4& a_p0, FVector4& b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector2D a_p0, FVector2D b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FRotator a_p0, FRotator b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FQuat& a_p0, FQuat& b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ObjectObject_)(UObject* a_p0, UObject* b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_NameName_)(FName a_p0, FName b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FMatrix& a_p0, FMatrix& b_p1, NF32 tolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ClassClass_)(UClass* a_p0, UClass* b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_BoolBool_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, not_PreBool_)(NIM_BOOL a_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, not_Int64_)(NI64 a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, not_Int_)(NI32 a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, normal_)(FVector2D a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NF, normalizeToRange_)(NF value_p0, NF rangeMin_p1, NF rangeMax_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, delta_)(FRotator a_p0, FRotator b_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, normalizeAxis_)(NF32 angle_p0);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FVector2D& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, normalUnsafe_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, normal_)(FVector a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, negated_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, inversed_)(FRotator a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, negated_)(FVector2D& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FTransform& a_p0, FTransform& b_p1, NF32 locationTolerance_p2, NF32 rotationTolerance_p3, NF32 scale3DTolerance_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, nearlyEqual_FloatFloat_)(NF a_p0, NF b_p1, NF errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NF, multiplyMultiply_FloatFloat_)(NF base_p0, NF exp_p1);
N_LIB_PRIVATE N_NIMCALL(NF, multiplyByPi_)(NF value_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, multiply_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, multiplyInt_)(FVector a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, multiplyFloat_)(FVector a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, multiply_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, multiply_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, multiplyFloat_)(FVector2D a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, multiply_TimespanFloat_)(FTimespan a_p0, NF32 scalar_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, scaleInteger_)(FRotator a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, scale_)(FRotator a_p0, NF32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, multiply_)(FQuat& a_p0, FQuat& b_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, multiply_)(FMatrix& a_p0, FMatrix& b_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, multiplyFloat_)(FMatrix& a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, multiply_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, multiplyFloat_)(FLinearColor a_p0, NF32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, multiply_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, multiplyInt_)(FIntPoint a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, multiply_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, multiply_IntFloat_)(NI32 a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, multiply_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, multiply_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, multiply_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorVectorByNormal_)(FVector inVect_p0, FVector inNormal_p1);
N_LIB_PRIVATE N_NIMCALL(void, minOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray_p0, NI32& indexOfMinValue_p1, NI32& minValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, minOfFloatArray_)(TY__LZaQ4h2l9bWQPMMIHjA9cwlA& floatArray_p0, NI32& indexOfMinValue_p1, NF32& minValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, minOfByteArray_)(TY__41Mm7Z1nb8xYOi3Vy0ffmA& byteArray_p0, NI32& indexOfMinValue_p1, NU8& minValue_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, minInt64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(void, minimumAreaRectangle_)(UObject* worldContextObject_p0, TY__Bz8EFFwaAOJiUrMHOIgVGw& inVerts_p1, FVector& sampleSurfaceNormal_p2, FVector& outRectCenter_p3, FRotator& outRectRotation_p4, NF32& outSideLengthX_p5, NF32& outSideLengthY_p6, NIM_BOOL bDebugDraw_p7);
N_LIB_PRIVATE N_NIMCALL(void, minAreaRectangle_)(UObject* worldContextObject_p0, TY__Bz8EFFwaAOJiUrMHOIgVGw& inPoints_p1, FVector& sampleSurfaceNormal_p2, FVector& outRectCenter_p3, FRotator& outRectRotation_p4, NF32& outRectLengthX_p5, NF32& outRectLengthY_p6, NIM_BOOL bDebugDraw_p7);
N_LIB_PRIVATE N_NIMCALL(NI32, min_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(void, medianOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA intArray_p0, NF32& medianValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, maxOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray_p0, NI32& indexOfMaxValue_p1, NI32& maxValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, maxOfFloatArray_)(TY__LZaQ4h2l9bWQPMMIHjA9cwlA& floatArray_p0, NI32& indexOfMaxValue_p1, NF32& maxValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, maxOfByteArray_)(TY__41Mm7Z1nb8xYOi3Vy0ffmA& byteArray_p0, NI32& indexOfMaxValue_p1, NU8& maxValue_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, maxInt64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, max_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector4_)(FMatrix& m_p0, FVector4 v_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector_)(FMatrix& m_p0, FVector v_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformPosition_)(FMatrix& m_p0, FVector v_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, toQuat_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(void, setOrigin_)(FMatrix& m_p0, FVector newOrigin_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(FMatrix& m_p0, tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA column_p1, FVector value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAxis_)(FMatrix& m_p0, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis_p1, FVector axisVector_p2);
N_LIB_PRIVATE N_NIMCALL(FMatrix, scaleTranslation_)(FMatrix& m_p0, FVector scale3D_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, removeTranslation_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeScaling_)(FMatrix& m_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, mirror_)(FMatrix& m_p0, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw mirrorAxis_p1, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw flipAxis_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformVector_)(FMatrix& m_p0, FVector v_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformPosition_)(FMatrix& m_p0, FVector v_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, matrix_Identity_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnitAxis_)(FMatrix& m_p0, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis_p1);
N_LIB_PRIVATE N_NIMCALL(void, getUnitAxes_)(FMatrix& m_p0, FVector& x_p1, FVector& y_p2, FVector& z_p3);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getTransposed_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getTransposeAdjoint_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleVector_)(FMatrix& m_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaledAxis_)(FMatrix& m_p0, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis_p1);
N_LIB_PRIVATE N_NIMCALL(void, getScaledAxes_)(FMatrix& m_p0, FVector& x_p1, FVector& y_p2, FVector& z_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getRotDeterminant_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotator_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getOrigin_)(FMatrix& inMatrix_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaximumAxisScale_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getMatrixWithoutScale_)(FMatrix& m_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getInverse_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumTopPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumRightPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumNearPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumLeftPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumFarPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumBottomPlane_)(FMatrix& m_p0, FPlane& outPlane_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeterminant_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getColumn_)(FMatrix& m_p0, tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA column_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, containsNaN_)(FMatrix& m_p0);
N_LIB_PRIVATE N_NIMCALL(FMatrix, concatenateTranslation_)(FMatrix& m_p0, FVector translation_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, applyScale_)(FMatrix& m_p0, NF32 scale_p1);
N_LIB_PRIVATE N_NIMCALL(NF, mapRangeUnclamped_)(NF value_p0, NF inRangeA_p1, NF inRangeB_p2, NF outRangeA_p3, NF outRangeB_p4);
N_LIB_PRIVATE N_NIMCALL(NF, mapRangeClamped_)(NF value_p0, NF inRangeA_p1, NF inRangeB_p2, NF outRangeA_p3, NF outRangeB_p4);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantizeNormal, makeVector_NetQuantizeNormal_)(NF x_p0, NF y_p1, NF z_p2);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize100, makeVector_NetQuantize100_)(NF x_p0, NF y_p1, NF z_p2);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize10, makeVector_NetQuantize10_)(NF x_p0, NF y_p1, NF z_p2);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize, makeVector_NetQuantize_)(NF x_p0, NF y_p1, NF z_p2);
N_LIB_PRIVATE N_NIMCALL(FVector4, makeVector4_)(NF x_p0, NF y_p1, NF z_p2, NF w_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, makeVector2D_)(NF x_p0, NF y_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, makeVector_)(NF x_p0, NF y_p1, NF z_p2);
N_LIB_PRIVATE N_NIMCALL(FTransform, makeTransform_)(FVector location_p0, FRotator rotation_p1, FVector scale_p2);
N_LIB_PRIVATE N_NIMCALL(FTimespan, makeTimespan2_)(NI32 days_p0, NI32 hours_p1, NI32 minutes_p2, NI32 seconds_p3, NI32 fractionNano_p4);
N_LIB_PRIVATE N_NIMCALL(FTimespan, makeTimespan_)(NI32 days_p0, NI32 hours_p1, NI32 minutes_p2, NI32 seconds_p3, NI32 milliseconds_p4);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZY_)(FVector& z_p0, FVector& y_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZX_)(FVector& z_p0, FVector& x_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZ_)(FVector& z_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromYZ_)(FVector& y_p0, FVector& z_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromYX_)(FVector& y_p0, FVector& x_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromY_)(FVector& y_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromXZ_)(FVector& x_p0, FVector& z_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromXY_)(FVector& x_p0, FVector& y_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromX_)(FVector& x_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotator_)(NF32 roll_p0, NF32 pitch_p1, NF32 yaw_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotationFromAxes_)(FVector forward_p0, FVector right_p1, FVector up_p2);
N_LIB_PRIVATE N_NIMCALL(FTransform, makeRelative_)(FTransform& a_p0, FTransform& relativeTo_p1);
N_LIB_PRIVATE N_NIMCALL(FRandomStream, makeRandomStream_)(NI32 initialSeed_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, makeQuat_)(NF32 x_p0, NF32 y_p1, NF32 z_p2, NF32 w_p3);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, makeQualifiedFrameTime_)(FFrameNumber frame_p0, FFrameRate frameRate_p1, NF32 subFrame_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, makePulsatingValue_)(NF32 inCurrentTime_p0, NF32 inPulsesPerSecond_p1, NF32 inPhase_p2);
N_LIB_PRIVATE N_NIMCALL(FPlane, makePlaneFromPointAndNormal_)(FVector point_p0, FVector normal_p1);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, makeFrameRate_)(NI32 numerator_p0, NI32 denominator_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, makeDateTime_)(NI32 year_p0, NI32 month_p1, NI32 day_p2, NI32 hour_p3, NI32 minute_p4, NI32 second_p5, NI32 millisecond_p6);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, makeColor_)(NF32 r_p0, NF32 g_p1, NF32 b_p2, NF32 a_p3);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, makeBoxSphereBounds_)(FVector origin_p0, FVector boxExtent_p1, NF32 sphereRadius_p2);
N_LIB_PRIVATE N_NIMCALL(FBox2D, makeBox2D_)(FVector2D min_p0, FVector2D max_p1);
N_LIB_PRIVATE N_NIMCALL(FBox, makeBox_)(FVector min_p0, FVector max_p1);
N_LIB_PRIVATE N_NIMCALL(NF, loge_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, log_)(NF a_p0, NF base_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, linePlaneIntersection_OriginNormal_)(FVector& lineStart_p0, FVector& lineEnd_p1, FVector planeOrigin_p2, FVector planeNormal_p3, NF32& t_p4, FVector& intersection_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, linePlaneIntersection_)(FVector& lineStart_p0, FVector& lineEnd_p1, FPlane& aPlane_p2, NF32& t_p3, FVector& intersection_p4);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, lerpUsingHSVTo_)(FLinearColor a_p0, FLinearColor b_p1, NF32 alpha_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, lerpTo_)(FLinearColor a_p0, FLinearColor b_p1, NF32 alpha_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Yellow_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_White_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Transparent_)(void);
N_LIB_PRIVATE N_NIMCALL(FColor, toRGBE_)(FLinearColor inLinearColor_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, toNewOpacity_)(FLinearColor inColor_p0, NF32 inOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTemperature_)(FLinearColor& inOutColor_p0, NF32 inTemperature_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRGBA_)(FLinearColor& inOutColor_p0, NF32 r_p1, NF32 g_p2, NF32 b_p3, NF32 a_p4);
N_LIB_PRIVATE N_NIMCALL(void, setRandomHue_)(FLinearColor& inOutColor_p0);
N_LIB_PRIVATE N_NIMCALL(void, setFromSRGB_)(FLinearColor& inOutColor_p0, FColor& inSRGB_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFromPow22_)(FLinearColor& inOutColor_p0, FColor& inColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFromHSV_)(FLinearColor& inOutColor_p0, NF32 h_p1, NF32 s_p2, NF32 v_p3, NF32 a_p4);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FLinearColor& inOutColor_p0, FLinearColor inColor_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Red_)(void);
N_LIB_PRIVATE N_NIMCALL(FColor, quantizeRound_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, quantize_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FLinearColor a_p0, FLinearColor b_p1, NF32 tolerance_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Green_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Gray_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, getMin_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMax_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getLuminance_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, distance_)(FLinearColor c1_p0, FLinearColor c2_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, desaturated_)(FLinearColor inColor_p0, NF32 inDesaturation_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Blue_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Black_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, unrotate_)(FVector a_p0, FRotator b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, lerp_)(NF a_p0, NF b_p1, NF alpha_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector2D& a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBoxWithTransform_Box_)(FVector point_p0, FTransform& boxWorldTransform_p1, FBox boxExtent_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBoxWithTransform_)(FVector point_p0, FTransform& boxWorldTransform_p1, FVector boxExtent_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBox_Box_)(FVector point_p0, FBox box_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBox_)(FVector point_p0, FVector boxOrigin_p1, FVector boxExtent_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero_)(FVector2D& a_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMorning_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLeapYear_)(NI32 year_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAfternoon_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, inverse_)(FTransform& t_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, inverseTransformRotation_)(FTransform& t_p0, FRotator rotation_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformLocation_)(FTransform& t_p0, FVector location_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformDirection_)(FTransform& t_p0, FVector direction_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Up_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Right_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Left_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Down_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_IntInt_)(NI32 value_p0, NI32 min_p1, NI32 max_p2, NIM_BOOL inclusiveMin_p3, NIM_BOOL inclusiveMax_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_Int64Int64_)(NI64 value_p0, NI64 min_p1, NI64 max_p2, NIM_BOOL inclusiveMin_p3, NIM_BOOL inclusiveMax_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_FloatFloat_)(NF value_p0, NF min_p1, NF max_p2, NIM_BOOL inclusiveMin_p3, NIM_BOOL inclusiveMax_p4);
N_LIB_PRIVATE N_NIMCALL(NF, hypotenuse_)(NF width_p0, NF height_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, hSVToRGB_)(FLinearColor hSV_p0);
N_LIB_PRIVATE N_NIMCALL(void, hSVIntoRGB_)(FLinearColor hSV_p0, FLinearColor& rGB_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, hSVToRGB_)(NF32 h_p0, NF32 s_p1, NF32 v_p2, NF32 a_p3);
N_LIB_PRIVATE N_NIMCALL(NF, gridSnap_Float_)(NF location_p0, NF gridSize_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, rotate_)(FVector a_p0, FRotator b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getYear_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(void, getYawPitch_)(FVector inVec_p0, NF32& yaw_p1, NF32& pitch_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorArrayAverage_)(TY__Bz8EFFwaAOJiUrMHOIgVGw& vectors_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVector_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalSeconds_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalMinutes_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalMilliseconds_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalHours_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalDays_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, getTimeOfDay_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getTAU_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getSlopeDegreeAngles_)(FVector& myRightYAxis_p0, FVector& floorNormal_p1, FVector& upVector_p2, NF32& outSlopePitchDegreeAngle_p3, NF32& outSlopeRollDegreeAngle_p4);
N_LIB_PRIVATE N_NIMCALL(NI32, getSeconds_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getSecond_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getRotated_)(FVector2D a_p0, NF32 angleDeg_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVector_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorByVector_)(FVector direction_p0, FVector surfaceNormal_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getPointDistanceToSegment_)(FVector point_p0, FVector segmentStart_p1, FVector segmentEnd_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getPointDistanceToLine_)(FVector point_p0, FVector lineOrigin_p1, FVector lineDirection_p2);
N_LIB_PRIVATE N_NIMCALL(NF, getPI_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getMonth_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinutes_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinute_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getMinElement_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getMin_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMilliseconds_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMillisecond_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getMaxElement_)(FVector a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getMax_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getHours_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getHour12_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getHour_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getForwardVector_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, getDuration_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, directionUnitTo_)(FVector from_p0, FVector to_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getDays_)(FTimespan a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getDayOfYear_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getDay_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(FDateTime, getDate_)(FDateTime a_p0);
N_LIB_PRIVATE N_NIMCALL(void, getAzimuthElevation_)(FVector inDirection_p0, FTransform& referenceFrame_p1, NF32& azimuth_p2, NF32& elevation_p3);
N_LIB_PRIVATE N_NIMCALL(void, getAxes_)(FRotator a_p0, FVector& x_p1, FVector& y_p2, FVector& z_p3);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMax_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAbs_)(FVector2D a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, fWrap_)(NF value_p0, NF min_p1, NF max_p2);
N_LIB_PRIVATE N_NIMCALL(FIntVector, truncated_)(FVector& inVector_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, fTrunc64_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, fTrunc_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromSeconds_)(NF32 seconds_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromMinutes_)(NF32 minutes_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromMilliseconds_)(NF32 milliseconds_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromHours_)(NF32 hours_p0);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromDays_)(NF32 days_p0);
N_LIB_PRIVATE N_NIMCALL(NF, fraction_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, fMod64_)(NF dividend_p0, NF divisor_p1, NF& remainder_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, fMod_)(NF dividend_p0, NF divisor_p1, NF& remainder_p2);
N_LIB_PRIVATE N_NIMCALL(NF, fMin_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, fMax_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, floatSpringInterp_)(NF32 current_p0, NF32 target_p1, FFloatSpringState_& springState_p2, NF32 stiffness_p3, NF32 criticalDampingFactor_p4, NF32 deltaTime_p5, NF32 mass_p6, NF32 targetVelocityAmount_p7, NIM_BOOL bClamp_p8, NF32 minValue_p9, NF32 maxValue_p10, NIM_BOOL bInitializeFromTarget_p11);
N_LIB_PRIVATE N_NIMCALL(NF32, fixedTurn_)(NF32 inCurrent_p0, NF32 inDesired_p1, NF32 inDeltaRate_p2);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpTo_Constant_)(NF current_p0, NF target_p1, NF deltaTime_p2, NF interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpTo_)(NF current_p0, NF target_p1, NF deltaTime_p2, NF interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpEaseInOut_)(NF a_p0, NF b_p1, NF alpha_p2, NF exponent_p3);
N_LIB_PRIVATE N_NIMCALL(FRotator, findRelativeLookAtRotation_)(FTransform& startTransform_p0, FVector& targetLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, findNearestPointsOnLineSegments_)(FVector segment1Start_p0, FVector segment1End_p1, FVector segment2Start_p2, FVector segment2End_p3, FVector& segment1Point_p4, FVector& segment2Point_p5);
N_LIB_PRIVATE N_NIMCALL(FRotator, findLookAtRotation_)(FVector& start_p0, FVector& target_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, findClosestPointOnSegment_)(FVector point_p0, FVector segmentStart_p1, FVector segmentEnd_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, findClosestPointOnLine_)(FVector point_p0, FVector lineOrigin_p1, FVector lineDirection_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, fFloor64_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, fFloor_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, fClamp_)(NF value_p0, NF min_p1, NF max_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, fCeil64_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, fCeil_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, exp_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector a_p0, FVector b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector4& a_p0, FVector4& b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector2D a_p0, FVector2D b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FTransform& a_p0, FTransform& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FRotator a_p0, FRotator b_p1, NF32 errorTolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FQuat& a_p0, FQuat& b_p1, NF32 tolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ObjectObject_)(UObject* a_p0, UObject* b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_NameName_)(FName a_p0, FName b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FMatrix& a_p0, FMatrix& b_p1, NF32 tolerance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ClassClass_)(UClass* a_p0, UClass* b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_BoolBool_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, ease_)(NF a_p0, NF b_p1, NF alpha_p2, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc_p3, NF blendExp_p4, NI32 steps_p5);
N_LIB_PRIVATE N_NIMCALL(FVector, dynamicWeightedMovingAverage_FVector_)(FVector currentSample_p0, FVector previousSample_p1, NF32 maxDistance_p2, NF32 minWeight_p3, NF32 maxWeight_p4);
N_LIB_PRIVATE N_NIMCALL(FRotator, dynamicWeightedMovingAverage_FRotator_)(FRotator currentSample_p0, FRotator previousSample_p1, NF32 maxDistance_p2, NF32 minWeight_p3, NF32 maxWeight_p4);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicWeightedMovingAverage_Float_)(NF32 currentSample_p0, NF32 previousSample_p1, NF32 maxDistance_p2, NF32 minWeight_p3, NF32 maxWeight_p4);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, divide_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, divideInt_)(FVector a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, divideFloat_)(FVector a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, divide_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, divide_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, divideFloat_)(FVector2D a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, divide_TimespanFloat_)(FTimespan a_p0, NF32 scalar_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, divide_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, divide_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, divideInt_)(FIntPoint a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, divide_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, divide_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, divide_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, divide_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, distanceSquared_)(FVector2D v1_p0, FVector2D v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, distance_)(FVector2D v1_p0, FVector2D v2_p1);
N_LIB_PRIVATE N_NIMCALL(NF, degTan_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degSin_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degreesToRadians_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degCos_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degAtan2_)(NF y_p0, NF x_p1);
N_LIB_PRIVATE N_NIMCALL(NF, degAtan_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degAsin_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, degAcos_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, daysInYear_)(NI32 year_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, daysInMonth_)(NI32 year_p0, NI32 month_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, dateTimeMinValue_)(void);
N_LIB_PRIVATE N_NIMCALL(FDateTime, dateTimeMaxValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, dateTimeFromString_)(FString dateTimeString_p0, FDateTime& Result_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, dateTimeFromIsoString_)(FString isoString_p0, FDateTime& Result_p1);
N_LIB_PRIVATE N_NIMCALL(NF, cross_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, cross_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, createVectorFromYawPitch_)(NF32 yaw_p0, NF32 pitch_p1, NF32 length_p2);
N_LIB_PRIVATE N_NIMCALL(NF, cos_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_)(FVector inVector_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FVector inLocation_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FVector inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FVector inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_)(FVector inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_)(FVector4& inVector4_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FVector4& inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FVector4& inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_)(FVector2D inVector2D_p0, NF32 z_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_)(FVector2D inVector2D_p0);
N_LIB_PRIVATE N_NIMCALL(FMatrix, toMatrix_)(FTransform& transform_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, toVector_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FRotator& inRotator_p0);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FMatrix& inMatrix_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FMatrix& inMatrix_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, toRGBVector_)(FLinearColor inLinearColor_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, toColor_)(FLinearColor inLinearColor_p0, NIM_BOOL inUseSRGB_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_IntVectorToVector_)(FIntVector& inIntVector_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_IntToVector_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(FIntVector, conv_IntToIntVector_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_IntToInt64_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_IntToDouble_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_IntToByte_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, conv_IntToBool_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_)(FIntPoint inIntPoint_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_Int64ToInt_)(NI64 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_Int64ToDouble_)(NI64 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_Int64ToByte_)(NI64 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_FloatToDouble_)(NF32 inFloat_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, conv_DoubleToVector2D_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_DoubleToVector_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, conv_DoubleToLinearColor_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_DoubleToInt64_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, conv_DoubleToFloat_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, conv_ColorToLinearColor_)(FColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_ByteToInt64_)(NU8 inByte_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_ByteToInt_)(NU8 inByte_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_ByteToDouble_)(NU8 inByte_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_BoolToInt_)(NIM_BOOL inBool_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_BoolToDouble_)(NIM_BOOL inBool_p0);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_BoolToByte_)(NIM_BOOL inBool_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, multiply_)(FTransform& a_p0, FTransform& b_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, combine_)(FRotator a_p0, FRotator b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, classIsChildOf_)(TY__Gdb8rCprT6WGagrQes2BIg testClass_p0, TY__Gdb8rCprT6WGagrQes2BIg parentClass_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSize_)(FVector a_p0, NF min_p1, NF max_p2);
N_LIB_PRIVATE N_NIMCALL(NI64, clampInt64_)(NI64 value_p0, NI64 min_p1, NI64 max_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, clampAxis_)(NF32 angle_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, clampedAxes_)(FVector2D a_p0, NF minAxisVal_p1, NF maxAxisVal_p2);
N_LIB_PRIVATE N_NIMCALL(NF, clampAngle_)(NF angleDegrees_p0, NF minAngleDegrees_p1, NF maxAngleDegrees_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, clamp_)(NI32 value_p0, NI32 min_p1, NI32 max_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, interpolateTo_)(FLinearColor current_p0, FLinearColor target_p1, NF32 deltaTime_p2, NF32 interpSpeed_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantizeNormal_)(FVector_NetQuantizeNormal* inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize100_)(FVector_NetQuantize100* inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize10_)(FVector_NetQuantize10* inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize_)(FVector_NetQuantize* inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector4_)(FVector4& inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3, NF& w_p4);
N_LIB_PRIVATE N_NIMCALL(void, breakVector3f_)(FVector3f* inVec_p0, NF32& x_p1, NF32& y_p2, NF32& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakVector2D_)(FVector2D inVec_p0, NF& x_p1, NF& y_p2);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_)(FVector inVec_p0, NF& x_p1, NF& y_p2, NF& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakTransform_)(FTransform& inTransform_p0, FVector& location_p1, FRotator& rotation_p2, FVector& scale_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakTimespan2_)(FTimespan inTimespan_p0, NI32& days_p1, NI32& hours_p2, NI32& minutes_p3, NI32& seconds_p4, NI32& fractionNano_p5);
N_LIB_PRIVATE N_NIMCALL(void, breakTimespan_)(FTimespan inTimespan_p0, NI32& days_p1, NI32& hours_p2, NI32& minutes_p3, NI32& seconds_p4, NI32& milliseconds_p5);
N_LIB_PRIVATE N_NIMCALL(void, breakRotIntoAxes_)(FRotator& inRot_p0, FVector& x_p1, FVector& y_p2, FVector& z_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakRotator_)(FRotator inRot_p0, NF32& roll_p1, NF32& pitch_p2, NF32& yaw_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakRandomStream_)(FRandomStream& inRandomStream_p0, NI32& initialSeed_p1);
N_LIB_PRIVATE N_NIMCALL(void, breakQuat_)(FQuat& inQuat_p0, NF32& x_p1, NF32& y_p2, NF32& z_p3, NF32& w_p4);
N_LIB_PRIVATE N_NIMCALL(void, breakQualifiedFrameTime_)(FQualifiedFrameTime& inFrameTime_p0, FFrameNumber& frame_p1, FFrameRate& frameRate_p2, NF32& subFrame_p3);
N_LIB_PRIVATE N_NIMCALL(void, breakFrameRate_)(FFrameRate& inFrameRate_p0, NI32& numerator_p1, NI32& denominator_p2);
N_LIB_PRIVATE N_NIMCALL(void, breakDateTime_)(FDateTime inDateTime_p0, NI32& year_p1, NI32& month_p2, NI32& day_p3, NI32& hour_p4, NI32& minute_p5, NI32& second_p6, NI32& millisecond_p7);
N_LIB_PRIVATE N_NIMCALL(void, breakColor_)(FLinearColor inColor_p0, NF32& r_p1, NF32& g_p2, NF32& b_p3, NF32& a_p4);
N_LIB_PRIVATE N_NIMCALL(void, breakBoxSphereBounds_)(FBoxSphereBounds& inBoxSphereBounds_p0, FVector& origin_p1, FVector& boxExtent_p2, NF32& sphereRadius_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanXOR_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanOR_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanNOR_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanNAND_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanAND_)(NIM_BOOL a_p0, NIM_BOOL b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, bMin_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, bMax_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(void, averageOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray_p0, NF32& averageValue_p1);
N_LIB_PRIVATE N_NIMCALL(NF, atan2_)(NF y_p0, NF x_p1);
N_LIB_PRIVATE N_NIMCALL(NF, atan_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, asin_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, and_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, and_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, add_)(FVector a_p0, FVector b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, addInt_)(FVector a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, addFloat_)(FVector a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4, add_)(FVector4& a_p0, FVector4& b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, add_)(FVector2D a_p0, FVector2D b_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, addFloat_)(FVector2D a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FTimespan, add_TimespanTimespan_)(FTimespan a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, add_)(FQuat& a_p0, FQuat& b_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix, add_)(FMatrix& a_p0, FMatrix& b_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, add_)(FLinearColor a_p0, FLinearColor b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, add_)(FIntPoint a_p0, FIntPoint b_p1);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, addInt_)(FIntPoint a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, add_IntInt_)(NI32 a_p0, NI32 b_p1);
N_LIB_PRIVATE N_NIMCALL(NI64, add_Int64Int64_)(NI64 a_p0, NI64 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, add_DoubleDouble_)(NF a_p0, NF b_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, add_DateTimeTimespan_)(FDateTime a_p0, FTimespan b_p1);
N_LIB_PRIVATE N_NIMCALL(FDateTime, add_DateTimeDateTime_)(FDateTime a_p0, FDateTime b_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, add_ByteByte_)(NU8 a_p0, NU8 b_p1);
N_LIB_PRIVATE N_NIMCALL(NF, acos_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, abs_Int64_)(NI64 a_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, abs_Int_)(NI32 a_p0);
N_LIB_PRIVATE N_NIMCALL(NF, abs_)(NF a_p0);
N_LIB_PRIVATE N_NIMCALL(void, markBit_)(NI32& data_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUnmarkedBit_)(NI32 data_p0, NI32 numBits_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMarkedBit_)(NI32 data_p0, NI32 numBits_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, getValidValue_)(UEnum* Enum_p0, NU8 enumeratorValue_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getUnmarkedBit_)(NI32 data_p0, NI32 startIdx_p1, NI32 numBits_p2, NIM_BOOL bRandom_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, getRandomUnmarkedBit_)(NI32 data_p0, NI32 startIdx_p1, NI32 numBits_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getFirstUnmarkedBit_)(NI32 data_p0, NI32 startIdx_p1, NI32 numBits_p2);
N_LIB_PRIVATE N_NIMCALL(NU8, getEnumeratorValueFromIndex_)(UEnum* Enum_p0, NU8 enumeratorIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getEnumeratorUserFriendlyName_)(UEnum* Enum_p0, NU8 enumeratorValue_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getEnumeratorName_)(UEnum* Enum_p0, NU8 enumeratorValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearBit_)(NI32& data_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearAllBits_)(NI32& data_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bitIsMarked_)(NI32 data_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastInsetShadowForAllAttachments_)(UPrimitiveComponent* primitiveComponent_p0, NIM_BOOL bCastInsetShadow_p1, NIM_BOOL bLightAttachmentsAsGroup_p2);
N_LIB_PRIVATE N_NIMCALL(void, resizeRenderTarget2D_)(UTextureRenderTarget2D_* textureRenderTarget_p0, NI32 width_p1, NI32 height_p2);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, renderTargetCreateStaticTexture2DEditorOnly_)(UTextureRenderTarget2D_* renderTarget_p0, FString name_p1, tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw compressionSettings_p2, tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ mipSettings_p3);
N_LIB_PRIVATE N_NIMCALL(void, releaseRenderTarget2D_)(UTextureRenderTarget2D_* textureRenderTarget_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, readRenderTargetUV_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, NF32 u_p2, NF32 v_p3);
N_LIB_PRIVATE N_NIMCALL(TY__LIN349biVKUmlJo9abXyib3Q, readRenderTargetRawUVArea_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, FBox2D area_p2, NIM_BOOL bNormalize_p3);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, readRenderTargetRawUV_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, NF32 u_p2, NF32 v_p3, NIM_BOOL bNormalize_p4);
N_LIB_PRIVATE N_NIMCALL(TY__LIN349biVKUmlJo9abXyib3Q, readRenderTargetRawPixelArea_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, NI32 minX_p2, NI32 minY_p3, NI32 maxX_p4, NI32 maxY_p5, NIM_BOOL bNormalize_p6);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, readRenderTargetRawPixel_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, NI32 x_p2, NI32 y_p3, NIM_BOOL bNormalize_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, readRenderTargetRaw_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, TY__LIN349biVKUmlJo9abXyib3Q& outLinearSamples_p2, NIM_BOOL bNormalize_p3);
N_LIB_PRIVATE N_NIMCALL(FColor, readRenderTargetPixel_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, NI32 x_p2, NI32 y_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, readRenderTarget_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, TY__nVAGwAmGausuUwwMqG2Chg& outSamples_p2, NIM_BOOL bNormalize_p3);
N_LIB_PRIVATE N_NIMCALL(FSkelMeshSkinWeightInfo, makeSkinWeightInfo_)(NI32 bone0_p0, NU8 weight0_p1, NI32 bone1_p2, NU8 weight1_p3, NI32 bone2_p4, NU8 weight2_p5, NI32 bone3_p6, NU8 weight3_p7);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, importFileAsTexture2D_)(UObject* worldContextObject_p0, FString filename_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, importBufferAsTexture2D_)(UObject* worldContextObject_p0, TY__41Mm7Z1nb8xYOi3Vy0ffmA& buffer_p1);
N_LIB_PRIVATE N_NIMCALL(void, exportTexture2D_)(UObject* worldContextObject_p0, UTexture2D* texture_p1, FString filePath_p2, FString fileName_p3);
N_LIB_PRIVATE N_NIMCALL(void, exportRenderTarget_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, FString filePath_p2, FString fileName_p3);
N_LIB_PRIVATE N_NIMCALL(void, endDrawCanvasToRenderTarget_)(UObject* worldContextObject_p0, FDrawToRenderTargetContext_& context_p1);
N_LIB_PRIVATE N_NIMCALL(void, enablePathTracing_)(NIM_BOOL bEnablePathTracer_p0);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialToRenderTarget_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, UMaterialInterface* material_p2);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTargetVolume_*, createRenderTargetVolume_)(UObject* worldContextObject_p0, NI32 width_p1, NI32 height_p2, NI32 depth_p3, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format_p4, FLinearColor clearColor_p5, NIM_BOOL bAutoGenerateMipMaps_p6, NIM_BOOL bSupportUAVs_p7);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2DArray_*, createRenderTarget2DArray_)(UObject* worldContextObject_p0, NI32 width_p1, NI32 height_p2, NI32 slices_p3, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format_p4, FLinearColor clearColor_p5, NIM_BOOL bAutoGenerateMipMaps_p6, NIM_BOOL bSupportUAVs_p7);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, createRenderTarget2D_)(UObject* worldContextObject_p0, NI32 width_p1, NI32 height_p2, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format_p3, FLinearColor clearColor_p4, NIM_BOOL bAutoGenerateMipMaps_p5, NIM_BOOL bSupportUAVs_p6);
N_LIB_PRIVATE N_NIMCALL(void, convertRenderTargetToTexture2DEditorOnly_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* renderTarget_p1, UTexture2D* texture_p2);
N_LIB_PRIVATE N_NIMCALL(void, clearRenderTarget2D_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, FLinearColor clearColor_p2);
N_LIB_PRIVATE N_NIMCALL(FMatrix, calculateProjectionMatrix_)(FMinimalViewInfo& minimalViewInfo_p0);
N_LIB_PRIVATE N_NIMCALL(void, breakSkinWeightInfo_)(FSkelMeshSkinWeightInfo inWeight_p0, NI32& bone0_p1, NU8& weight0_p2, NI32& bone1_p3, NU8& weight1_p4, NI32& bone2_p5, NU8& weight2_p6, NI32& bone3_p7, NU8& weight3_p8);
N_LIB_PRIVATE N_NIMCALL(void, beginDrawCanvasToRenderTarget_)(UObject* worldContextObject_p0, UTextureRenderTarget2D_* textureRenderTarget_p1, UCanvas_*& canvas_p2, FVector2D& size_p3, FDrawToRenderTargetContext_& context_p4);
N_LIB_PRIVATE N_NIMCALL(FString, trimTrailing_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(FString, trim_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(FString, toUpper_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(FString, toLower_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(FString, timeSecondsToString_)(NF32 inSeconds_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, startsWith_)(FString sourceString_p0, FString inPrefix_p1, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, split_)(FString sourceString_p0, FString inStr_p1, FString& leftS_p2, FString& rightS_p3, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p4, tyEnum_ESearchDir__FGgOLWYHHOEEcatZwkhq0Q searchDir_p5);
N_LIB_PRIVATE N_NIMCALL(FString, rightPad_)(FString sourceString_p0, NI32 chCount_p1);
N_LIB_PRIVATE N_NIMCALL(FString, rightChop_)(FString sourceString_p0, NI32 count_p1);
N_LIB_PRIVATE N_NIMCALL(FString, right_)(FString sourceString_p0, NI32 count_p1);
N_LIB_PRIVATE N_NIMCALL(FString, reverse_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, replaceInline_)(FString& sourceString_p0, FString searchText_p1, FString replacementText_p2, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p3);
N_LIB_PRIVATE N_NIMCALL(FString, replace_)(FString sourceString_p0, FString from_p1, FString to_p2, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p3);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, parseIntoArray_)(FString sourceString_p0, FString delimiter_p1, NIM_BOOL cullEmptyStrings_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_StrStr_)(FString a_p0, FString b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_StriStri_)(FString a_p0, FString b_p1);
N_LIB_PRIVATE N_NIMCALL(FString, mid_)(FString sourceString_p0, NI32 start_p1, NI32 count_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, matchesWildcard_)(FString sourceString_p0, FString wildcard_p1, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, len_)(FString s_p0);
N_LIB_PRIVATE N_NIMCALL(FString, leftPad_)(FString sourceString_p0, NI32 chCount_p1);
N_LIB_PRIVATE N_NIMCALL(FString, leftChop_)(FString sourceString_p0, NI32 count_p1);
N_LIB_PRIVATE N_NIMCALL(FString, left_)(FString sourceString_p0, NI32 count_p1);
N_LIB_PRIVATE N_NIMCALL(FString, joinStringArray_)(TY__myhN0u2pNczwuaOhbdYPXw& sourceArray_p0, FString separator_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNumeric_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEmpty_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getSubstring_)(FString sourceString_p0, NI32 startIndex_p1, NI32 length_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getCharacterAsNumber_)(FString sourceString_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getCharacterArrayFromString_)(FString sourceString_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, findSubstring_)(FString searchIn_p0, FString substring_p1, NIM_BOOL bUseCase_p2, NIM_BOOL bSearchFromEnd_p3, NI32 startPosition_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_StrStr_)(FString a_p0, FString b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_StriStri_)(FString a_p0, FString b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, endsWith_)(FString sourceString_p0, FString inSuffix_p1, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, cullArray_)(FString sourceString_p0, TY__myhN0u2pNczwuaOhbdYPXw& inArray_p1);
N_LIB_PRIVATE N_NIMCALL(FString, conv_VectorToString_)(FVector inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Vector3fToString_)(FVector3f* inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Vector2dToString_)(FVector2D inVec_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_TransformToString_)(FTransform& inTrans_p0);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector3f_)(FString inString_p0, FVector3f& outConvertedVector_p1, NIM_BOOL& outIsValid_p2);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector2D_)(FString inString_p0, FVector2D& outConvertedVector2D_p1, NIM_BOOL& outIsValid_p2);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector_)(FString inString_p0, FVector& outConvertedVector_p1, NIM_BOOL& outIsValid_p2);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToRotator_)(FString inString_p0, FRotator& outConvertedRotator_p1, NIM_BOOL& outIsValid_p2);
N_LIB_PRIVATE N_NIMCALL(FName, conv_StringToName_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_StringToInt64_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_StringToInt_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_StringToDouble_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToColor_)(FString inString_p0, FLinearColor& outConvertedColor_p1, NIM_BOOL& outIsValid_p2);
N_LIB_PRIVATE N_NIMCALL(FString, conv_RotatorToString_)(FRotator inRot_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_PlatformUserIdToString_)(FPlatformUserId inPlatformUserId_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ObjectToString_)(UObject* inObj_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_NameToString_)(FName inName_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_MatrixToString_)(FMatrix& inMatrix_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntVectorToString_)(FIntVector inIntVec_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntToString_)(NI32 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntPointToString_)(FIntPoint inIntPoint_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Int64ToString_)(NI64 inInt_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_InputDeviceIdToString_)(FInputDeviceId inDeviceId_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_DoubleToString_)(NF inDouble_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ColorToString_)(FLinearColor inColor_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ByteToString_)(NU8 inByte_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_BoolToString_)(NIM_BOOL inBool_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, contains_)(FString searchIn_p0, FString substring_p1, NIM_BOOL bUseCase_p2, NIM_BOOL bSearchFromEnd_p3);
N_LIB_PRIVATE N_NIMCALL(FString, concat_StrStr_)(FString a_p0, FString b_p1);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Vector2d_)(FString appendTo_p0, FString prefix_p1, FVector2D inVector2d_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Vector_)(FString appendTo_p0, FString prefix_p1, FVector inVector_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Rotator_)(FString appendTo_p0, FString prefix_p1, FRotator inRot_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Object_)(FString appendTo_p0, FString prefix_p1, UObject* inObj_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Name_)(FString appendTo_p0, FString prefix_p1, FName inName_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_IntVector_)(FString appendTo_p0, FString prefix_p1, FIntVector inIntVector_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Int_)(FString appendTo_p0, FString prefix_p1, NI32 inInt_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Double_)(FString appendTo_p0, FString prefix_p1, NF inDouble_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Color_)(FString appendTo_p0, FString prefix_p1, FLinearColor inColor_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Bool_)(FString appendTo_p0, FString prefix_p1, NIM_BOOL inBool_p2, FString suffix_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRegisteredTableId_)(FName tableId_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRegisteredTableEntry_)(FName tableId_p0, FString key_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getTableNamespace_)(FName tableId_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getTableEntrySourceString_)(FName tableId_p0, FString key_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getTableEntryMetaData_)(FName tableId_p0, FString key_p1, FName metaDataId_p2);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getRegisteredStringTables_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getMetaDataIdsFromStringTableEntry_)(FName tableId_p0, FString key_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getKeysFromStringTable_)(FName tableId_p0);
N_LIB_PRIVATE N_NIMCALL(void, unregisterForRemoteNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, unloadPrimaryAssetList_)(TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetIdList_p0);
N_LIB_PRIVATE N_NIMCALL(void, unload_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(void, transactObject_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(void, stackTrace_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingleForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, FHitResult& outHit_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingleByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, FName profileName_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, FHitResult& outHit_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingle_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, FHitResult& outHit_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMultiForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMultiByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, FName profileName_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMulti_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p4, NIM_BOOL bTraceComplex_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p7, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p8, NIM_BOOL bIgnoreSelf_p9, FLinearColor traceColor_p10, FLinearColor traceHitColor_p11, NF32 drawTime_p12);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapComponents_)(UObject* worldContextObject_p0, FVector spherePos_p1, NF32 sphereRadius_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, UClass* componentClassFilter_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapActors_)(UObject* worldContextObject_p0, FVector spherePos_p1, NF32 sphereRadius_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, UClass* actorClassFilter_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p6);
N_LIB_PRIVATE N_NIMCALL(void, snapshotObject_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(void, showPlatformSpecificLeaderboardScreen_)(FString categoryName_p0);
N_LIB_PRIVATE N_NIMCALL(void, showPlatformSpecificAchievementsScreen_)(APlayerController* specificPlayer_p0);
N_LIB_PRIVATE N_NIMCALL(void, showInterstitialAd_)(void);
N_LIB_PRIVATE N_NIMCALL(void, showAdBanner_)(NI32 adIdIndex_p0, NIM_BOOL bShowOnBottomOfScreen_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitle_)(FText& title_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVolumeButtonsHandledBySystem_)(NIM_BOOL bEnabled_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorPropertyByName_)(UObject* object_p0, FName propertyName_p1, FVector& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setVector3fPropertyByName_)(UObject* object_p0, FName propertyName_p1, FVector3f& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setUserActivity_)(FUserActivity& userActivity_p0);
N_LIB_PRIVATE N_NIMCALL(void, setTransformPropertyByName_)(UObject* object_p0, FName propertyName_p1, FTransform& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTextPropertyByName_)(UObject* object_p0, FName propertyName_p1, FText& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSuppressViewportTransitionMessage_)(UObject* worldContextObject_p0, NIM_BOOL bState_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStructurePropertyByName_)(UObject* object_p0, FName propertyName_p1, FGenericStruct& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStringPropertyByName_)(UObject* object_p0, FName propertyName_p1, FString value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSoftObjectPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__9b5kQ3g2w5CXovAbu5D6pTg& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSoftClassPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__roSJObD9cij0IKr7nEgF3iw& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setRotatorPropertyByName_)(UObject* object_p0, FName propertyName_p1, FRotator& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setObjectPropertyByName_)(UObject* object_p0, FName propertyName_p1, UObject* value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setNamePropertyByName_)(UObject* object_p0, FName propertyName_p1, FName& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setLinearColorPropertyByName_)(UObject* object_p0, FName propertyName_p1, FLinearColor& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setIntPropertyByName_)(UObject* object_p0, FName propertyName_p1, NI32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setInterfacePropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__ifXM0HgR32dv0bADb0VXEw& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setInt64PropertyByName_)(UObject* object_p0, FName propertyName_p1, NI64 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setGamepadsBlockDeviceFeedback_)(NIM_BOOL bBlock_p0);
N_LIB_PRIVATE N_NIMCALL(void, setFieldPathPropertyByName_)(UObject* object_p0, FName propertyName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setEditorProperty_)(UObject* object_p0, FName propertyName_p1, NI32& propertyValue_p2, tyEnum_EPropertyAccessChangeNotifyMode__tfIyzql3Jp1o4A9aSN3GRWw changeNotifyMode_p3);
N_LIB_PRIVATE N_NIMCALL(void, setDoublePropertyByName_)(UObject* object_p0, FName propertyName_p1, NF value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setColorPropertyByName_)(UObject* object_p0, FName propertyName_p1, FColor& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionProfileNameProperty_)(UObject* object_p0, FName propertyName_p1, FCollisionProfileName& value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setClassPropertyByName_)(UObject* object_p0, FName propertyName_p1, TY__Gdb8rCprT6WGagrQes2BIg value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBytePropertyByName_)(UObject* object_p0, FName propertyName_p1, NU8 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBoolPropertyByName_)(UObject* object_p0, FName propertyName_p1, NIM_BOOL value_p2);
N_LIB_PRIVATE N_NIMCALL(void, retriggerableDelay_)(UObject* worldContextObject_p0, NF32 duration_p1, FLatentActionInfo latentInfo_p2);
N_LIB_PRIVATE N_NIMCALL(void, resetGamepadAssignmentToController_)(NI32 controllerId_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetGamepadAssignments_)(void);
N_LIB_PRIVATE N_NIMCALL(void, registerForRemoteNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, quitGame_)(UObject* worldContextObject_p0, APlayerController* specificPlayer_p1, tyEnum_EQuitPreference__wKF27UdTU9cegJpfafBWsWw quitPreference_p2, NIM_BOOL bIgnorePlatformRestrictions_p3);
N_LIB_PRIVATE N_NIMCALL(void, quitEditor_)(void);
N_LIB_PRIVATE N_NIMCALL(void, printWarning_)(FString inString_p0);
N_LIB_PRIVATE N_NIMCALL(void, printText_)(UObject* worldContextObject_p0, FText inText_p1, NIM_BOOL bPrintToScreen_p2, NIM_BOOL bPrintToLog_p3, FLinearColor textColor_p4, NF32 duration_p5, FName key_p6);
N_LIB_PRIVATE N_NIMCALL(void, printString_)(UObject* worldContextObject_p0, FString inString_p1, NIM_BOOL bPrintToScreen_p2, NIM_BOOL bPrintToLog_p3, FLinearColor textColor_p4, NF32 duration_p5, FName key_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, parseParamValue_)(FString inString_p0, FString inParam_p1, FString& outValue_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, parseParam_)(FString inString_p0, FString inParam_p1);
N_LIB_PRIVATE N_NIMCALL(void, parseCommandLine_)(FString inCmdLine_p0, TY__myhN0u2pNczwuaOhbdYPXw& outTokens_p1, TY__myhN0u2pNczwuaOhbdYPXw& outSwitches_p2, TY__c0nBuI9a2FtGpQcNibWH5rw& outParams_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_SoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& a_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_SoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& a_p0, TY__roSJObD9cij0IKr7nEgF3iw& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_PrimaryAssetType_)(FPrimaryAssetType a_p0, FPrimaryAssetType b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_PrimaryAssetId_)(FPrimaryAssetId a_p0, FPrimaryAssetId b_p1);
N_LIB_PRIVATE N_NIMCALL(FString, normalizeFilename_)(FString inFilename_p0);
N_LIB_PRIVATE N_NIMCALL(void, moveComponentTo_)(USceneComponent* component_p0, FVector targetRelativeLocation_p1, FRotator targetRelativeRotation_p2, NIM_BOOL bEaseOut_p3, NIM_BOOL bEaseIn_p4, NF32 overTime_p5, NIM_BOOL bForceShortestRotationPath_p6, tyEnum_EMoveComponentAction__kDaFHmOTku89aVMGXCDq5HA moveAction_p7, FLatentActionInfo latentInfo_p8);
N_LIB_PRIVATE N_NIMCALL(FTopLevelAssetPath, makeTopLevelAssetPath_)(FString packageName_p0, FString assetName_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, makeSoftObjectPath_)(FString pathString_p0);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, makeSoftClassPath_)(FString pathString_p0);
N_LIB_PRIVATE N_NIMCALL(FText, makeLiteralText_)(FText value_p0);
N_LIB_PRIVATE N_NIMCALL(FString, makeLiteralString_)(FString value_p0);
N_LIB_PRIVATE N_NIMCALL(FName, makeLiteralName_)(FName value_p0);
N_LIB_PRIVATE N_NIMCALL(NI64, makeLiteralInt64_)(NI64 value_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, makeLiteralInt_)(NI32 value_p0);
N_LIB_PRIVATE N_NIMCALL(NF, makeLiteralDouble_)(NF value_p0);
N_LIB_PRIVATE N_NIMCALL(NU8, makeLiteralByte_)(NU8 value_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, makeLiteralBool_)(NIM_BOOL value_p0);
N_LIB_PRIVATE N_NIMCALL(FARFilter, makeARFilter_)(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packageNames_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packagePaths_p1, TY__ENhz1y6sHvLdRa6kOBUI0g& softObjectPaths_p2, TY__PRe8Jrdf8eYAEJilcBMaEQ& classPaths_p3, TY__PRSVFfQEtqNnXT9a7lc0o6A& recursiveClassPathsExclusionSet_p4, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& classNames_p5, TY__RB4z3ofWT3akwp9bOP7PhQA& recursiveClassesExclusionSet_p6, NIM_BOOL bRecursivePaths_p7, NIM_BOOL bRecursiveClasses_p8, NIM_BOOL bIncludeOnlyOnDiskAssets_p9);
N_LIB_PRIVATE N_NIMCALL(void, logString_)(FString inString_p0, NIM_BOOL bPrintToLog_p1);
N_LIB_PRIVATE N_NIMCALL(void, loadInterstitialAd_)(NI32 adIdIndex_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, loadClassAsset_Blocking_)(TY__roSJObD9cij0IKr7nEgF3iw assetClass_p0);
N_LIB_PRIVATE N_NIMCALL(void, loadAssetClass_)(UObject* worldContextObject_p0, TY__roSJObD9cij0IKr7nEgF3iw assetClass_p1, FOnAssetClassLoaded_* onLoaded_p2, FLatentActionInfo latentInfo_p3);
N_LIB_PRIVATE N_NIMCALL(UObject*, loadAsset_Blocking_)(TY__9b5kQ3g2w5CXovAbu5D6pTg asset_p0);
N_LIB_PRIVATE N_NIMCALL(void, loadAsset_)(UObject* worldContextObject_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg asset_p1, FOnAssetLoaded_* onLoaded_p2, FLatentActionInfo latentInfo_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingleForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, FHitResult& outHit_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingleByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FName profileName_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, FHitResult& outHit_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingle_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, FHitResult& outHit_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMultiForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMultiByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FName profileName_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMulti_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p3, NIM_BOOL bTraceComplex_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p6, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p7, NIM_BOOL bIgnoreSelf_p8, FLinearColor traceColor_p9, FLinearColor traceHitColor_p10, NF32 drawTime_p11);
N_LIB_PRIVATE N_NIMCALL(void, launchURL_)(FString uRL_p0);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimerHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimerDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimer_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExistsHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExistsDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExists_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerForNextTickDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerForNextTick_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerDelegate_)(FTimerDynamicDelegate_* delegate_p0, NF32 time_p1, NIM_BOOL bLooping_p2, NF32 initialStartDelay_p3, NF32 initialStartDelayVariance_p4);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimer_)(UObject* object_p0, FString functionName_p1, NF32 time_p2, NIM_BOOL bLooping_p3, NF32 initialStartDelay_p4, NF32 initialStartDelayVariance_p5);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimerHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimerDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimer_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidTimerHandle_)(FTimerHandle handle_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPausedHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPausedDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPaused_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActiveHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActiveDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActive_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, invalidateTimerHandle_)(FTimerHandle& handle_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTimeHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTimeDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTime_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTimeHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTimeDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTime_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearTimerHandle_)(UObject* worldContextObject_p0, FTimerHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearTimerDelegate_)(FTimerDynamicDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearTimer_)(UObject* object_p0, FString functionName_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearAndInvalidateTimerHandle_)(UObject* worldContextObject_p0, FTimerHandle& handle_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObjectReference_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& softClassReference_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FPrimaryAssetType primaryAssetType_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidClass_)(UClass* class_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnattended_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStandalone_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSplitScreen_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isServer_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isScreensaverEnabled_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPackagedForDistribution_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoggedIn_)(APlayerController* specificPlayer_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterstitialAdRequested_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterstitialAdAvailable_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDedicatedServer_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControllerAssignedToGamepad_)(NI32 controllerId_p0);
N_LIB_PRIVATE N_NIMCALL(void, hideAdBanner_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMultipleLocalPlayers_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getVolumeButtonsHandledBySystem_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getUniqueDeviceId_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getSystemPath_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getSupportedFullscreenResolutions_)(TY__yD9cabbXKxBhxxk9bEUjuWfQ& resolutions_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getSoftObjectReference_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, getSoftObjectPath_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, getSoftClassReference_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, getSoftClassPath_)(UClass* class_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getRenderingMaterialQualityLevel_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getRenderingDetailMode_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectSavedDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectContentDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getPrimaryAssetsWithBundleState_)(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& requiredBundles_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& excludedBundles_p1, TY__3W9bSP0TRlRfvoPW2wOyZSg& validTypes_p2, NIM_BOOL bForceCurrentState_p3, TY__9aw1VaWKZbUTzz1muwIRvsw& outPrimaryAssetIdList_p4);
N_LIB_PRIVATE N_NIMCALL(void, getPrimaryAssetIdList_)(FPrimaryAssetType primaryAssetType_p0, TY__9aw1VaWKZbUTzz1muwIRvsw& outPrimaryAssetIdList_p1);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromSoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg softObjectReference_p0);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromSoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw softClassReference_p0);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromObject_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromClass_)(TY__Gdb8rCprT6WGagrQes2BIg class_p0);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getPreferredLanguages_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformUserName_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPathName_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getOuterObject_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getObjectName_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getObject_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinYResolutionForUI_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinYResolutionFor3DView_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getLocalCurrencySymbol_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getLocalCurrencyCode_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, getGameTimeInSeconds_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getGamepadControllerName_)(NI32 controllerId_p0);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, getGamepadButtonGlyph_)(FString buttonKey_p0, NI32 controllerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getGameName_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getGameBundleId_)(void);
N_LIB_PRIVATE N_NIMCALL(NI64, getFrameCount_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getEngineVersion_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getEditorProperty_)(UObject* object_p0, FName propertyName_p1, NI32& propertyValue_p2);
N_LIB_PRIVATE N_NIMCALL(FString, getDisplayName_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getDeviceId_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultLocale_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultLanguage_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurrentBundleState_)(FPrimaryAssetId primaryAssetId_p0, NIM_BOOL bForceCurrentState_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outBundles_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getConvenientWindowedResolutions_)(TY__yD9cabbXKxBhxxk9bEUjuWfQ& resolutions_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getConsoleVariableStringValue_)(FString variableName_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getConsoleVariableIntValue_)(FString variableName_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getConsoleVariableFloatValue_)(FString variableName_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getConsoleVariableBoolValue_)(FString variableName_p0);
N_LIB_PRIVATE N_NIMCALL(void, getComponentBounds_)(USceneComponent* component_p0, FVector& origin_p1, FVector& boxExtent_p2, NF32& sphereRadius_p3);
N_LIB_PRIVATE N_NIMCALL(FString, getCommandLine_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, getClass_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getClassDisplayName_)(UClass* class_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getBuildVersion_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getBuildConfiguration_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getAdIDCount_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getActorListFromComponentList_)(TY__RN0jXIbC9cvfWt68iswDSAw& componentList_p0, UClass* actorClassFilter_p1, TY__kbK03O9cVTTS0GR9cjPhedTg& outActorList_p2);
N_LIB_PRIVATE N_NIMCALL(void, getActorBounds_)(AActor* actor_p0, FVector& origin_p1, FVector& boxExtent_p2);
N_LIB_PRIVATE N_NIMCALL(void, forceCloseAdBanner_)(void);
N_LIB_PRIVATE N_NIMCALL(void, flushPersistentDebugLines_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, flushDebugStrings_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(void, executeConsoleCommand_)(UObject* worldContextObject_p0, FString command_p1, APlayerController* specificPlayer_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& a_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& a_p0, TY__roSJObD9cij0IKr7nEgF3iw& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_PrimaryAssetType_)(FPrimaryAssetType a_p0, FPrimaryAssetType b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_PrimaryAssetId_)(FPrimaryAssetId a_p0, FPrimaryAssetId b_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, endTransaction_)(void);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugString_)(UObject* worldContextObject_p0, FVector textLocation_p1, FString text_p2, AActor* testBaseActor_p3, FLinearColor textColor_p4, NF32 duration_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugSphere_)(UObject* worldContextObject_p0, FVector center_p1, NF32 radius_p2, NI32 segments_p3, FLinearColor lineColor_p4, NF32 duration_p5, NF32 thickness_p6);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugPoint_)(UObject* worldContextObject_p0, FVector position_p1, NF32 size_p2, FLinearColor pointColor_p3, NF32 duration_p4);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugPlane_)(UObject* worldContextObject_p0, FPlane& planeCoordinates_p1, FVector location_p2, NF32 size_p3, FLinearColor planeColor_p4, NF32 duration_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugLine_)(UObject* worldContextObject_p0, FVector lineStart_p1, FVector lineEnd_p2, FLinearColor lineColor_p3, NF32 duration_p4, NF32 thickness_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFrustum_)(UObject* worldContextObject_p0, FTransform& frustumTransform_p1, FLinearColor frustumColor_p2, NF32 duration_p3, NF32 thickness_p4);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFloatHistoryTransform_)(UObject* worldContextObject_p0, FDebugFloatHistory& floatHistory_p1, FTransform& drawTransform_p2, FVector2D drawSize_p3, FLinearColor drawColor_p4, NF32 duration_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFloatHistoryLocation_)(UObject* worldContextObject_p0, FDebugFloatHistory& floatHistory_p1, FVector drawLocation_p2, FVector2D drawSize_p3, FLinearColor drawColor_p4, NF32 duration_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCylinder_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NI32 segments_p4, FLinearColor lineColor_p5, NF32 duration_p6, NF32 thickness_p7);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCoordinateSystem_)(UObject* worldContextObject_p0, FVector axisLoc_p1, FRotator axisRot_p2, NF32 scale_p3, NF32 duration_p4, NF32 thickness_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugConeInDegrees_)(UObject* worldContextObject_p0, FVector origin_p1, FVector direction_p2, NF32 length_p3, NF32 angleWidth_p4, NF32 angleHeight_p5, NI32 numSides_p6, FLinearColor lineColor_p7, NF32 duration_p8, NF32 thickness_p9);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCone_)(UObject* worldContextObject_p0, FVector origin_p1, FVector direction_p2, NF32 length_p3, NF32 angleWidth_p4, NF32 angleHeight_p5, NI32 numSides_p6, FLinearColor lineColor_p7, NF32 duration_p8, NF32 thickness_p9);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCircle_)(UObject* worldContextObject_p0, FVector center_p1, NF32 radius_p2, NI32 numSegments_p3, FLinearColor lineColor_p4, NF32 duration_p5, NF32 thickness_p6, FVector yAxis_p7, FVector zAxis_p8, NIM_BOOL bDrawAxis_p9);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCapsule_)(UObject* worldContextObject_p0, FVector center_p1, NF32 halfHeight_p2, NF32 radius_p3, FRotator rotation_p4, FLinearColor lineColor_p5, NF32 duration_p6, NF32 thickness_p7);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugBox_)(UObject* worldContextObject_p0, FVector center_p1, FVector extent_p2, FLinearColor lineColor_p3, FRotator rotation_p4, NF32 duration_p5, NF32 thickness_p6);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugArrow_)(UObject* worldContextObject_p0, FVector lineStart_p1, FVector lineEnd_p2, NF32 arrowSize_p3, FLinearColor lineColor_p4, NF32 duration_p5, NF32 thickness_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesImplementInterface_)(UObject* testObject_p0, TY__KI5t49abR3sL6OsGNxWlhiQ interface_p1);
N_LIB_PRIVATE N_NIMCALL(void, delayUntilNextTick_)(UObject* worldContextObject_p0, FLatentActionInfo latentInfo_p1);
N_LIB_PRIVATE N_NIMCALL(void, delay_)(UObject* worldContextObject_p0, NF32 duration_p1, FLatentActionInfo latentInfo_p2);
N_LIB_PRIVATE N_NIMCALL(void, createCopyForUndoBuffer_)(UObject* objectToModify_p0);
N_LIB_PRIVATE N_NIMCALL(FString, convertToRelativePath_)(FString filename_p0);
N_LIB_PRIVATE N_NIMCALL(FString, convertToAbsolutePath_)(FString filename_p0);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, conv_SoftObjRefToSoftObjPath_)(TY__9b5kQ3g2w5CXovAbu5D6pTg softObjectReference_p0);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, conv_SoftObjRefToSoftClassPath_)(TY__roSJObD9cij0IKr7nEgF3iw softClassReference_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, conv_SoftObjPathToSoftObjRef_)(FSoftObjectPath& softObjectPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_SoftObjectReferenceToString_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObjectReference_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, conv_SoftObjectReferenceToObject_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObject_p0);
N_LIB_PRIVATE N_NIMCALL(FString, conv_SoftClassReferenceToString_)(TY__roSJObD9cij0IKr7nEgF3iw& softClassReference_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, conv_SoftClassReferenceToClass_)(TY__roSJObD9cij0IKr7nEgF3iw& softClass_p0);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, conv_SoftClassPathToSoftClassRef_)(FSoftClassPath& softClassPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FPrimaryAssetType primaryAssetType_p0);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FPrimaryAssetId primaryAssetId_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, conv_ObjectToSoftObjectReference_)(UObject* object_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, conv_ObjectToClass_)(UObject* object_p0, TY__Gdb8rCprT6WGagrQes2BIg class_p1);
N_LIB_PRIVATE N_NIMCALL(UObject*, conv_InterfaceToObject_)(TY__ifXM0HgR32dv0bADb0VXEw& interface_p0);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, conv_ClassToSoftClassReference_)(TY__Gdb8rCprT6WGagrQes2BIg& class_p0);
N_LIB_PRIVATE N_NIMCALL(void, controlScreensaver_)(NIM_BOOL bAllowScreenSaver_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentOverlapComponents_)(UPrimitiveComponent* component_p0, FTransform& componentTransform_p1, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p2, UClass* componentClassFilter_p3, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p4, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentOverlapActors_)(UPrimitiveComponent* component_p0, FTransform& componentTransform_p1, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p2, UClass* actorClassFilter_p3, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p5);
N_LIB_PRIVATE N_NIMCALL(void, collectGarbage_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingleForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingleByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, FName profileName_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingle_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMultiForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMultiByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, FName profileName_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMulti_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, NF32 radius_p3, NF32 halfHeight_p4, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleOverlapComponents_)(UObject* worldContextObject_p0, FVector capsulePos_p1, NF32 radius_p2, NF32 halfHeight_p3, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p4, UClass* componentClassFilter_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents_p7);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleOverlapActors_)(UObject* worldContextObject_p0, FVector capsulePos_p1, NF32 radius_p2, NF32 halfHeight_p3, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p4, UClass* actorClassFilter_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p7);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canLaunchURL_)(FString uRL_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelTransaction_)(NI32 index_p0);
N_LIB_PRIVATE N_NIMCALL(void, breakTopLevelAssetPath_)(FTopLevelAssetPath& topLevelAssetPath_p0, FString& pathString_p1);
N_LIB_PRIVATE N_NIMCALL(void, breakSoftObjectPath_)(FSoftObjectPath inSoftObjectPath_p0, FString& pathString_p1);
N_LIB_PRIVATE N_NIMCALL(void, breakSoftClassPath_)(FSoftClassPath inSoftClassPath_p0, FString& pathString_p1);
N_LIB_PRIVATE N_NIMCALL(void, breakARFilter_)(FARFilter inARFilter_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packageNames_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packagePaths_p2, TY__ENhz1y6sHvLdRa6kOBUI0g& softObjectPaths_p3, TY__PRe8Jrdf8eYAEJilcBMaEQ& classPaths_p4, TY__PRSVFfQEtqNnXT9a7lc0o6A& recursiveClassPathsExclusionSet_p5, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& classNames_p6, TY__RB4z3ofWT3akwp9bOP7PhQA& recursiveClassesExclusionSet_p7, NIM_BOOL& bRecursivePaths_p8, NIM_BOOL& bRecursiveClasses_p9, NIM_BOOL& bIncludeOnlyOnDiskAssets_p10);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingleForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingleByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, FName profileName_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingle_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, FHitResult& outHit_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMultiForObjects_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMultiByProfile_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, FName profileName_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMulti_)(UObject* worldContextObject_p0, FVector start_p1, FVector end_p2, FVector halfSize_p3, FRotator orientation_p4, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p5, NIM_BOOL bTraceComplex_p6, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p7, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType_p8, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits_p9, NIM_BOOL bIgnoreSelf_p10, FLinearColor traceColor_p11, FLinearColor traceHitColor_p12, NF32 drawTime_p13);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapComponents_)(UObject* worldContextObject_p0, FVector boxPos_p1, FVector extent_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, UClass* componentClassFilter_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapActors_)(UObject* worldContextObject_p0, FVector boxPos_p1, FVector boxExtent_p2, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p3, UClass* actorClassFilter_p4, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore_p5, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p6);
N_LIB_PRIVATE N_NIMCALL(NI32, beginTransaction_)(FString context_p0, FText description_p1, UObject* primaryObject_p2);
N_LIB_PRIVATE N_NIMCALL(FDebugFloatHistory, addFloatHistorySample_)(NF32 value_p0, FDebugFloatHistory& floatHistory_p1);
N_LIB_PRIVATE N_NIMCALL(FString, videoCaptureDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, validatePath_)(FString inPath_p0, NIM_BOOL& bDidSucceed_p1, FText& outReason_p2);
N_LIB_PRIVATE N_NIMCALL(void, split_)(FString inPath_p0, FString& pathPart_p1, FString& filenamePart_p2, FString& extensionPart_p3);
N_LIB_PRIVATE N_NIMCALL(FString, sourceConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldSaveToUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, shaderWorkingDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setProjectFilePath_)(FString newGameProjectFilePath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, setExtension_)(FString inPath_p0, FString inNewExtension_p1);
N_LIB_PRIVATE N_NIMCALL(FString, screenShotDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, sandboxesDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, rootDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, removeDuplicateSlashes_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(FString, projectUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectPluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectPersistentDownloadDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectModsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectLogDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectIntermediateDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectContentDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, profilingDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, normalizeFilename_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(void, normalizeDirectoryName_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(FString, makeValidFileName_)(FString inString_p0, FString inReplacementChar_p1);
N_LIB_PRIVATE N_NIMCALL(void, makeStandardFilename_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(void, makePlatformFilename_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, makePathRelativeTo_)(FString inPath_p0, FString inRelativeTo_p1, FString& outPath_p2);
N_LIB_PRIVATE N_NIMCALL(FString, launchDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSamePath_)(FString pathA_p0, FString pathB_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRestrictedPath_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRelative_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isProjectFilePathSet_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDrive_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasProjectPersistentDownloadDir_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getToolTipLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getRestrictedFolderNames_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getRelativePathToRoot_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getPropertyNameLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectFilePath_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPath_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getInvalidFileSystemChars_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getGameLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getExtension_)(FString inPath_p0, NIM_BOOL bIncludeDot_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEngineLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEditorLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCleanFilename_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getBaseFilename_)(FString inPath_p0, NIM_BOOL bRemovePath_p1);
N_LIB_PRIVATE N_NIMCALL(FString, generatedConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameUserDeveloperDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameSourceDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameDevelopersDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameAgnosticSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fileExists_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, featurePackDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterprisePluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterpriseFeaturePackDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterpriseDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineVersionAgnosticUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineSourceDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enginePluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineIntermediateDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineContentDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, directoryExists_)(FString inPath_p0);
N_LIB_PRIVATE N_NIMCALL(FString, diffDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, createTempFilename_)(FString path_p0, FString prefix_p1, FString extension_p2);
N_LIB_PRIVATE N_NIMCALL(FString, convertToSandboxPath_)(FString inPath_p0, FString inSandboxName_p1);
N_LIB_PRIVATE N_NIMCALL(FString, convertRelativePathToFull_)(FString inPath_p0, FString inBasePath_p1);
N_LIB_PRIVATE N_NIMCALL(FString, convertFromSandboxPath_)(FString inPath_p0, FString inSandboxName_p1);
N_LIB_PRIVATE N_NIMCALL(FString, combine_)(TY__myhN0u2pNczwuaOhbdYPXw& inPaths_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, collapseRelativeDirectories_)(FString inPath_p0, FString& outPath_p1);
N_LIB_PRIVATE N_NIMCALL(FString, cloudDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, changeExtension_)(FString inPath_p0, FString inNewExtension_p1);
N_LIB_PRIVATE N_NIMCALL(FString, bugItDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationTransientDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationLogDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setAllowedDeviceOrientation_)(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q newAllowedDeviceOrientation_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationFromNow_)(NI32 inSecondsFromNow_p0, FText& title_p1, FText& body_p2, FText& action_p3, FString activationEvent_p4);
N_LIB_PRIVATE N_NIMCALL(void, scheduleLocalNotificationBadgeFromNow_)(NI32 inSecondsFromNow_p0, FString activationEvent_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationBadgeAtTime_)(FDateTime& fireDateTime_p0, NIM_BOOL localTime_p1, FString activationEvent_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationAtTime_)(FDateTime& fireDateTime_p0, NIM_BOOL localTime_p1, FText& title_p2, FText& body_p3, FText& action_p4, FString activationEvent_p5);
N_LIB_PRIVATE N_NIMCALL(void, getLaunchNotification_)(NIM_BOOL& notificationLaunchedApp_p0, FString& activationEvent_p1, NI32& fireDate_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q, getDeviceOrientation_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q, getAllowedDeviceOrientation_)(void);
N_LIB_PRIVATE N_NIMCALL(void, clearAllLocalNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, cancelLocalNotificationById_)(NI32 notificationId_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelLocalNotification_)(FString activationEvent_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, randomSobolFloat_)(NI32 index_p0, NI32 dimension_p1, NF32 seed_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, randomSobolCell3D_)(NI32 index_p0, NI32 numCells_p1, FVector cell_p2, FVector seed_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, randomSobolCell2D_)(NI32 index_p0, NI32 numCells_p1, FVector2D cell_p2, FVector2D seed_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, nextSobolFloat_)(NI32 index_p0, NI32 dimension_p1, NF32 previousValue_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, nextSobolCell3D_)(NI32 index_p0, NI32 numCells_p1, FVector previousValue_p2);
N_LIB_PRIVATE N_NIMCALL(FVector2D, nextSobolCell2D_)(NI32 index_p0, NI32 numCells_p1, FVector2D previousValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, makeImportanceTexture_)(UTexture2D* texture_p0, tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg weightingFunc_p1, FImportanceTexture_* Result);
N_LIB_PRIVATE N_NIMCALL(void, importanceSample_)(FImportanceTexture_& texture_p0, FVector2D& rand_p1, NI32 samples_p2, NF32 intensity_p3, FVector2D& samplePosition_p4, FLinearColor& sampleColor_p5, NF32& sampleIntensity_p6, NF32& sampleSize_p7);
N_LIB_PRIVATE N_NIMCALL(void, breakImportanceTexture_)(FImportanceTexture_& importanceTexture_p0, UTexture2D*& texture_p1, tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg& weightingFunc_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCinematicMode_)(ALevelScriptActor_* self_p0, NIM_BOOL bCinematicMode_p1, NIM_BOOL bHidePlayer_p2, NIM_BOOL bAffectsHUD_p3, NIM_BOOL bAffectsMovement_p4, NIM_BOOL bAffectsTurning_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, remoteEvent_)(ALevelScriptActor_* self_p0, FName eventName_p1);
N_LIB_PRIVATE N_NIMCALL(FActorInstanceHandle, createNewLightWeightInstance_)(UClass* actorClass_p0, FTransform transform_p1, UDataLayerInstance* layer_p2);
N_LIB_PRIVATE N_NIMCALL(FActorInstanceHandle, convertActorToLightWeightInstance_)(AActor* actor_p0);
N_LIB_PRIVATE N_NIMCALL(void, unload_)(ALocationVolume_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, load_)(ALocationVolume_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoaded_)(ALocationVolume_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1, FLinearColor value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1, FLinearColor value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1, UTexture* value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1, UTexture* value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSparseVolumeTextureParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1, USparseVolumeTexture_* value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setScalarParameterByIndex_)(UMaterialInstanceDynamic* self_p0, NI32 parameterIndex_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDoubleVectorParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1, FVector4 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, interpolateMaterialInstanceParams_)(UMaterialInstanceDynamic* self_p0, UMaterialInstance* sourceA_p1, UMaterialInstance* sourceB_p2, NF32 alpha_p3);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValueByInfo_)(UMaterialInstanceDynamic* self_p0, FMaterialParameterInfo& parameterInfo_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UMaterialInstanceDynamic* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(void, copyMaterialInstanceParameters_)(UMaterialInstanceDynamic* self_p0, UMaterialInterface* source_p1, NIM_BOOL bQuickParametersOnly_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, initializeScalarParameterAndGetIndex_)(UMaterialInstanceDynamic* self_p0, FName& parameterName_p1, NF32 value_p2, NI32& outParameterIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, copyParameterOverrides_)(UMaterialInstanceDynamic* self_p0, UMaterialInstance* materialInstance_p1);
N_LIB_PRIVATE N_NIMCALL(void, removePaintedVertices_)(UStaticMeshComponent* staticMeshComponent_p0);
N_LIB_PRIVATE N_NIMCALL(void, paintVerticesSingleColor_)(UStaticMeshComponent* staticMeshComponent_p0, FLinearColor& fillColor_p1, NIM_BOOL bConvertToSRGB_p2);
N_LIB_PRIVATE N_NIMCALL(void, paintVerticesLerpAlongAxis_)(UStaticMeshComponent* staticMeshComponent_p0, FLinearColor& startColor_p1, FLinearColor& endColor_p2, tyEnum_EVertexPaintAxis__xnbGI2wHzvdGeHn8hpYsPw axis_p3, NIM_BOOL bConvertToSRGB_p4);
N_LIB_PRIVATE N_NIMCALL(void, markPropertyDirtyFromRepIndex_)(UObject* object_p0, NI32 repIndex_p1, FName propertyName_p2);
N_LIB_PRIVATE N_NIMCALL(void, markPropertyDirty_)(UObject* object_p0, FName propertyName_p1);
N_LIB_PRIVATE N_NIMCALL(FString, text)(ANote_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(ANote_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setProjectionParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableProjection_p1, NF32 projectionLinearAlpha_p2, NF32 projectionAngularAlpha_p3);
N_LIB_PRIVATE N_NIMCALL(void, setParentDominates_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bParentDominates_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableTwistDrive_p1, NIM_BOOL bEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveSLERP_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMassConditioningEnabled_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableMassConditioning_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& inVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityDrive_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableDriveX_p1, NIM_BOOL bEnableDriveY_p2, NIM_BOOL bEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearSoftLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bSoftLinearLimit_p1, NF32 linearLimitStiffness_p2, NF32 linearLimitDamping_p3, NF32 linearLimitRestitution_p4, NF32 linearLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& inPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionDrive_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableDriveX_p1, NIM_BOOL bEnableDriveY_p2, NIM_BOOL bEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPlasticity_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bLinearPlasticity_p1, NF32 linearPlasticityThreshold_p2, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA plasticityType_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearLimits_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw xMotion_p1, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw yMotion_p2, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw zMotion_p3, NF32 limit_p4);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDriveParams_)(FConstraintInstanceAccessor_& accessor_p0, NF32 positionStrength_p1, NF32 velocityStrength_p2, NF32 inForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearBreakable_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bLinearBreakable_p1, NF32 linearBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDisableCollision_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bDisableCollision_p1);
N_LIB_PRIVATE N_NIMCALL(void, setContactTransferScale_)(FConstraintInstanceAccessor_& accessor_p0, NF32 contactTransferScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& inVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableTwistDrive_p1, NIM_BOOL bEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveSLERP_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSoftTwistLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bSoftTwistLimit_p1, NF32 twistLimitStiffness_p2, NF32 twistLimitDamping_p3, NF32 twistLimitRestitution_p4, NF32 twistLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSoftSwingLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bSoftSwingLimit_p1, NF32 swingLimitStiffness_p2, NF32 swingLimitDamping_p3, NF32 swingLimitRestitution_p4, NF32 swingLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, setAngularPlasticity_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bAngularPlasticity_p1, NF32 angularPlasticityThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationTarget_)(FConstraintInstanceAccessor_& accessor_p0, FRotator& inPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularLimits_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg swing1MotionType_p1, NF32 swing1LimitAngle_p2, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg swing2MotionType_p3, NF32 swing2LimitAngle_p4, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg twistMotionType_p5, NF32 twistLimitAngle_p6);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveParams_)(FConstraintInstanceAccessor_& accessor_p0, NF32 positionStrength_p1, NF32 velocityStrength_p2, NF32 inForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveMode_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ driveMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularBreakable_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL bAngularBreakable_p1, NF32 angularBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, getProjectionParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bEnableProjection_p1, NF32& projectionLinearAlpha_p2, NF32& projectionAngularAlpha_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getParentDominates_)(FConstraintInstanceAccessor_& accessor_p0);
N_LIB_PRIVATE N_NIMCALL(void, getOrientationDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableTwistDrive_p1, NIM_BOOL& bOutEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, getOrientationDriveSLERP_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMassConditioningEnabled_)(FConstraintInstanceAccessor_& accessor_p0);
N_LIB_PRIVATE N_NIMCALL(void, getLinearVelocityTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& outVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, getLinearVelocityDrive_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableDriveX_p1, NIM_BOOL& bOutEnableDriveY_p2, NIM_BOOL& bOutEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, getLinearSoftLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bSoftLinearLimit_p1, NF32& linearLimitStiffness_p2, NF32& linearLimitDamping_p3, NF32& linearLimitRestitution_p4, NF32& linearLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPositionTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& outPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPositionDrive_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableDriveX_p1, NIM_BOOL& bOutEnableDriveY_p2, NIM_BOOL& bOutEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPlasticity_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bLinearPlasticity_p1, NF32& linearPlasticityThreshold_p2, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA& plasticityType_p3);
N_LIB_PRIVATE N_NIMCALL(void, getLinearLimits_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& xMotion_p1, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& yMotion_p2, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& zMotion_p3, NF32& limit_p4);
N_LIB_PRIVATE N_NIMCALL(void, getLinearDriveParams_)(FConstraintInstanceAccessor_& accessor_p0, NF32& outPositionStrength_p1, NF32& outVelocityStrength_p2, NF32& outForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, getLinearBreakable_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bLinearBreakable_p1, NF32& linearBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisableCollsion_)(FConstraintInstanceAccessor_& accessor_p0);
N_LIB_PRIVATE N_NIMCALL(void, getContactTransferScale_)(FConstraintInstanceAccessor_& accessor_p0, NF32& contactTransferScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAttachedBodyNames_)(FConstraintInstanceAccessor_& accessor_p0, FName& parentBody_p1, FName& childBody_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityTarget_)(FConstraintInstanceAccessor_& accessor_p0, FVector& outVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableTwistDrive_p1, NIM_BOOL& bOutEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityDriveSLERP_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bOutEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAngularSoftTwistLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bSoftTwistLimit_p1, NF32& twistLimitStiffness_p2, NF32& twistLimitDamping_p3, NF32& twistLimitRestitution_p4, NF32& twistLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, getAngularSoftSwingLimitParams_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bSoftSwingLimit_p1, NF32& swingLimitStiffness_p2, NF32& swingLimitDamping_p3, NF32& swingLimitRestitution_p4, NF32& swingLimitContactDistance_p5);
N_LIB_PRIVATE N_NIMCALL(void, getAngularPlasticity_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bAngularPlasticity_p1, NF32& angularPlasticityThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, getAngularOrientationTarget_)(FConstraintInstanceAccessor_& accessor_p0, FRotator& outPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAngularLimits_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& swing1MotionType_p1, NF32& swing1LimitAngle_p2, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& swing2MotionType_p3, NF32& swing2LimitAngle_p4, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& twistMotionType_p5, NF32& twistLimitAngle_p6);
N_LIB_PRIVATE N_NIMCALL(void, getAngularDriveParams_)(FConstraintInstanceAccessor_& accessor_p0, NF32& outPositionStrength_p1, NF32& outVelocityStrength_p2, NF32& outForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, getAngularDriveMode_)(FConstraintInstanceAccessor_& accessor_p0, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ& outDriveMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAngularBreakable_)(FConstraintInstanceAccessor_& accessor_p0, NIM_BOOL& bAngularBreakable_p1, NF32& angularBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, copyParams_)(FConstraintInstanceAccessor_& accessor_p0, FConstraintInstanceAccessor_& sourceAccessor_p1, NIM_BOOL bKeepPosition_p2, NIM_BOOL bKeepRotation_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, evalPhysicsVectorField_)(UObject* worldContextObject_p0, FVector& worldPosition_p1, tyEnum_EFieldVectorType__pGz3AQq9bl4kW1oB5Z5VQoQ vectorType_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, evalPhysicsScalarField_)(UObject* worldContextObject_p0, FVector& worldPosition_p1, tyEnum_EFieldScalarType__qtOF20Dkpb10DEnhLq7Prg scalarType_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, evalPhysicsIntegerField_)(UObject* worldContextObject_p0, FVector& worldPosition_p1, tyEnum_EFieldIntegerType__MD4euztRfjoPbO1X9b32yIQ integerType_p2);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, settings)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(APostProcessVolume_* obj_p0, FPostProcessSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(APostProcessVolume_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, blendRadius)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendRadius)(APostProcessVolume_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, blendWeight)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendWeight)(APostProcessVolume_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(APostProcessVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUnbound)(APostProcessVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUnbound)(APostProcessVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(APostProcessVolume_* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1, NF32 inWeight_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopPerformanceSnapshots_)(void);
N_LIB_PRIVATE N_NIMCALL(void, startPerformanceSnapshots_)(void);
N_LIB_PRIVATE N_NIMCALL(void, logPerformanceSnapshot_)(FString snapshotTitle_p0, NIM_BOOL bResetStats_p1);
N_LIB_PRIVATE N_NIMCALL(URectLightComponent_*, rectLightComponent)(ARectLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrectLightComponent)(ARectLight_* obj_p0, URectLightComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, requestCheckpoint_)(UReplaySubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRecording_)(UReplaySubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UReplaySubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getReplayCurrentTime_)(UReplaySubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getActiveReplayName_)(UReplaySubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocketInfo_)(USkinnedAsset* self_p0, FName inSocketName_p1, FTransform& outTransform_p2, NI32& outBoneIndex_p3, NI32& outIndex_p4);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocket_)(USkinnedAsset* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, skeleton)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskeleton)(USkeletalMesh* obj_p0, USkeleton* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, positiveBoundsExtension)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpositiveBoundsExtension)(USkeletalMesh* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, negativeBoundsExtension)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnegativeBoundsExtension)(USkeletalMesh* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__J4BsCVazMxnbn2pMa0gmYA*, materials)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterials)(USkeletalMesh* obj_p0, TY__J4BsCVazMxnbn2pMa0gmYA val_p1);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshLODSettings*, lODSettings)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODSettings)(USkeletalMesh* obj_p0, USkeletalMeshLODSettings* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, defaultAnimatingRig)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAnimatingRig)(USkeletalMesh* obj_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg val_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, physicsAsset)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsAsset)(USkeletalMesh* obj_p0, UPhysicsAsset* val_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, shadowPhysicsAsset)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowPhysicsAsset)(USkeletalMesh* obj_p0, UPhysicsAsset* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__aQOYJDTq9cbs3kkjTFzDRtw*, nodeMappingData)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnodeMappingData)(USkeletalMesh* obj_p0, TY__aQOYJDTq9cbs3kkjTFzDRtw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BkXM3seddDKCuk9ckyWy0BA*, morphTargets)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmorphTargets)(USkeletalMesh* obj_p0, TY__BkXM3seddDKCuk9ckyWy0BA val_p1);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformer_*, defaultMeshDeformer)(USkeletalMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMeshDeformer)(USkeletalMesh* obj_p0, UMeshDeformer_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkeleton_)(USkeletalMesh* self_p0, USkeleton* inSkeleton_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTargets_)(USkeletalMesh* self_p0, TY__BkXM3seddDKCuk9ckyWy0BA& inMorphTargets_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinLODForQualityLevels_)(USkeletalMesh* self_p0, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs_p1, NI32 default_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMaterials_)(USkeletalMesh* self_p0, TY__J4BsCVazMxnbn2pMa0gmYA& inMaterials_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLODSettings_)(USkeletalMesh* self_p0, USkeletalMeshLODSettings* inLODSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultAnimatingRig_)(USkeletalMesh* self_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg inAnimatingRig_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numSockets_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAllMorphTargetNames_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSectionUsingCloth_)(USkeletalMesh* self_p0, NI32 inSectionIndex_p1, NIM_BOOL bCheckCorrespondingSections_p2);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, getSocketByIndex_)(USkeletalMesh* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, getSkeleton_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, getShadowPhysicsAsset_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, getPhysicsAsset_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__aQOYJDTq9cbs3kkjTFzDRtw, getNodeMappingData_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(UNodeMappingContainer_*, getNodeMappingContainer_)(USkeletalMesh* self_p0, UBlueprint* sourceAsset_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BkXM3seddDKCuk9ckyWy0BA, getMorphTargetsPtrConv_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getMinLODForQualityLevels_)(USkeletalMesh* self_p0, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs_p1, NI32& default_p2);
N_LIB_PRIVATE N_NIMCALL(TY__J4BsCVazMxnbn2pMa0gmYA, getMaterials_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshLODSettings*, getLODSettings_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getImportedBounds_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRig_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getBounds_)(USkeletalMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocketAndIndex_)(USkeletalMesh* self_p0, FName inSocketName_p1, NI32& outIndex_p2);
N_LIB_PRIVATE N_NIMCALL(void, addSocket_)(USkeletalMesh* self_p0, USkeletalMeshSocket_* inSocket_p1, NIM_BOOL bAddToSkeleton_p2);
N_LIB_PRIVATE N_NIMCALL(TY__DjVkfHFhdnDmatCydN9cEqw*, staticMaterials)(UStaticMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMaterials)(UStaticMesh* obj_p0, TY__DjVkfHFhdnDmatCydN9cEqw val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, lODForCollision)(UStaticMesh* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODForCollision)(UStaticMesh* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStaticMaterials_)(UStaticMesh* self_p0, TY__DjVkfHFhdnDmatCydN9cEqw& inStaticMaterials_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNumSourceModels_)(UStaticMesh* self_p0, NI32 num_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinLODForQualityLevels_)(UStaticMesh* self_p0, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs_p1, NI32 default_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumLODForPlatforms_)(UStaticMesh* self_p0, TY__FlT4tcZm1cmdaT89ciajJfA& platformMinimumLODs_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumLODForPlatform_)(UStaticMesh* self_p0, FName& platformName_p1, NI32 inMinLOD_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UStaticMesh* self_p0, NI32 materialIndex_p1, UMaterialInterface* newMaterial_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeSocket_)(UStaticMesh* self_p0, UStaticMeshSocket_* socket_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLODScreenSizeAutoComputed_)(UStaticMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__DjVkfHFhdnDmatCydN9cEqw, getStaticMaterials_)(UStaticMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Cmu2WMlENYBnJ16EwepnUQ, getSocketsByTag_)(UStaticMesh* self_p0, FString inSocketTag_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumTriangles_)(UStaticMesh* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSections_)(UStaticMesh* self_p0, NI32 inLOD_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLODs_)(UStaticMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getMinLODForQualityLevels_)(UStaticMesh* self_p0, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs_p1, NI32& default_p2);
N_LIB_PRIVATE N_NIMCALL(void, getMinimumLODForQualityLevels_)(UStaticMesh* self_p0, TY__FlT4tcZm1cmdaT89ciajJfA& qualityLevelMinimumLODs_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinimumLODForQualityLevel_)(UStaticMesh* self_p0, FName& qualityLevel_p1);
N_LIB_PRIVATE N_NIMCALL(void, getMinimumLODForPlatforms_)(UStaticMesh* self_p0, TY__FlT4tcZm1cmdaT89ciajJfA& platformMinimumLODs_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinimumLODForPlatform_)(UStaticMesh* self_p0, FName& platformName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaterialIndex_)(UStaticMesh* self_p0, FName materialSlotName_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterial_)(UStaticMesh* self_p0, NI32 materialIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getBounds_)(UStaticMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(FBox, getBoundingBox_)(UStaticMesh* self_p0);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshSocket_*, findSocket_)(UStaticMesh* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(void, addSocket_)(UStaticMesh* self_p0, UStaticMeshSocket_* socket_p1);
N_LIB_PRIVATE N_NIMCALL(FName, addMaterial_)(UStaticMesh* self_p0, UMaterialInterface* material_p1);
N_LIB_PRIVATE N_NIMCALL(void, showSplashScreen_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setSplashScreen_)(UTexture* texture_p0, FVector2D scale_p1, FVector offset_p2, NIM_BOOL bShowLoadingMovie_p3, NIM_BOOL bShowOnSet_p4);
N_LIB_PRIVATE N_NIMCALL(void, hideSplashScreen_)(void);
N_LIB_PRIVATE N_NIMCALL(void, enableAutoLoadingSplashScreen_)(NIM_BOOL inAutoShowEnabled_p0);
N_LIB_PRIVATE N_NIMCALL(UWorldSubsystem*, getWorldSubsystem_)(UObject* contextObject_p0, TY__SZrhP2SaWueNLRMyRwUueg class_p1);
N_LIB_PRIVATE N_NIMCALL(ULocalPlayerSubsystem*, getLocalPlayerSubSystemFromPlayerController_)(APlayerController* playerController_p0, TY__xoau9aGG9bGInThS5Ff3sLrA class_p1);
N_LIB_PRIVATE N_NIMCALL(ULocalPlayerSubsystem*, getLocalPlayerSubsystem_)(UObject* contextObject_p0, TY__xoau9aGG9bGInThS5Ff3sLrA class_p1);
N_LIB_PRIVATE N_NIMCALL(UGameInstanceSubsystem*, getGameInstanceSubsystem_)(UObject* contextObject_p0, TY__t7MW8dNaA8xV9aQwPSWKF0w class_p1);
N_LIB_PRIVATE N_NIMCALL(UEngineSubsystem*, getEngineSubsystem_)(TY__a9c7M9ap9aHvx2XoTZg2f8G9aA class_p0);
N_LIB_PRIVATE N_NIMCALL(UAudioEngineSubsystem_*, getAudioEngineSubsystem_)(UObject* contextObject_p0, TY__lMyEL238B9aDA0twt0Y33xA class_p1);
N_LIB_PRIVATE N_NIMCALL(UBillboardComponent_*, spriteComponent)(ATargetPoint_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspriteComponent)(ATargetPoint_* obj_p0, UBillboardComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UArrowComponent_*, arrowComponent)(ATargetPoint_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setarrowComponent)(ATargetPoint_* obj_p0, UArrowComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTarget2DArray_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTarget2DArray_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTarget2DArray_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTarget2DArray_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, slices)(UTextureRenderTarget2DArray_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setslices)(UTextureRenderTarget2DArray_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTarget2DArray_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTarget2DArray_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTargetCube_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTargetCube_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTargetCube_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTargetCube_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTargetVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTargetVolume_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTargetVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTargetVolume_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeZ)(UTextureRenderTargetVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsizeZ)(UTextureRenderTargetVolume_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTargetVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTargetVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicated)(UTimelineTemplate_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicated)(UTimelineTemplate_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, textSize_)(UCanvas_* self_p0, UFont_* renderFont_p1, FString renderText_p2, FVector2D scale_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, strLen_)(UCanvas_* self_p0, UFont_* renderFont_p1, FString renderText_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, project_)(UCanvas_* self_p0, FVector worldLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, drawTriangle_)(UCanvas_* self_p0, UTexture* renderTexture_p1, TY__BpCzqwI2aoMmhSgofuM38A triangles_p2);
N_LIB_PRIVATE N_NIMCALL(void, drawTexture_)(UCanvas_* self_p0, UTexture* renderTexture_p1, FVector2D screenPosition_p2, FVector2D screenSize_p3, FVector2D coordinatePosition_p4, FVector2D coordinateSize_p5, FLinearColor renderColor_p6, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw blendMode_p7, NF32 rotation_p8, FVector2D pivotPoint_p9);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(UCanvas_* self_p0, UFont_* renderFont_p1, FString renderText_p2, FVector2D screenPosition_p3, FVector2D scale_p4, FLinearColor renderColor_p5, NF32 kerning_p6, FLinearColor shadowColor_p7, FVector2D shadowOffset_p8, NIM_BOOL bCentreX_p9, NIM_BOOL bCentreY_p10, NIM_BOOL bOutlined_p11, FLinearColor outlineColor_p12);
N_LIB_PRIVATE N_NIMCALL(void, drawPolygon_)(UCanvas_* self_p0, UTexture* renderTexture_p1, FVector2D screenPosition_p2, FVector2D radius_p3, NI32 numberOfSides_p4, FLinearColor renderColor_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialTriangle_)(UCanvas_* self_p0, UMaterialInterface* renderMaterial_p1, TY__BpCzqwI2aoMmhSgofuM38A triangles_p2);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterial_)(UCanvas_* self_p0, UMaterialInterface* renderMaterial_p1, FVector2D screenPosition_p2, FVector2D screenSize_p3, FVector2D coordinatePosition_p4, FVector2D coordinateSize_p5, NF32 rotation_p6, FVector2D pivotPoint_p7);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(UCanvas_* self_p0, FVector2D screenPositionA_p1, FVector2D screenPositionB_p2, NF32 thickness_p3, FLinearColor renderColor_p4);
N_LIB_PRIVATE N_NIMCALL(void, drawBox_)(UCanvas_* self_p0, FVector2D screenPosition_p1, FVector2D screenSize_p2, NF32 thickness_p3, FLinearColor renderColor_p4);
N_LIB_PRIVATE N_NIMCALL(void, drawBorder_)(UCanvas_* self_p0, UTexture* borderTexture_p1, UTexture* backgroundTexture_p2, UTexture* leftBorderTexture_p3, UTexture* rightBorderTexture_p4, UTexture* topBorderTexture_p5, UTexture* bottomBorderTexture_p6, FVector2D screenPosition_p7, FVector2D screenSize_p8, FVector2D coordinatePosition_p9, FVector2D coordinateSize_p10, FLinearColor renderColor_p11, FVector2D borderScale_p12, FVector2D backgroundScale_p13, NF32 rotation_p14, FVector2D pivotPoint_p15, FVector2D cornerSize_p16);
N_LIB_PRIVATE N_NIMCALL(void, deproject_)(UCanvas_* self_p0, FVector2D screenPosition_p1, FVector& worldOrigin_p2, FVector& worldDirection_p3);
N_LIB_PRIVATE N_NIMCALL(void, redirectVislog_)(UObject* sourceOwner_p0, UObject* destinationOwner_p1);
N_LIB_PRIVATE N_NIMCALL(void, logText_)(UObject* worldContextObject_p0, FString text_p1, FName logCategory_p2, NIM_BOOL bAddToMessageLog_p3);
N_LIB_PRIVATE N_NIMCALL(void, logSegment_)(UObject* worldContextObject_p0, FVector segmentStart_p1, FVector segmentEnd_p2, FString text_p3, FLinearColor objectColor_p4, NF32 thickness_p5, FName categoryName_p6, NIM_BOOL bAddToMessageLog_p7);
N_LIB_PRIVATE N_NIMCALL(void, logLocation_)(UObject* worldContextObject_p0, FVector location_p1, FString text_p2, FLinearColor objectColor_p3, NF32 radius_p4, FName logCategory_p5, NIM_BOOL bAddToMessageLog_p6);
N_LIB_PRIVATE N_NIMCALL(void, logBox_)(UObject* worldContextObject_p0, FBox boxShape_p1, FString text_p2, FLinearColor objectColor_p3, FName logCategory_p4, NIM_BOOL bAddToMessageLog_p5);
N_LIB_PRIVATE N_NIMCALL(void, enableRecording_)(NIM_BOOL bEnabled_p0);
N_LIB_PRIVATE N_NIMCALL(void, setMicThreshold_)(NF32 inThreshold_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressMode)(UVolumeTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressMode)(UVolumeTexture_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unpinActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToUnpin_p0);
N_LIB_PRIVATE N_NIMCALL(void, unloadActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToUnload_p0);
N_LIB_PRIVATE N_NIMCALL(void, pinActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToPin_p0);
N_LIB_PRIVATE N_NIMCALL(void, loadActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToLoad_p0);
N_LIB_PRIVATE N_NIMCALL(FBox, getRuntimeWorldBounds_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntersectingActorDescs_)(FBox& inBox_p0, TY__L1uKoYpGltEdX5AMaAZBwA& outActorDescs_p1);
N_LIB_PRIVATE N_NIMCALL(FBox, getEditorWorldBounds_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getActorDescs_)(TY__L1uKoYpGltEdX5AMaAZBwA& outActorDescs_p0);
N_LIB_PRIVATE N_NIMCALL(void, destroyInHLOD_)(TY__Z9bblV6ojuGotVTgnCjfC4Q& destructibleInHLOD_p0);
N_LIB_PRIVATE N_NIMCALL(void, damageInHLOD_)(TY__Z9bblV6ojuGotVTgnCjfC4Q& destructibleInHLOD_p0, NF32 damagePercent_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingCompleted_)(UWorldPartitionSubsystem_* self_p0, tyEnum_EWorldPartitionRuntimeCellState__vkrpaNcih6ma2naZWG9cYYQ queryState_p1, TY__coX2EsXi9bBqBt2eQJWCxdw& querySources_p2, NIM_BOOL bExactState_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAllStreamingCompleted_)(UWorldPartitionSubsystem_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnhancedInput)(void);
N_LIB_PRIVATE N_NIMCALL(TY__thExvANNGNgDH8OkaKuR8A*, inputActionDelegateBindings)(UEnhancedInputActionDelegateBinding_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputActionDelegateBindings)(UEnhancedInputActionDelegateBinding_* obj_p0, TY__thExvANNGNgDH8OkaKuR8A val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__thExvANNGNgDH8OkaKuR8A*, inputActionValueBindings)(UEnhancedInputActionValueBinding_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputActionValueBindings)(UEnhancedInputActionValueBinding_* obj_p0, TY__thExvANNGNgDH8OkaKuR8A val_p1);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, getBoundActionValue_)(UEnhancedInputComponent* self_p0, UInputAction* action_p1);
N_LIB_PRIVATE N_NIMCALL(TY__wjhtp2nTDdhb86xh9cRyNdg*, defaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0, TY__wjhtp2nTDdhb86xh9cRyNdg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__wjhtp2nTDdhb86xh9cRyNdg*, defaultWorldSubsystemMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWorldSubsystemMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0, TY__wjhtp2nTDdhb86xh9cRyNdg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__dPphnKVNcklyqD9cNMYlEAw, defaultWorldInputClass)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWorldInputClass)(UEnhancedInputDeveloperSettings_* obj_p0, TY__dPphnKVNcklyqD9cNMYlEAw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableDefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableDefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldOnlyTriggerLastActionInChord)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldOnlyTriggerLastActionInChord)(UEnhancedInputDeveloperSettings_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableWorldSubsystem)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableWorldSubsystem)(UEnhancedInputDeveloperSettings_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldLogAllWorldSubsystemInputs)(UEnhancedInputDeveloperSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldLogAllWorldSubsystemInputs)(UEnhancedInputDeveloperSettings_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappingsUsingContext_)(UInputMappingContext_* context_p0, NIM_BOOL bForceImmediately_p1);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, makeInputActionValueOfType_)(NF x_p0, NF y_p1, NF z_p2, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg valueType_p3);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, makeInputActionValue_)(NF x_p0, NF y_p1, NF z_p2, FInputActionValue& matchValueType_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActionKeyMappingPlayerMappable_)(FEnhancedActionKeyMapping& actionKeyMapping_p0);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getThirdPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getSecondPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(UPlayerMappableKeySettings_*, getPlayerMappableKeySettings_)(FEnhancedActionKeyMapping& actionKeyMapping_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getMappingName_)(FEnhancedActionKeyMapping& actionKeyMapping_p0);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getFourthPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getFirstPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, getBoundActionValue_)(AActor* actor_p0, UInputAction* action_p1);
N_LIB_PRIVATE N_NIMCALL(FString, conv_InputActionValueToString_)(FInputActionValue actionValue_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, conv_InputActionValueToBool_)(FInputActionValue inValue_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_InputActionValueToAxis3D_)(FInputActionValue actionValue_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, conv_InputActionValueToAxis2D_)(FInputActionValue inValue_p0);
N_LIB_PRIVATE N_NIMCALL(NF, conv_InputActionValueToAxis1D_)(FInputActionValue inValue_p0);
N_LIB_PRIVATE N_NIMCALL(void, breakInputActionValue_)(FInputActionValue inActionValue_p0, NF& x_p1, NF& y_p2, NF& z_p3, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg& type_p4);
N_LIB_PRIVATE N_NIMCALL(TY__akGNBG0tR9cxS6jqY9cPjDDg*, mappingContextRedirects)(UEnhancedInputPlatformData_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmappingContextRedirects)(UEnhancedInputPlatformData_* obj_p0, TY__akGNBG0tR9cxS6jqY9cPjDDg val_p1);
N_LIB_PRIVATE N_NIMCALL(UInputMappingContext_*, getContextRedirect_)(UEnhancedInputPlatformData_* self_p0, UInputMappingContext_* inContext_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Vl9a1S9a74enmUSPajJNLzGg*, inputData)(UEnhancedInputPlatformSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputData)(UEnhancedInputPlatformSettings_* obj_p0, TY__Vl9a1S9a74enmUSPajJNLzGg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__5VGVoPDWJG1SfBmRkBTYzg*, inputDataClasses)(UEnhancedInputPlatformSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputDataClasses)(UEnhancedInputPlatformSettings_* obj_p0, TY__5VGVoPDWJG1SfBmRkBTYzg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldLogMappingContextRedirects)(UEnhancedInputPlatformSettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldLogMappingContextRedirects)(UEnhancedInputPlatformSettings_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappings_)(UEnhancedInputSubsystemInterface* self_p0, FModifyContextOptions& options_p1, tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA rebuildType_p2);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappings_)(UEnhancedInputSubsystemInterface* self_p0, tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA rebuildType_p1);
N_LIB_PRIVATE N_NIMCALL(void, removePlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self_p0, UPlayerMappableInputConfig_* config_p1, FModifyContextOptions& options_p2);
N_LIB_PRIVATE N_NIMCALL(void, removePlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self_p0, UPlayerMappableInputConfig_* config_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeMappingContext_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* mappingContext_p1, FModifyContextOptions& options_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeMappingContext_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* mappingContext_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllPlayerMappedKeysForMapping_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FModifyContextOptions& options_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllPlayerMappedKeysForMapping_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self_p0, FModifyContextOptions& options_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ, queryMapKeyInContextSet_)(UEnhancedInputSubsystemInterface* self_p0, TY__lgKFBDQQJ4HcImBX8b3sLA& prioritizedActiveContexts_p1, UInputMappingContext_* inputContext_p2, UInputAction* action_p3, FKey key_p4, TY__bjKA9cg0NSPZszptILQ9bYXg& outIssues_p5, tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ blockingIssues_p6);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ, queryMapKeyInActiveContextSet_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* inputContext_p1, UInputAction* action_p2, FKey key_p3, TY__bjKA9cg0NSPZszptILQ9bYXg& outIssues_p4, tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ blockingIssues_p5);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA, queryKeysMappedToAction_)(UEnhancedInputSubsystemInterface* self_p0, UInputAction* action_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, removePlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FPlayerMappableKeySlot& keySlot_p2, FModifyContextOptions& options_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, removePlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FModifyContextOptions& options_p2);
N_LIB_PRIVATE N_NIMCALL(FKey, getPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FPlayerMappableKeySlot& keySlot_p2);
N_LIB_PRIVATE N_NIMCALL(FKey, getPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, addPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FKey newKey_p2, FPlayerMappableKeySlot& keySlot_p3, FModifyContextOptions& options_p4);
N_LIB_PRIVATE N_NIMCALL(NI32, addPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1, FKey newKey_p2, FModifyContextOptions& options_p3);
N_LIB_PRIVATE N_NIMCALL(void, injectInputVectorForAction_)(UEnhancedInputSubsystemInterface* self_p0, UInputAction* action_p1, FVector value_p2, TY__c8nNrl0cjgFNa0Q8UPdEvQ& modifiers_p3, TY__FxqDNnZW9amc7oM6Ecl0Hcg& triggers_p4);
N_LIB_PRIVATE N_NIMCALL(void, injectInputForAction_)(UEnhancedInputSubsystemInterface* self_p0, UInputAction* action_p1, FInputActionValue rawValue_p2, TY__c8nNrl0cjgFNa0Q8UPdEvQ& modifiers_p3, TY__FxqDNnZW9amc7oM6Ecl0Hcg& triggers_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMappingContext_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* mappingContext_p1, NI32& outFoundPriority_p2);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA, getAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self_p0, FName mappingName_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getAllPlayerMappableActionKeyMappings_)(UEnhancedInputSubsystemInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAllMappings_)(UEnhancedInputSubsystemInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addPlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self_p0, UPlayerMappableInputConfig_* config_p1, FModifyContextOptions& options_p2);
N_LIB_PRIVATE N_NIMCALL(void, addPlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self_p0, UPlayerMappableInputConfig_* config_p1);
N_LIB_PRIVATE N_NIMCALL(void, addMappingContext_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* mappingContext_p1, NI32 priority_p2, FModifyContextOptions& options_p3);
N_LIB_PRIVATE N_NIMCALL(void, addMappingContext_)(UEnhancedInputSubsystemInterface* self_p0, UInputMappingContext_* mappingContext_p1, NI32 priority_p2);
N_LIB_PRIVATE N_NIMCALL(FOnControlMappingsRebuilt_*, controlMappingsRebuiltDelegate)(UEnhancedInputLocalPlayerSubsystem* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontrolMappingsRebuiltDelegate)(UEnhancedInputLocalPlayerSubsystem* obj_p0, FOnControlMappingsRebuilt_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onControlMappingsRebuilt_)(UEnhancedInputLocalPlayerSubsystem* self_p0);
N_LIB_PRIVATE N_NIMCALL(UEnhancedPlayerInput*, playerInput)(UEnhancedInputWorldSubsystem* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerInput)(UEnhancedInputWorldSubsystem* obj_p0, UEnhancedPlayerInput* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__iZLNaT1K9bm5EsgMOTsKjcA*, currentInputStack)(UEnhancedInputWorldSubsystem* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentInputStack)(UEnhancedInputWorldSubsystem* obj_p0, TY__iZLNaT1K9bm5EsgMOTsKjcA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeActorInputComponent_)(UEnhancedInputWorldSubsystem* self_p0, AActor* actor_p1);
N_LIB_PRIVATE N_NIMCALL(void, addActorInputComponent_)(UEnhancedInputWorldSubsystem* self_p0, AActor* actor_p1);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A*, appliedInputContexts)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setappliedInputContexts)(UEnhancedPlayerInput* obj_p0, TY__sOdDuvKiHtt9cumeGPfHn2A val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA*, enhancedActionMappings)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenhancedActionMappings)(UEnhancedPlayerInput* obj_p0, TY__Rv7KwgUmzu2nlB7yhoSeJA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__k9aNq3p033XWsku9bV9cgPW9bQ*, actionInstanceData)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactionInstanceData)(UEnhancedPlayerInput* obj_p0, TY__k9aNq3p033XWsku9bV9cgPW9bQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__ycORZrEHfDeQwJCU7d1PHg*, keysPressedThisTick)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setkeysPressedThisTick)(UEnhancedPlayerInput* obj_p0, TY__ycORZrEHfDeQwJCU7d1PHg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Ofsfce9bTEY1Wuud9a3bLwFQ*, inputsInjectedThisTick)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputsInjectedThisTick)(UEnhancedPlayerInput* obj_p0, TY__Ofsfce9bTEY1Wuud9a3bLwFQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__SVxKloj6zDI4NdPm5EhnqQ*, lastInjectedActions)(UEnhancedPlayerInput* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlastInjectedActions)(UEnhancedPlayerInput* obj_p0, TY__SVxKloj6zDI4NdPm5EhnqQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, actionDescription)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactionDescription)(UInputAction* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsumeInput)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbConsumeInput)(UInputAction* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTriggerWhenPaused)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTriggerWhenPaused)(UInputAction* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReserveAllMappings)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReserveAllMappings)(UInputAction* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg, valueType)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvalueType)(UInputAction* obj_p0, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__FxqDNnZW9amc7oM6Ecl0Hcg*, triggers)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggers)(UInputAction* obj_p0, TY__FxqDNnZW9amc7oM6Ecl0Hcg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__c8nNrl0cjgFNa0Q8UPdEvQ*, modifiers)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmodifiers)(UInputAction* obj_p0, TY__c8nNrl0cjgFNa0Q8UPdEvQ val_p1);
N_LIB_PRIVATE N_NIMCALL(UPlayerMappableKeySettings_*, playerMappableKeySettings)(UInputAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerMappableKeySettings)(UInputAction* obj_p0, UPlayerMappableKeySettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__SkUL0XwwFFaUKA6OsdzxzA*, inputDebugKeyDelegateBindings)(UInputDebugKeyDelegateBinding_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputDebugKeyDelegateBindings)(UInputDebugKeyDelegateBinding_* obj_p0, TY__SkUL0XwwFFaUKA6OsdzxzA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA*, mappings)(UInputMappingContext_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmappings)(UInputMappingContext_* obj_p0, TY__Rv7KwgUmzu2nlB7yhoSeJA val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, contextDescription)(UInputMappingContext_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontextDescription)(UInputMappingContext_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unmapKey_)(UInputMappingContext_* self_p0, UInputAction* action_p1, FKey key_p2);
N_LIB_PRIVATE N_NIMCALL(void, unmapAllKeysFromAction_)(UInputMappingContext_* self_p0, UInputAction* action_p1);
N_LIB_PRIVATE N_NIMCALL(void, unmapAll_)(UInputMappingContext_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, unmapAction_)(UInputMappingContext_* self_p0, UInputAction* action_p1);
N_LIB_PRIVATE N_NIMCALL(FEnhancedActionKeyMapping, mapKey_)(UInputMappingContext_* self_p0, UInputAction* action_p1, FKey toKey_p2);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, modifyRaw_)(UInputModifier* self_p0, UEnhancedPlayerInput* playerInput_p1, FInputActionValue currentValue_p2, NF32 deltaTime_p3);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVisualizationColor_)(UInputModifier* self_p0, FInputActionValue sampleValue_p1, FInputActionValue finalValue_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, lowerThreshold)(UInputModifierDeadZone* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlowerThreshold)(UInputModifierDeadZone* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, upperThreshold)(UInputModifierDeadZone* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setupperThreshold)(UInputModifierDeadZone* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ, type)(UInputModifierDeadZone* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settype)(UInputModifierDeadZone* obj_p0, tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, scalar)(UInputModifierScalar* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscalar)(UInputModifierScalar* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bX)(UInputModifierNegate* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbX)(UInputModifierNegate* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bY)(UInputModifierNegate* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbY)(UInputModifierNegate* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bZ)(UInputModifierNegate* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbZ)(UInputModifierNegate* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, curveExponent)(UInputModifierResponseCurveExponential* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurveExponent)(UInputModifierResponseCurveExponential* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseX)(UInputModifierResponseCurveUser* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setresponseX)(UInputModifierResponseCurveUser* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseY)(UInputModifierResponseCurveUser* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setresponseY)(UInputModifierResponseCurveUser* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseZ)(UInputModifierResponseCurveUser* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setresponseZ)(UInputModifierResponseCurveUser* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fOVScale)(UInputModifierFOVScaling* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfOVScale)(UInputModifierFOVScaling* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA, fOVScalingType)(UInputModifierFOVScaling* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfOVScalingType)(UInputModifierFOVScaling* obj_p0, tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g, order)(UInputModifierSwizzleAxis* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorder)(UInputModifierSwizzleAxis* obj_p0, tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, actuationThreshold)(UInputTrigger* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactuationThreshold)(UInputTrigger* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldAlwaysTick)(UInputTrigger* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldAlwaysTick)(UInputTrigger* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue*, lastValue)(UInputTrigger* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlastValue)(UInputTrigger* obj_p0, FInputActionValue val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETriggerState__QCHs7MNqpyKxgNRnJWNtLg, updateState_)(UInputTrigger* self_p0, UEnhancedPlayerInput* playerInput_p1, FInputActionValue modifiedValue_p2, NF32 deltaTime_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActuated_)(UInputTrigger* self_p0, FInputActionValue& forValue_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETriggerType__Ck7FJArFtrL50IHyr5xiCA, getTriggerType_)(UInputTrigger* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, heldDuration)(UInputTriggerTimedBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheldDuration)(UInputTriggerTimedBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectedByTimeDilation)(UInputTriggerTimedBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectedByTimeDilation)(UInputTriggerTimedBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, holdTimeThreshold)(UInputTriggerHold* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setholdTimeThreshold)(UInputTriggerHold* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsOneShot)(UInputTriggerHold* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsOneShot)(UInputTriggerHold* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, holdTimeThreshold)(UInputTriggerHoldAndRelease* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setholdTimeThreshold)(UInputTriggerHoldAndRelease* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, tapReleaseTimeThreshold)(UInputTriggerTap* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settapReleaseTimeThreshold)(UInputTriggerTap* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTriggerOnStart)(UInputTriggerPulse* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTriggerOnStart)(UInputTriggerPulse* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interval)(UInputTriggerPulse* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterval)(UInputTriggerPulse* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, triggerLimit)(UInputTriggerPulse* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggerLimit)(UInputTriggerPulse* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UInputAction*, chordAction)(UInputTriggerChordAction* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchordAction)(UInputTriggerChordAction* obj_p0, UInputAction* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, currentComboStepIndex)(UInputTriggerCombo* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentComboStepIndex)(UInputTriggerCombo* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, currentTimeBetweenComboSteps)(UInputTriggerCombo* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentTimeBetweenComboSteps)(UInputTriggerCombo* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__G0jxsrnIhOE5QUYUpdavEQ*, comboActions)(UInputTriggerCombo* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcomboActions)(UInputTriggerCombo* obj_p0, TY__G0jxsrnIhOE5QUYUpdavEQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__6u4iFJ3xvKthNkXqw0X5Hw*, inputCancelActions)(UInputTriggerCombo* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputCancelActions)(UInputTriggerCombo* obj_p0, TY__6u4iFJ3xvKthNkXqw0X5Hw val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, configName)(UPlayerMappableInputConfig_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconfigName)(UPlayerMappableInputConfig_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, configDisplayName)(UPlayerMappableInputConfig_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconfigDisplayName)(UPlayerMappableInputConfig_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsDeprecated)(UPlayerMappableInputConfig_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsDeprecated)(UPlayerMappableInputConfig_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UObject*, metadata)(UPlayerMappableInputConfig_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPlayerMappableInputConfig_* obj_p0, UObject* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A*, contexts)(UPlayerMappableInputConfig_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontexts)(UPlayerMappableInputConfig_* obj_p0, TY__sOdDuvKiHtt9cumeGPfHn2A val_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetToDefault_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDeprecated_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getPlayerMappableKeys_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getMetadata_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A, getMappingContexts_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FEnhancedActionKeyMapping, getMappingByName_)(UPlayerMappableInputConfig_* self_p0, FName mappingName_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getKeysBoundToAction_)(UPlayerMappableInputConfig_* self_p0, UInputAction* inAction_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getDisplayName_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getConfigName_)(UPlayerMappableInputConfig_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, metadata)(UPlayerMappableKeySettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPlayerMappableKeySettings_* obj_p0, UObject* val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, name)(UPlayerMappableKeySettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setname)(UPlayerMappableKeySettings_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, displayName)(UPlayerMappableKeySettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdisplayName)(UPlayerMappableKeySettings_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, displayCategory)(UPlayerMappableKeySettings_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdisplayCategory)(UPlayerMappableKeySettings_* obj_p0, FText val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayTasks)(void);
N_LIB_PRIVATE N_NIMCALL(FName*, instanceName)(UGameplayTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceName)(UGameplayTask_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETaskResourceOverlapPolicy__KHi9c9baZ7fNBEk2sx9aOs2jg, resourceOverlapPolicy)(UGameplayTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setresourceOverlapPolicy)(UGameplayTask_* obj_p0, tyEnum_ETaskResourceOverlapPolicy__KHi9c9baZ7fNBEk2sx9aOs2jg val_p1);
N_LIB_PRIVATE N_NIMCALL(void, readyForActivation_)(UGameplayTask_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, genericGameplayTaskDelegate_)(UGameplayTask_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, endTask_)(UGameplayTask_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, manualResourceID)(UGameplayTaskResource_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmanualResourceID)(UGameplayTaskResource_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI8, autoResourceID)(UGameplayTaskResource_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoResourceID)(UGameplayTaskResource_* obj_p0, NI8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bManuallySetID)(UGameplayTaskResource_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbManuallySetID)(UGameplayTaskResource_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsNetDirty)(UGameplayTasksComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsNetDirty)(UGameplayTasksComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FOnClaimedResourcesChangeSignature_*, onClaimedResourcesChange)(UGameplayTasksComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonClaimedResourcesChange)(UGameplayTasksComponent_* obj_p0, FOnClaimedResourcesChangeSignature_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayTask_ClaimResource_*, claimResources_)(TY__Lt5i5ki2w9bH9a82Hu007sxA inTaskOwner_p0, TY__utVni79b8xEsxEJANAjLf3Q resourceClasses_p1, NU8 priority_p2, FName taskInstanceName_p3);
N_LIB_PRIVATE N_NIMCALL(UGameplayTask_ClaimResource_*, claimResource_)(TY__Lt5i5ki2w9bH9a82Hu007sxA inTaskOwner_p0, TY__MFesSaouSBQeacagdxVB4w resourceClass_p1, NU8 priority_p2, FName taskInstanceName_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayTaskSpawnActorDelegate_*, success)(UGameplayTask_SpawnActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsuccess)(UGameplayTask_SpawnActor_* obj_p0, FGameplayTaskSpawnActorDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTaskSpawnActorDelegate_*, didNotSpawn)(UGameplayTask_SpawnActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdidNotSpawn)(UGameplayTask_SpawnActor_* obj_p0, FGameplayTaskSpawnActorDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, classToSpawn)(UGameplayTask_SpawnActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclassToSpawn)(UGameplayTask_SpawnActor_* obj_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayTask_SpawnActor_*, spawnActor_)(TY__Lt5i5ki2w9bH9a82Hu007sxA taskOwner_p0, FVector spawnLocation_p1, FRotator spawnRotation_p2, TY__9akcXb9b3ftlkdW8NDwR22Mg class_p3, NIM_BOOL bSpawnOnlyOnAuthority_p4);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UGameplayTask_SpawnActor_* self_p0, UObject* worldContextObject_p1, AActor* spawnedActor_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UGameplayTask_SpawnActor_* self_p0, UObject* worldContextObject_p1, AActor*& spawnedActor_p2);
N_LIB_PRIVATE N_NIMCALL(FTaskFinishDelegate_*, onFinished)(UGameplayTask_TimeLimitedExecution_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinished)(UGameplayTask_TimeLimitedExecution_* obj_p0, FTaskFinishDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FTaskFinishDelegate_*, onTimeExpired)(UGameplayTask_TimeLimitedExecution_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonTimeExpired)(UGameplayTask_TimeLimitedExecution_* obj_p0, FTaskFinishDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, taskFinishDelegate_)(UGameplayTask_TimeLimitedExecution_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTaskDelayDelegate_*, onFinish)(UGameplayTask_WaitDelay_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UGameplayTask_WaitDelay_* obj_p0, FTaskDelayDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayTask_WaitDelay_*, taskWaitDelay_)(TY__Lt5i5ki2w9bH9a82Hu007sxA taskOwner_p0, NF32 time_p1, NU8 priority_p2);
N_LIB_PRIVATE N_NIMCALL(void, taskDelayDelegate_)(UGameplayTask_WaitDelay_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepModelingToolsEditorMode)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUE)(void);
N_LIB_PRIVATE N_NIMCALL(TY__QJ877IzPgLt9brLepAnlabA*, regularMap)(ATestActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setregularMap)(ATestActor_* obj_p0, TY__QJ877IzPgLt9brLepAnlabA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA*, regularArray)(ATestActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setregularArray)(ATestActor_* obj_p0, TY__TxfK2fhRJXNHttPFRcL6fA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, strArray)(ATestActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrArray)(ATestActor_* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA*, objArray)(ATestActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setobjArray)(ATestActor_* obj_p0, TY__meGclu4l9cwnqbgiIjRtfhA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__gVNwDuZPrClicoyBZbjZRQ*, objMap)(ATestActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setobjMap)(ATestActor_* obj_p0, TY__gVNwDuZPrClicoyBZbjZRQ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTestActorLocation_)(ATestActor_* self_p0, FVector newLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, reproduceStringIssue_)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUEBindings)(void);
N_LIB_PRIVATE N_NIMCALL(FDynamicMulticastDelegateOneParamTest_*, del)(UClassToUseAsVar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdel)(UClassToUseAsVar_* obj_p0, FDynamicMulticastDelegateOneParamTest_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FDynamicDelegateOneParamTest_*, dynamicDelegateOneParamProperty)(UMyClassToTest_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicDelegateOneParamProperty)(UMyClassToTest_* obj_p0, FDynamicDelegateOneParamTest_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FDynamicMulticastDelegateOneParamTest_*, multicastDynamicDelegateOneParamProperty)(UMyClassToTest_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmulticastDynamicDelegateOneParamProperty)(UMyClassToTest_* obj_p0, FDynamicMulticastDelegateOneParamTest_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UClass*, testComp_)(UReflectionHelpers* self_p0);
N_LIB_PRIVATE N_NIMCALL(UStruct*, getUStructByName_)(FString structName_p0);
N_LIB_PRIVATE N_NIMCALL(UScriptStruct*, getScriptStructByName_)(FString structName_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUEEditor)(void);
N_LIB_PRIVATE N_NIMCALL(void, addReloadScriptButtom_)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUETest)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineGameFramework)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOnlyRelevantToOwner)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOnlyRelevantToOwner)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysRelevant)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysRelevant)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHidden)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHidden)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNetUseOwnerRelevancy)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNetUseOwnerRelevancy)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDestroyWhenFinished)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDestroyWhenFinished)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanBeDamaged)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanBeDamaged)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFindCameraComponentWhenViewTarget)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFindCameraComponentWhenViewTarget)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGenerateOverlapEventsDuringLevelStreaming)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerateOverlapEventsDuringLevelStreaming)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableAutoLODGeneration)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableAutoLODGeneration)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicates)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicates)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateUsingRegisteredSubObjectList)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateUsingRegisteredSubObjectList)(AActor* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialLifeSpan)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialLifeSpan)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, customTimeDilation)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomTimeDilation)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow, netDormancy)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetDormancy)(AActor* obj_p0, tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ, spawnCollisionHandlingMethod)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspawnCollisionHandlingMethod)(AActor* obj_p0, tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, netCullDistanceSquared)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetCullDistanceSquared)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, netUpdateFrequency)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetUpdateFrequency)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minNetUpdateFrequency)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminNetUpdateFrequency)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, netPriority)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetPriority)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(APawn*, instigator)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstigator)(AActor* obj_p0, APawn* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, pivotOffset)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpivotOffset)(AActor* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FGuid*, actorGuid)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactorGuid)(AActor* obj_p0, FGuid val_p1);
N_LIB_PRIVATE N_NIMCALL(FGuid*, contentBundleGuid)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontentBundleGuid)(AActor* obj_p0, FGuid val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, spriteScale)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspriteScale)(AActor* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, tags)(AActor* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settags)(AActor* obj_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasRecentlyRendered_)(AActor* self_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(void, tearOff_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setTickGroup_)(AActor* self_p0, tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw newTickGroup_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTickableWhenPaused_)(AActor* self_p0, NIM_BOOL bTickableWhenPaused_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReplicates_)(AActor* self_p0, NIM_BOOL bInReplicates_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReplicateMovement_)(AActor* self_p0, NIM_BOOL bInReplicateMovement_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRayTracingGroupId_)(AActor* self_p0, NI32 inRaytracingGroupId_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOwner_)(AActor* self_p0, AActor* newOwner_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNetDormancy_)(AActor* self_p0, tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow newDormancy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLifeSpan_)(AActor* self_p0, NF32 inLifespan_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsTemporarilyHiddenInEditor_)(AActor* self_p0, NIM_BOOL bIsHidden_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFolderPath_)(AActor* self_p0, FName& newFolderPath_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAutoDestroyWhenFinished_)(AActor* self_p0, NIM_BOOL bVal_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorTickInterval_)(AActor* self_p0, NF32 tickInterval_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorTickEnabled_)(AActor* self_p0, NIM_BOOL bEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorScale3D_)(AActor* self_p0, FVector newScale3D_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeScale3D_)(AActor* self_p0, FVector newRelativeScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorLabel_)(AActor* self_p0, FString newActorLabel_p1, NIM_BOOL bMarkDirty_p2);
N_LIB_PRIVATE N_NIMCALL(void, setActorHiddenInGame_)(AActor* self_p0, NIM_BOOL bNewHidden_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActorEnableCollision_)(AActor* self_p0, NIM_BOOL bNewActorEnableCollision_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteComponent_)(AActor* self_p0, UActorComponent* prerequisiteComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteActor_)(AActor* self_p0, AActor* prerequisiteActor_p1);
N_LIB_PRIVATE N_NIMCALL(void, prestreamTextures_)(AActor* self_p0, NF32 seconds_p1, NIM_BOOL bEnableStreaming_p2, NI32 cinematicTextureGroups_p3);
N_LIB_PRIVATE N_NIMCALL(void, makeNoise_)(AActor* self_p0, NF32 loudness_p1, APawn* noiseInstigator_p2, FVector noiseLocation_p3, NF32 maxRange_p4, FName tag_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, teleportTo_)(AActor* self_p0, FVector destLocation_p1, FRotator destRotation_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorTransform_)(AActor* self_p0, FTransform& newTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorRotation_)(AActor* self_p0, FRotator newRotation_p1, NIM_BOOL bTeleportPhysics_p2);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeTransform_)(AActor* self_p0, FTransform& newRelativeTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeRotation_)(AActor* self_p0, FRotator newRelativeRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeLocation_)(AActor* self_p0, FVector newRelativeLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorLocationAndRotation_)(AActor* self_p0, FVector newLocation_p1, FRotator newRotation_p2, NIM_BOOL bSweep_p3, FHitResult& sweepHitResult_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorLocation_)(AActor* self_p0, FVector newLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByClass_)(AActor* self_p0, TY__EMMPexIt2htv9ac7xWWGtbw componentClass_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, getActorRotation_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorLocation_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, detachFromActor_)(AActor* self_p0, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg locationRule_p1, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg rotationRule_p2, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg scaleRule_p3);
N_LIB_PRIVATE N_NIMCALL(void, destroyActor_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToComponent_)(AActor* self_p0, USceneComponent* parent_p1, FName socketName_p2, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule_p3, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule_p4, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule_p5, NIM_BOOL bWeldSimulatedBodies_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToActor_)(AActor* self_p0, AActor* parentActor_p1, FName socketName_p2, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule_p3, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule_p4, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule_p5, NIM_BOOL bWeldSimulatedBodies_p6);
N_LIB_PRIVATE N_NIMCALL(void, attachRootComponentToActor_)(AActor* self_p0, AActor* inParentActor_p1, FName inSocketName_p2, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachLocationType_p3, NIM_BOOL bWeldSimulatedBodies_p4);
N_LIB_PRIVATE N_NIMCALL(void, attachRootComponentTo_)(AActor* self_p0, USceneComponent* inParent_p1, FName inSocketName_p2, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachLocationType_p3, NIM_BOOL bWeldSimulatedBodies_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldTransformKeepScale_)(AActor* self_p0, FTransform& deltaTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldTransform_)(AActor* self_p0, FTransform& deltaTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldRotation_)(AActor* self_p0, FRotator deltaRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldOffset_)(AActor* self_p0, FVector deltaLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalTransform_)(AActor* self_p0, FTransform& newTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalRotation_)(AActor* self_p0, FRotator deltaRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalOffset_)(AActor* self_p0, FVector deltaLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTemporarilyHiddenInEditor_)(AActor* self_p0, NIM_BOOL bIncludeParent_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSelectable_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingActor_)(AActor* self_p0, AActor* other_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHiddenEdAtStartup_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHiddenEd_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEditable_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isChildActor_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActorTickEnabled_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActorBeingDestroyed_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAuthority_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getVerticalDistanceTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getVelocity_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransform_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTickableWhenPaused_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getSquaredHorizontalDistanceTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getSquaredDistanceTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw, getRemoteRole_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getRayTracingGroupId_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(UChildActorComponent*, getParentComponent_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getParentActor_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwner_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingComponents_)(AActor* self_p0, TY__RN0jXIbC9cvfWt68iswDSAw& overlappingComponents_p1);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingActors_)(AActor* self_p0, TY__kbK03O9cVTTS0GR9cjPhedTg& overlappingActors_p1, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw, getLocalRole_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getLifeSpan_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getLevelTransform_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(ULevel*, getLevel_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(AController*, getInstigatorController_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(APawn*, getInstigator_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getInputVectorAxisValue_)(AActor* self_p0, FKey inputAxisKey_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAxisValue_)(AActor* self_p0, FName inputAxisName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAxisKeyValue_)(AActor* self_p0, FKey inputAxisKey_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getHorizontalDotProductTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getHorizontalDistanceTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameTimeSinceCreation_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getFolderPath_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDotProductTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceTo_)(AActor* self_p0, AActor* otherActor_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultActorLabel_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByTag_)(AActor* self_p0, TY__EMMPexIt2htv9ac7xWWGtbw componentClass_p1, FName tag_p2);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByInterface_)(AActor* self_p0, TY__KI5t49abR3sL6OsGNxWlhiQ interface_p1);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, getComponentByClass_)(AActor* self_p0, TY__EMMPexIt2htv9ac7xWWGtbw componentClass_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getAttachParentSocketName_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getAttachParentActor_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getAttachedActors_)(AActor* self_p0, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p1, NIM_BOOL bResetArray_p2, NIM_BOOL bRecursivelyIncludeAttachedActors_p3);
N_LIB_PRIVATE N_NIMCALL(void, getAllChildActors_)(AActor* self_p0, TY__kbK03O9cVTTS0GR9cjPhedTg& childActors_p1, NIM_BOOL bIncludeDescendants_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorUpVector_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getActorTimeDilation_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getActorTickInterval_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorScale3D_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorRightVector_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorRelativeScale3D_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getActorLabel_)(AActor* self_p0, NIM_BOOL bCreateIfNone_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorForwardVector_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getActorEyesViewPoint_)(AActor* self_p0, FVector& outLocation_p1, FRotator& outRotation_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getActorEnableCollision_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getActorBounds_)(AActor* self_p0, NIM_BOOL bOnlyCollidingComponents_p1, FVector& origin_p2, FVector& boxExtent_p3, NIM_BOOL bIncludeFromChildActors_p4);
N_LIB_PRIVATE N_NIMCALL(void, forceNetUpdate_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, flushNetDormancy_)(AActor* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, finishAddComponent_)(AActor* self_p0, UActorComponent* component_p1, NIM_BOOL bManualAttachment_p2, FTransform& relativeTransform_p3);
N_LIB_PRIVATE N_NIMCALL(void, enableInput_)(AActor* self_p0, APlayerController* playerController_p1);
N_LIB_PRIVATE N_NIMCALL(void, disableInput_)(AActor* self_p0, APlayerController* playerController_p1);
N_LIB_PRIVATE N_NIMCALL(void, detachRootComponentFromParent_)(AActor* self_p0, NIM_BOOL bMaintainWorldPosition_p1);
N_LIB_PRIVATE N_NIMCALL(void, createInputComponent_)(AActor* self_p0, TY__eU3i2csv9bKuRFwfWpzG1Fg inputComponentToCreate_p1);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteComponent_)(AActor* self_p0, UActorComponent* prerequisiteComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteActor_)(AActor* self_p0, AActor* prerequisiteActor_p1);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, addComponentByClass_)(AActor* self_p0, TY__EMMPexIt2htv9ac7xWWGtbw class_p1, NIM_BOOL bManualAttachment_p2, FTransform& relativeTransform_p3, NIM_BOOL bDeferredFinish_p4);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, addComponent_)(AActor* self_p0, FName templateName_p1, NIM_BOOL bManualAttachment_p2, FTransform& relativeTransform_p3, UObject* componentTemplateContext_p4, NIM_BOOL bDeferredFinish_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, actorHasTag_)(AActor* self_p0, FName tag_p1);
N_LIB_PRIVATE N_NIMCALL(FString, optionsString)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoptionsString)(AGameModeBase* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__LFVmNDCDdFSsmxhHiPJYiQ, gameStateClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameStateClass)(AGameModeBase* obj_p0, TY__LFVmNDCDdFSsmxhHiPJYiQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__N5tiyJcFjwg9aEWJ9bLqgW2A, playerControllerClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerControllerClass)(AGameModeBase* obj_p0, TY__N5tiyJcFjwg9aEWJ9bLqgW2A val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__XW1e9bzrz7QIZaZL5gPko1g, playerStateClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerStateClass)(AGameModeBase* obj_p0, TY__XW1e9bzrz7QIZaZL5gPko1g val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BkcX38UniVJ8g2gZm25M2w, hUDClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethUDClass)(AGameModeBase* obj_p0, TY__BkcX38UniVJ8g2gZm25M2w val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__0urt5qtPpUJuYc9bl6N2OHg, defaultPawnClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPawnClass)(AGameModeBase* obj_p0, TY__0urt5qtPpUJuYc9bl6N2OHg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__eoFRbGE42PWBoR9bvsC8c9cw, spectatorClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspectatorClass)(AGameModeBase* obj_p0, TY__eoFRbGE42PWBoR9bvsC8c9cw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__N5tiyJcFjwg9aEWJ9bLqgW2A, replaySpectatorPlayerControllerClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplaySpectatorPlayerControllerClass)(AGameModeBase* obj_p0, TY__N5tiyJcFjwg9aEWJ9bLqgW2A val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__CwGWlh85GBrNQk9cYdk5JEA, serverStatReplicatorClass)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setserverStatReplicatorClass)(AGameModeBase* obj_p0, TY__CwGWlh85GBrNQk9cYdk5JEA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSeamlessTravel)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSeamlessTravel)(AGameModeBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStartPlayersAsSpectators)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStartPlayersAsSpectators)(AGameModeBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseable)(AGameModeBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseable)(AGameModeBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, startPlay_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, returnToMainMenuHost_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayerAtTransform_)(AGameModeBase* self_p0, AController* newPlayer_p1, FTransform& spawnTransform_p2);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayerAtPlayerStart_)(AGameModeBase* self_p0, AController* newPlayer_p1, AActor* startSpot_p2);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayer_)(AGameModeBase* self_p0, AController* newPlayer_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetLevel_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, playerCanRestart_)(AGameModeBase* self_p0, APlayerController* player_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, k2_FindPlayerStart_)(AGameModeBase* self_p0, AController* player_p1, FString incomingName_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchStarted_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchEnded_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSpectators_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayers_)(AGameModeBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(UClass*, getDefaultPawnClassForController_)(AGameModeBase* self_p0, AController* inController_p1);
N_LIB_PRIVATE N_NIMCALL(void, changeName_)(AGameModeBase* self_p0, AController* controller_p1, FString newName_p2, NIM_BOOL bNameChange_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDelayedStart)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDelayedStart)(AGameMode* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numSpectators)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumSpectators)(AGameMode* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numPlayers)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumPlayers)(AGameMode* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numBots)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumBots)(AGameMode* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minRespawnDelay)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminRespawnDelay)(AGameMode* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numTravellingPlayers)(AGameMode* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumTravellingPlayers)(AGameMode* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, startMatch_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, say_)(AGameMode* self_p0, FString msg_p1);
N_LIB_PRIVATE N_NIMCALL(void, restartGame_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMatchInProgress_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getMatchState_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, endMatch_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, abortMatch_)(AGameMode* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__L4ksf6eGEOlpaGPAe08vkg, gameModeClass)(AGameStateBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameModeClass)(AGameStateBase_* obj_p0, TY__L4ksf6eGEOlpaGPAe08vkg val_p1);
N_LIB_PRIVATE N_NIMCALL(AGameModeBase*, authorityGameMode)(AGameStateBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setauthorityGameMode)(AGameStateBase_* obj_p0, AGameModeBase* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__eoFRbGE42PWBoR9bvsC8c9cw, spectatorClass)(AGameStateBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspectatorClass)(AGameStateBase_* obj_p0, TY__eoFRbGE42PWBoR9bvsC8c9cw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Y5TxId8qcU0GFittS1bC9bA*, playerArray)(AGameStateBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerArray)(AGameStateBase_* obj_p0, TY__Y5TxId8qcU0GFittS1bC9bA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchStarted_)(AGameStateBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchEnded_)(AGameStateBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasBegunPlay_)(AGameStateBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF, getServerWorldTimeSeconds_)(AGameStateBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayerStartTime_)(AGameStateBase_* self_p0, AController* controller_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayerRespawnDelay_)(AGameStateBase_* self_p0, AController* controller_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, playerState)(AController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerState)(AController* obj_p0, APlayerState_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unPossess_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopMovement_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setInitialLocationAndRotation_)(AController* self_p0, FVector& newLocation_p1, FRotator& newRotation_p2);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreMoveInput_)(AController* self_p0, NIM_BOOL bNewMoveInput_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreLookInput_)(AController* self_p0, NIM_BOOL bNewLookInput_p1);
N_LIB_PRIVATE N_NIMCALL(void, setControlRotation_)(AController* self_p0, FRotator& newRotation_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreMoveInput_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreLookInput_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreInputFlags_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, possess_)(AController* self_p0, APawn* inPawn_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineOfSightTo_)(AController* self_p0, AActor* other_p1, FVector viewPoint_p2, NIM_BOOL bAlternateChecks_p3);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawn_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayerController_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLookInputIgnored_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocalPlayerController_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocalController_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getViewTarget_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getPlayerViewPoint_)(AController* self_p0, FVector& location_p1, FRotator& rotation_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getDesiredRotation_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getControlRotation_)(AController* self_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, playerCameraManager)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerCameraManager)(APlayerController* obj_p0, APlayerCameraManager* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__nUsLbvR9bTg9anoy6IEB7FSw, playerCameraManagerClass)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerCameraManagerClass)(APlayerController* obj_p0, TY__nUsLbvR9bTg9anoy6IEB7FSw val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, smoothTargetViewRotationSpeed)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsmoothTargetViewRotationSpeed)(APlayerController* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UCheatManager_*, cheatManager)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcheatManager)(APlayerController* obj_p0, UCheatManager_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__gzb18rEfE25lh72hBxz6wA, cheatClass)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcheatClass)(APlayerController* obj_p0, TY__gzb18rEfE25lh72hBxz6wA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPlayerIsWaiting)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPlayerIsWaiting)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowMouseCursor)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowMouseCursor)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableClickEvents)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableClickEvents)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableTouchEvents)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableTouchEvents)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMouseOverEvents)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMouseOverEvents)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableTouchOverEvents)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableTouchOverEvents)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceFeedbackEnabled)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceFeedbackEnabled)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMotionControls)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMotionControls)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableStreamingSource)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableStreamingSource)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStreamingSourceShouldActivate)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStreamingSourceShouldActivate)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStreamingSourceShouldBlockOnSlowStreaming)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStreamingSourceShouldBlockOnSlowStreaming)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, streamingSourcePriority)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourcePriority)(APlayerController* obj_p0, tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, streamingSourceDebugColor)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourceDebugColor)(APlayerController* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__nOrP80JBRl6rmLy4ACFykA*, streamingSourceShapes)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourceShapes)(APlayerController* obj_p0, TY__nOrP80JBRl6rmLy4ACFykA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA*, clickEventKeys)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclickEventKeys)(APlayerController* obj_p0, TY__HqMsNoaajlV9ahHT79bz6bBA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, defaultMouseCursor)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMouseCursor)(APlayerController* obj_p0, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, currentMouseCursor)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentMouseCursor)(APlayerController* obj_p0, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val_p1);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, defaultClickTraceChannel)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultClickTraceChannel)(APlayerController* obj_p0, ECollisionChannel val_p1);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, currentClickTraceChannel)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentClickTraceChannel)(APlayerController* obj_p0, ECollisionChannel val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, hitResultTraceDistance)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethitResultTraceDistance)(APlayerController* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldPerformFullTickWhenPaused)(APlayerController* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldPerformFullTickWhenPaused)(APlayerController* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasInputKeyJustReleased_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasInputKeyJustPressed_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, streamingSourceShouldBlockOnSlowStreaming_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, streamingSourceShouldActivate_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopHapticEffect_)(APlayerController* self_p0, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVirtualJoystickVisibility_)(APlayerController* self_p0, NIM_BOOL bVisible_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewTargetWithBlend_)(APlayerController* self_p0, AActor* newViewTarget_p1, NF32 blendTime_p2, tyEnum_EViewTargetBlendFunction__bD49atsfKhTFQYLRCUW0iGQ blendFunc_p3, NF32 blendExp_p4, NIM_BOOL bLockOutgoing_p5);
N_LIB_PRIVATE N_NIMCALL(void, setMouseLocation_)(APlayerController* self_p0, NI32 x_p1, NI32 y_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMotionControlsEnabled_)(APlayerController* self_p0, NIM_BOOL bEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHapticsByValue_)(APlayerController* self_p0, NF32 frequency_p1, NF32 amplitude_p2, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand_p3);
N_LIB_PRIVATE N_NIMCALL(void, setDisableHaptics_)(APlayerController* self_p0, NIM_BOOL bNewDisabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputYawScale_)(APlayerController* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputRollScale_)(APlayerController* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputPitchScale_)(APlayerController* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setControllerLightColor_)(APlayerController* self_p0, FColor color_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCinematicMode_)(APlayerController* self_p0, NIM_BOOL bInCinematicMode_p1, NIM_BOOL bHidePlayer_p2, NIM_BOOL bAffectsHUD_p3, NIM_BOOL bAffectsMovement_p4, NIM_BOOL bAffectsTurning_p5);
N_LIB_PRIVATE N_NIMCALL(void, setAudioListenerOverride_)(APlayerController* self_p0, USceneComponent* attachToComponent_p1, FVector location_p2, FRotator rotation_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAudioListenerAttenuationOverride_)(APlayerController* self_p0, USceneComponent* attachToComponent_p1, FVector attenuationLocationOVerride_p2);
N_LIB_PRIVATE N_NIMCALL(void, resetControllerLightColor_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldLocationToScreen_)(APlayerController* self_p0, FVector worldLocation_p1, FVector2D& screenLocation_p2, NIM_BOOL bPlayerViewportRelative_p3);
N_LIB_PRIVATE N_NIMCALL(void, playHapticEffect_)(APlayerController* self_p0, UHapticFeedbackEffect_Base_* hapticEffect_p1, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand_p2, NF32 scale_p3, NIM_BOOL bLoop_p4);
N_LIB_PRIVATE N_NIMCALL(void, playDynamicForceFeedback_)(APlayerController* self_p0, NF32 intensity_p1, NF32 duration_p2, NIM_BOOL bAffectsLeftLarge_p3, NIM_BOOL bAffectsLeftSmall_p4, NIM_BOOL bAffectsRightLarge_p5, NIM_BOOL bAffectsRightSmall_p6, tyEnum_EDynamicForceFeedbackAction__8KJfWx2uBQLb8KhKL7Nljg action_p7, FLatentActionInfo latentInfo_p8);
N_LIB_PRIVATE N_NIMCALL(void, clientPlayForceFeedback_)(APlayerController* self_p0, UForceFeedbackEffect_* forceFeedbackEffect_p1, FName tag_p2, NIM_BOOL bLooping_p3, NIM_BOOL bIgnoreTimeDilation_p4, NIM_BOOL bPlayWhilePaused_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingSourceEnabled_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInputKeyDown_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getViewportSize_)(APlayerController* self_p0, NI32& sizeX_p1, NI32& sizeY_p2);
N_LIB_PRIVATE N_NIMCALL(void, getStreamingSourceShapes_)(APlayerController* self_p0, TY__nOrP80JBRl6rmLy4ACFykA& outShapes_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, getStreamingSourcePriority_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getStreamingSourceLocationAndRotation_)(APlayerController* self_p0, FVector& outLocation_p1, FRotator& outRotation_p2);
N_LIB_PRIVATE N_NIMCALL(ASpectatorPawn_*, getSpectatorPawn_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPlatformUserId_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b1Wl2DWbmWU3i39cb0aYLdw, getOverridePlayerInputClass_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMousePosition_)(APlayerController* self_p0, NF32& locationX_p1, NF32& locationY_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getInputVectorKeyState_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getInputTouchState_)(APlayerController* self_p0, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex_p1, NF32& locationX_p2, NF32& locationY_p3, NIM_BOOL& bIsCurrentlyPressed_p4);
N_LIB_PRIVATE N_NIMCALL(void, getInputMouseDelta_)(APlayerController* self_p0, NF32& deltaX_p1, NF32& deltaY_p2);
N_LIB_PRIVATE N_NIMCALL(void, getInputMotionState_)(APlayerController* self_p0, FVector& tilt_p1, FVector& rotationRate_p2, FVector& gravity_p3, FVector& acceleration_p4);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyTimeDown_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getInputAnalogStickState_)(APlayerController* self_p0, tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw whichStick_p1, NF32& stickX_p2, NF32& stickY_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAnalogKeyState_)(APlayerController* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(AHUD_*, getHUD_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFingerForObjects_)(APlayerController* self_p0, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex_p1, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p2, NIM_BOOL bTraceComplex_p3, FHitResult& hitResult_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFingerByChannel_)(APlayerController* self_p0, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex_p1, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p2, NIM_BOOL bTraceComplex_p3, FHitResult& hitResult_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFinger_)(APlayerController* self_p0, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex_p1, ECollisionChannel traceChannel_p2, NIM_BOOL bTraceComplex_p3, FHitResult& hitResult_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursorForObjects_)(APlayerController* self_p0, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes_p1, NIM_BOOL bTraceComplex_p2, FHitResult& hitResult_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursorByChannel_)(APlayerController* self_p0, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel_p1, NIM_BOOL bTraceComplex_p2, FHitResult& hitResult_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursor_)(APlayerController* self_p0, ECollisionChannel traceChannel_p1, NIM_BOOL bTraceComplex_p2, FHitResult& hitResult_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getFocalLocation_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputYawScale_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputRollScale_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputPitchScale_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectScreenPositionToWorld_)(APlayerController* self_p0, NF32 screenX_p1, NF32 screenY_p2, FVector& worldLocation_p3, FVector& worldDirection_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectMousePositionToWorld_)(APlayerController* self_p0, FVector& worldLocation_p1, FVector& worldDirection_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientStopForceFeedback_)(APlayerController* self_p0, UForceFeedbackEffect_* forceFeedbackEffect_p1, FName tag_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientStopCameraShakesFromSource_)(APlayerController* self_p0, UCameraShakeSourceComponent_* sourceComponent_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientStopCameraShake_)(APlayerController* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientStartCameraShakeFromSource_)(APlayerController* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, UCameraShakeSourceComponent_* sourceComponent_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientStartCameraShake_)(APlayerController* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, NF32 scale_p2, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace_p3, FRotator userPlaySpaceRot_p4);
N_LIB_PRIVATE N_NIMCALL(void, clientSpawnGenericCameraLensEffect_)(APlayerController* self_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg lensEffectEmitterClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, clientSetHUD_)(APlayerController* self_p0, TY__BkcX38UniVJ8g2gZm25M2w newHUDClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, clientClearCameraLensEffects_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAudioListenerOverride_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAudioListenerAttenuationOverride_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canRestartPlayer_)(APlayerController* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addYawInput_)(APlayerController* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addRollInput_)(APlayerController* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addPitchInput_)(APlayerController* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, activateTouchInterface_)(APlayerController* self_p0, UTouchInterface_* newTouchInterface_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationPitch)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationPitch)(APawn* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationYaw)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationYaw)(APawn* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationRoll)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationRoll)(APawn* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanAffectNavigationGeneration)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanAffectNavigationGeneration)(APawn* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, baseEyeHeight)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbaseEyeHeight)(APawn* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__KGHReoQbDEGLKq1y5YM6eQ, aIControllerClass)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaIControllerClass)(APawn* obj_p0, TY__KGHReoQbDEGLKq1y5YM6eQ val_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, playerState)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerState)(APawn* obj_p0, APlayerState_* val_p1);
N_LIB_PRIVATE N_NIMCALL(AController*, lastHitBy)(APawn* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlastHitBy)(APawn* obj_p0, AController* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, spawnDefaultController_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setCanAffectNavigationGeneration_)(APawn* self_p0, NIM_BOOL bNewValue_p1, NIM_BOOL bForceUpdate_p2);
N_LIB_PRIVATE N_NIMCALL(void, pawnMakeNoise_)(APawn* self_p0, NF32 loudness_p1, FVector noiseLocation_p2, NIM_BOOL bUseNoiseMakerLocation_p3, AActor* noiseMaker_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayerControlled_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPawnControlled_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyViewed_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyControlled_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControlled_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBotControlled_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPlatformUserId_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getPendingMovementInputVector_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__eU3i2csv9bKuRFwfWpzG1Fg, getOverrideInputComponentClass_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getNavAgentLocation_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(UPawnMovementComponent*, getMovementComponent_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getMovementBaseActor_)(APawn* pawn_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getLocalViewingPlayerController_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastMovementInputVector_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getControlRotation_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(AController*, getController_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBaseAimRotation_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, detachFromControllerPendingDestroy_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, consumeMovementInputVector_)(APawn* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addMovementInput_)(APawn* self_p0, FVector worldDirection_p1, NF32 scaleValue_p2, NIM_BOOL bForce_p3);
N_LIB_PRIVATE N_NIMCALL(void, addControllerYawInput_)(APawn* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addControllerRollInput_)(APawn* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addControllerPitchInput_)(APawn* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, mesh)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmesh)(ACharacter* obj_p0, USkeletalMeshComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCharacterMovementComponent*, characterMovement)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcharacterMovement)(ACharacter* obj_p0, UCharacterMovementComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCapsuleComponent*, capsuleComponent)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleComponent)(ACharacter* obj_p0, UCapsuleComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, crouchedEyeHeight)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcrouchedEyeHeight)(ACharacter* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsCrouched)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsCrouched)(ACharacter* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPressedJump)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPressedJump)(ACharacter* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWasJumping)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWasJumping)(ACharacter* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpKeyHoldTime)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpKeyHoldTime)(ACharacter* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpForceTimeRemaining)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpForceTimeRemaining)(ACharacter* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, proxyJumpForceStartedTime)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setproxyJumpForceStartedTime)(ACharacter* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpMaxHoldTime)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpMaxHoldTime)(ACharacter* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpMaxCount)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpMaxCount)(ACharacter* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpCurrentCount)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpCurrentCount)(ACharacter* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpCurrentCountPreJump)(ACharacter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpCurrentCountPreJump)(ACharacter* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unCrouch_)(ACharacter* self_p0, NIM_BOOL bClientSimulation_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopJumping_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimMontage_)(ACharacter* self_p0, UAnimMontage* animMontage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, playAnimMontage_)(ACharacter* self_p0, UAnimMontage* animMontage_p1, NF32 inPlayRate_p2, FName startSectionName_p3);
N_LIB_PRIVATE N_NIMCALL(void, launchCharacter_)(ACharacter* self_p0, FVector launchVelocity_p1, NIM_BOOL bXYOverride_p2, NIM_BOOL bZOverride_p3);
N_LIB_PRIVATE N_NIMCALL(void, jump_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingRootMotion_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingNetworkedRootMotionMontage_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isJumpProvidingForce_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyRootMotion_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentMontage_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getBaseTranslationOffset_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBaseRotationOffsetRotator_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnimRootMotionTranslationScale_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, crouch_)(ACharacter* self_p0, NIM_BOOL bClientSimulation_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canJump_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canCrouch_)(ACharacter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, cacheInitialMeshOffset_)(ACharacter* self_p0, FVector meshRelativeLocation_p1, FRotator meshRelativeRotation_p2);
N_LIB_PRIVATE N_NIMCALL(FForceFeedbackAttenuationSettings_*, attenuation)(UForceFeedbackAttenuation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(UForceFeedbackAttenuation_* obj_p0, FForceFeedbackAttenuationSettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__foOrAswB6Owyr0RwoeenmA, debugCameraControllerClass)(UCheatManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdebugCameraControllerClass)(UCheatManager_* obj_p0, TY__foOrAswB6Owyr0RwoeenmA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, walk_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, teleport_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, slomo_)(UCheatManager_* self_p0, NF32 newTimeDilation_p1);
N_LIB_PRIVATE N_NIMCALL(void, playersOnly_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, god_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, ghost_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, freezeFrame_)(UCheatManager_* self_p0, NF32 delay_p1);
N_LIB_PRIVATE N_NIMCALL(void, fly_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, enableDebugCamera_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, disableDebugCamera_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, destroyTarget_)(UCheatManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, damageTarget_)(UCheatManager_* self_p0, NF32 damageAmount_p1);
N_LIB_PRIVATE N_NIMCALL(void, changeSize_)(UCheatManager_* self_p0, NF32 f_p1);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, updatedComponent)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setupdatedComponent)(UMovementComponent_* obj_p0, USceneComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, updatedPrimitive)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setupdatedPrimitive)(UMovementComponent_* obj_p0, UPrimitiveComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, velocity)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvelocity)(UMovementComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, planeConstraintNormal)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplaneConstraintNormal)(UMovementComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, planeConstraintOrigin)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplaneConstraintOrigin)(UMovementComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateOnlyIfRendered)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateOnlyIfRendered)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoUpdateTickRegistration)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoUpdateTickRegistration)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTickBeforeOwner)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTickBeforeOwner)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoRegisterUpdatedComponent)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoRegisterUpdatedComponent)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConstrainToPlane)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbConstrainToPlane)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSnapToPlaneAtStart)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSnapToPlaneAtStart)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoRegisterPhysicsVolumeUpdates)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoRegisterPhysicsVolumeUpdates)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bComponentShouldUpdatePhysicsVolume)(UMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbComponentShouldUpdatePhysicsVolume)(UMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopMovementImmediately_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, snapUpdatedComponentToPlane_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setUpdatedComponent_)(UMovementComponent_* self_p0, USceneComponent* newUpdatedComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintOrigin_)(UMovementComponent_* self_p0, FVector planeOrigin_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintNormal_)(UMovementComponent_* self_p0, FVector planeNormal_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintFromVectors_)(UMovementComponent_* self_p0, FVector forward_p1, FVector up_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintEnabled_)(UMovementComponent_* self_p0, NIM_BOOL bEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintAxisSetting_)(UMovementComponent_* self_p0, tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA newAxisSetting_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, moveUpdatedComponent_)(UMovementComponent_* self_p0, FVector delta_p1, FRotator newRotation_p2, FHitResult& outHit_p3, NIM_BOOL bSweep_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isExceedingMaxSpeed_)(UMovementComponent_* self_p0, NF32 maxSpeed_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getPlaneConstraintOrigin_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getPlaneConstraintNormal_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA, getPlaneConstraintAxisSetting_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxSpeed_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getGravityZ_)(UMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainNormalToPlane_)(UMovementComponent_* self_p0, FVector normal_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainLocationToPlane_)(UMovementComponent_* self_p0, FVector location_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainDirectionToPlane_)(UMovementComponent_* self_p0, FVector direction_p1);
N_LIB_PRIVATE N_NIMCALL(FNavAgentProperties*, navAgentProps)(UNavMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavAgentProps)(UNavMovementComponent* obj_p0, FNavAgentProperties val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopMovementKeepPathing_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopActiveMovement_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSwimming_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMovingOnGround_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFlying_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFalling_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCrouching_)(UNavMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(UPawnMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getPendingInputVector_)(UPawnMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawnOwner_)(UPawnMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastInputVector_)(UPawnMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, consumeInputVector_)(UPawnMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addInputVector_)(UPawnMovementComponent* self_p0, FVector worldVector_p1, NIM_BOOL bForce_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, gravityScale)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgravityScale)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxStepHeight)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxStepHeight)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpZVelocity)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpZVelocity)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpOffJumpZFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpOffJumpZFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, movementMode)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmovementMode)(UCharacterMovementComponent* obj_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, customMovementMode)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomMovementMode)(UCharacterMovementComponent* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ, networkSmoothingMode)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetworkSmoothingMode)(UCharacterMovementComponent* obj_p0, tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, groundFriction)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgroundFriction)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWalkSpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWalkSpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWalkSpeedCrouched)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWalkSpeedCrouched)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSwimSpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSwimSpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxFlySpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxFlySpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxCustomMovementSpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxCustomMovementSpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxAcceleration)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxAcceleration)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minAnalogWalkSpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminAnalogWalkSpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingFrictionFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingFrictionFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingFriction)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingFriction)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingSubStepTime)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingSubStepTime)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationWalking)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationWalking)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationFalling)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationFalling)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationSwimming)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationSwimming)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationFlying)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationFlying)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, airControl)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setairControl)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, airControlBoostMultiplier)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setairControlBoostMultiplier)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, airControlBoostVelocityThreshold)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setairControlBoostVelocityThreshold)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fallingLateralFriction)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfallingLateralFriction)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, crouchedHalfHeight)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcrouchedHalfHeight)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, buoyancy)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbuoyancy)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, perchRadiusThreshold)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setperchRadiusThreshold)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, perchAdditionalHeight)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setperchAdditionalHeight)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationRate)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrotationRate)(UCharacterMovementComponent* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSeparateBrakingFriction)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSeparateBrakingFriction)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyGravityWhileJumping)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyGravityWhileJumping)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerDesiredRotation)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerDesiredRotation)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOrientRotationToMovement)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOrientRotationToMovement)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweepWhileNavWalking)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSweepWhileNavWalking)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRunPhysicsWithNoController)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRunPhysicsWithNoController)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceNextFloorCheck)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceNextFloorCheck)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanWalkOffLedges)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanWalkOffLedges)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanWalkOffLedgesWhenCrouching)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanWalkOffLedgesWhenCrouching)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePhysicsInteraction)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePhysicsInteraction)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTouchForceScaledToMass)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTouchForceScaledToMass)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPushForceScaledToMass)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPushForceScaledToMass)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPushForceUsingZOffset)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPushForceUsingZOffset)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bScalePushForceToVelocity)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbScalePushForceToVelocity)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxOutOfWaterStepHeight)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxOutOfWaterStepHeight)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, outofWaterZ)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoutofWaterZ)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mass)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmass)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, standingDownwardForceScale)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstandingDownwardForceScale)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialPushForceFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialPushForceFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pushForceFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpushForceFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pushForcePointZOffsetFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpushForcePointZOffsetFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, touchForceFactor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settouchForceFactor)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minTouchForce)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminTouchForce)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxTouchForce)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxTouchForce)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, repulsionForce)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrepulsionForce)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UCharacterMovementComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxJumpApexAttemptsPerSimulation)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxJumpApexAttemptsPerSimulation)(UCharacterMovementComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithGeometry)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithGeometry)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithGeometryAsProxy)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithGeometryAsProxy)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithPawn)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithPawn)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithPawnAsProxy)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithPawnAsProxy)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, ledgeCheckThreshold)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setledgeCheckThreshold)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpOutOfWaterPitch)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjumpOutOfWaterPitch)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FFindFloorResult*, currentFloor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentFloor)(UCharacterMovementComponent* obj_p0, FFindFloorResult val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, defaultLandMovementMode)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultLandMovementMode)(UCharacterMovementComponent* obj_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, defaultWaterMovementMode)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWaterMovementMode)(UCharacterMovementComponent* obj_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMaintainHorizontalGroundVelocity)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMaintainHorizontalGroundVelocity)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityX)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityX)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityY)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityY)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityZ)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityZ)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseAngularVelocity)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseAngularVelocity)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bJustTeleported)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbJustTeleported)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreClientMovementErrorChecksAndCorrection)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreClientMovementErrorChecksAndCorrection)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bServerAcceptClientAuthoritativePosition)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbServerAcceptClientAuthoritativePosition)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNotifyApex)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNotifyApex)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWantsToCrouch)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWantsToCrouch)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCrouchMaintainsBaseLocation)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCrouchMaintainsBaseLocation)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreBaseRotation)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreBaseRotation)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysCheckFloor)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysCheckFloor)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFlatBaseForFloorChecks)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFlatBaseForFloorChecks)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRVOAvoidance)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRVOAvoidance)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequestedMoveUseAcceleration)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRequestedMoveUseAcceleration)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowPhysicsRotationDuringAnimRootMotion)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowPhysicsRotationDuringAnimRootMotion)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, formerBaseVelocityDecayHalfLife)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setformerBaseVelocityDecayHalfLife)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bProjectNavMeshWalking)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbProjectNavMeshWalking)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bProjectNavMeshOnBothWorldChannels)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbProjectNavMeshOnBothWorldChannels)(UCharacterMovementComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, avoidanceConsiderationRadius)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceConsiderationRadius)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, avoidanceUID)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceUID)(UCharacterMovementComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, avoidanceGroup)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceGroup)(UCharacterMovementComponent* obj_p0, FNavAvoidanceMask val_p1);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, groupsToAvoid)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgroupsToAvoid)(UCharacterMovementComponent* obj_p0, FNavAvoidanceMask val_p1);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, groupsToIgnore)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgroupsToIgnore)(UCharacterMovementComponent* obj_p0, FNavAvoidanceMask val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, avoidanceWeight)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceWeight)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionInterval)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionInterval)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionInterpSpeed)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionInterpSpeed)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionHeightScaleUp)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionHeightScaleUp)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionHeightScaleDown)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionHeightScaleDown)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navWalkingFloorDistTolerance)(UCharacterMovementComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavWalkingFloorDistTolerance)(UCharacterMovementComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableFloorZ_)(UCharacterMovementComponent* self_p0, NF32 inWalkableFloorZ_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableFloorAngle_)(UCharacterMovementComponent* self_p0, NF32 inWalkableFloorAngle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMovementMode_)(UCharacterMovementComponent* self_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ newMovementMode_p1, NU8 newCustomMode_p2);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToIgnoreMask_)(UCharacterMovementComponent* self_p0, FNavAvoidanceMask& groupMask_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToIgnore_)(UCharacterMovementComponent* self_p0, NI32 groupFlags_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToAvoidMask_)(UCharacterMovementComponent* self_p0, FNavAvoidanceMask& groupMask_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToAvoid_)(UCharacterMovementComponent* self_p0, NI32 groupFlags_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCrouchedHalfHeight_)(UCharacterMovementComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceGroupMask_)(UCharacterMovementComponent* self_p0, FNavAvoidanceMask& groupMask_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceGroup_)(UCharacterMovementComponent* self_p0, NI32 groupFlags_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceEnabled_)(UCharacterMovementComponent* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getWalkableFloorZ_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getWalkableFloorAngle_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, findFloor_)(UCharacterMovementComponent* self_p0, FVector capsuleLocation_p1, FFindFloorResult& floorResult_p2);
N_LIB_PRIVATE N_NIMCALL(void, computeFloorDist_)(UCharacterMovementComponent* self_p0, FVector capsuleLocation_p1, NF32 lineDistance_p2, NF32 sweepDistance_p3, NF32 sweepRadius_p4, FFindFloorResult& floorResult_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWalking_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWalkable_)(UCharacterMovementComponent* self_p0, FHitResult& hit_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getValidPerchRadius_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPerchRadiusThreshold_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, getMovementBase_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinAnalogSpeed_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxJumpHeightWithJumpTime_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxJumpHeight_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxBrakingDeceleration_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxAcceleration_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateVelocity_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getLastUpdateRotation_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateRequestedVelocity_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateLocation_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getImpartedMovementBaseVelocity_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getCurrentAcceleration_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCrouchedHalfHeight_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(ACharacter*, getCharacterOwner_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnalogInputModifier_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, disableMovement_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAccumulatedForces_)(UCharacterMovementComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, calcVelocity_)(UCharacterMovementComponent* self_p0, NF32 deltaTime_p1, NF32 friction_p2, NIM_BOOL bFluid_p3, NF32 brakingDeceleration_p4);
N_LIB_PRIVATE N_NIMCALL(void, addImpulse_)(UCharacterMovementComponent* self_p0, FVector impulse_p1, NIM_BOOL bVelocityChange_p2);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(UCharacterMovementComponent* self_p0, FVector force_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, initialSpeed)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinitialSpeed)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSpeed)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSpeed)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationFollowsVelocity)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationFollowsVelocity)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationRemainsVertical)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationRemainsVertical)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBounce)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBounce)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInitialVelocityInLocalSpace)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInitialVelocityInLocalSpace)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceSubStepping)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceSubStepping)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSimulationEnabled)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSimulationEnabled)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweepCollision)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSweepCollision)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsHomingProjectile)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsHomingProjectile)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBounceAngleAffectsFriction)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbBounceAngleAffectsFriction)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsSliding)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsSliding)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpMovement)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpMovement)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpRotation)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpRotation)(UProjectileMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, previousHitTime)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpreviousHitTime)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, previousHitNormal)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpreviousHitNormal)(UProjectileMovementComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, projectileGravityScale)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprojectileGravityScale)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bounciness)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbounciness)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bounceVelocityStopSimulatingThreshold)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbounceVelocityStopSimulatingThreshold)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minFrictionFraction)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminFrictionFraction)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, homingAccelerationMagnitude)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethomingAccelerationMagnitude)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, homingTargetComponent)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethomingTargetComponent)(UProjectileMovementComponent_* obj_p0, TY__9b9c0qopUCzSW4js0BJumMlQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UProjectileMovementComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, bounceAdditionalIterations)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbounceAdditionalIterations)(UProjectileMovementComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationTime)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationTime)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interpRotationTime)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterpRotationTime)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationMaxLagDistance)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationMaxLagDistance)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationSnapToTargetDistance)(UProjectileMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationSnapToTargetDistance)(UProjectileMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopSimulating_)(UProjectileMovementComponent_* self_p0, FHitResult& hitResult_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVelocityInLocalSpace_)(UProjectileMovementComponent_* self_p0, FVector newVelocity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInterpolatedComponent_)(UProjectileMovementComponent_* self_p0, USceneComponent* component_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetInterpolation_)(UProjectileMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, moveInterpolationTarget_)(UProjectileMovementComponent_* self_p0, FVector& newLocation_p1, FRotator& newRotation_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, limitVelocity_)(UProjectileMovementComponent_* self_p0, FVector newVelocity_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVelocityUnderSimulationThreshold_)(UProjectileMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterpolationComplete_)(UProjectileMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationRate)(URotatingMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrotationRate)(URotatingMovementComponent_* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, pivotTranslation)(URotatingMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpivotTranslation)(URotatingMovementComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationInLocalSpace)(URotatingMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationInLocalSpace)(URotatingMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCausedByWorld)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCausedByWorld)(UDamageType_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bScaleMomentumByMass)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbScaleMomentumByMass)(UDamageType_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRadialDamageVelChange)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRadialDamageVelChange)(UDamageType_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, damageImpulse)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdamageImpulse)(UDamageType_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleImpulse)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleImpulse)(UDamageType_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamageSpreadScale)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamageSpreadScale)(UDamageType_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, damageFalloff)(UDamageType_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdamageFalloff)(UDamageType_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, playerOwner)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerOwner)(AHUD_* obj_p0, APlayerController* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLostFocusPaused)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLostFocusPaused)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowHUD)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowHUD)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowDebugInfo)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowDebugInfo)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowHitBoxDebugInfo)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowHitBoxDebugInfo)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowOverlays)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowOverlays)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableDebugTextShadow)(AHUD_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableDebugTextShadow)(AHUD_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, project_)(AHUD_* self_p0, FVector location_p1, NIM_BOOL bClampToZeroPlane_p2);
N_LIB_PRIVATE N_NIMCALL(void, getTextSize_)(AHUD_* self_p0, FString text_p1, NF32& outWidth_p2, NF32& outHeight_p3, UFont_* font_p4, NF32 scale_p5);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayerController_)(AHUD_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APawn*, getOwningPawn_)(AHUD_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getActorsInSelectionRectangle_)(AHUD_* self_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter_p1, FVector2D& firstPoint_p2, FVector2D& secondPoint_p3, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors_p4, NIM_BOOL bIncludeNonCollidingComponents_p5, NIM_BOOL bActorMustBeFullyEnclosed_p6);
N_LIB_PRIVATE N_NIMCALL(void, drawTextureSimple_)(AHUD_* self_p0, UTexture* texture_p1, NF32 screenX_p2, NF32 screenY_p3, NF32 scale_p4, NIM_BOOL bScalePosition_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawTexture_)(AHUD_* self_p0, UTexture* texture_p1, NF32 screenX_p2, NF32 screenY_p3, NF32 screenW_p4, NF32 screenH_p5, NF32 textureU_p6, NF32 textureV_p7, NF32 textureUWidth_p8, NF32 textureVHeight_p9, FLinearColor tintColor_p10, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw blendMode_p11, NF32 scale_p12, NIM_BOOL bScalePosition_p13, NF32 rotation_p14, FVector2D rotPivot_p15);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(AHUD_* self_p0, FString text_p1, FLinearColor textColor_p2, NF32 screenX_p3, NF32 screenY_p4, UFont_* font_p5, NF32 scale_p6, NIM_BOOL bScalePosition_p7);
N_LIB_PRIVATE N_NIMCALL(void, drawRect_)(AHUD_* self_p0, FLinearColor rectColor_p1, NF32 screenX_p2, NF32 screenY_p3, NF32 screenW_p4, NF32 screenH_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialTriangle_)(AHUD_* self_p0, UMaterialInterface* material_p1, FVector2D v0_Pos_p2, FVector2D v1_Pos_p3, FVector2D v2_Pos_p4, FVector2D v0_UV_p5, FVector2D v1_UV_p6, FVector2D v2_UV_p7, FLinearColor v0_Color_p8, FLinearColor v1_Color_p9, FLinearColor v2_Color_p10);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialSimple_)(AHUD_* self_p0, UMaterialInterface* material_p1, NF32 screenX_p2, NF32 screenY_p3, NF32 screenW_p4, NF32 screenH_p5, NF32 scale_p6, NIM_BOOL bScalePosition_p7);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterial_)(AHUD_* self_p0, UMaterialInterface* material_p1, NF32 screenX_p2, NF32 screenY_p3, NF32 screenW_p4, NF32 screenH_p5, NF32 materialU_p6, NF32 materialV_p7, NF32 materialUWidth_p8, NF32 materialVHeight_p9, NF32 scale_p10, NIM_BOOL bScalePosition_p11, NF32 rotation_p12, FVector2D rotPivot_p13);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(AHUD_* self_p0, NF32 startScreenX_p1, NF32 startScreenY_p2, NF32 endScreenX_p3, NF32 endScreenY_p4, FLinearColor lineColor_p5, NF32 lineThickness_p6);
N_LIB_PRIVATE N_NIMCALL(void, deproject_)(AHUD_* self_p0, NF32 screenX_p1, NF32 screenY_p2, FVector& worldPosition_p3, FVector& worldDirection_p4);
N_LIB_PRIVATE N_NIMCALL(void, addHitBox_)(AHUD_* self_p0, FVector2D position_p1, FVector2D size_p2, FName inName_p3, NIM_BOOL bConsumesInput_p4, NI32 priority_p5);
N_LIB_PRIVATE N_NIMCALL(NF32, baseTurnRate)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbaseTurnRate)(ADefaultPawn_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, baseLookUpRate)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbaseLookUpRate)(ADefaultPawn_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UPawnMovementComponent*, movementComponent)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmovementComponent)(ADefaultPawn_* obj_p0, UPawnMovementComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(USphereComponent*, collisionComponent)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(ADefaultPawn_* obj_p0, USphereComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshComponent*, meshComponent)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmeshComponent)(ADefaultPawn_* obj_p0, UStaticMeshComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAddDefaultMovementBindings)(ADefaultPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAddDefaultMovementBindings)(ADefaultPawn_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, turnAtRate_)(ADefaultPawn_* self_p0, NF32 rate_p1);
N_LIB_PRIVATE N_NIMCALL(void, moveUp_World_)(ADefaultPawn_* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, moveRight_)(ADefaultPawn_* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, moveForward_)(ADefaultPawn_* self_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, lookUpAtRate_)(ADefaultPawn_* self_p0, NF32 rate_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSpeed)(UFloatingPawnMovement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSpeed)(UFloatingPawnMovement_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, acceleration)(UFloatingPawnMovement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setacceleration)(UFloatingPawnMovement_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, deceleration)(UFloatingPawnMovement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeceleration)(UFloatingPawnMovement_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, turningBoost)(UFloatingPawnMovement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setturningBoost)(UFloatingPawnMovement_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionHandleSaveGame_*, asyncSaveGameToSlot_)(UObject* worldContextObject_p0, USaveGame_* saveGameObject_p1, FString slotName_p2, NI32 userIndex_p3);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionHandleSaveGame_*, asyncLoadGameFromSlot_)(UObject* worldContextObject_p0, FString slotName_p1, NI32 userIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UForceFeedbackEffect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UForceFeedbackEffect_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, propertyDuration)(UInputDeviceProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpropertyDuration)(UInputDeviceProperty_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceColorData_*, colorData)(UColorInputDeviceProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorData)(UColorInputDeviceProperty_* obj_p0, FDeviceColorData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__mOpL05xw2iQakSy1XAlwfw*, deviceOverrideData)(UColorInputDeviceProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UColorInputDeviceProperty_* obj_p0, TY__mOpL05xw2iQakSy1XAlwfw val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceColorCurveData_*, colorData)(UColorInputDeviceCurveProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorData)(UColorInputDeviceCurveProperty_* obj_p0, FDeviceColorCurveData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__p8Wi6T89cTmksGlyV10Mycw*, deviceOverrideData)(UColorInputDeviceCurveProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UColorInputDeviceCurveProperty_* obj_p0, TY__p8Wi6T89cTmksGlyV10Mycw val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerBaseData_*, baseTriggerData)(UInputDeviceTriggerEffect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbaseTriggerData)(UInputDeviceTriggerEffect_* obj_p0, FDeviceTriggerBaseData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerFeedbackData_*, triggerData)(UInputDeviceTriggerFeedbackProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerFeedbackProperty_* obj_p0, FDeviceTriggerFeedbackData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__HBpy4JXT1fKa0SBtmqqvbg*, deviceOverrideData)(UInputDeviceTriggerFeedbackProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerFeedbackProperty_* obj_p0, TY__HBpy4JXT1fKa0SBtmqqvbg val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerTriggerResistanceData_*, triggerData)(UInputDeviceTriggerResistanceProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerResistanceProperty_* obj_p0, FDeviceTriggerTriggerResistanceData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__dbgBQsZXRZeU0c9bvitCtFA*, deviceOverrideData)(UInputDeviceTriggerResistanceProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerResistanceProperty_* obj_p0, TY__dbgBQsZXRZeU0c9bvitCtFA val_p1);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerTriggerVibrationData_*, triggerData)(UInputDeviceTriggerVibrationProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerVibrationProperty_* obj_p0, FDeviceTriggerTriggerVibrationData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__0yQe9aDyyKVPv0QVddqTZAg*, deviceOverrideData)(UInputDeviceTriggerVibrationProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerVibrationProperty_* obj_p0, TY__0yQe9aDyyKVPv0QVddqTZAg val_p1);
N_LIB_PRIVATE N_NIMCALL(FAudioBasedVibrationData_*, data)(UInputDeviceAudioBasedVibrationProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdata)(UInputDeviceAudioBasedVibrationProperty_* obj_p0, FAudioBasedVibrationData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__bG8gCXIR8Js247Oljg5dng*, deviceOverrideData)(UInputDeviceAudioBasedVibrationProperty_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceAudioBasedVibrationProperty_* obj_p0, TY__bG8gCXIR8Js247Oljg5dng val_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeDevicePropertyHandles_)(UInputDeviceSubsystem_* self_p0, TY__AyZkHVlB2X6bv9cl4qwczAw& handlesToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeDevicePropertyByHandle_)(UInputDeviceSubsystem_* self_p0, FInputDevicePropertyHandle_ handleToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeAllDeviceProperties_)(UInputDeviceSubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPropertyActive_)(UInputDeviceSubsystem_* self_p0, FInputDevicePropertyHandle_ handle_p1);
N_LIB_PRIVATE N_NIMCALL(FHardwareDeviceIdentifier_, getMostRecentlyUsedHardwareDevice_)(UInputDeviceSubsystem_* self_p0, FPlatformUserId inUserId_p1);
N_LIB_PRIVATE N_NIMCALL(FHardwareDeviceIdentifier_, getInputDeviceHardwareIdentifier_)(UInputDeviceSubsystem_* self_p0, FInputDeviceId inputDevice_p1);
N_LIB_PRIVATE N_NIMCALL(UInputDeviceProperty_*, getActiveDeviceProperty_)(UInputDeviceSubsystem_* self_p0, FInputDevicePropertyHandle_ handle_p1);
N_LIB_PRIVATE N_NIMCALL(FInputDevicePropertyHandle_, activateDevicePropertyOfClass_)(UInputDeviceSubsystem_* self_p0, TY__aqfsbs05nDl2Mv2M0XZFpg propertyClass_p1, FActivateDevicePropertyParams_& params_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, targetArmLength)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetArmLength)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, socketOffset)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsocketOffset)(USpringArmComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetOffset)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetOffset)(USpringArmComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, probeSize)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprobeSize)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, probeChannel)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprobeChannel)(USpringArmComponent* obj_p0, ECollisionChannel val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoCollisionTest)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDoCollisionTest)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePawnControlRotation)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePawnControlRotation)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritPitch)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritPitch)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritYaw)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritYaw)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritRoll)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritRoll)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableCameraLag)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableCameraLag)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableCameraRotationLag)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableCameraRotationLag)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseCameraLagSubstepping)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseCameraLagSubstepping)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawDebugLagMarkers)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawDebugLagMarkers)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagSpeed)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagSpeed)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraRotationLagSpeed)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraRotationLagSpeed)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagMaxTimeStep)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagMaxTimeStep)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagMaxDistance)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagMaxDistance)(USpringArmComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClampToMaxPhysicsDeltaTime)(USpringArmComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbClampToMaxPhysicsDeltaTime)(USpringArmComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCollisionFixApplied_)(USpringArmComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnfixedCameraPosition_)(USpringArmComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getTargetRotation_)(USpringArmComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, validateSettings_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, supportsHDRDisplayOutput_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVSyncEnabled_)(UGameUserSettings_* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVisualEffectQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewDistanceQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setToDefaults_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setTextureQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadingQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScreenResolution_)(UGameUserSettings_* self_p0, FIntPoint resolution_p1);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleValueEx_)(UGameUserSettings_* self_p0, NF32 newScaleValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleValue_)(UGameUserSettings_* self_p0, NI32 newScaleValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleNormalized_)(UGameUserSettings_* self_p0, NF32 newScaleNormalized_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPostProcessingQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOverallScalabilityLevel_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalIlluminationQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFullscreenMode_)(UGameUserSettings_* self_p0, tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg inFullscreenMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFrameRateLimit_)(UGameUserSettings_* self_p0, NF32 newLimit_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFoliageQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicResolutionEnabled_)(UGameUserSettings_* self_p0, NIM_BOOL bEnable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBenchmarkFallbackValues_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setAudioQualityLevel_)(UGameUserSettings_* self_p0, NI32 qualityLevel_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAntiAliasingQuality_)(UGameUserSettings_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, saveSettings_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, runHardwareBenchmark_)(UGameUserSettings_* self_p0, NI32 workScale_p1, NF32 cPUMultiplier_p2, NF32 gPUMultiplier_p3);
N_LIB_PRIVATE N_NIMCALL(void, revertVideoMode_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetToCurrentSettings_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, loadSettings_)(UGameUserSettings_* self_p0, NIM_BOOL bForceReload_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVSyncEnabled_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVSyncDirty_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isScreenResolutionDirty_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHDREnabled_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFullscreenModeDirty_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicResolutionEnabled_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicResolutionDirty_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDirty_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getVisualEffectQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getViewDistanceQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getTextureQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getSyncInterval_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getShadowQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getShadingQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getScreenResolution_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getResolutionScaleNormalized_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getResolutionScaleInformationEx_)(UGameUserSettings_* self_p0, NF32& currentScaleNormalized_p1, NF32& currentScaleValue_p2, NF32& minScaleValue_p3, NF32& maxScaleValue_p4);
N_LIB_PRIVATE N_NIMCALL(void, getResolutionScaleInformation_)(UGameUserSettings_* self_p0, NF32& currentScaleNormalized_p1, NI32& currentScaleValue_p2, NI32& minScaleValue_p3, NI32& maxScaleValue_p4);
N_LIB_PRIVATE N_NIMCALL(NI32, getReflectionQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getRecommendedResolutionScale_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getPreferredFullscreenMode_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getPostProcessingQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getOverallScalabilityLevel_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getLastConfirmedScreenResolution_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getLastConfirmedFullscreenMode_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getGlobalIlluminationQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UGameUserSettings_*, getGameUserSettings_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getFullscreenMode_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getFrameRateLimit_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getFramePace_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getFoliageQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDesktopResolution_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDefaultWindowPosition_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getDefaultWindowMode_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultResolutionScale_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDefaultResolution_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getCurrentHDRDisplayNits_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getAudioQualityLevel_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getAntiAliasingQuality_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, enableHDRDisplayOutput_)(UGameUserSettings_* self_p0, NIM_BOOL bEnable_p1, NI32 displayNits_p2);
N_LIB_PRIVATE N_NIMCALL(void, confirmVideoMode_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, applySettings_)(UGameUserSettings_* self_p0, NIM_BOOL bCheckForCommandLineOverrides_p1);
N_LIB_PRIVATE N_NIMCALL(void, applyResolutionSettings_)(UGameUserSettings_* self_p0, NIM_BOOL bCheckForCommandLineOverrides_p1);
N_LIB_PRIVATE N_NIMCALL(void, applyNonResolutionSettings_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, applyHardwareBenchmarkResults_)(UGameUserSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__cgfzaLYkvR8gASam8GmF9aQ, staticMesh)(ALightWeightInstanceStaticMeshManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMesh)(ALightWeightInstanceStaticMeshManager_* obj_p0, TY__cgfzaLYkvR8gASam8GmF9aQ val_p1);
N_LIB_PRIVATE N_NIMCALL(UHierarchicalInstancedStaticMeshComponent_*, instancedStaticMeshComponent)(ALightWeightInstanceStaticMeshManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstancedStaticMeshComponent)(ALightWeightInstanceStaticMeshManager_* obj_p0, UHierarchicalInstancedStaticMeshComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, playerStartTag)(APlayerStart_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerStartTag)(APlayerStart_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, score)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscore)(APlayerState_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, playerId)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayerId)(APlayerState_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, compressedPing)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompressedPing)(APlayerState_* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsSpectator)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsSpectator)(APlayerState_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsABot)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsABot)(APlayerState_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(APawn*, pawnPrivate)(APlayerState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpawnPrivate)(APlayerState_* obj_p0, APawn* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSpectator_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOnlyASpectator_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isABot_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScore_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getPlayerName_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getPlayerId_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPingInMilliseconds_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawn_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NU8, getCompressedPing_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FUniqueNetIdRepl, getUniqueId_)(APlayerState_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, saveKeyMappings_)(UInputSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeAxisMapping_)(UInputSettings_* self_p0, FInputAxisKeyMapping& keyMapping_p1, NIM_BOOL bForceRebuildKeymaps_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeActionMapping_)(UInputSettings_* self_p0, FInputActionKeyMapping& keyMapping_p1, NIM_BOOL bForceRebuildKeymaps_p2);
N_LIB_PRIVATE N_NIMCALL(UInputSettings_*, getInputSettings_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getAxisNames_)(UInputSettings_* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& axisNames_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAxisMappingByName_)(UInputSettings_* self_p0, FName inAxisName_p1, TY__CLT5yrXFP3HZX5VORHV70A& outMappings_p2);
N_LIB_PRIVATE N_NIMCALL(void, getActionNames_)(UInputSettings_* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& actionNames_p1);
N_LIB_PRIVATE N_NIMCALL(void, getActionMappingByName_)(UInputSettings_* self_p0, FName inActionName_p1, TY__LgeuiTWlJeQFCA1Wq3za9bg& outMappings_p2);
N_LIB_PRIVATE N_NIMCALL(void, forceRebuildKeymaps_)(UInputSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addAxisMapping_)(UInputSettings_* self_p0, FInputAxisKeyMapping& keyMapping_p1, NIM_BOOL bForceRebuildKeymaps_p2);
N_LIB_PRIVATE N_NIMCALL(void, addActionMapping_)(UInputSettings_* self_p0, FInputActionKeyMapping& keyMapping_p1, NIM_BOOL bForceRebuildKeymaps_p2);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOuterAPlayerController_)(UPlayerInput* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesEnums)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAnimation)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInStateMachine_)(UAnimInstance* self_p0, NI32 machineIndex_p1, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInSourceState_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInAnyState_)(UAnimInstance* self_p0, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInStateMachine_)(UAnimInstance* self_p0, NI32 machineIndex_p1, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInSourceState_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInAnyState_)(UAnimInstance* self_p0, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInStateMachine_)(UAnimInstance* self_p0, NI32 machineIndex_p1, FName notifyName_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInSourceState_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2, FName notifyName_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInAnyState_)(UAnimInstance* self_p0, FName notifyName_p1);
N_LIB_PRIVATE N_NIMCALL(void, unlockAIResources_)(UAnimInstance* self_p0, NIM_BOOL bUnlockMovement_p1, NIM_BOOL unlockAILogic_p2);
N_LIB_PRIVATE N_NIMCALL(APawn*, tryGetPawnOwner_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopSlotAnimation_)(UAnimInstance* self_p0, NF32 inBlendOutTime_p1, FName slotNodeName_p2);
N_LIB_PRIVATE N_NIMCALL(void, snapshotPose_)(UAnimInstance* self_p0, FPoseSnapshot& snapshot_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseMainInstanceMontageEvaluationData_)(UAnimInstance* self_p0, NIM_BOOL bSet_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRootMotionMode_)(UAnimInstance* self_p0, tyEnum_ERootMotionMode__oixCsBQZKA6SWRZ9bIVVRxQ value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReceiveNotifiesFromLinkedInstances_)(UAnimInstance* self_p0, NIM_BOOL bSet_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPropagateNotifiesToLinkedInstances_)(UAnimInstance* self_p0, NIM_BOOL bSet_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTarget_)(UAnimInstance* self_p0, FName morphTargetName_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, savePoseSnapshot_)(UAnimInstance* self_p0, FName snapshotName_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetDynamics_)(UAnimInstance* self_p0, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw inTeleportType_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, requestTransitionEvent_)(UAnimInstance* self_p0, FName eventName_p1, NF requestTimeout_p2, tyEnum_ETransitionRequestQueueMode__x8ojufrQ2LY9a3P8sXTtX4A queueMode_p3, tyEnum_ETransitionRequestOverwriteMode__SuW15yRCTZRz68GQ9cQsXwg overwriteMode_p4);
N_LIB_PRIVATE N_NIMCALL(void, removePoseSnapshot_)(UAnimInstance* self_p0, FName snapshotName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, queryTransitionEvent_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 transitionIndex_p2, FName eventName_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, queryAndMarkTransitionEvent_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 transitionIndex_p2, FName eventName_p3);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_WithBlendSettings_)(UAnimInstance* self_p0, UAnimSequenceBase* asset_p1, FName slotNodeName_p2, FMontageBlendSettings& blendInSettings_p3, FMontageBlendSettings& blendOutSettings_p4, NF32 inPlayRate_p5, NI32 loopCount_p6, NF32 blendOutTriggerTime_p7, NF32 inTimeToStartMontageAt_p8);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_WithBlendArgs_)(UAnimInstance* self_p0, UAnimSequenceBase* asset_p1, FName slotNodeName_p2, FAlphaBlendArgs& blendIn_p3, FAlphaBlendArgs& blendOut_p4, NF32 inPlayRate_p5, NI32 loopCount_p6, NF32 blendOutTriggerTime_p7, NF32 inTimeToStartMontageAt_p8);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_)(UAnimInstance* self_p0, UAnimSequenceBase* asset_p1, FName slotNodeName_p2, NF32 blendInTime_p3, NF32 blendOutTime_p4, NF32 inPlayRate_p5, NI32 loopCount_p6, NF32 blendOutTriggerTime_p7, NF32 inTimeToStartMontageAt_p8);
N_LIB_PRIVATE N_NIMCALL(void, montageSync_StopFollowing_)(UAnimInstance* self_p0, UAnimMontage* montageFollower_p1);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopWithBlendSettings_)(UAnimInstance* self_p0, FMontageBlendSettings& blendOutSettings_p1, UAnimMontage* montage_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopWithBlendOut_)(UAnimInstance* self_p0, FAlphaBlendArgs& blendOut_p1, UAnimMontage* montage_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopGroupByName_)(UAnimInstance* self_p0, NF32 inBlendOutTime_p1, FName groupName_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_Stop_)(UAnimInstance* self_p0, NF32 inBlendOutTime_p1, UAnimMontage* montage_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetPosition_)(UAnimInstance* self_p0, UAnimMontage* montage_p1, NF32 newPosition_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetPlayRate_)(UAnimInstance* self_p0, UAnimMontage* montage_p1, NF32 newPlayRate_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetNextSection_)(UAnimInstance* self_p0, FName sectionNameToChange_p1, FName nextSection_p2, UAnimMontage* montage_p3);
N_LIB_PRIVATE N_NIMCALL(void, montage_Resume_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_PlayWithBlendSettings_)(UAnimInstance* self_p0, UAnimMontage* montageToPlay_p1, FMontageBlendSettings& blendInSettings_p2, NF32 inPlayRate_p3, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType_p4, NF32 inTimeToStartMontageAt_p5, NIM_BOOL bStopAllMontages_p6);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_PlayWithBlendIn_)(UAnimInstance* self_p0, UAnimMontage* montageToPlay_p1, FAlphaBlendArgs& blendIn_p2, NF32 inPlayRate_p3, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType_p4, NF32 inTimeToStartMontageAt_p5, NIM_BOOL bStopAllMontages_p6);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_Play_)(UAnimInstance* self_p0, UAnimMontage* montageToPlay_p1, NF32 inPlayRate_p2, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType_p3, NF32 inTimeToStartMontageAt_p4, NIM_BOOL bStopAllMontages_p5);
N_LIB_PRIVATE N_NIMCALL(void, montage_Pause_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(void, montage_JumpToSectionsEnd_)(UAnimInstance* self_p0, FName sectionName_p1, UAnimMontage* montage_p2);
N_LIB_PRIVATE N_NIMCALL(void, montage_JumpToSection_)(UAnimInstance* self_p0, FName sectionName_p1, UAnimMontage* montage_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_IsPlaying_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_IsActive_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetPosition_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetPlayRate_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_GetIsStopped_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetEffectivePlayRate_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(FName, montage_GetCurrentSection_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetBlendTime_)(UAnimInstance* self_p0, UAnimMontage* montage_p1);
N_LIB_PRIVATE N_NIMCALL(void, lockAIResources_)(UAnimInstance* self_p0, NIM_BOOL bLockMovement_p1, NIM_BOOL lockAILogic_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUsingMainInstanceMontageEvaluationData_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSyncGroupBetweenMarkers_)(UAnimInstance* self_p0, FName inSyncGroupName_p1, FName previousMarker_p2, FName nextMarker_p3, NIM_BOOL bRespectMarkerOrder_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingSlotAnimation_)(UAnimInstance* self_p0, UAnimSequenceBase* asset_p1, FName slotNodeName_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyMontagePlaying_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMarkerBeenHitThisFrame_)(UAnimInstance* self_p0, FName syncGroup_p1, FName markerName_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTimeToClosestMarker_)(UAnimInstance* self_p0, FName syncGroup_p1, FName markerName_p2, NF32& outMarkerTime_p3);
N_LIB_PRIVATE N_NIMCALL(FMarkerSyncAnimPosition, getSyncGroupPosition_)(UAnimInstance* self_p0, FName inSyncGroupName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeRemainingFraction_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeRemaining_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeFraction_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTime_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimLength_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getReceiveNotifiesFromLinkedInstances_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPropagateNotifiesToLinkedInstances_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, getOwningComponent_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwningActor_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionTimeElapsedFraction_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 transitionIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionTimeElapsed_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 transitionIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionCrossfadeDuration_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 transitionIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceStateWeight_)(UAnimInstance* self_p0, NI32 machineIndex_p1, NI32 stateIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceMachineWeight_)(UAnimInstance* self_p0, NI32 machineIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceCurrentStateElapsedTime_)(UAnimInstance* self_p0, NI32 machineIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFromEndFraction_)(UAnimInstance* self_p0, NI32 assetPlayerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFromEnd_)(UAnimInstance* self_p0, NI32 assetPlayerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFraction_)(UAnimInstance* self_p0, NI32 assetPlayerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTime_)(UAnimInstance* self_p0, NI32 assetPlayerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerLength_)(UAnimInstance* self_p0, NI32 assetPlayerIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeltaSeconds_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurveValueWithDefault_)(UAnimInstance* self_p0, FName curveName_p1, NF32 defaultValue_p2, NF32& outValue_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurveValue_)(UAnimInstance* self_p0, FName curveName_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getCurrentStateName_)(UAnimInstance* self_p0, NI32 machineIndex_p1);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentActiveMontage_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getAllCurveNames_)(UAnimInstance* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames_p1);
N_LIB_PRIVATE N_NIMCALL(void, getActiveCurveNames_)(UAnimInstance* self_p0, tyEnum_EAnimCurveType__bLSJ5hfWpuK9b9a9atpz9c41QQ curveType_p1, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames_p2);
N_LIB_PRIVATE N_NIMCALL(void, clearTransitionEvents_)(UAnimInstance* self_p0, FName eventName_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearMorphTargets_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAllTransitionEvents_)(UAnimInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, calculateDirection_)(UAnimInstance* self_p0, FVector& velocity_p1, FRotator& baseRotation_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopAnim_)(UAnimSingleNodeInstance_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setReverse_)(UAnimSingleNodeInstance_* self_p0, NIM_BOOL bInReverse_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPreviewCurveOverride_)(UAnimSingleNodeInstance_* self_p0, FName& poseName_p1, NF32 value_p2, NIM_BOOL bRemoveIfZero_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPositionWithPreviousTime_)(UAnimSingleNodeInstance_* self_p0, NF32 inPosition_p1, NF32 inPreviousTime_p2, NIM_BOOL bFireNotifies_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(UAnimSingleNodeInstance_* self_p0, NF32 inPosition_p1, NIM_BOOL bFireNotifies_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(UAnimSingleNodeInstance_* self_p0, NF32 inPlayRate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaying_)(UAnimSingleNodeInstance_* self_p0, NIM_BOOL bIsPlaying_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMirrorDataTable_)(UAnimSingleNodeInstance_* self_p0, UMirrorDataTable_* mirrorDataTable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLooping_)(UAnimSingleNodeInstance_* self_p0, NIM_BOOL bIsLooping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBlendSpacePosition_)(UAnimSingleNodeInstance_* self_p0, FVector& inPosition_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationAsset_)(UAnimSingleNodeInstance_* self_p0, UAnimationAsset* newAsset_p1, NIM_BOOL bIsLooping_p2, NF32 inPlayRate_p3);
N_LIB_PRIVATE N_NIMCALL(void, playAnim_)(UAnimSingleNodeInstance_* self_p0, NIM_BOOL bIsLooping_p1, NF32 inPlayRate_p2, NF32 inStartPosition_p3);
N_LIB_PRIVATE N_NIMCALL(UMirrorDataTable_*, getMirrorDataTable_)(UAnimSingleNodeInstance_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getLength_)(UAnimSingleNodeInstance_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAnimationAsset*, getAnimationAsset_)(UAnimSingleNodeInstance_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FColor*, notifyColor)(UAnimNotify* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnotifyColor)(UAnimNotify* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldFireInEditor)(UAnimNotify* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldFireInEditor)(UAnimNotify* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, notifyColor)(UAnimNotifyState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnotifyColor)(UAnimNotifyState_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldFireInEditor)(UAnimNotifyState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldFireInEditor)(UAnimNotifyState_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldDoAnimNotifies)(ASkeletalMeshActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldDoAnimNotifies)(ASkeletalMeshActor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, skeletalMeshComponent)(ASkeletalMeshActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMeshComponent)(ASkeletalMeshActor_* obj_p0, USkeletalMeshComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPreviewSkeletalMesh_)(UAnimationAsset* self_p0, USkeletalMesh* previewMesh_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayLength_)(UAnimationAsset* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, sequenceLength)(UAnimSequenceBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsequenceLength)(UAnimSequenceBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UAnimDataModel_*, dataModel)(UAnimSequenceBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdataModel)(UAnimSequenceBase* obj_p0, UAnimDataModel_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__2oFl2vye442IAermOsWYpg, dataModelInterface)(UAnimSequenceBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdataModelInterface)(UAnimSequenceBase* obj_p0, TY__2oFl2vye442IAermOsWYpg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__GmxQYRLn4JVnyI7Ef9c9aRsw, controller)(UAnimSequenceBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontroller)(UAnimSequenceBase* obj_p0, TY__GmxQYRLn4JVnyI7Ef9c9aRsw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getBoneCustomAttributeNamesToImport_)(UAnimationSettings_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Gur0dFjg9byOJEgqd1KOiLg*, boneAnimationTracks)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setboneAnimationTracks)(UAnimDataModel_* obj_p0, TY__Gur0dFjg9byOJEgqd1KOiLg val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, playLength)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayLength)(UAnimDataModel_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FFrameRate*, frameRate)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setframeRate)(UAnimDataModel_* obj_p0, FFrameRate val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfFrames)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfFrames)(UAnimDataModel_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfKeys)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfKeys)(UAnimDataModel_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveData_*, curveData)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurveData)(UAnimDataModel_* obj_p0, FAnimationCurveData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__uvC4hJjePbPu61EoaxB1QQ*, animatedBoneAttributes)(UAnimDataModel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setanimatedBoneAttributes)(UAnimDataModel_* obj_p0, TY__uvC4hJjePbPu61EoaxB1QQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag, blendModeIn)(UAnimMontage* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendModeIn)(UAnimMontage* obj_p0, tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag, blendModeOut)(UAnimMontage* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendModeOut)(UAnimMontage* obj_p0, tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSectionName_)(UAnimMontage* self_p0, FName inSectionName_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getSectionName_)(UAnimMontage* self_p0, NI32 sectionIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getSectionIndex_)(UAnimMontage* self_p0, FName inSectionName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSections_)(UAnimMontage* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultBlendOutTime_)(UAnimMontage* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultBlendInTime_)(UAnimMontage* self_p0);
N_LIB_PRIVATE N_NIMCALL(FAlphaBlendArgs, getBlendOutArgs_)(UAnimMontage* self_p0);
N_LIB_PRIVATE N_NIMCALL(FAlphaBlendArgs, getBlendInArgs_)(UAnimMontage* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, createSlotAnimationAsDynamicMontage_WithBlendSettings_)(UAnimSequenceBase* asset_p0, FName slotNodeName_p1, FMontageBlendSettings& blendInSettings_p2, FMontageBlendSettings& blendOutSettings_p3, NF32 inPlayRate_p4, NI32 loopCount_p5, NF32 inBlendOutTriggerTime_p6);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, pSTemplate)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpSTemplate)(UAnimNotifyState_Trail_* obj_p0, UParticleSystem* val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, firstSocketName)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfirstSocketName)(UAnimNotifyState_Trail_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, secondSocketName)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsecondSocketName)(UAnimNotifyState_Trail_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg, widthScaleMode)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidthScaleMode)(UAnimNotifyState_Trail_* obj_p0, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, widthScaleCurve)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidthScaleCurve)(UAnimNotifyState_Trail_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRecycleSpawnedSystems)(UAnimNotifyState_Trail_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRecycleSpawnedSystems)(UAnimNotifyState_Trail_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeCustomAttribute_)(UAnimSequence_* self_p0, FName& boneName_p1, FName& attributeName_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCustomAttributesForBone_)(UAnimSequence_* self_p0, FName& boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCustomAttributes_)(UAnimSequence_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addBoneStringCustomAttribute_)(UAnimSequence_* self_p0, FName& boneName_p1, FName& attributeName_p2, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys_p3, TY__myhN0u2pNczwuaOhbdYPXw& valueKeys_p4);
N_LIB_PRIVATE N_NIMCALL(void, addBoneIntegerCustomAttribute_)(UAnimSequence_* self_p0, FName& boneName_p1, FName& attributeName_p2, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys_p3, TY__TxfK2fhRJXNHttPFRcL6fA& valueKeys_p4);
N_LIB_PRIVATE N_NIMCALL(void, addBoneFloatCustomAttribute_)(UAnimSequence_* self_p0, FName& boneName_p1, FName& attributeName_p2, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys_p3, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& valueKeys_p4);
N_LIB_PRIVATE N_NIMCALL(TY__DqtnNclNKsonqiNHV0i59bw*, compatibleSkeletons)(USkeleton* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompatibleSkeletons)(USkeleton* obj_p0, TY__DqtnNclNKsonqiNHV0i59bw val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addCompatibleSkeleton_)(USkeleton* self_p0, USkeleton* sourceSkeleton_p1);
N_LIB_PRIVATE N_NIMCALL(void, updatePoseFromAnimation_)(UPoseAsset_* self_p0, UAnimSequence_* animSequence_p1);
N_LIB_PRIVATE N_NIMCALL(void, renamePose_)(UPoseAsset_* self_p0, FName& originalPoseName_p1, FName& newPoseName_p2);
N_LIB_PRIVATE N_NIMCALL(void, getPoseNames_)(UPoseAsset_* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& poseNames_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesGameplayAbilities)(void);
N_LIB_PRIVATE N_NIMCALL(FText*, description)(UGameplayEffectUIData_TextOnly_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdescription)(UGameplayEffectUIData_TextOnly_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(void, endAction_)(UAbilityAsync_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, asyncWaitGameplayTagDelegate_)(UAbilityAsync_WaitGameplayTag_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__c5YQSe1beacSx4MfVBpM6g*, abilities)(UGameplayAbilitySet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setabilities)(UGameplayAbilitySet_* obj_p0, TY__c5YQSe1beacSx4MfVBpM6g val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasOrigin_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasHitResult_)(FGameplayAbilityTargetDataHandle& hitResult_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasEndPoint_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasActor_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setStackCountToMax_)(FGameplayEffectSpecHandle specHandle_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setStackCount_)(FGameplayEffectSpecHandle specHandle_p0, NI32 stackCount_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setDuration_)(FGameplayEffectSpecHandle specHandle_p0, NF32 duration_p1);
N_LIB_PRIVATE N_NIMCALL(void, sendGameplayEventToActor_)(AActor* actor_p0, FGameplayTag eventTag_p1, FGameplayEventData payload_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GameplayAttributeGameplayAttribute_)(FGameplayAttribute attributeA_p0, FGameplayAttribute attributeB_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GameplayAbilitySpecHandle_)(FGameplayAbilitySpecHandle& a_p0, FGameplayAbilitySpecHandle& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ActiveGameplayEffectHandle_)(FActiveGameplayEffectHandle& a_p0, FActiveGameplayEffectHandle& b_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeSpecHandle_)(UGameplayEffect* inGameplayEffect_p0, AActor* inInstigator_p1, AActor* inEffectCauser_p2, NF32 inLevel_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayTargetDataFilterHandle_, makeFilterHandle_)(FGameplayTargetDataFilter_ filter_p0, AActor* filterActor_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FGameplayAttribute attribute_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInstigatorLocallyControlledPlayer_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInstigatorLocallyControlled_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasHitResult_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTargetDataOrigin_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTargetDataEndPointTransform_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getTargetDataEndPoint_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getOrigin_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getModifiedAttributeMagnitude_)(FGameplayEffectSpecHandle specHandle_p0, FGameplayAttribute attribute_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform, getInstigatorTransform_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getInstigatorActor_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getHitResultFromTargetData_)(FGameplayAbilityTargetDataHandle& hitResult_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getHitResult_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffectUIData_*, getGameplayEffectUIData_)(TY__o5lmm3YGRQTdI9c9ccmTHabQ effectClass_p0, TY__C5hI9bGz02aJQ8jd1yCg9aWw dataType_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffect*, getGameplayEffectFromActiveEffectHandle_)(FActiveGameplayEffectHandle& activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGameplayCueEndLocationAndNormal_)(AActor* targetActor_p0, FGameplayCueParameters parameters_p1, FVector& location_p2, FVector& normal_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGameplayCueDirection_)(AActor* targetActor_p0, FGameplayCueParameters parameters_p1, FVector& direction_p2);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility*, getGameplayAbilityFromSpecHandle_)(UAbilitySystemComponent* abilitySystem_p0, FGameplayAbilitySpecHandle& abilitySpecHandle_p1, NIM_BOOL& bIsInstance_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeFromAbilitySystemComponent_)(UAbilitySystemComponent* abilitySystem_p0, FGameplayAttribute attribute_p1, NIM_BOOL& bSuccessfullyFoundAttribute_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeBaseFromAbilitySystemComponent_)(UAbilitySystemComponent* abilitySystemComponent_p0, FGameplayAttribute attribute_p1, NIM_BOOL& bSuccessfullyFoundAttribute_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeBase_)(AActor* actor_p0, FGameplayAttribute attribute_p1, NIM_BOOL& bSuccessfullyFoundAttribute_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttribute_)(AActor* actor_p0, FGameplayAttribute attribute_p1, NIM_BOOL& bSuccessfullyFoundAttribute_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getEffectContext_)(FGameplayEffectSpecHandle specHandle_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getDebugStringFromGameplayAttribute_)(FGameplayAttribute& attribute_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getDataCountFromTargetData_)(FGameplayAbilityTargetDataHandle& targetData_p0);
N_LIB_PRIVATE N_NIMCALL(TY__ApMORIOJRIJuzL5PAQu9cEg, getAllLinkedGameplayEffectSpecHandles_)(FGameplayEffectSpecHandle specHandle_p0);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, getAllActorsFromTargetData_)(FGameplayAbilityTargetDataHandle& targetData_p0);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, getActorsFromTargetData_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getActorCount_)(FGameplayCueParameters parameters_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getActorByIndex_)(FGameplayCueParameters parameters_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectTotalDuration_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectStartTime_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveGameplayEffectStackLimitCount_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveGameplayEffectStackCount_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectRemainingDuration_)(UObject* worldContextObject_p0, FActiveGameplayEffectHandle activeHandle_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectExpectedEndTime_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getActiveGameplayEffectDebugString_)(FActiveGameplayEffectHandle activeHandle_p0);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, getAbilitySystemComponent_)(AActor* actor_p0);
N_LIB_PRIVATE N_NIMCALL(void, forwardGameplayCueToTarget_)(TY__sYXgxujJplhjPGLjVhFu2A targetCueInterface_p0, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType_p1, FGameplayCueParameters parameters_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, filterTargetData_)(FGameplayAbilityTargetDataHandle& targetDataHandle_p0, FGameplayTargetDataFilterHandle_ actorFilterClass_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GameplayAttributeGameplayAttribute_)(FGameplayAttribute attributeA_p0, FGameplayAttribute attributeB_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GameplayAbilitySpecHandle_)(FGameplayAbilitySpecHandle& a_p0, FGameplayAbilitySpecHandle& b_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ActiveGameplayEffectHandle_)(FActiveGameplayEffectHandle& a_p0, FActiveGameplayEffectHandle& b_p1);
N_LIB_PRIVATE N_NIMCALL(void, effectContextSetOrigin_)(FGameplayEffectContextHandle effectContext_p0, FVector origin_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextIsValid_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextIsInstigatorLocallyControlled_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextHasHitResult_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, effectContextGetSourceObject_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetOriginalInstigatorActor_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, effectContextGetOrigin_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetInstigatorActor_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(FHitResult, effectContextGetHitResult_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetEffectCauser_)(FGameplayEffectContextHandle effectContext_p0);
N_LIB_PRIVATE N_NIMCALL(void, effectContextAddHitResult_)(FGameplayEffectContextHandle effectContext_p0, FHitResult hitResult_p1, NIM_BOOL bReset_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesTargetDataContainActor_)(FGameplayAbilityTargetDataHandle& targetData_p0, NI32 index_p1, AActor* actor_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesGameplayCueMeetTagRequirements_)(FGameplayCueParameters parameters_p0, FGameplayTagRequirements& sourceTagReqs_p1, FGameplayTagRequirements& targetTagReqs_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, cloneSpecHandle_)(AActor* inNewInstigator_p0, AActor* inEffectCauser_p1, FGameplayEffectSpecHandle gameplayEffectSpecHandle_Clone_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, assignTagSetByCallerMagnitude_)(FGameplayEffectSpecHandle specHandle_p0, FGameplayTag dataTag_p1, NF32 magnitude_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, assignSetByCallerMagnitude_)(FGameplayEffectSpecHandle specHandle_p0, FName dataName_p1, NF32 magnitude_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, appendTargetDataHandle_)(FGameplayAbilityTargetDataHandle targetHandle_p0, FGameplayAbilityTargetDataHandle& handleToAdd_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addLinkedGameplayEffectSpec_)(FGameplayEffectSpecHandle specHandle_p0, FGameplayEffectSpecHandle linkedGameplayEffectSpec_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addLinkedGameplayEffect_)(FGameplayEffectSpecHandle specHandle_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ linkedGameplayEffect_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addGrantedTag_)(FGameplayEffectSpecHandle specHandle_p0, FGameplayTag newGameplayTag_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addAssetTag_)(FGameplayEffectSpecHandle specHandle_p0, FGameplayTag newGameplayTag_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, abilityTargetDataFromLocations_)(FGameplayAbilityTargetingLocationInfo& sourceLocation_p0, FGameplayAbilityTargetingLocationInfo& targetLocation_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, abilityTargetDataFromHitResult_)(FHitResult& hitResult_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, abilityTargetDataFromActorArray_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actorArray_p0, NIM_BOOL oneTargetPerHandle_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetDataHandle, abilityTargetDataFromActor_)(AActor* actor_p0);
N_LIB_PRIVATE N_NIMCALL(TY__SElPEbSc5uW3wbDAeOJeXw*, defaultStartingData)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultStartingData)(UAbilitySystemComponent* obj_p0, TY__SElPEbSc5uW3wbDAeOJeXw val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, affectedAnimInstanceTag)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaffectedAnimInstanceTag)(UAbilitySystemComponent* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, outgoingDuration)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoutgoingDuration)(UAbilitySystemComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, incomingDuration)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setincomingDuration)(UAbilitySystemComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, clientDebugStrings)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclientDebugStrings)(UAbilitySystemComponent* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, serverDebugStrings)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setserverDebugStrings)(UAbilitySystemComponent* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, userAbilityActivationInhibited)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuserAbilityActivationInhibited)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, replicationProxyEnabled)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplicationProxyEnabled)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressGrantAbility)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressGrantAbility)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressGameplayCues)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressGameplayCues)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__UmMCwJHxy5cVkk9ctXMLdwA*, spawnedTargetActors)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspawnedTargetActors)(UAbilitySystemComponent* obj_p0, TY__UmMCwJHxy5cVkk9ctXMLdwA val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, ownerActor)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setownerActor)(UAbilitySystemComponent* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, avatarActor)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setavatarActor)(UAbilitySystemComponent* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecContainer*, activatableAbilities)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivatableAbilities)(UAbilitySystemComponent* obj_p0, FGameplayAbilitySpecContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__1iVhbK34EtpVHrTeNCGvNw*, allReplicatedInstancedAbilities)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setallReplicatedInstancedAbilities)(UAbilitySystemComponent* obj_p0, TY__1iVhbK34EtpVHrTeNCGvNw val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityRepAnimMontage*, repAnimMontageInfo)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrepAnimMontageInfo)(UAbilitySystemComponent* obj_p0, FGameplayAbilityRepAnimMontage val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCachedIsNetSimulated)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCachedIsNetSimulated)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPendingMontageRep)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPendingMontageRep)(UAbilitySystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityLocalAnimMontage*, localAnimMontageInfo)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlocalAnimMontageInfo)(UAbilitySystemComponent* obj_p0, FGameplayAbilityLocalAnimMontage val_p1);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectsContainer*, activeGameplayEffects)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactiveGameplayEffects)(UAbilitySystemComponent* obj_p0, FActiveGameplayEffectsContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayCueContainer*, activeGameplayCues)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactiveGameplayCues)(UAbilitySystemComponent* obj_p0, FActiveGameplayCueContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayCueContainer*, minimalReplicationGameplayCues)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationGameplayCues)(UAbilitySystemComponent* obj_p0, FActiveGameplayCueContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__41Mm7Z1nb8xYOi3Vy0ffmA*, blockedAbilityBindings)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblockedAbilityBindings)(UAbilitySystemComponent* obj_p0, TY__41Mm7Z1nb8xYOi3Vy0ffmA val_p1);
N_LIB_PRIVATE N_NIMCALL(FMinimalReplicationTagCountMap*, minimalReplicationTags)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationTags)(UAbilitySystemComponent* obj_p0, FMinimalReplicationTagCountMap val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__MTgP1q0moW3ktYPggh9a8TA*, spawnedAttributes)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspawnedAttributes)(UAbilitySystemComponent* obj_p0, TY__MTgP1q0moW3ktYPggh9a8TA val_p1);
N_LIB_PRIVATE N_NIMCALL(FMinimalReplicationTagCountMap*, replicatedLooseTags)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplicatedLooseTags)(UAbilitySystemComponent* obj_p0, FMinimalReplicationTagCountMap val_p1);
N_LIB_PRIVATE N_NIMCALL(FReplicatedPredictionKeyMap*, replicatedPredictionKeyMap)(UAbilitySystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplicatedPredictionKeyMap)(UAbilitySystemComponent* obj_p0, FReplicatedPredictionKeyMap val_p1);
N_LIB_PRIVATE N_NIMCALL(void, updateActiveGameplayEffectSetByCallerMagnitudes_)(UAbilitySystemComponent* self_p0, FActiveGameplayEffectHandle activeHandle_p1, TY__UsuvlHgFUvpcHHVMn6XwRw& newSetByCallerValues_p2);
N_LIB_PRIVATE N_NIMCALL(void, updateActiveGameplayEffectSetByCallerMagnitude_)(UAbilitySystemComponent* self_p0, FActiveGameplayEffectHandle activeHandle_p1, FGameplayTag setByCallerTag_p2, NF32 newValue_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryActivateAbilityByClass_)(UAbilitySystemComponent* self_p0, TY__DI8ISoHArYV9cXPAlxup7ow inAbilityToActivate_p1, NIM_BOOL bAllowRemoteActivation_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryActivateAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, NIM_BOOL bAllowRemoteActivation_p2);
N_LIB_PRIVATE N_NIMCALL(void, targetConfirm_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, targetCancel_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setUserAbilityActivationInhibited_)(UAbilitySystemComponent* self_p0, NIM_BOOL newInhibit_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActiveGameplayEffectLevelUsingQuery_)(UAbilitySystemComponent* self_p0, FGameplayEffectQuery query_p1, NI32 newLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setActiveGameplayEffectLevel_)(UAbilitySystemComponent* self_p0, FActiveGameplayEffectHandle activeHandle_p1, NI32 newLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, serverTryActivateAbilityWithEventData_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, NIM_BOOL inputPressed_p2, FPredictionKey predictionKey_p3, FGameplayEventData triggerEventData_p4);
N_LIB_PRIVATE N_NIMCALL(void, serverTryActivateAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, NIM_BOOL inputPressed_p2, FPredictionKey predictionKey_p3);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedTargetDataCancelled_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityHandle_p1, FPredictionKey abilityOriginalPredictionKey_p2, FPredictionKey currentPredictionKey_p3);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedTargetData_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityHandle_p1, FPredictionKey abilityOriginalPredictionKey_p2, FGameplayAbilityTargetDataHandle replicatedTargetDataHandle_p3, FGameplayTag applicationTag_p4, FPredictionKey currentPredictionKey_p5);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedEventWithPayload_)(UAbilitySystemComponent* self_p0, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType_p1, FGameplayAbilitySpecHandle abilityHandle_p2, FPredictionKey abilityOriginalPredictionKey_p3, FPredictionKey currentPredictionKey_p4, FVector_NetQuantize100* vectorPayload_p5);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedEvent_)(UAbilitySystemComponent* self_p0, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType_p1, FGameplayAbilitySpecHandle abilityHandle_p2, FPredictionKey abilityOriginalPredictionKey_p3, FPredictionKey currentPredictionKey_p4);
N_LIB_PRIVATE N_NIMCALL(void, serverSetInputReleased_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityHandle_p1);
N_LIB_PRIVATE N_NIMCALL(void, serverSetInputPressed_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityHandle_p1);
N_LIB_PRIVATE N_NIMCALL(void, serverPrintDebug_RequestWithStrings_)(UAbilitySystemComponent* self_p0, TY__myhN0u2pNczwuaOhbdYPXw strings_p1);
N_LIB_PRIVATE N_NIMCALL(void, serverPrintDebug_Request_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, serverEndAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToEnd_p1, FGameplayAbilityActivationInfo activationInfo_p2, FPredictionKey predictionKey_p3);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageSetPlayRate_)(UAbilitySystemComponent* self_p0, UAnimMontage* clientAnimMontage_p1, NF32 inPlayRate_p2);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageSetNextSectionName_)(UAbilitySystemComponent* self_p0, UAnimMontage* clientAnimMontage_p1, NF32 clientPosition_p2, FName sectionName_p3, FName nextSectionName_p4);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageJumpToSectionName_)(UAbilitySystemComponent* self_p0, UAnimMontage* clientAnimMontage_p1, FName sectionName_p2);
N_LIB_PRIVATE N_NIMCALL(void, serverCancelAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToCancel_p1, FGameplayAbilityActivationInfo activationInfo_p2);
N_LIB_PRIVATE N_NIMCALL(void, serverAbilityRPCBatch_)(UAbilitySystemComponent* self_p0, FServerAbilityRPCBatch batchInfo_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeActiveGameplayEffectBySourceEffect_)(UAbilitySystemComponent* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffect_p1, UAbilitySystemComponent* instigatorAbilitySystemComponent_p2, NI32 stacksToRemove_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeActiveGameplayEffect_)(UAbilitySystemComponent* self_p0, FActiveGameplayEffectHandle handle_p1, NI32 stacksToRemove_p2);
N_LIB_PRIVATE N_NIMCALL(void, releaseInputID_)(UAbilitySystemComponent* self_p0, NI32 inputID_p1);
N_LIB_PRIVATE N_NIMCALL(void, pressInputID_)(UAbilitySystemComponent* self_p0, NI32 inputID_p1);
N_LIB_PRIVATE N_NIMCALL(void, onSpawnedAttributesEndPlayed_)(UAbilitySystemComponent* self_p0, AActor* inActor_p1, tyEnum_EEndPlayReason__83Jx3inG29af0RIg6BEVzPw endPlayReason_p2);
N_LIB_PRIVATE N_NIMCALL(void, onRep_SpawnedAttributes_)(UAbilitySystemComponent* self_p0, TY__MTgP1q0moW3ktYPggh9a8TA& previousSpawnedAttributes_p1);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ServerDebugString_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ReplicatedAnimMontage_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onRep_OwningActor_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ClientDebugString_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ActivateAbilities_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onOwnerActorDestroyed_)(UAbilitySystemComponent* self_p0, AActor* inActor_p1);
N_LIB_PRIVATE N_NIMCALL(void, onAvatarActorDestroyed_)(UAbilitySystemComponent* self_p0, AActor* inActor_p1);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_WithParams_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1, FPredictionKey predictionKey_p2, FGameplayCueParameters gameplayCueParameters_p3);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_FromSpec_)(UAbilitySystemComponent* self_p0, FGameplayEffectSpecForRPC spec_p1, FPredictionKey predictionKey_p2);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1, FPredictionKey predictionKey_p2, FGameplayEffectContextHandle effectContext_p3);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1, FPredictionKey predictionKey_p2, FGameplayCueParameters gameplayCueParameters_p3);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec_)(UAbilitySystemComponent* self_p0, FGameplayEffectSpecForRPC spec_p1, FPredictionKey predictionKey_p2);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAdded_WithParams_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1, FPredictionKey predictionKey_p2, FGameplayCueParameters parameters_p3);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAdded_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1, FPredictionKey predictionKey_p2, FGameplayEffectContextHandle effectContext_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeOutgoingSpec_)(UAbilitySystemComponent* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p1, NF32 level_p2, FGameplayEffectContextHandle context_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, makeEffectContext_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, initStats_)(UAbilitySystemComponent* self_p0, TY__JVcLxy5VxXvcRj365E9bclg attributes_p1, UDataTable* dataTable_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecHandle, giveAbilityAndActivateOnce_)(UAbilitySystemComponent* self_p0, TY__DI8ISoHArYV9cXPAlxup7ow abilityClass_p1, NI32 level_p2, NI32 inputID_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecHandle, giveAbility_)(UAbilitySystemComponent* self_p0, TY__DI8ISoHArYV9cXPAlxup7ow abilityClass_p1, NI32 level_p2, NI32 inputID_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGameplayCueActive_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayCueTag_p1);
N_LIB_PRIVATE N_NIMCALL(void, inputConfirm_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, inputCancel_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getUserAbilityActivationInhibited_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayTagCount_)(UAbilitySystemComponent* self_p0, FGameplayTag gameplayTag_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameplayEffectMagnitude_)(UAbilitySystemComponent* self_p0, FActiveGameplayEffectHandle handle_p1, FGameplayAttribute attribute_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayEffectCount_IfLoaded_)(UAbilitySystemComponent* self_p0, TY__khlKMeIkNjMzqw2TfIXxWA softSourceGameplayEffect_p1, UAbilitySystemComponent* optionalInstigatorFilterComponent_p2, NIM_BOOL bEnforceOnGoingCheck_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayEffectCount_)(UAbilitySystemComponent* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ sourceGameplayEffect_p1, UAbilitySystemComponent* optionalInstigatorFilterComponent_p2, NIM_BOOL bEnforceOnGoingCheck_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameplayAttributeValue_)(UAbilitySystemComponent* self_p0, FGameplayAttribute attribute_p1, NIM_BOOL& bFound_p2);
N_LIB_PRIVATE N_NIMCALL(UAttributeSet*, getAttributeSet_)(UAbilitySystemComponent* self_p0, TY__JVcLxy5VxXvcRj365E9bclg attributeSetClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAllAttributes_)(UAbilitySystemComponent* self_p0, TY__0e5LS6UfmhaWdcjpiaKDgQ& outAttributes_p1);
N_LIB_PRIVATE N_NIMCALL(void, getAllAbilities_)(UAbilitySystemComponent* self_p0, TY__jBGmxbqnyTV447L3R9bbKnQ& outAbilityHandles_p1);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, getActiveEffects_)(UAbilitySystemComponent* self_p0, FGameplayEffectQuery& query_p1);
N_LIB_PRIVATE N_NIMCALL(void, findAllAbilitiesWithInputID_)(UAbilitySystemComponent* self_p0, TY__jBGmxbqnyTV447L3R9bbKnQ& outAbilityHandles_p1, NI32 inputID_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientTryActivateAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1);
N_LIB_PRIVATE N_NIMCALL(void, clientSetReplicatedEvent_)(UAbilitySystemComponent* self_p0, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType_p1, FGameplayAbilitySpecHandle abilityHandle_p2, FPredictionKey abilityOriginalPredictionKey_p3);
N_LIB_PRIVATE N_NIMCALL(void, clientPrintDebug_Response_)(UAbilitySystemComponent* self_p0, TY__myhN0u2pNczwuaOhbdYPXw strings_p1, NI32 gameFlags_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientEndAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToEnd_p1, FGameplayAbilityActivationInfo activationInfo_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientCancelAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToCancel_p1, FGameplayAbilityActivationInfo activationInfo_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilitySucceedWithEventData_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, FPredictionKey predictionKey_p2, FGameplayEventData triggerEventData_p3);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilitySucceed_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, FPredictionKey predictionKey_p2);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilityFailed_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle abilityToActivate_p1, NI16 predictionKey_p2);
N_LIB_PRIVATE N_NIMCALL(void, clearAllAbilitiesWithInputID_)(UAbilitySystemComponent* self_p0, NI32 inputID_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearAllAbilities_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearAbility_)(UAbilitySystemComponent* self_p0, FGameplayAbilitySpecHandle& handle_p1);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToTarget_)(UAbilitySystemComponent* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p1, UAbilitySystemComponent* target_p2, NF32 level_p3, FGameplayEffectContextHandle context_p4);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToSelf_)(UAbilitySystemComponent* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p1, NF32 level_p2, FGameplayEffectContextHandle effectContext_p3);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToTarget_)(UAbilitySystemComponent* self_p0, FGameplayEffectSpecHandle& specHandle_p1, UAbilitySystemComponent* target_p2);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToSelf_)(UAbilitySystemComponent* self_p0, FGameplayEffectSpecHandle& specHandle_p1);
N_LIB_PRIVATE N_NIMCALL(void, abilityConfirmOrCancel_)(UAbilitySystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, abilityAbilityKey_)(UAbilitySystemComponent* self_p0, NI32 inputID_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath*, abilitySystemGlobalsClassName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemGlobalsClassName)(UAbilitySystemGlobals* obj_p0, FSoftClassPath val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseDebugTargetFromHud)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseDebugTargetFromHud)(UAbilitySystemGlobals* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailIsDeadTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailIsDeadTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailIsDeadName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailIsDeadName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailCooldownTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCooldownTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailCooldownName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCooldownName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailCostTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCostTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailCostName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCostName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailTagsBlockedTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsBlockedTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailTagsBlockedName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsBlockedName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailTagsMissingTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsMissingTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailTagsMissingName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsMissingName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailNetworkingTag)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailNetworkingTag)(UAbilitySystemGlobals* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailNetworkingName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailNetworkingName)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, minimalReplicationTagCountBits)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationTagCountBits)(UAbilitySystemGlobals* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FNetSerializeScriptStructCache*, targetDataStructCache)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetDataStructCache)(UAbilitySystemGlobals* obj_p0, FNetSerializeScriptStructCache val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowGameplayModEvaluationChannels)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowGameplayModEvaluationChannels)(UAbilitySystemGlobals* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA, defaultGameplayModEvaluationChannel)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultGameplayModEvaluationChannel)(UAbilitySystemGlobals* obj_p0, tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayModEvaluationChannelAliases)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayModEvaluationChannelAliases)(UAbilitySystemGlobals* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalCurveTableName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalCurveTableName)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveTable*, globalCurveTable)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalCurveTable)(UAbilitySystemGlobals* obj_p0, UCurveTable* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalAttributeMetaDataTableName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeMetaDataTableName)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, globalAttributeMetaDataTable)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeMetaDataTable)(UAbilitySystemGlobals* obj_p0, UDataTable* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalAttributeSetDefaultsTableName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeSetDefaultsTableName)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__ENhz1y6sHvLdRa6kOBUI0g*, globalAttributeSetDefaultsTableNames)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeSetDefaultsTableNames)(UAbilitySystemGlobals* obj_p0, TY__ENhz1y6sHvLdRa6kOBUI0g val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__M4MmxYh2DRWibpvAY9b1bhg*, globalAttributeDefaultsTables)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeDefaultsTables)(UAbilitySystemGlobals* obj_p0, TY__M4MmxYh2DRWibpvAY9b1bhg val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalGameplayCueManagerClass)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManagerClass)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalGameplayCueManagerName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManagerName)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, gameplayCueNotifyPaths)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueNotifyPaths)(UAbilitySystemGlobals* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, gameplayTagResponseTableName)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayTagResponseTableName)(UAbilitySystemGlobals* obj_p0, FSoftObjectPath val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayTagReponseTable_*, gameplayTagResponseTable)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayTagResponseTable)(UAbilitySystemGlobals* obj_p0, UGameplayTagReponseTable_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, predictTargetGameplayEffects)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpredictTargetGameplayEffects)(UAbilitySystemGlobals* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, replicateActivationOwnedTags)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplicateActivationOwnedTags)(UAbilitySystemGlobals* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayCueManager_*, globalGameplayCueManager)(UAbilitySystemGlobals* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManager)(UAbilitySystemGlobals* obj_p0, UGameplayCueManager_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleIgnoreAbilitySystemCosts_)(UAbilitySystemGlobals* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, toggleIgnoreAbilitySystemCooldowns_)(UAbilitySystemGlobals* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, serverEndPlayerAbility_)(UAbilitySystemGlobals* self_p0, FString abilityNameMatch_p1);
N_LIB_PRIVATE N_NIMCALL(void, serverCancelPlayerAbility_)(UAbilitySystemGlobals* self_p0, FString abilityNameMatch_p1);
N_LIB_PRIVATE N_NIMCALL(void, serverActivatePlayerAbility_)(UAbilitySystemGlobals* self_p0, FString abilityNameMatch_p1);
N_LIB_PRIVATE N_NIMCALL(void, listPlayerAbilities_)(UAbilitySystemGlobals* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, maxHealth)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxHealth)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, health)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethealth)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mana)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmana)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxMana)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxMana)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, damage)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdamage)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, spellDamage)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspellDamage)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, physicalDamage)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphysicalDamage)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, critChance)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcritChance)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, critMultiplier)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcritMultiplier)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, armorDamageReduction)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setarmorDamageReduction)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, dodgeChance)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdodgeChance)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lifeSteal)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlifeSteal)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, stackingAttribute1)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackingAttribute1)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, stackingAttribute2)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackingAttribute2)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, noStackAttribute)(UAbilitySystemTestAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnoStackAttribute)(UAbilitySystemTestAttributeSet_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, abilitySystemComponent)(AAbilitySystemTestPawn_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemComponent)(AAbilitySystemTestPawn_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueTag*, gameplayCue)(UAnimNotify_GameplayCue_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCue)(UAnimNotify_GameplayCue_* obj_p0, FGameplayCueTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueTag*, gameplayCue)(UAnimNotify_GameplayCueState_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCue)(UAnimNotify_GameplayCueState_* obj_p0, FGameplayCueTag val_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayCueOnActor_)(AActor* target_p0, FGameplayTag gameplayCueTag_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueParameters, makeGameplayCueParametersFromHitResult_)(FHitResult& hitResult_p0);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCueOnActor_)(AActor* target_p0, FGameplayTag gameplayCueTag_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCueOnActor_)(AActor* target_p0, FGameplayTag gameplayCueTag_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, forwardGameplayCueToParent_)(UGameplayCueInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, blueprintCustomHandler_)(UGameplayCueInterface* self_p0, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueObjectLibrary_*, runtimeGameplayCueObjectLibrary)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setruntimeGameplayCueObjectLibrary)(UGameplayCueManager_* obj_p0, FGameplayCueObjectLibrary_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueObjectLibrary_*, editorGameplayCueObjectLibrary)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, seteditorGameplayCueObjectLibrary)(UGameplayCueManager_* obj_p0, FGameplayCueObjectLibrary_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Oycn0Wv4Wvu5QjPDMJ4iYA*, loadedGameplayCueNotifyClasses)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setloadedGameplayCueNotifyClasses)(UGameplayCueManager_* obj_p0, TY__Oycn0Wv4Wvu5QjPDMJ4iYA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__yFf9bt3gETA9bmErFkGcaITA*, gameplayCueClassesForPreallocation)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueClassesForPreallocation)(UGameplayCueManager_* obj_p0, TY__yFf9bt3gETA9bmErFkGcaITA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__3EayRS3K5H6lKVUDWcwkUA*, pendingExecuteCues)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpendingExecuteCues)(UGameplayCueManager_* obj_p0, TY__3EayRS3K5H6lKVUDWcwkUA val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, gameplayCueSendContextCount)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueSendContextCount)(UGameplayCueManager_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__uqV1eG9a5U54FsunlxDWftQ*, preallocationInfoList_Internal)(UGameplayCueManager_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpreallocationInfoList_Internal)(UGameplayCueManager_* obj_p0, TY__uqV1eG9a5U54FsunlxDWftQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDestroyOnRemove)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDestroyOnRemove)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, autoDestroyDelay)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoDestroyDelay)(AGameplayCueNotify_Actor_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, warnIfTimelineIsStillRunning)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwarnIfTimelineIsStillRunning)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, warnIfLatentActionIsStillRunning)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwarnIfLatentActionIsStillRunning)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, gameplayCueTag)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueTag)(AGameplayCueNotify_Actor_* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayCueName)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueName)(AGameplayCueNotify_Actor_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoAttachToOwner)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoAttachToOwner)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverride)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisOverride)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUniqueInstancePerInstigator)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUniqueInstancePerInstigator)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUniqueInstancePerSourceObject)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUniqueInstancePerSourceObject)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowMultipleOnActiveEvents)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowMultipleOnActiveEvents)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowMultipleWhileActiveEvents)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowMultipleWhileActiveEvents)(AGameplayCueNotify_Actor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numPreallocatedInstances)(AGameplayCueNotify_Actor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumPreallocatedInstances)(AGameplayCueNotify_Actor_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, whileActive_)(AGameplayCueNotify_Actor_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onRemove_)(AGameplayCueNotify_Actor_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, onOwnerDestroyed_)(AGameplayCueNotify_Actor_* self_p0, AActor* destroyedActor_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onExecute_)(AGameplayCueNotify_Actor_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onActive_)(AGameplayCueNotify_Actor_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, handleGameplayCue_)(AGameplayCueNotify_Actor_* self_p0, AActor* myTarget_p1, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType_p2, FGameplayCueParameters& parameters_p3);
N_LIB_PRIVATE N_NIMCALL(void, endGameplayCue_)(AGameplayCueNotify_Actor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, gameplayCueTag)(UGameplayCueNotify_Static_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueTag)(UGameplayCueNotify_Static_* obj_p0, FGameplayTag val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayCueName)(UGameplayCueNotify_Static_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueName)(UGameplayCueNotify_Static_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverride)(UGameplayCueNotify_Static_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisOverride)(UGameplayCueNotify_Static_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, whileActive_)(UGameplayCueNotify_Static_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onRemove_)(UGameplayCueNotify_Static_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onExecute_)(UGameplayCueNotify_Static_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onActive_)(UGameplayCueNotify_Static_* self_p0, AActor* myTarget_p1, FGameplayCueParameters& parameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, handleGameplayCue_)(UGameplayCueNotify_Static_* self_p0, AActor* myTarget_p1, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType_p2, FGameplayCueParameters& parameters_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(UGameplayCueNotify_Burst_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(UGameplayCueNotify_Burst_* obj_p0, FGameplayCueNotify_SpawnCondition_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(UGameplayCueNotify_Burst_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(UGameplayCueNotify_Burst_* obj_p0, FGameplayCueNotify_PlacementInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, burstEffects)(UGameplayCueNotify_Burst_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setburstEffects)(UGameplayCueNotify_Burst_* obj_p0, FGameplayCueNotify_BurstEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onBurst_)(UGameplayCueNotify_Burst_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(AGameplayCueNotify_BurstLatent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(AGameplayCueNotify_BurstLatent_* obj_p0, FGameplayCueNotify_SpawnCondition_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(AGameplayCueNotify_BurstLatent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(AGameplayCueNotify_BurstLatent_* obj_p0, FGameplayCueNotify_PlacementInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, burstEffects)(AGameplayCueNotify_BurstLatent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setburstEffects)(AGameplayCueNotify_BurstLatent_* obj_p0, FGameplayCueNotify_BurstEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, burstSpawnResults)(AGameplayCueNotify_BurstLatent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setburstSpawnResults)(AGameplayCueNotify_BurstLatent_* obj_p0, FGameplayCueNotify_SpawnResult_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onBurst_)(AGameplayCueNotify_BurstLatent_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, particleSystem)(UGameplayCueNotify_HitImpact_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparticleSystem)(UGameplayCueNotify_HitImpact_* obj_p0, UParticleSystem* val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_SpawnCondition_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_PlacementInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, applicationEffects)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationEffects)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_BurstEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, applicationSpawnResults)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationSpawnResults)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_SpawnResult_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_LoopingEffects_*, loopingEffects)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setloopingEffects)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_LoopingEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, loopingSpawnResults)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setloopingSpawnResults)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_SpawnResult_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, recurringEffects)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrecurringEffects)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_BurstEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, recurringSpawnResults)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrecurringSpawnResults)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_SpawnResult_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, removalEffects)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremovalEffects)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_BurstEffects_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, removalSpawnResults)(AGameplayCueNotify_Looping_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremovalSpawnResults)(AGameplayCueNotify_Looping_* obj_p0, FGameplayCueNotify_SpawnResult_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onRemoval_)(AGameplayCueNotify_Looping_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(void, onRecurring_)(AGameplayCueNotify_Looping_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(void, onLoopingStart_)(AGameplayCueNotify_Looping_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(void, onApplication_)(AGameplayCueNotify_Looping_* self_p0, AActor* target_p1, FGameplayCueParameters& parameters_p2, FGameplayCueNotify_SpawnResult_& spawnResults_p3);
N_LIB_PRIVATE N_NIMCALL(TY__iipK89cMQmmOQ9bmmnPnwHwQ*, gameplayCueData)(UGameplayCueSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueData)(UGameplayCueSet_* obj_p0, TY__iipK89cMQmmOQ9bmmnPnwHwQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg, durationPolicy)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdurationPolicy)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectModifierMagnitude*, durationMagnitude)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdurationMagnitude)(UGameplayEffect* obj_p0, FGameplayEffectModifierMagnitude val_p1);
N_LIB_PRIVATE N_NIMCALL(FScalableFloat*, period)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setperiod)(UGameplayEffect* obj_p0, FScalableFloat val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExecutePeriodicEffectOnApplication)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbExecutePeriodicEffectOnApplication)(UGameplayEffect* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg, periodicInhibitionPolicy)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setperiodicInhibitionPolicy)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__SMXWF8IaQIMjnWJWW9aw9bWg*, modifiers)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmodifiers)(UGameplayEffect* obj_p0, TY__SMXWF8IaQIMjnWJWW9aw9bWg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__u78TYFr18r345jyU1USShA*, executions)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexecutions)(UGameplayEffect* obj_p0, TY__u78TYFr18r345jyU1USShA val_p1);
N_LIB_PRIVATE N_NIMCALL(FScalableFloat*, chanceToApplyToTarget)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchanceToApplyToTarget)(UGameplayEffect* obj_p0, FScalableFloat val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__JhMKUoilyazmRBfr9c6i9aAA*, applicationRequirements)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationRequirements)(UGameplayEffect* obj_p0, TY__JhMKUoilyazmRBfr9c6i9aAA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__iyRh6NGfBn32Zv3ywMk9bgw*, conditionalGameplayEffects)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconditionalGameplayEffects)(UGameplayEffect* obj_p0, TY__iyRh6NGfBn32Zv3ywMk9bgw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, overflowEffects)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowEffects)(UGameplayEffect* obj_p0, TY__YWxhJKhKplqKD9bzBoR0fzQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDenyOverflowApplication)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDenyOverflowApplication)(UGameplayEffect* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClearStackOnOverflow)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbClearStackOnOverflow)(UGameplayEffect* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, prematureExpirationEffectClasses)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprematureExpirationEffectClasses)(UGameplayEffect* obj_p0, TY__YWxhJKhKplqKD9bzBoR0fzQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, routineExpirationEffectClasses)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setroutineExpirationEffectClasses)(UGameplayEffect* obj_p0, TY__YWxhJKhKplqKD9bzBoR0fzQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequireModifierSuccessToTriggerCues)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRequireModifierSuccessToTriggerCues)(UGameplayEffect* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressStackingCues)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressStackingCues)(UGameplayEffect* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__UjE9b8CGGMCLhKCOumAta4Q*, gameplayCues)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCues)(UGameplayEffect* obj_p0, TY__UjE9b8CGGMCLhKCOumAta4Q val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffectUIData_*, uIData)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuIData)(UGameplayEffect* obj_p0, UGameplayEffectUIData_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer*, inheritableGameplayEffectTags)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableGameplayEffectTags)(UGameplayEffect* obj_p0, FInheritedTagContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer*, inheritableOwnedTagsContainer)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableOwnedTagsContainer)(UGameplayEffect* obj_p0, FInheritedTagContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer*, inheritableBlockedAbilityTagsContainer)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableBlockedAbilityTagsContainer)(UGameplayEffect* obj_p0, FInheritedTagContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, ongoingTagRequirements)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setongoingTagRequirements)(UGameplayEffect* obj_p0, FGameplayTagRequirements val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, applicationTagRequirements)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationTagRequirements)(UGameplayEffect* obj_p0, FGameplayTagRequirements val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, removalTagRequirements)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremovalTagRequirements)(UGameplayEffect* obj_p0, FGameplayTagRequirements val_p1);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer*, removeGameplayEffectsWithTags)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremoveGameplayEffectsWithTags)(UGameplayEffect* obj_p0, FInheritedTagContainer val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, grantedApplicationImmunityTags)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedApplicationImmunityTags)(UGameplayEffect* obj_p0, FGameplayTagRequirements val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectQuery*, grantedApplicationImmunityQuery)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedApplicationImmunityQuery)(UGameplayEffect* obj_p0, FGameplayEffectQuery val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectQuery*, removeGameplayEffectQuery)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremoveGameplayEffectQuery)(UGameplayEffect* obj_p0, FGameplayEffectQuery val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ, stackingType)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackingType)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, stackLimitCount)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackLimitCount)(UGameplayEffect* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A, stackDurationRefreshPolicy)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackDurationRefreshPolicy)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw, stackPeriodResetPolicy)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackPeriodResetPolicy)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA, stackExpirationPolicy)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstackExpirationPolicy)(UGameplayEffect* obj_p0, tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Nfbibg9az9bLDonNBrt4vy4g*, grantedAbilities)(UGameplayEffect* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedAbilities)(UGameplayEffect* obj_p0, TY__Nfbibg9az9bLDonNBrt4vy4g val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__7dBu6g16YDeBHjA4ZfidNQ*, relevantAttributesToCapture)(UGameplayEffectCalculation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelevantAttributesToCapture)(UGameplayEffectCalculation_* obj_p0, TY__7dBu6g16YDeBHjA4ZfidNQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canApplyGameplayEffect_)(UGameplayEffectCustomApplicationRequirement_* self_p0, UGameplayEffect* gameplayEffect_p1, FGameplayEffectSpec& spec_p2, UAbilitySystemComponent* aSC_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequiresPassedInTags)(UGameplayEffectExecutionCalculation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRequiresPassedInTags)(UGameplayEffectExecutionCalculation_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__7dBu6g16YDeBHjA4ZfidNQ*, invalidScopedModifierAttributes)(UGameplayEffectExecutionCalculation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidScopedModifierAttributes)(UGameplayEffectExecutionCalculation_* obj_p0, TY__7dBu6g16YDeBHjA4ZfidNQ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, execute_)(UGameplayEffectExecutionCalculation_* self_p0, FGameplayEffectCustomExecutionParameters_& executionParams_p1, FGameplayEffectCustomExecutionOutput_& outExecutionOutput_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowNonNetAuthorityDependencyRegistration)(UGameplayModMagnitudeCalculation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowNonNetAuthorityDependencyRegistration)(UGameplayModMagnitudeCalculation_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getSetByCallerMagnitudeByTag_)(UGameplayModMagnitudeCalculation_* self_p0, FGameplayEffectSpec& effectSpec_p1, FGameplayTag& tag_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getSetByCallerMagnitudeByName_)(UGameplayModMagnitudeCalculation_* self_p0, FGameplayEffectSpec& effectSpec_p1, FName& magnitudeName_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, calculateBaseMagnitude_)(UGameplayModMagnitudeCalculation_* self_p0, FGameplayEffectSpec& spec_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9anH0Dz9c0Cr10xgCVjcFJzw*, entries)(UGameplayTagReponseTable_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentries)(UGameplayTagReponseTable_* obj_p0, TY__9anH0Dz9c0Cr10xgCVjcFJzw val_p1);
N_LIB_PRIVATE N_NIMCALL(void, tagResponseEvent_)(UGameplayTagReponseTable_* self_p0, FGameplayTag tag_p1, NI32 newCount_p2, UAbilitySystemComponent* aSC_p3, NI32 idx_p4);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimTemplate)(void);
N_LIB_PRIVATE N_NIMCALL(FGameplayAttributeData*, healthCpp)(UCppAttributeSet_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethealthCpp)(UCppAttributeSet_* obj_p0, FGameplayAttributeData val_p1);
N_LIB_PRIVATE N_NIMCALL(UDelayOneFrame_*, waitForOneFrame_)(UObject* worldContextObject_p0, NF32 someInputVariables_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGAnimation)(void);
N_LIB_PRIVATE N_NIMCALL(void, setUserTag_)(UUMGSequencePlayer_* self_p0, FName inUserTag_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getUserTag_)(UUMGSequencePlayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getStartTime_)(UWidgetAnimation_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getEndTime_)(UWidgetAnimation_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGEnums)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSlate)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGComponents)(void);
N_LIB_PRIVATE N_NIMCALL(UPanelSlot_*, slot)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setslot)(UWidget_* obj_p0, UPanelSlot_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, toolTipText)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settoolTipText)(UWidget_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, renderTransformPivot)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrenderTransformPivot)(UWidget_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw, flowDirectionPreference)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setflowDirectionPreference)(UWidget_* obj_p0, tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsEnabled)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsEnabled)(UWidget_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsVolatile)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsVolatile)(UWidget_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, cursor)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcursor)(UWidget_* obj_p0, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw, clipping)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclipping)(UWidget_* obj_p0, tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, renderOpacity)(UWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOpacity)(UWidget_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUserFocus_)(UWidget_* self_p0, APlayerController* playerController_p1);
N_LIB_PRIVATE N_NIMCALL(void, setToolTipText_)(UWidget_* self_p0, FText& inToolTipText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTranslation_)(UWidget_* self_p0, FVector2D translation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTransformPivot_)(UWidget_* self_p0, FVector2D pivot_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTransformAngle_)(UWidget_* self_p0, NF32 angle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderShear_)(UWidget_* self_p0, FVector2D shear_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderScale_)(UWidget_* self_p0, FVector2D scale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderOpacity_)(UWidget_* self_p0, NF32 inOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationRuleBase_)(UWidget_* self_p0, tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ direction_p1, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule_p2);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationRule_)(UWidget_* self_p0, tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ direction_p1, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule_p2, FName widgetToFocus_p3);
N_LIB_PRIVATE N_NIMCALL(void, setKeyboardFocus_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setIsEnabled_)(UWidget_* self_p0, NIM_BOOL bInIsEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFocus_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setCursor_)(UWidget_* self_p0, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g inCursor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setClipping_)(UWidget_* self_p0, tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw inClipping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllNavigationRules_)(UWidget_* self_p0, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule_p1, FName widgetToFocus_p2);
N_LIB_PRIVATE N_NIMCALL(void, resetCursor_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeFromParent_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRendered_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInViewport_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHovered_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, invalidateLayoutAndVolatility_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUserFocusedDescendants_)(UWidget_* self_p0, APlayerController* playerController_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUserFocus_)(UWidget_* self_p0, APlayerController* playerController_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMouseCaptureByUser_)(UWidget_* self_p0, NI32 userIndex_p1, NI32 pointerIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMouseCapture_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasKeyboardFocus_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasFocusedDescendants_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyUserFocus_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getTickSpaceGeometry_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getRenderTransformAngle_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getRenderOpacity_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UPanelWidget_*, getParent_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getPaintSpaceGeometry_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayer_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsEnabled_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UGameInstance*, getGameInstance_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getDesiredSize_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw, getClipping_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getCachedGeometry_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getAccessibleText_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getAccessibleSummaryText_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, forceVolatile_)(UWidget_* self_p0, NIM_BOOL bForce_p1);
N_LIB_PRIVATE N_NIMCALL(void, forceLayoutPrepass_)(UWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWindowVisibility_)(UWidgetComponent_* self_p0, tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw inVisibility_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWindowFocusable_)(UWidgetComponent_* self_p0, NIM_BOOL bInWindowFocusable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWidgetSpace_)(UWidgetComponent_* self_p0, tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw newSpace_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTwoSided_)(UWidgetComponent_* self_p0, NIM_BOOL bWantTwoSided_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTintColorAndOpacity_)(UWidgetComponent_* self_p0, FLinearColor newTintColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTickWhenOffscreen_)(UWidgetComponent_* self_p0, NIM_BOOL bWantTickWhenOffscreen_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTickMode_)(UWidgetComponent_* self_p0, tyEnum_ETickMode__rpxnv5vHIZR9bdO1o6wQZXw inTickMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRedrawTime_)(UWidgetComponent_* self_p0, NF32 inRedrawTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPivot_)(UWidgetComponent_* self_p0, FVector2D& inPivot_p1);
N_LIB_PRIVATE N_NIMCALL(void, setManuallyRedraw_)(UWidgetComponent_* self_p0, NIM_BOOL bUseManualRedraw_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGeometryMode_)(UWidgetComponent_* self_p0, tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog inGeometryMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDrawSize_)(UWidgetComponent_* self_p0, FVector2D size_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDrawAtDesiredSize_)(UWidgetComponent_* self_p0, NIM_BOOL bInDrawAtDesiredSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCylinderArcAngle_)(UWidgetComponent_* self_p0, NF32 inCylinderArcAngle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBackgroundColor_)(UWidgetComponent_* self_p0, FLinearColor newBackgroundColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, requestRenderUpdate_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, requestRedraw_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWidgetVisible_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw, getWindowVisiblility_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getWindowFocusable_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw, getWidgetSpace_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTwoSided_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTickWhenOffscreen_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, getRenderTarget_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getRedrawTime_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getPivot_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getMaterialInstance_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getManuallyRedraw_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog, getGeometryMode_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getDrawSize_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDrawAtDesiredSize_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCylinderArcAngle_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getCurrentDrawSize_)(UWidgetComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, wheelScrollMultiplier)(UListViewBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwheelScrollMultiplier)(UListViewBase_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableScrollAnimation)(UListViewBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableScrollAnimation)(UListViewBase_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowDragging)(UListViewBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowDragging)(UListViewBase_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWheelScrollMultiplier_)(UListViewBase_* self_p0, NF32 newWheelScrollMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScrollOffset_)(UListViewBase_* self_p0, NF32 inScrollOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, scrollToTop_)(UListViewBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, scrollToBottom_)(UListViewBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, requestRefresh_)(UListViewBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, regenerateAllEntries_)(UListViewBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffset_)(UListViewBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTableViewStyle*, widgetStyle)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UListView_* obj_p0, FTableViewStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UListView_* obj_p0, FScrollBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UListView_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A, selectionMode)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectionMode)(UListView_* obj_p0, tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg, consumeMouseWheel)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconsumeMouseWheel)(UListView_* obj_p0, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClearSelectionOnClick)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbClearSelectionOnClick)(UListView_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UListView_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, entrySpacing)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentrySpacing)(UListView_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReturnFocusToSelection)(UListView_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReturnFocusToSelection)(UListView_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectionMode_)(UListView_* self_p0, tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A selectionMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedIndex_)(UListView_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(void, scrollIndexIntoView_)(UListView_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeItem_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(void, navigateToIndex_)(UListView_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRefreshPending_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumItems_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA, getListItems_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getItemAt_)(UListView_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getIndexForItem_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearListItems_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedItem_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(void, setListItems_)(UListView_* self_p0, TY__meGclu4l9cwnqbgiIjRtfhA& inListItems_p1);
N_LIB_PRIVATE N_NIMCALL(void, setItemSelection_)(UListView_* self_p0, UObject* item_p1, NIM_BOOL bSelected_p2);
N_LIB_PRIVATE N_NIMCALL(void, scrollItemIntoView_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(void, navigateToItem_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isItemVisible_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getSelectedItems_)(UListView_* self_p0, TY__meGclu4l9cwnqbgiIjRtfhA& items_p1);
N_LIB_PRIVATE N_NIMCALL(UObject*, getSelectedItem_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumItemsSelected_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelScrollIntoView_)(UListView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addItem_)(UListView_* self_p0, UObject* item_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeChildAt_)(UPanelWidget_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyChildren_)(UPanelWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getChildrenCount_)(UPanelWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearChildren_)(UPanelWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBackgroundBlur_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBackgroundBlur_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBackgroundBlur_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyAlphaToBlur)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyAlphaToBlur)(UBackgroundBlur_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, blurStrength)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblurStrength)(UBackgroundBlur_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, blurRadius)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblurRadius)(UBackgroundBlur_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4*, cornerRadius)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcornerRadius)(UBackgroundBlur_* obj_p0, FVector4 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, lowQualityFallbackBrush)(UBackgroundBlur_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlowQualityFallbackBrush)(UBackgroundBlur_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBackgroundBlur_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBackgroundBlur_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLowQualityFallbackBrush_)(UBackgroundBlur_* self_p0, FSlateBrush& inBrush_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBackgroundBlur_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCornerRadius_)(UBackgroundBlur_* self_p0, FVector4 inCornerRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBlurStrength_)(UBackgroundBlur_* self_p0, NF32 inStrength_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBlurRadius_)(UBackgroundBlur_* self_p0, NI32 inBlurRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setApplyAlphaToBlur_)(UBackgroundBlur_* self_p0, NIM_BOOL bInApplyAlphaToBlur_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBackgroundBlurSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBackgroundBlurSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBackgroundBlurSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBackgroundBlurSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBackgroundBlurSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBackgroundBlurSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBackgroundBlurSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBackgroundBlurSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBackgroundBlurSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBorder_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBorder_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowEffectWhenDisabled)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowEffectWhenDisabled)(UBorder_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, contentColorAndOpacity)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontentColorAndOpacity)(UBorder_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBorder_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, background)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbackground)(UBorder_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, brushColor)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrushColor)(UBorder_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, desiredSizeScale)(UBorder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdesiredSizeScale)(UBorder_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBorder_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShowEffectWhenDisabled_)(UBorder_* self_p0, NIM_BOOL bInShowEffectWhenDisabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBorder_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBorder_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeScale_)(UBorder_* self_p0, FVector2D inScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setContentColorAndOpacity_)(UBorder_* self_p0, FLinearColor inContentColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTexture_)(UBorder_* self_p0, UTexture2D* texture_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromMaterial_)(UBorder_* self_p0, UMaterialInterface* material_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAsset_)(UBorder_* self_p0, USlateBrushAsset_* asset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushColor_)(UBorder_* self_p0, FLinearColor inBrushColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrush_)(UBorder_* self_p0, FSlateBrush& inBrush_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(UBorder_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBorderSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBorderSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBorderSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBorderSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBorderSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBorderSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBorderSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBorderSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBorderSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, widgetStyle)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UButton_* obj_p0, FButtonStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UButton_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, backgroundColor)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbackgroundColor)(UButton_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw, clickMethod)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclickMethod)(UButton_* obj_p0, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA, touchMethod)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settouchMethod)(UButton_* obj_p0, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg, pressMethod)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpressMethod)(UButton_* obj_p0, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(UButton_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(UButton_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTouchMethod_)(UButton_* self_p0, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA inTouchMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStyle_)(UButton_* self_p0, FButtonStyle& inStyle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPressMethod_)(UButton_* self_p0, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg inPressMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UButton_* self_p0, FLinearColor inColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setClickMethod_)(UButton_* self_p0, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw inClickMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBackgroundColor_)(UButton_* self_p0, FLinearColor inBackgroundColor_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPressed_)(UButton_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UButtonSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UButtonSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UButtonSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UButtonSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UButtonSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UButtonSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UButtonSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UButtonSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UButtonSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FAnchorData_*, layoutData)(UCanvasPanelSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlayoutData)(UCanvasPanelSlot_* obj_p0, FAnchorData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoSize)(UCanvasPanelSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoSize)(UCanvasPanelSlot_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, zOrder)(UCanvasPanelSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setzOrder)(UCanvasPanelSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setZOrder_)(UCanvasPanelSlot_* self_p0, NI32 inZOrder_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UCanvasPanelSlot_* self_p0, FVector2D inSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(UCanvasPanelSlot_* self_p0, FVector2D inPosition_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOffsets_)(UCanvasPanelSlot_* self_p0, FMargin inOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLayout_)(UCanvasPanelSlot_* self_p0, FAnchorData_& inLayoutData_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAutoSize_)(UCanvasPanelSlot_* self_p0, NIM_BOOL inbAutoSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnchors_)(UCanvasPanelSlot_* self_p0, FAnchors_ inAnchors_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAlignment_)(UCanvasPanelSlot_* self_p0, FVector2D inAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getZOrder_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getSize_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getPosition_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin, getOffsets_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FAnchorData_, getLayout_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAutoSize_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FAnchors_, getAnchors_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAlignment_)(UCanvasPanelSlot_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg, checkedState)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcheckedState)(UCheckBox_* obj_p0, tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg val_p1);
N_LIB_PRIVATE N_NIMCALL(FCheckBoxStyle*, widgetStyle)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UCheckBox_* obj_p0, FCheckBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UCheckBox_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw, clickMethod)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclickMethod)(UCheckBox_* obj_p0, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA, touchMethod)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settouchMethod)(UCheckBox_* obj_p0, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg, pressMethod)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpressMethod)(UCheckBox_* obj_p0, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(UCheckBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(UCheckBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTouchMethod_)(UCheckBox_* self_p0, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA inTouchMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPressMethod_)(UCheckBox_* self_p0, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg inPressMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsChecked_)(UCheckBox_* self_p0, NIM_BOOL inIsChecked_p1);
N_LIB_PRIVATE N_NIMCALL(void, setClickMethod_)(UCheckBox_* self_p0, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw inClickMethod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCheckedState_)(UCheckBox_* self_p0, tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg inCheckedState_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPressed_)(UCheckBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isChecked_)(UCheckBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg, getCheckedState_)(UCheckBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfPieces)(UCircularThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfPieces)(UCircularThrobber_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, period)(UCircularThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setperiod)(UCircularThrobber_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UCircularThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UCircularThrobber_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, image)(UCircularThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setimage)(UCircularThrobber_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UCircularThrobber_* self_p0, NF32 inRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPeriod_)(UCircularThrobber_* self_p0, NF32 inPeriod_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfPieces_)(UCircularThrobber_* self_p0, NI32 inNumberOfPieces_p1);
N_LIB_PRIVATE N_NIMCALL(FComboBoxStyle*, widgetStyle)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UComboBoxKey_* obj_p0, FComboBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FTableRowStyle*, itemStyle)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setitemStyle)(UComboBoxKey_* obj_p0, FTableRowStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UComboBoxKey_* obj_p0, FScrollBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UComboBoxKey_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, contentPadding)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontentPadding)(UComboBoxKey_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxListHeight)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxListHeight)(UComboBoxKey_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHasDownArrow)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHasDownArrow)(UComboBoxKey_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableGamepadNavigationMode)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableGamepadNavigationMode)(UComboBoxKey_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UComboBoxKey_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UComboBoxKey_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedOption_)(UComboBoxKey_* self_p0, FName option_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeOption_)(UComboBoxKey_* self_p0, FName option_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UComboBoxKey_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getSelectedOption_)(UComboBoxKey_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UComboBoxKey_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearOptions_)(UComboBoxKey_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addOption_)(UComboBoxKey_* self_p0, FName option_p1);
N_LIB_PRIVATE N_NIMCALL(FComboBoxStyle*, widgetStyle)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UComboBoxString_* obj_p0, FComboBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FTableRowStyle*, itemStyle)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setitemStyle)(UComboBoxString_* obj_p0, FTableRowStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UComboBoxString_* obj_p0, FScrollBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, contentPadding)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontentPadding)(UComboBoxString_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxListHeight)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxListHeight)(UComboBoxString_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasDownArrow)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethasDownArrow)(UComboBoxString_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, enableGamepadNavigationMode)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenableGamepadNavigationMode)(UComboBoxString_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UComboBoxString_* obj_p0, FSlateFontInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UComboBoxString_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UComboBoxString_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UComboBoxString_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedOption_)(UComboBoxString_* self_p0, FString option_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedIndex_)(UComboBoxString_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeOption_)(UComboBoxString_* self_p0, FString option_p1);
N_LIB_PRIVATE N_NIMCALL(void, refreshOptions_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getSelectedOption_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getSelectedIndex_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getOptionCount_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FString, getOptionAtIndex_)(UComboBoxString_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, findOptionIndex_)(UComboBoxString_* self_p0, FString option_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearOptions_)(UComboBoxString_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addOption_)(UComboBoxString_* self_p0, FString option_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, entrySpacing)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentrySpacing)(UDynamicEntryBoxBase_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__fBi9aXEAuMMk9cMD1hVzuHSg*, spacingPattern)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspacingPattern)(UDynamicEntryBoxBase_* obj_p0, TY__fBi9aXEAuMMk9cMD1hVzuHSg val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A, entryBoxType)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentryBoxType)(UDynamicEntryBoxBase_* obj_p0, tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, entrySizeRule)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentrySizeRule)(UDynamicEntryBoxBase_* obj_p0, FSlateChildSize_ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, entryHorizontalAlignment)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentryHorizontalAlignment)(UDynamicEntryBoxBase_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, entryVerticalAlignment)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setentryVerticalAlignment)(UDynamicEntryBoxBase_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxElementSize)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxElementSize)(UDynamicEntryBoxBase_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FRadialBoxSettings_*, radialBoxSettings)(UDynamicEntryBoxBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradialBoxSettings)(UDynamicEntryBoxBase_* obj_p0, FRadialBoxSettings_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRadialSettings_)(UDynamicEntryBoxBase_* self_p0, FRadialBoxSettings_& inSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEntrySpacing_)(UDynamicEntryBoxBase_* self_p0, FVector2D& inEntrySpacing_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumEntries_)(UDynamicEntryBoxBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, reset_)(UDynamicEntryBox_* self_p0, NIM_BOOL bDeleteWidgets_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UEditableText_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UEditableText_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FEditableTextStyle*, widgetStyle)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UEditableText_* obj_p0, FEditableTextStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReadOnly)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisReadOnly)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPassword)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisPassword)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumDesiredWidth)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimumDesiredWidth)(UEditableText_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCaretMovedWhenGainFocus)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisCaretMovedWhenGainFocus)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(UEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UEditableText_* obj_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, overflowPolicy)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowPolicy)(UEditableText_* obj_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UEditableText_* obj_p0, FShapedTextOptions_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UEditableText_* self_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UEditableText_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumDesiredWidth_)(UEditableText_* self_p0, NF32 inMinDesiredWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UEditableText_* self_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UEditableText_* self_p0, NIM_BOOL inbIsReadyOnly_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsPassword_)(UEditableText_* self_p0, NIM_BOOL inbIsPassword_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UEditableText_* self_p0, FText inHintText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UEditableText_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UEditableText_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UEditableText_* self_p0, FSlateFontInfo_ inFontInfo_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, getJustification_)(UEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_, getFont_)(UEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UEditableTextBox_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FEditableTextBoxStyle*, widgetStyle)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UEditableTextBox_* obj_p0, FEditableTextBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UEditableTextBox_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReadOnly)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisReadOnly)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPassword)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisPassword)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumDesiredWidth)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimumDesiredWidth)(UEditableTextBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCaretMovedWhenGainFocus)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisCaretMovedWhenGainFocus)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(UEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UEditableTextBox_* obj_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, overflowPolicy)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowPolicy)(UEditableTextBox_* obj_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UEditableTextBox_* obj_p0, FShapedTextOptions_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UEditableTextBox_* self_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UEditableTextBox_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UEditableTextBox_* self_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UEditableTextBox_* self_p0, NIM_BOOL bReadOnly_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsPassword_)(UEditableTextBox_* self_p0, NIM_BOOL bIsPassword_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UEditableTextBox_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UEditableTextBox_* self_p0, FLinearColor color_p1);
N_LIB_PRIVATE N_NIMCALL(void, setError_)(UEditableTextBox_* self_p0, FText inError_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasError_)(UEditableTextBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UEditableTextBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearError_)(UEditableTextBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, borderBrush)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setborderBrush)(UExpandableArea_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, borderColor)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setborderColor)(UExpandableArea_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsExpanded)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsExpanded)(UExpandableArea_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxHeight)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxHeight)(UExpandableArea_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, headerPadding)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheaderPadding)(UExpandableArea_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, areaPadding)(UExpandableArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setareaPadding)(UExpandableArea_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsExpanded_Animated_)(UExpandableArea_* self_p0, NIM_BOOL isExpanded_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsExpanded_)(UExpandableArea_* self_p0, NIM_BOOL isExpanded_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsExpanded_)(UExpandableArea_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__LZaQ4h2l9bWQPMMIHjA9cwlA*, columnFill)(UGridPanel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolumnFill)(UGridPanel_* obj_p0, TY__LZaQ4h2l9bWQPMMIHjA9cwlA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__LZaQ4h2l9bWQPMMIHjA9cwlA*, rowFill)(UGridPanel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrowFill)(UGridPanel_* obj_p0, TY__LZaQ4h2l9bWQPMMIHjA9cwlA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRowFill_)(UGridPanel_* self_p0, NI32 rowIndex_p1, NF32 coefficient_p2);
N_LIB_PRIVATE N_NIMCALL(void, setColumnFill_)(UGridPanel_* self_p0, NI32 columnIndex_p1, NF32 coefficient_p2);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UGridSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UGridSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UGridSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, row)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrow)(UGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, rowSpan)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrowSpan)(UGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, column)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolumn)(UGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, columnSpan)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolumnSpan)(UGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, layer)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlayer)(UGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, nudge)(UGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnudge)(UGridSlot_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UGridSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRowSpan_)(UGridSlot_* self_p0, NI32 inRowSpan_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRow_)(UGridSlot_* self_p0, NI32 inRow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UGridSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNudge_)(UGridSlot_* self_p0, FVector2D inNudge_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLayer_)(UGridSlot_* self_p0, NI32 inLayer_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UGridSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColumnSpan_)(UGridSlot_* self_p0, NI32 inColumnSpan_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(UGridSlot_* self_p0, NI32 inColumn_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UHorizontalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UHorizontalBoxSlot_* obj_p0, FSlateChildSize_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UHorizontalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UHorizontalBoxSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UHorizontalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UHorizontalBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UHorizontalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UHorizontalBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UHorizontalBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UHorizontalBoxSlot_* self_p0, FSlateChildSize_ inSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UHorizontalBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UHorizontalBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, brush)(UImage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrush)(UImage_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UImage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UImage_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFlipForRightToLeftFlowDirection)(UImage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFlipForRightToLeftFlowDirection)(UImage_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOpacity_)(UImage_* self_p0, NF32 inOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeOverride_)(UImage_* self_p0, FVector2D desiredSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UImage_* self_p0, FLinearColor inColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushTintColor_)(UImage_* self_p0, FSlateColor tintColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceObject_)(UImage_* self_p0, UObject* resourceObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTextureDynamic_)(UImage_* self_p0, UTexture2DDynamic_* texture_p1, NIM_BOOL bMatchSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTexture_)(UImage_* self_p0, UTexture2D* texture_p1, NIM_BOOL bMatchSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromSoftTexture_)(UImage_* self_p0, TY__mOiS9a9b9aowIwwaaQjcI1LkQ softTexture_p1, NIM_BOOL bMatchSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromSoftMaterial_)(UImage_* self_p0, TY__s6S1etbTGDD5NQkdAHEaiA softMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromMaterial_)(UImage_* self_p0, UMaterialInterface* material_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAtlasInterface_)(UImage_* self_p0, TY__ChHEiSofKQOcZRnlxAau9bg atlasRegion_p1, NIM_BOOL bMatchSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAsset_)(UImage_* self_p0, USlateBrushAsset_* asset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrush_)(UImage_* self_p0, FSlateBrush& inBrush_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(UImage_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, widgetStyle)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UInputKeySelector_* obj_p0, FButtonStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, textStyle)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextStyle)(UInputKeySelector_* obj_p0, FTextBlockStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FInputChord*, selectedKey)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectedKey)(UInputKeySelector_* obj_p0, FInputChord val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, margin)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmargin)(UInputKeySelector_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, keySelectionText)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setkeySelectionText)(UInputKeySelector_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, noKeySpecifiedText)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnoKeySpecifiedText)(UInputKeySelector_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowModifierKeys)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowModifierKeys)(UInputKeySelector_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowGamepadKeys)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowGamepadKeys)(UInputKeySelector_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA*, escapeKeys)(UInputKeySelector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setescapeKeys)(UInputKeySelector_* obj_p0, TY__HqMsNoaajlV9ahHT79bz6bBA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedKey_)(UInputKeySelector_* self_p0, FInputChord& inSelectedKey_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNoKeySpecifiedText_)(UInputKeySelector_* self_p0, FText inNoKeySpecifiedText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setKeySelectionText_)(UInputKeySelector_* self_p0, FText inKeySelectionText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEscapeKeys_)(UInputKeySelector_* self_p0, TY__HqMsNoaajlV9ahHT79bz6bBA& inKeys_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllowModifierKeys_)(UInputKeySelector_* self_p0, NIM_BOOL bInAllowModifierKeys_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllowGamepadKeys_)(UInputKeySelector_* self_p0, NIM_BOOL bInAllowGamepadKeys_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsSelectingKey_)(UInputKeySelector_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanCache)(UInvalidationBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanCache)(UInvalidationBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCanCache_)(UInvalidationBox_* self_p0, NIM_BOOL canCache_p1);
N_LIB_PRIVATE N_NIMCALL(void, invalidateCache_)(UInvalidationBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCanCache_)(UInvalidationBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA, placement)(UMenuAnchor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplacement)(UMenuAnchor_* obj_p0, tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFitInWindow)(UMenuAnchor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFitInWindow)(UMenuAnchor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldDeferPaintingAfterWindowContent)(UMenuAnchor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshouldDeferPaintingAfterWindowContent)(UMenuAnchor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, useApplicationMenuStack)(UMenuAnchor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuseApplicationMenuStack)(UMenuAnchor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleOpen_)(UMenuAnchor_* self_p0, NIM_BOOL bFocusOnOpen_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldOpenDueToClick_)(UMenuAnchor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setPlacement_)(UMenuAnchor_* self_p0, tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA inPlacement_p1);
N_LIB_PRIVATE N_NIMCALL(void, open_)(UMenuAnchor_* self_p0, NIM_BOOL bFocusMenu_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UMenuAnchor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasOpenSubMenus_)(UMenuAnchor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMenuPosition_)(UMenuAnchor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, fitInWindow_)(UMenuAnchor_* self_p0, NIM_BOOL bFit_p1);
N_LIB_PRIVATE N_NIMCALL(void, close_)(UMenuAnchor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UTextLayoutWidget_* obj_p0, FShapedTextOptions_ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UTextLayoutWidget_* obj_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww, wrappingPolicy)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwrappingPolicy)(UTextLayoutWidget_* obj_p0, tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, autoWrapText)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoWrapText)(UTextLayoutWidget_* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, wrapTextAt)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwrapTextAt)(UTextLayoutWidget_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, margin)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmargin)(UTextLayoutWidget_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lineHeightPercentage)(UTextLayoutWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlineHeightPercentage)(UTextLayoutWidget_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UTextLayoutWidget_* self_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UMultiLineEditableText_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UMultiLineEditableText_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, widgetStyle)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UMultiLineEditableText_* obj_p0, FTextBlockStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsReadOnly)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsReadOnly)(UMultiLineEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UMultiLineEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UMultiLineEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UMultiLineEditableText_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UMultiLineEditableText_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWidgetStyle_)(UMultiLineEditableText_* self_p0, FTextBlockStyle& inWidgetStyle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UMultiLineEditableText_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UMultiLineEditableText_* self_p0, NIM_BOOL bReadOnly_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UMultiLineEditableText_* self_p0, FText inHintText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UMultiLineEditableText_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UMultiLineEditableText_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UMultiLineEditableText_* self_p0, FSlateFontInfo_ inFontInfo_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UMultiLineEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UMultiLineEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_, getFont_)(UMultiLineEditableText_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UMultiLineEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UMultiLineEditableTextBox_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UMultiLineEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UMultiLineEditableTextBox_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FEditableTextBoxStyle*, widgetStyle)(UMultiLineEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UMultiLineEditableTextBox_* obj_p0, FEditableTextBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsReadOnly)(UMultiLineEditableTextBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsReadOnly)(UMultiLineEditableTextBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextStyle_)(UMultiLineEditableTextBox_* self_p0, FTextBlockStyle& inTextStyle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UMultiLineEditableTextBox_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UMultiLineEditableTextBox_* self_p0, NIM_BOOL bReadOnly_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UMultiLineEditableTextBox_* self_p0, FText inHintText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UMultiLineEditableTextBox_* self_p0, FLinearColor color_p1);
N_LIB_PRIVATE N_NIMCALL(void, setError_)(UMultiLineEditableTextBox_* self_p0, FText inError_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UMultiLineEditableTextBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UMultiLineEditableTextBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UOverlaySlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UOverlaySlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UOverlaySlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UOverlaySlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UOverlaySlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UOverlaySlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UOverlaySlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UOverlaySlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UOverlaySlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FProgressBarStyle*, widgetStyle)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UProgressBar_* obj_p0, FProgressBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, percent)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpercent)(UProgressBar_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA, barFillType)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbarFillType)(UProgressBar_* obj_p0, tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA, barFillStyle)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbarFillStyle)(UProgressBar_* obj_p0, tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsMarquee)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsMarquee)(UProgressBar_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, borderPadding)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setborderPadding)(UProgressBar_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, fillColorAndOpacity)(UProgressBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfillColorAndOpacity)(UProgressBar_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPercent_)(UProgressBar_* self_p0, NF32 inPercent_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsMarquee_)(UProgressBar_* self_p0, NIM_BOOL inbIsMarquee_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFillColorAndOpacity_)(UProgressBar_* self_p0, FLinearColor inColor_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRetainRender)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRetainRender)(URetainerBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renderOnInvalidation)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOnInvalidation)(URetainerBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renderOnPhase)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOnPhase)(URetainerBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, phase)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphase)(URetainerBox_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, phaseCount)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphaseCount)(URetainerBox_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, effectMaterial)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, seteffectMaterial)(URetainerBox_* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, textureParameter)(URetainerBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextureParameter)(URetainerBox_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameter_)(URetainerBox_* self_p0, FName textureParameter_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRetainRendering_)(URetainerBox_* self_p0, NIM_BOOL bInRetainRendering_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderingPhase_)(URetainerBox_* self_p0, NI32 renderPhase_p1, NI32 totalPhases_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEffectMaterial_)(URetainerBox_* self_p0, UMaterialInterface* effectMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, requestRender_)(URetainerBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getEffectMaterial_)(URetainerBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(URichTextBlock_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, textStyleSet)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextStyleSet)(URichTextBlock_* obj_p0, UDataTable* val_p1);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, defaultTextStyleOverride)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultTextStyleOverride)(URichTextBlock_* obj_p0, FTextBlockStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(URichTextBlock_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ, textTransformPolicy)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextTransformPolicy)(URichTextBlock_* obj_p0, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, textOverflowPolicy)(URichTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextOverflowPolicy)(URichTextBlock_* obj_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextTransformPolicy_)(URichTextBlock_* self_p0, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ inTransformPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextStyleSet_)(URichTextBlock_* self_p0, UDataTable* newTextStyleSet_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(URichTextBlock_* self_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(URichTextBlock_* self_p0, FText& inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(URichTextBlock_* self_p0, NF32 inMinDesiredWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultTextStyle_)(URichTextBlock_* self_p0, FTextBlockStyle& inDefaultTextStyle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultStrikeBrush_)(URichTextBlock_* self_p0, FSlateBrush& inStrikeBrush_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultShadowOffset_)(URichTextBlock_* self_p0, FVector2D inShadowOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultShadowColorAndOpacity_)(URichTextBlock_* self_p0, FLinearColor inShadowColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultMaterial_)(URichTextBlock_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultFont_)(URichTextBlock_* self_p0, FSlateFontInfo_ inFontInfo_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultColorAndOpacity_)(URichTextBlock_* self_p0, FSlateColor inColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDecorators_)(URichTextBlock_* self_p0, TY__fjyUyrp2lTh3XJrhJ8LRSQ& inDecoratorClasses_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAutoWrapText_)(URichTextBlock_* self_p0, NIM_BOOL inAutoTextWrap_p1);
N_LIB_PRIVATE N_NIMCALL(void, refreshTextLayout_)(URichTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, getTextStyleSet_)(URichTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(URichTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDefaultDynamicMaterial_)(URichTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(URichTextBlockDecorator_*, getDecoratorByClass_)(URichTextBlock_* self_p0, TY__wB9bgWhg9b9cgeGP1bZZpMvHw decoratorClass_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padLeft)(USafeZone_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadLeft)(USafeZone_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padRight)(USafeZone_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadRight)(USafeZone_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padTop)(USafeZone_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadTop)(USafeZone_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padBottom)(USafeZone_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadBottom)(USafeZone_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSidesToPad_)(USafeZone_* self_p0, NIM_BOOL inPadLeft_p1, NIM_BOOL inPadRight_p2, NIM_BOOL inPadTop_p3, NIM_BOOL inPadBottom_p4);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w, stretch)(UScaleBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstretch)(UScaleBox_* obj_p0, tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew, stretchDirection)(UScaleBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstretchDirection)(UScaleBox_* obj_p0, tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, userSpecifiedScale)(UScaleBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuserSpecifiedScale)(UScaleBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, ignoreInheritedScale)(UScaleBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setignoreInheritedScale)(UScaleBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUserSpecifiedScale_)(UScaleBox_* self_p0, NF32 inUserSpecifiedScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStretchDirection_)(UScaleBox_* self_p0, tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew inStretchDirection_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStretch_)(UScaleBox_* self_p0, tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w inStretch_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreInheritedScale_)(UScaleBox_* self_p0, NIM_BOOL bInIgnoreInheritedScale_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UScaleBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UScaleBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UScaleBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UScaleBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UScaleBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UScaleBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UScaleBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, widgetStyle)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UScrollBar_* obj_p0, FScrollBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysShowScrollbar)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysShowScrollbar)(UScrollBar_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysShowScrollbarTrack)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysShowScrollbarTrack)(UScrollBar_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UScrollBar_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, thickness)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setthickness)(UScrollBar_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UScrollBar_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UScrollBar_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setState_)(UScrollBar_* self_p0, NF32 inOffsetFraction_p1, NF32 inThumbSizeFraction_p2);
N_LIB_PRIVATE N_NIMCALL(FScrollBoxStyle*, widgetStyle)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UScrollBox_* obj_p0, FScrollBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, widgetBarStyle)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetBarStyle)(UScrollBox_* obj_p0, FScrollBarStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UScrollBox_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg, consumeMouseWheel)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconsumeMouseWheel)(UScrollBox_* obj_p0, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, scrollbarThickness)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollbarThickness)(UScrollBox_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, scrollbarPadding)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollbarPadding)(UScrollBox_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, alwaysShowScrollbar)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalwaysShowScrollbar)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, alwaysShowScrollbarTrack)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalwaysShowScrollbarTrack)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, allowOverscroll)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setallowOverscroll)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, backPadScrolling)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbackPadScrolling)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, frontPadScrolling)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrontPadScrolling)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateWheelScrolling)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateWheelScrolling)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ, navigationDestination)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavigationDestination)(UScrollBox_* obj_p0, tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, navigationScrollPadding)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnavigationScrollPadding)(UScrollBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ, scrollWhenFocusChanges)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscrollWhenFocusChanges)(UScrollBox_* obj_p0, tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowRightClickDragScrolling)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowRightClickDragScrolling)(UScrollBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, wheelScrollMultiplier)(UScrollBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwheelScrollMultiplier)(UScrollBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWheelScrollMultiplier_)(UScrollBox_* self_p0, NF32 newWheelScrollMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScrollWhenFocusChanges_)(UScrollBox_* self_p0, tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ newScrollWhenFocusChanges_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScrollOffset_)(UScrollBox_* self_p0, NF32 newScrollOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScrollbarThickness_)(UScrollBox_* self_p0, FVector2D& newScrollbarThickness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScrollbarPadding_)(UScrollBox_* self_p0, FMargin& newScrollbarPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrientation_)(UScrollBox_* self_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A newOrientation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationDestination_)(UScrollBox_* self_p0, tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ newNavigationDestination_p1);
N_LIB_PRIVATE N_NIMCALL(void, setConsumeMouseWheel_)(UScrollBox_* self_p0, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg newConsumeMouseWheel_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateWheelScrolling_)(UScrollBox_* self_p0, NIM_BOOL bShouldAnimateWheelScrolling_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAlwaysShowScrollbar_)(UScrollBox_* self_p0, NIM_BOOL newAlwaysShowScrollbar_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllowOverscroll_)(UScrollBox_* self_p0, NIM_BOOL newAllowOverscroll_p1);
N_LIB_PRIVATE N_NIMCALL(void, scrollToStart_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, scrollToEnd_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewOffsetFraction_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewFraction_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffsetOfEnd_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffset_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, endInertialScrolling_)(UScrollBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UScrollBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UScrollBoxSlot_* obj_p0, FSlateChildSize_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UScrollBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UScrollBoxSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UScrollBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UScrollBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UScrollBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UScrollBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UScrollBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UScrollBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UScrollBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, widthOverride)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidthOverride)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, heightOverride)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheightOverride)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredHeight)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredHeight)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDesiredWidth)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDesiredWidth)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDesiredHeight)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDesiredHeight)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minAspectRatio)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminAspectRatio)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxAspectRatio)(USizeBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxAspectRatio)(USizeBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWidthOverride_)(USizeBox_* self_p0, NF32 inWidthOverride_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(USizeBox_* self_p0, NF32 inMinDesiredWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredHeight_)(USizeBox_* self_p0, NF32 inMinDesiredHeight_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinAspectRatio_)(USizeBox_* self_p0, NF32 inMinAspectRatio_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxDesiredWidth_)(USizeBox_* self_p0, NF32 inMaxDesiredWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxDesiredHeight_)(USizeBox_* self_p0, NF32 inMaxDesiredHeight_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxAspectRatio_)(USizeBox_* self_p0, NF32 inMaxAspectRatio_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHeightOverride_)(USizeBox_* self_p0, NF32 inHeightOverride_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearWidthOverride_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMinDesiredWidth_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMinDesiredHeight_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMinAspectRatio_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxDesiredWidth_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxDesiredHeight_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxAspectRatio_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearHeightOverride_)(USizeBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(USizeBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(USizeBoxSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(USizeBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(USizeBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(USizeBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(USizeBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(USizeBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(USizeBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(USizeBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, value)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(USlider_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minValue)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminValue)(USlider_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxValue)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxValue)(USlider_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSliderStyle*, widgetStyle)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(USlider_* obj_p0, FSliderStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(USlider_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, sliderBarColor)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsliderBarColor)(USlider_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, sliderHandleColor)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsliderHandleColor)(USlider_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, indentHandle)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setindentHandle)(USlider_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, locked)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlocked)(USlider_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, mouseUsesStep)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmouseUsesStep)(USlider_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, requiresControllerLock)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrequiresControllerLock)(USlider_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, stepSize)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstepSize)(USlider_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(USlider_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(USlider_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setValue_)(USlider_* self_p0, NF32 inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStepSize_)(USlider_* self_p0, NF32 inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSliderHandleColor_)(USlider_* self_p0, FLinearColor inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSliderBarColor_)(USlider_* self_p0, FLinearColor inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinValue_)(USlider_* self_p0, NF32 inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxValue_)(USlider_* self_p0, NF32 inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLocked_)(USlider_* self_p0, NIM_BOOL inValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIndentHandle_)(USlider_* self_p0, NIM_BOOL inValue_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getValue_)(USlider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getNormalizedValue_)(USlider_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, size)(USpacer_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(USpacer_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(USpacer_* self_p0, FVector2D inSize_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, value)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSpinBoxStyle*, widgetStyle)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(USpinBox_* obj_p0, FSpinBoxStyle val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, minFractionalDigits)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminFractionalDigits)(USpinBox_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxFractionalDigits)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxFractionalDigits)(USpinBox_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysUsesDeltaSnap)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysUsesDeltaSnap)(USpinBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableSlider)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableSlider)(USpinBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, delta)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdelta)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sliderExponent)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsliderExponent)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(USpinBox_* obj_p0, FSlateFontInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(USpinBox_* obj_p0, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(USpinBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(USpinBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(USpinBox_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minValue)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminValue)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxValue)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxValue)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minSliderValue)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminSliderValue)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSliderValue)(USpinBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSliderValue)(USpinBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setValue_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinValue_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinSliderValue_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinFractionalDigits_)(USpinBox_* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxValue_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxSliderValue_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaxFractionalDigits_)(USpinBox_* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(USpinBox_* self_p0, FSlateColor inForegroundColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDelta_)(USpinBox_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAlwaysUsesDeltaSnap_)(USpinBox_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinSliderValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinFractionalDigits_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxSliderValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaxFractionalDigits_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getDelta_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAlwaysUsesDeltaSnap_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMinValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMinSliderValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxSliderValue_)(USpinBox_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UStackBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UStackBox_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UTextBlock_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, colorAndOpacity)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UTextBlock_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UTextBlock_* obj_p0, FSlateFontInfo_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, strikeBrush)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrikeBrush)(UTextBlock_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, shadowOffset)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowOffset)(UTextBlock_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, shadowColorAndOpacity)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowColorAndOpacity)(UTextBlock_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(UTextBlock_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWrapWithInvalidationPanel)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWrapWithInvalidationPanel)(UTextBlock_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ, textTransformPolicy)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextTransformPolicy)(UTextBlock_* obj_p0, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, textOverflowPolicy)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextOverflowPolicy)(UTextBlock_* obj_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSimpleTextMode)(UTextBlock_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSimpleTextMode)(UTextBlock_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextTransformPolicy_)(UTextBlock_* self_p0, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ inTransformPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UTextBlock_* self_p0, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UTextBlock_* self_p0, FText inText_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStrikeBrush_)(UTextBlock_* self_p0, FSlateBrush inStrikeBrush_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowOffset_)(UTextBlock_* self_p0, FVector2D inShadowOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowColorAndOpacity_)(UTextBlock_* self_p0, FLinearColor inShadowColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOpacity_)(UTextBlock_* self_p0, NF32 inOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(UTextBlock_* self_p0, NF32 inMinDesiredWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UTextBlock_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UTextBlock_* self_p0, UMaterialInterface* inMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UTextBlock_* self_p0, FSlateFontInfo_ inFontInfo_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UTextBlock_* self_p0, FSlateColor inColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAutoWrapText_)(UTextBlock_* self_p0, NIM_BOOL inAutoTextWrap_p1);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicOutlineMaterial_)(UTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicFontMaterial_)(UTextBlock_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfPieces)(UThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfPieces)(UThrobber_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateHorizontally)(UThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateHorizontally)(UThrobber_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateVertically)(UThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateVertically)(UThrobber_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateOpacity)(UThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateOpacity)(UThrobber_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, image)(UThrobber_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setimage)(UThrobber_* obj_p0, FSlateBrush val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfPieces_)(UThrobber_* self_p0, NI32 inNumberOfPieces_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateVertically_)(UThrobber_* self_p0, NIM_BOOL bInAnimateVertically_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateOpacity_)(UThrobber_* self_p0, NIM_BOOL bInAnimateOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateHorizontally_)(UThrobber_* self_p0, NIM_BOOL bInAnimateHorizontally_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEntryWidth_)(UTileView_* self_p0, NF32 newWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEntryHeight_)(UTileView_* self_p0, NF32 newHeight_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getEntryWidth_)(UTileView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getEntryHeight_)(UTileView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setItemExpansion_)(UTreeView_* self_p0, UObject* item_p1, NIM_BOOL bExpandItem_p2);
N_LIB_PRIVATE N_NIMCALL(void, expandAll_)(UTreeView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, collapseAll_)(UTreeView_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, slotPadding)(UUniformGridPanel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setslotPadding)(UUniformGridPanel_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredSlotWidth)(UUniformGridPanel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredSlotWidth)(UUniformGridPanel_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredSlotHeight)(UUniformGridPanel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredSlotHeight)(UUniformGridPanel_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSlotPadding_)(UUniformGridPanel_* self_p0, FMargin inSlotPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredSlotWidth_)(UUniformGridPanel_* self_p0, NF32 inMinDesiredSlotWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredSlotHeight_)(UUniformGridPanel_* self_p0, NF32 inMinDesiredSlotHeight_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UUniformGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UUniformGridSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UUniformGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UUniformGridSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, row)(UUniformGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrow)(UUniformGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, column)(UUniformGridSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolumn)(UUniformGridSlot_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UUniformGridSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRow_)(UUniformGridSlot_* self_p0, NI32 inRow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UUniformGridSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(UUniformGridSlot_* self_p0, NI32 inColumn_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UVerticalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UVerticalBoxSlot_* obj_p0, FSlateChildSize_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UVerticalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UVerticalBoxSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UVerticalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UVerticalBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UVerticalBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UVerticalBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UVerticalBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UVerticalBoxSlot_* self_p0, FSlateChildSize_ inSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UVerticalBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UVerticalBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, backgroundColor)(UViewport_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbackgroundColor)(UViewport_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, spawn_)(UViewport_* self_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewRotation_)(UViewport_* self_p0, FRotator rotation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewLocation_)(UViewport_* self_p0, FVector location_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, getViewRotation_)(UViewport_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UWorld*, getViewportWorld_)(UViewport_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getViewLocation_)(UViewport_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, virtualUserIndex)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualUserIndex)(UWidgetInteractionComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerIndex)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpointerIndex)(UWidgetInteractionComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, traceChannel)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settraceChannel)(UWidgetInteractionComponent_* obj_p0, ECollisionChannel val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interactionDistance)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinteractionDistance)(UWidgetInteractionComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ, interactionSource)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinteractionSource)(UWidgetInteractionComponent_* obj_p0, tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableHitTesting)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableHitTesting)(UWidgetInteractionComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowDebug)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowDebug)(UWidgetInteractionComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, debugSphereLineThickness)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdebugSphereLineThickness)(UWidgetInteractionComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, debugLineThickness)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdebugLineThickness)(UWidgetInteractionComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, debugColor)(UWidgetInteractionComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdebugColor)(UWidgetInteractionComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCustomHitResult_)(UWidgetInteractionComponent_* self_p0, FHitResult& hitResult_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sendKeyChar_)(UWidgetInteractionComponent_* self_p0, FString characters_p1, NIM_BOOL bRepeat_p2);
N_LIB_PRIVATE N_NIMCALL(void, scrollWheel_)(UWidgetInteractionComponent_* self_p0, NF32 scrollDelta_p1);
N_LIB_PRIVATE N_NIMCALL(void, releasePointerKey_)(UWidgetInteractionComponent_* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, releaseKey_)(UWidgetInteractionComponent_* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, pressPointerKey_)(UWidgetInteractionComponent_* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pressKey_)(UWidgetInteractionComponent_* self_p0, FKey key_p1, NIM_BOOL bRepeat_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pressAndReleaseKey_)(UWidgetInteractionComponent_* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverInteractableWidget_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverHitTestVisibleWidget_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverFocusableWidget_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getLastHitResult_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UWidgetComponent_*, getHoveredWidgetComponent_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, get2DHitLocation_)(UWidgetInteractionComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, activeWidgetIndex)(UWidgetSwitcher_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setactiveWidgetIndex)(UWidgetSwitcher_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActiveWidgetIndex_)(UWidgetSwitcher_* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumWidgets_)(UWidgetSwitcher_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveWidgetIndex_)(UWidgetSwitcher_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWidgetSwitcherSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWidgetSwitcherSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWidgetSwitcherSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWidgetSwitcherSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWidgetSwitcherSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWidgetSwitcherSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWidgetSwitcherSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWidgetSwitcherSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWidgetSwitcherSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWindowButtonsEnabled)(UWindowTitleBarArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWindowButtonsEnabled)(UWindowTitleBarArea_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoubleClickTogglesFullscreen)(UWindowTitleBarArea_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDoubleClickTogglesFullscreen)(UWindowTitleBarArea_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWindowTitleBarArea_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWindowTitleBarArea_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWindowTitleBarArea_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWindowTitleBarAreaSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWindowTitleBarAreaSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWindowTitleBarAreaSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWindowTitleBarAreaSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWindowTitleBarAreaSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWindowTitleBarAreaSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWindowTitleBarAreaSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWindowTitleBarAreaSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWindowTitleBarAreaSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, innerSlotPadding)(UWrapBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinnerSlotPadding)(UWrapBox_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, wrapSize)(UWrapBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwrapSize)(UWrapBox_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExplicitWrapSize)(UWrapBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbExplicitWrapSize)(UWrapBox_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWrapBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWrapBox_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UWrapBox_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UWrapBox_* obj_p0, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInnerSlotPadding_)(UWrapBox_* self_p0, FVector2D inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWrapBox_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWrapBoxSlot_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fillSpanWhenLessThan)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfillSpanWhenLessThan)(UWrapBoxSlot_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWrapBoxSlot_* obj_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWrapBoxSlot_* obj_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFillEmptySpace)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFillEmptySpace)(UWrapBoxSlot_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceNewLine)(UWrapBoxSlot_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceNewLine)(UWrapBoxSlot_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWrapBoxSlot_* self_p0, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWrapBoxSlot_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNewLine_)(UWrapBoxSlot_* self_p0, NIM_BOOL inForceNewLine_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWrapBoxSlot_* self_p0, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFillSpanWhenLessThan_)(UWrapBoxSlot_* self_p0, NF32 inFillSpanWhenLessThan_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFillEmptySpace_)(UWrapBoxSlot_* self_p0, NIM_BOOL inbFillEmptySpace_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGBlueprint)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UUserWidget_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UUserWidget_* obj_p0, FSlateColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UUserWidget_* obj_p0, FMargin val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, priority)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UUserWidget_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UUserWidget_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStopAction)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStopAction)(UUserWidget_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw, tickFrequency)(UUserWidget_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settickFrequency)(UUserWidget_* obj_p0, tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unregisterInputComponent_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, unbindFromAnimationStarted_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1, FWidgetAnimationDynamicEvent_* delegate_p2);
N_LIB_PRIVATE N_NIMCALL(void, unbindFromAnimationFinished_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1, FWidgetAnimationDynamicEvent_* delegate_p2);
N_LIB_PRIVATE N_NIMCALL(void, unbindAllFromAnimationStarted_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1);
N_LIB_PRIVATE N_NIMCALL(void, unbindAllFromAnimationFinished_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopListeningForInputAction_)(UUserWidget_* self_p0, FName actionName_p1, EInputEvent eventType_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopListeningForAllInputActions_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimationsAndLatentActions_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimation_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopAllAnimations_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setPositionInViewport_)(UUserWidget_* self_p0, FVector2D position_p1, NIM_BOOL bRemoveDPIScale_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPlaybackSpeed_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 playbackSpeed_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UUserWidget_* self_p0, FMargin inPadding_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOwningPlayer_)(UUserWidget_* self_p0, APlayerController* localPlayerController_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNumLoopsToPlay_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NI32 numLoopsToPlay_p2);
N_LIB_PRIVATE N_NIMCALL(void, setInputActionPriority_)(UUserWidget_* self_p0, NI32 newPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInputActionBlocking_)(UUserWidget_* self_p0, NIM_BOOL bShouldBlock_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UUserWidget_* self_p0, FSlateColor inForegroundColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeInViewport_)(UUserWidget_* self_p0, FVector2D size_p1);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UUserWidget_* self_p0, FLinearColor inColorAndOpacity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationCurrentTime_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 inTime_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAnchorsInViewport_)(UUserWidget_* self_p0, FAnchors_ anchors_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAlignmentInViewport_)(UUserWidget_* self_p0, FVector2D alignment_p1);
N_LIB_PRIVATE N_NIMCALL(void, reverseAnimation_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeFromViewport_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeExtensions_)(UUserWidget_* self_p0, TY__MF9aiABZZTdnJbCQRWxbIrg inExtensionType_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeExtension_)(UUserWidget_* self_p0, UUserWidgetExtension_* inExtension_p1);
N_LIB_PRIVATE N_NIMCALL(void, registerInputComponent_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationTimeRange_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 startAtTime_p2, NF32 endAtTime_p3, NI32 numLoopsToPlay_p4, tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA playMode_p5, NF32 playbackSpeed_p6, NIM_BOOL bRestoreState_p7);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationReverse_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 playbackSpeed_p2, NIM_BOOL bRestoreState_p3);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationForward_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 playbackSpeed_p2, NIM_BOOL bRestoreState_p3);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimation_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1, NF32 startAtTime_p2, NI32 numLoopsToPlay_p3, tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA playMode_p4, NF32 playbackSpeed_p5, NIM_BOOL bRestoreState_p6);
N_LIB_PRIVATE N_NIMCALL(NF32, pauseAnimation_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(void, listenForInputAction_)(UUserWidget_* self_p0, FName actionName_p1, EInputEvent eventType_p2, NIM_BOOL bConsume_p3, FOnInputAction_* callback_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingAnimation_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListeningForInputAction_)(UUserWidget_* self_p0, FName actionName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyAnimationPlaying_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnimationPlayingForward_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnimationPlaying_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(APawn*, getOwningPlayerPawn_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, getOwningPlayerCameraManager_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsVisible_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__scxiKf9aWv3hy9bytmcQJthg, getExtensions_)(UUserWidget_* self_p0, TY__MF9aiABZZTdnJbCQRWxbIrg extensionType_p1);
N_LIB_PRIVATE N_NIMCALL(UUserWidgetExtension_*, getExtension_)(UUserWidget_* self_p0, TY__MF9aiABZZTdnJbCQRWxbIrg extensionType_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnimationCurrentTime_)(UUserWidget_* self_p0, UWidgetAnimation_* inAnimation_p1);
N_LIB_PRIVATE N_NIMCALL(FAnchors_, getAnchorsInViewport_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAlignmentInViewport_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, flushAnimations_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelLatentActions_)(UUserWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationStarted_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1, FWidgetAnimationDynamicEvent_* delegate_p2);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationFinished_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1, FWidgetAnimationDynamicEvent_* delegate_p2);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationEvent_)(UUserWidget_* self_p0, UWidgetAnimation_* animation_p1, FWidgetAnimationDynamicEvent_* delegate_p2, tyEnum_EWidgetAnimationEvent__9aZSQO2S3MK3lhbZMiPssPA animationEvent_p3, FName userTag_p4);
N_LIB_PRIVATE N_NIMCALL(void, addToViewport_)(UUserWidget_* self_p0, NI32 zOrder_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addToPlayerScreen_)(UUserWidget_* self_p0, NI32 zOrder_p1);
N_LIB_PRIVATE N_NIMCALL(UUserWidgetExtension_*, addExtension_)(UUserWidget_* self_p0, TY__MF9aiABZZTdnJbCQRWxbIrg inExtensionType_p1);
N_LIB_PRIVATE N_NIMCALL(UAsyncTaskDownloadImage_*, downloadImage_)(FString uRL_p0);
N_LIB_PRIVATE N_NIMCALL(FString, tag)(UDragDropOperation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settag)(UDragDropOperation_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(UObject*, payload)(UDragDropOperation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpayload)(UDragDropOperation_* obj_p0, UObject* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA, pivot)(UDragDropOperation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpivot)(UDragDropOperation_* obj_p0, tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, offset)(UDragDropOperation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoffset)(UDragDropOperation_* obj_p0, FVector2D val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGFieldNotification)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGSlate)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGUMG)(void);
N_LIB_PRIVATE N_NIMCALL(FGameViewportWidgetSlot_, setWidgetSlotDesiredSize_)(FGameViewportWidgetSlot_ slot_p0, FVector2D size_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListItemSelected_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListItemExpanded_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry_p0);
N_LIB_PRIVATE N_NIMCALL(UListViewBase_*, getOwningListView_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getListItemObject_)(TY__GhlSt2m1FF0wdkWz1n7qNQ userObjectListEntry_p0);
N_LIB_PRIVATE N_NIMCALL(UPanelSlot_*, getContentSlot_)(UContentWidget_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, transformVectorLocalToAbsolute_)(FGeometry& geometry_p0, FVector2D localVector_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, transformVectorAbsoluteToLocal_)(FGeometry& geometry_p0, FVector2D absoluteVector_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, transformScalarLocalToAbsolute_)(FGeometry& geometry_p0, NF32 localScalar_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, transformScalarAbsoluteToLocal_)(FGeometry& geometry_p0, NF32 absoluteScalar_p1);
N_LIB_PRIVATE N_NIMCALL(void, screenToWidgetLocal_)(UObject* worldContextObject_p0, FGeometry& geometry_p1, FVector2D screenPosition_p2, FVector2D& localCoordinate_p3, NIM_BOOL bIncludeWindowPosition_p4);
N_LIB_PRIVATE N_NIMCALL(void, screenToWidgetAbsolute_)(UObject* worldContextObject_p0, FVector2D screenPosition_p1, FVector2D& absoluteCoordinate_p2, NIM_BOOL bIncludeWindowPosition_p3);
N_LIB_PRIVATE N_NIMCALL(void, screenToViewport_)(UObject* worldContextObject_p0, FVector2D screenPosition_p1, FVector2D& viewportPosition_p2);
N_LIB_PRIVATE N_NIMCALL(void, localToViewport_)(UObject* worldContextObject_p0, FGeometry& geometry_p1, FVector2D localCoordinate_p2, FVector2D& pixelPosition_p3, FVector2D& viewportPosition_p4);
N_LIB_PRIVATE N_NIMCALL(FVector2D, localToAbsolute_)(FGeometry& geometry_p0, FVector2D localCoordinate_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnderLocation_)(FGeometry& geometry_p0, FVector2D& absoluteCoordinate_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getLocalTopLeft_)(FGeometry& geometry_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getLocalSize_)(FGeometry& geometry_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAbsoluteSize_)(FGeometry& geometry_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SlateBrush_)(FSlateBrush& a_p0, FSlateBrush& b_p1);
N_LIB_PRIVATE N_NIMCALL(void, absoluteToViewport_)(UObject* worldContextObject_p0, FVector2D absoluteDesktopCoordinate_p1, FVector2D& pixelPosition_p2, FVector2D& viewportPosition_p3);
N_LIB_PRIVATE N_NIMCALL(FVector2D, absoluteToLocal_)(FGeometry& geometry_p0, FVector2D absoluteCoordinate_p1);
N_LIB_PRIVATE N_NIMCALL(void, unlockMouse_)(FEventReply_& reply_p0, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, unhandled_)(FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitleBarOnCloseClickedDelegate_)(FOnGameWindowCloseButtonClickedDelegate_* delegate_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitleBarCloseButtonActive_)(NIM_BOOL bActive_p0);
N_LIB_PRIVATE N_NIMCALL(void, setMousePosition_)(FEventReply_& reply_p0, FVector2D newMousePosition_p1, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, setInputMode_GameOnly_)(APlayerController* playerController_p0, NIM_BOOL bFlushInput_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setHardwareCursor_)(UObject* worldContextObject_p0, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g cursorShape_p1, FName cursorName_p2, FVector2D hotSpot_p3);
N_LIB_PRIVATE N_NIMCALL(void, setFocusToGameViewport_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setColorVisionDeficiencyType_)(tyEnum_EColorVisionDeficiency__DU1qP5iJ6QOZvOs9aZQ1UTQ type_p0, NF32 severity_p1, NIM_BOOL correctDeficiency_p2, NIM_BOOL showCorrectionWithDeficiency_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceToTexture_)(FSlateBrush& brush_p0, UTexture2D* texture_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceToMaterial_)(FSlateBrush& brush_p0, UMaterialInterface* material_p1);
N_LIB_PRIVATE N_NIMCALL(void, restorePreviousWindowTitleBarState_)(void);
N_LIB_PRIVATE N_NIMCALL(void, releaseMouseCapture_)(FEventReply_& reply_p0, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, releaseJoystickCapture_)(FEventReply_& reply_p0, NIM_BOOL bInAllJoysticks_p1, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, noResourceBrush_)(void);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromTexture_)(UTexture2D* texture_p0, NI32 width_p1, NI32 height_p2);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromMaterial_)(UMaterialInterface* material_p0, NI32 width_p1, NI32 height_p2);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromAsset_)(USlateBrushAsset_* brushAsset_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDragDropping_)(void);
N_LIB_PRIVATE N_NIMCALL(void, handled_)(FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getSafeZonePadding_)(UObject* worldContextObject_p0, FVector4& safePadding_p1, FVector2D& safePaddingScale_p2, FVector4& spillOverPadding_p3);
N_LIB_PRIVATE N_NIMCALL(FKeyEvent, getKeyEventFromAnalogInputEvent_)(FAnalogInputEvent& event_p0);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromPointerEvent_)(FPointerEvent& event_p0);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromNavigationEvent_)(FNavigationEvent& event_p0);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromKeyEvent_)(FKeyEvent& event_p0);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromCharacterEvent_)(FCharacterEvent& event_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(FSlateBrush& brush_p0);
N_LIB_PRIVATE N_NIMCALL(UDragDropOperation_*, getDragDroppingContent_)(void);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, getBrushResourceAsTexture2D_)(FSlateBrush& brush_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getBrushResourceAsMaterial_)(FSlateBrush& brush_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getBrushResource_)(FSlateBrush& brush_p0);
N_LIB_PRIVATE N_NIMCALL(void, endDragDrop_)(FEventReply_& reply_p0, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, drawTextFormatted_)(FPaintContext_& context_p0, FText& text_p1, FVector2D position_p2, UFont_* font_p3, NI32 fontSize_p4, FName fontTypeFace_p5, FLinearColor tint_p6);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(FPaintContext_& context_p0, FString inString_p1, FVector2D position_p2, FLinearColor tint_p3);
N_LIB_PRIVATE N_NIMCALL(void, drawSpline_)(FPaintContext_& context_p0, FVector2D start_p1, FVector2D startDir_p2, FVector2D end_p3, FVector2D endDir_p4, FLinearColor tint_p5, NF32 thickness_p6);
N_LIB_PRIVATE N_NIMCALL(void, drawLines_)(FPaintContext_& context_p0, TY__fBi9aXEAuMMk9cMD1hVzuHSg& points_p1, FLinearColor tint_p2, NIM_BOOL bAntiAlias_p3, NF32 thickness_p4);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(FPaintContext_& context_p0, FVector2D positionA_p1, FVector2D positionB_p2, FLinearColor tint_p3, NIM_BOOL bAntiAlias_p4, NF32 thickness_p5);
N_LIB_PRIVATE N_NIMCALL(void, drawBox_)(FPaintContext_& context_p0, FVector2D position_p1, FVector2D size_p2, USlateBrushAsset_* brush_p3, FLinearColor tint_p4);
N_LIB_PRIVATE N_NIMCALL(void, dismissAllMenus_)(void);
N_LIB_PRIVATE N_NIMCALL(UDragDropOperation_*, createDragDropOperation_)(TY__zPh84RcCsFVoqOO9cBQteOA operationClass_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearUserFocus_)(FEventReply_& reply_p0, NIM_BOOL bInAllUsers_p1, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, cancelDragDrop_)(void);
N_LIB_PRIVATE N_NIMCALL(void, removeAllWidgets_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldLocationToWidgetPosition_)(APlayerController* playerController_p0, FVector worldLocation_p1, FVector2D& screenPosition_p2, NIM_BOOL bPlayerViewportRelative_p3);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getViewportWidgetGeometry_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getViewportSize_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewportScale_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getPlayerScreenWidgetGeometry_)(APlayerController* playerController_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMousePositionScaledByDPI_)(APlayerController* player_p0, NF32& locationX_p1, NF32& locationY_p2);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMousePositionOnViewport_)(UObject* worldContextObject_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMousePositionOnPlatform_)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesAbilities)(void);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitAttributeChangedDelegate_*, changed)(UAbilityAsync_WaitAttributeChanged_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchanged)(UAbilityAsync_WaitAttributeChanged_* obj_p0, FAsyncWaitAttributeChangedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, asyncWaitAttributeChangedDelegate_)(UAbilityAsync_WaitAttributeChanged_* self_p0, FGameplayAttribute attribute_p1, NF32 newValue_p2, NF32 oldValue_p3);
N_LIB_PRIVATE N_NIMCALL(FOnAppliedDelegate_*, onApplied)(UAbilityAsync_WaitGameplayEffectApplied_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityAsync_WaitGameplayEffectApplied_* obj_p0, FOnAppliedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayEffectApplied_*, waitGameplayEffectAppliedToActor_)(AActor* targetActor_p0, FGameplayTargetDataFilterHandle_ sourceFilter_p1, FGameplayTagRequirements sourceTagRequirements_p2, FGameplayTagRequirements targetTagRequirements_p3, NIM_BOOL triggerOnce_p4, NIM_BOOL listenForPeriodicEffect_p5);
N_LIB_PRIVATE N_NIMCALL(void, onAppliedDelegate_)(UAbilityAsync_WaitGameplayEffectApplied_* self_p0, AActor* source_p1, FGameplayEffectSpecHandle specHandle_p2, FActiveGameplayEffectHandle activeHandle_p3);
N_LIB_PRIVATE N_NIMCALL(FEventReceivedDelegate_*, eventReceived)(UAbilityAsync_WaitGameplayEvent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, seteventReceived)(UAbilityAsync_WaitGameplayEvent_* obj_p0, FEventReceivedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayEvent_*, waitGameplayEventToActor_)(AActor* targetActor_p0, FGameplayTag eventTag_p1, NIM_BOOL onlyTriggerOnce_p2, NIM_BOOL onlyMatchExact_p3);
N_LIB_PRIVATE N_NIMCALL(void, eventReceivedDelegate_)(UAbilityAsync_WaitGameplayEvent_* self_p0, FGameplayEventData payload_p1);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagDelegate_*, added)(UAbilityAsync_WaitGameplayTagAdded_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadded)(UAbilityAsync_WaitGameplayTagAdded_* obj_p0, FAsyncWaitGameplayTagDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayTagAdded_*, waitGameplayTagAddToActor_)(AActor* targetActor_p0, FGameplayTag tag_p1, NIM_BOOL onlyTriggerOnce_p2);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagDelegate_*, removed)(UAbilityAsync_WaitGameplayTagRemoved_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremoved)(UAbilityAsync_WaitGameplayTagRemoved_* obj_p0, FAsyncWaitGameplayTagDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayTagRemoved_*, waitGameplayTagRemoveFromActor_)(AActor* targetActor_p0, FGameplayTag tag_p1, NIM_BOOL onlyTriggerOnce_p2);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagQueryDelegate_*, triggered)(UAbilityAsync_WaitGameplayTagQuery_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggered)(UAbilityAsync_WaitGameplayTagQuery_* obj_p0, FAsyncWaitGameplayTagQueryDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateInputDirectly)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateInputDirectly)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, remoteInstanceEnded)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremoteInstanceEnded)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g, replicationPolicy)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreplicationPolicy)(UGameplayAbility* obj_p0, tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg, instancingPolicy)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstancingPolicy)(UGameplayAbility* obj_p0, tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bServerRespectsRemoteAbilityCancellation)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbServerRespectsRemoteAbilityCancellation)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRetriggerInstancedAbility)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRetriggerInstancedAbility)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityActivationInfo*, currentActivationInfo)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentActivationInfo)(UGameplayAbility* obj_p0, FGameplayAbilityActivationInfo val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayEventData*, currentEventData)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentEventData)(UGameplayAbility* obj_p0, FGameplayEventData val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A, netExecutionPolicy)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetExecutionPolicy)(UGameplayAbility* obj_p0, tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w, netSecurityPolicy)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnetSecurityPolicy)(UGameplayAbility* obj_p0, tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__o5lmm3YGRQTdI9c9ccmTHabQ, costGameplayEffectClass)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcostGameplayEffectClass)(UGameplayAbility* obj_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__otj1SVV0qRIXABYwhGjz8Q*, abilityTriggers)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setabilityTriggers)(UGameplayAbility* obj_p0, TY__otj1SVV0qRIXABYwhGjz8Q val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__o5lmm3YGRQTdI9c9ccmTHabQ, cooldownGameplayEffectClass)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcooldownGameplayEffectClass)(UGameplayAbility* obj_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ val_p1);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, currentMontage)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentMontage)(UGameplayAbility* obj_p0, UAnimMontage* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsActive)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsActive)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAbilityEnding)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAbilityEnding)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsCancelable)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsCancelable)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsBlockingOtherAbilities)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsBlockingOtherAbilities)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMarkPendingKillOnAbilityEnd)(UGameplayAbility* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMarkPendingKillOnAbilityEnd)(UGameplayAbility* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBlockOtherAbilities_)(UGameplayAbility* self_p0, NIM_BOOL bShouldBlockAbilities_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCanBeCanceled_)(UGameplayAbility* self_p0, NIM_BOOL bCanBeCanceled_p1);
N_LIB_PRIVATE N_NIMCALL(void, sendGameplayEvent_)(UGameplayAbility* self_p0, FGameplayTag eventTag_p1, FGameplayEventData payload_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeGrantedByEffect_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, montageStop_)(UGameplayAbility* self_p0, NF32 overrideBlendOutTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, montageSetNextSectionName_)(UGameplayAbility* self_p0, FName fromSectionName_p1, FName toSectionName_p2);
N_LIB_PRIVATE N_NIMCALL(void, montageJumpToSection_)(UGameplayAbility* self_p0, FName sectionName_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo, makeTargetLocationInfoFromOwnerSkeletalMeshComponent_)(UGameplayAbility* self_p0, FName socketName_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo, makeTargetLocationInfoFromOwnerActor_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeOutgoingGameplayEffectSpec_)(UGameplayAbility* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p1, NF32 level_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldAbilityRespondToEvent_)(UGameplayAbility* self_p0, FGameplayAbilityActorInfo actorInfo_p1, FGameplayEventData payload_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayCue_)(UGameplayAbility* self_p0, FGameplayTag gameplayCueTag_p1);
N_LIB_PRIVATE N_NIMCALL(void, onEndAbility_)(UGameplayAbility* self_p0, NIM_BOOL bWasCancelled_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAuthority_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCueWithParams_)(UGameplayAbility* self_p0, FGameplayTag gameplayCueTag_p1, FGameplayCueParameters& gameplayCueParameters_p2);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCue_)(UGameplayAbility* self_p0, FGameplayTag gameplayCueTag_p1, FGameplayEffectContextHandle context_p2);
N_LIB_PRIVATE N_NIMCALL(void, endAbilityLocally_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, endAbility_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, commitExecute_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbilityCost_)(UGameplayAbility* self_p0, NIM_BOOL broadcastCommitEvent_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbilityCooldown_)(UGameplayAbility* self_p0, NIM_BOOL broadcastCommitEvent_p1, NIM_BOOL forceCooldown_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbility_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, checkAbilityCost_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, checkAbilityCooldown_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelAbility_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, applyGameplayEffectSpecToTarget_)(UGameplayAbility* self_p0, FGameplayEffectSpecHandle effectSpecHandle_p1, FGameplayAbilityTargetDataHandle targetData_p2);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToOwner_)(UGameplayAbility* self_p0, FGameplayEffectSpecHandle effectSpecHandle_p1);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCueWithParams_)(UGameplayAbility* self_p0, FGameplayTag gameplayCueTag_p1, FGameplayCueParameters& gameplayCueParameter_p2, NIM_BOOL bRemoveOnAbilityEnd_p3);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCue_)(UGameplayAbility* self_p0, FGameplayTag gameplayCueTag_p1, FGameplayEffectContextHandle context_p2, NIM_BOOL bRemoveOnAbilityEnd_p3);
N_LIB_PRIVATE N_NIMCALL(void, activateAbilityFromEvent_)(UGameplayAbility* self_p0, FGameplayEventData& eventData_p1);
N_LIB_PRIVATE N_NIMCALL(void, activateAbility_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyControlled_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, invalidateClientPredictionKey_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getSourceObject_BP_)(UGameplayAbility* self_p0, FGameplayAbilitySpecHandle handle_p1, FGameplayAbilityActorInfo& actorInfo_p2);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, getOwningComponentFromActorInfo_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwningActorFromActorInfo_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getGrantedByEffectContext_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getCurrentSourceObject_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentMontage_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCooldownTimeRemaining_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getContextFromOwner_)(UGameplayAbility* self_p0, FGameplayAbilityTargetDataHandle optionalTargetData_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, getAvatarActorFromActorInfo_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityActorInfo, getActorInfo_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, getAbilitySystemComponentFromActorInfo_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getAbilityLevel_BP_)(UGameplayAbility* self_p0, FGameplayAbilitySpecHandle handle_p1, FGameplayAbilityActorInfo& actorInfo_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getAbilityLevel_)(UGameplayAbility* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, endTaskByInstanceName_)(UGameplayAbility* self_p0, FName instanceName_p1);
N_LIB_PRIVATE N_NIMCALL(void, endAbilityState_)(UGameplayAbility* self_p0, FName optionalStateNameToEnd_p1);
N_LIB_PRIVATE N_NIMCALL(void, confirmTaskByInstanceName_)(UGameplayAbility* self_p0, FName instanceName_p1, NIM_BOOL bEndTask_p2);
N_LIB_PRIVATE N_NIMCALL(void, cancelTaskByInstanceName_)(UGameplayAbility* self_p0, FName instanceName_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayEffectFromOwnerWithHandle_)(UGameplayAbility* self_p0, FActiveGameplayEffectHandle handle_p1, NI32 stacksToRemove_p2);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, applyGameplayEffectToTarget_)(UGameplayAbility* self_p0, FGameplayAbilityTargetDataHandle targetData_p1, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p2, NI32 gameplayEffectLevel_p3, NI32 stacks_p4);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToOwner_)(UGameplayAbility* self_p0, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass_p1, NI32 gameplayEffectLevel_p2, NI32 stacks_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldProduceTargetDataOnServer)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshouldProduceTargetDataOnServer)(AGameplayAbilityTargetActor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo*, startLocation)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(AGameplayAbilityTargetActor_* obj_p0, FGameplayAbilityTargetingLocationInfo val_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, primaryPC)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprimaryPC)(AGameplayAbilityTargetActor_* obj_p0, APlayerController* val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility*, owningAbility)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setowningAbility)(AGameplayAbilityTargetActor_* obj_p0, UGameplayAbility* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDestroyOnConfirmation)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDestroyOnConfirmation)(AGameplayAbilityTargetActor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, sourceActor)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceActor)(AGameplayAbilityTargetActor_* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(FWorldReticleParameters_*, reticleParams)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreticleParams)(AGameplayAbilityTargetActor_* obj_p0, FWorldReticleParameters_ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BbC1f9cl7UvV7ShysOkJw9bQ, reticleClass)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreticleClass)(AGameplayAbilityTargetActor_* obj_p0, TY__BbC1f9cl7UvV7ShysOkJw9bQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FGameplayTargetDataFilterHandle_*, filter)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfilter)(AGameplayAbilityTargetActor_* obj_p0, FGameplayTargetDataFilterHandle_ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDebug)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDebug)(AGameplayAbilityTargetActor_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, genericDelegateBoundASC)(AGameplayAbilityTargetActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgenericDelegateBoundASC)(AGameplayAbilityTargetActor_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, confirmTargeting_)(AGameplayAbilityTargetActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, cancelTargeting_)(AGameplayAbilityTargetActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, maxRange)(AGameplayAbilityTargetActor_Trace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxRange)(AGameplayAbilityTargetActor_Trace_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FCollisionProfileName*, traceProfile)(AGameplayAbilityTargetActor_Trace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settraceProfile)(AGameplayAbilityTargetActor_Trace_* obj_p0, FCollisionProfileName val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTraceAffectsAimPitch)(AGameplayAbilityTargetActor_Trace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTraceAffectsAimPitch)(AGameplayAbilityTargetActor_Trace_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, collisionRadius)(AGameplayAbilityTargetActor_GroundTrace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionRadius)(AGameplayAbilityTargetActor_GroundTrace_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, collisionHeight)(AGameplayAbilityTargetActor_GroundTrace_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionHeight)(AGameplayAbilityTargetActor_GroundTrace_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UClass*, placedActorClass)(AGameplayAbilityTargetActor_ActorPlacement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplacedActorClass)(AGameplayAbilityTargetActor_ActorPlacement_* obj_p0, UClass* val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, placedActorMaterial)(AGameplayAbilityTargetActor_ActorPlacement_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplacedActorMaterial)(AGameplayAbilityTargetActor_ActorPlacement_* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(AGameplayAbilityTargetActor_Radius_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(AGameplayAbilityTargetActor_Radius_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FWorldReticleParameters_*, parameters)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparameters)(AGameplayAbilityWorldReticle_* obj_p0, FWorldReticleParameters_ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFaceOwnerFlat)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFaceOwnerFlat)(AGameplayAbilityWorldReticle_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSnapToTargetedActor)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSnapToTargetedActor)(AGameplayAbilityWorldReticle_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsTargetValid)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsTargetValid)(AGameplayAbilityWorldReticle_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsTargetAnActor)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsTargetAnActor)(AGameplayAbilityWorldReticle_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, primaryPC)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprimaryPC)(AGameplayAbilityWorldReticle_* obj_p0, APlayerController* val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, targetingActor)(AGameplayAbilityWorldReticle_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetingActor)(AGameplayAbilityWorldReticle_* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReticleMaterialParamVector_)(AGameplayAbilityWorldReticle_* self_p0, FName paramName_p1, FVector value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setReticleMaterialParamFloat_)(AGameplayAbilityWorldReticle_* self_p0, FName paramName_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, onValidTargetChanged_)(AGameplayAbilityWorldReticle_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, onTargetingAnActor_)(AGameplayAbilityWorldReticle_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, onParametersInitialized_)(AGameplayAbilityWorldReticle_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, faceTowardSource_)(AGameplayAbilityWorldReticle_* self_p0, NIM_BOOL bFaceIn2D_p1);
N_LIB_PRIVATE N_NIMCALL(UCapsuleComponent*, collisionComponent)(AGameplayAbilityWorldReticle_ActorVisualization_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(AGameplayAbilityWorldReticle_ActorVisualization_* obj_p0, UCapsuleComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA*, visualizationComponents)(AGameplayAbilityWorldReticle_ActorVisualization_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvisualizationComponents)(AGameplayAbilityWorldReticle_ActorVisualization_* obj_p0, TY__ZQxjzvTP9ciBbsMII1UY6aA val_p1);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, montageToPlay)(UGameplayAbility_Montage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmontageToPlay)(UGameplayAbility_Montage_* obj_p0, UAnimMontage* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, playRate)(UGameplayAbility_Montage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplayRate)(UGameplayAbility_Montage_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, sectionName)(UGameplayAbility_Montage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsectionName)(UGameplayAbility_Montage_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, gameplayEffectClassesWhileAnimating)(UGameplayAbility_Montage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayEffectClassesWhileAnimating)(UGameplayAbility_Montage_* obj_p0, TY__YWxhJKhKplqKD9bzBoR0fzQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__HS3GOnZWYOzZ9c6h38vBKFQ*, gameplayEffectsWhileAnimating)(UGameplayAbility_Montage_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayEffectsWhileAnimating)(UGameplayAbility_Montage_* obj_p0, TY__HS3GOnZWYOzZ9c6h38vBKFQ val_p1);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility*, ability)(UAbilityTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setability)(UAbilityTask_* obj_p0, UGameplayAbility* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__fligw9bQyC3qCU9aQRZoRq8Q, abilitySystemComponent)(UAbilityTask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemComponent)(UAbilityTask_* obj_p0, TY__fligw9bQyC3qCU9aQRZoRq8Q val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, forceName)(UAbilityTask_ApplyRootMotion_Base_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforceName)(UAbilityTask_ApplyRootMotion_Base_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ, finishVelocityMode)(UAbilityTask_ApplyRootMotion_Base_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfinishVelocityMode)(UAbilityTask_ApplyRootMotion_Base_* obj_p0, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, finishSetVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfinishSetVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, finishClampVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfinishClampVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UCharacterMovementComponent*, movementComponent)(UAbilityTask_ApplyRootMotion_Base_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmovementComponent)(UAbilityTask_ApplyRootMotion_Base_* obj_p0, UCharacterMovementComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionConstantForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, FApplyRootMotionConstantForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, worldDirection)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setworldDirection)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAdditive)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAdditive)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthOverTime)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthOverTime)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableGravity)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableGravity)(UAbilityTask_ApplyRootMotionConstantForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionConstantForce_*, applyRootMotionConstantForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FVector worldDirection_p2, NF32 strength_p3, NF32 duration_p4, NIM_BOOL bIsAdditive_p5, UCurveFloat* strengthOverTime_p6, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p7, FVector setVelocityOnFinish_p8, NF32 clampVelocityOnFinish_p9, NIM_BOOL bEnableGravity_p10);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionJumpForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, FApplyRootMotionJumpForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionJumpForceDelegate_*, onLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, FApplyRootMotionJumpForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotation)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrotation)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, distance)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdistance)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, height)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheight)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumLandedTriggerTime)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminimumLandedTriggerTime)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFinishOnLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFinishOnLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, UCurveVector_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, timeMappingCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settimeMappingCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onLandedCallback_)(UAbilityTask_ApplyRootMotionJumpForce_* self_p0, FHitResult& hit_p1);
N_LIB_PRIVATE N_NIMCALL(void, finish_)(UAbilityTask_ApplyRootMotionJumpForce_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionJumpForce_*, applyRootMotionJumpForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FRotator rotation_p2, NF32 distance_p3, NF32 height_p4, NF32 duration_p5, NF32 minimumLandedTriggerTime_p6, NIM_BOOL bFinishOnLanded_p7, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p8, FVector setVelocityOnFinish_p9, NF32 clampVelocityOnFinish_p10, UCurveVector_* pathOffsetCurve_p11, UCurveFloat* timeMappingCurve_p12);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToActorForceDelegate_*, onFinished)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinished)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, FApplyRootMotionMoveToActorForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, targetActor)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetActor)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocationOffset)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocationOffset)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow, offsetAlignment)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoffsetAlignment)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableDestinationReachedInterrupt)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableDestinationReachedInterrupt)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, newMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, UCurveVector_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, timeMappingCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settimeMappingCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, targetLerpSpeedHorizontalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLerpSpeedHorizontalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, targetLerpSpeedVerticalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLerpSpeedVerticalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onTargetActorSwapped_)(UAbilityTask_ApplyRootMotionMoveToActorForce_* self_p0, AActor* originalTarget_p1, AActor* newTarget_p2);
N_LIB_PRIVATE N_NIMCALL(void, onRep_TargetLocation_)(UAbilityTask_ApplyRootMotionMoveToActorForce_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToActorForce_*, applyRootMotionMoveToTargetDataActorForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FGameplayAbilityTargetDataHandle targetDataHandle_p2, NI32 targetDataIndex_p3, NI32 targetActorIndex_p4, FVector targetLocationOffset_p5, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow offsetAlignment_p6, NF32 duration_p7, UCurveFloat* targetLerpSpeedHorizontal_p8, UCurveFloat* targetLerpSpeedVertical_p9, NIM_BOOL bSetNewMovementMode_p10, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode_p11, NIM_BOOL bRestrictSpeedToExpected_p12, UCurveVector_* pathOffsetCurve_p13, UCurveFloat* timeMappingCurve_p14, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p15, FVector setVelocityOnFinish_p16, NF32 clampVelocityOnFinish_p17, NIM_BOOL bDisableDestinationReachedInterrupt_p18);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToActorForce_*, applyRootMotionMoveToActorForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, AActor* targetActor_p2, FVector targetLocationOffset_p3, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow offsetAlignment_p4, NF32 duration_p5, UCurveFloat* targetLerpSpeedHorizontal_p6, UCurveFloat* targetLerpSpeedVertical_p7, NIM_BOOL bSetNewMovementMode_p8, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode_p9, NIM_BOOL bRestrictSpeedToExpected_p10, UCurveVector_* pathOffsetCurve_p11, UCurveFloat* timeMappingCurve_p12, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p13, FVector setVelocityOnFinish_p14, NF32 clampVelocityOnFinish_p15, NIM_BOOL bDisableDestinationReachedInterrupt_p16);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToForceDelegate_*, onTimedOut)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonTimedOut)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, FApplyRootMotionMoveToForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToForceDelegate_*, onTimedOutAndDestinationReached)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonTimedOutAndDestinationReached)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, FApplyRootMotionMoveToForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, newMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToForce_* obj_p0, UCurveVector_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToForce_*, applyRootMotionMoveToForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FVector targetLocation_p2, NF32 duration_p3, NIM_BOOL bSetNewMovementMode_p4, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode_p5, NIM_BOOL bRestrictSpeedToExpected_p6, UCurveVector_* pathOffsetCurve_p7, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p8, FVector setVelocityOnFinish_p9, NF32 clampVelocityOnFinish_p10);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionRadialForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, FApplyRootMotionRadialForceDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, location)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlocation)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, locationActor)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlocationActor)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsPush)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsPush)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAdditive)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAdditive)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoZForce)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNoZForce)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthDistanceFalloff)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthDistanceFalloff)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthOverTime)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthOverTime)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, fixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionRadialForce_*, applyRootMotionRadialForce_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FVector location_p2, AActor* locationActor_p3, NF32 strength_p4, NF32 duration_p5, NF32 radius_p6, NIM_BOOL bIsPush_p7, NIM_BOOL bIsAdditive_p8, NIM_BOOL bNoZForce_p9, UCurveFloat* strengthDistanceFalloff_p10, UCurveFloat* strengthOverTime_p11, NIM_BOOL bUseFixedWorldDirection_p12, FRotator fixedWorldDirection_p13, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode_p14, FVector setVelocityOnFinish_p15, NF32 clampVelocityOnFinish_p16);
N_LIB_PRIVATE N_NIMCALL(FMoveToLocationDelegate_*, onTargetLocationReached)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonTargetLocationReached)(UAbilityTask_MoveToLocation_* obj_p0, FMoveToLocationDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_MoveToLocation_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_MoveToLocation_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, durationOfMovement)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdurationOfMovement)(UAbilityTask_MoveToLocation_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, lerpCurve)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlerpCurve)(UAbilityTask_MoveToLocation_* obj_p0, UCurveFloat* val_p1);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, lerpCurveVector)(UAbilityTask_MoveToLocation_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlerpCurveVector)(UAbilityTask_MoveToLocation_* obj_p0, UCurveVector_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_MoveToLocation_*, moveToLocation_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, FVector location_p2, NF32 duration_p3, UCurveFloat* optionalInterpolationCurve_p4, UCurveVector_* optionalVectorInterpolationCurve_p5);
N_LIB_PRIVATE N_NIMCALL(FNetworkSyncDelegate_*, onSync)(UAbilityTask_NetworkSyncPoint_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonSync)(UAbilityTask_NetworkSyncPoint_* obj_p0, FNetworkSyncDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_NetworkSyncPoint_*, waitNetSync_)(UGameplayAbility* owningAbility_p0, tyEnum_EAbilityTaskNetSyncType__EgeSxV6iySO44lsR1IuGDQ syncType_p1);
N_LIB_PRIVATE N_NIMCALL(void, onSignalCallback_)(UAbilityTask_NetworkSyncPoint_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onCompleted)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonCompleted)(UAbilityTask_PlayMontageAndWait_* obj_p0, FMontageWaitSimpleDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onBlendOut)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonBlendOut)(UAbilityTask_PlayMontageAndWait_* obj_p0, FMontageWaitSimpleDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onInterrupted)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonInterrupted)(UAbilityTask_PlayMontageAndWait_* obj_p0, FMontageWaitSimpleDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onCancelled)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonCancelled)(UAbilityTask_PlayMontageAndWait_* obj_p0, FMontageWaitSimpleDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, montageToPlay)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmontageToPlay)(UAbilityTask_PlayMontageAndWait_* obj_p0, UAnimMontage* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, rate)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrate)(UAbilityTask_PlayMontageAndWait_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, startSection)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartSection)(UAbilityTask_PlayMontageAndWait_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, animRootMotionTranslationScale)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setanimRootMotionTranslationScale)(UAbilityTask_PlayMontageAndWait_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, startTimeSeconds)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartTimeSeconds)(UAbilityTask_PlayMontageAndWait_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStopWhenAbilityEnds)(UAbilityTask_PlayMontageAndWait_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStopWhenAbilityEnds)(UAbilityTask_PlayMontageAndWait_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onMontageInterrupted_)(UAbilityTask_PlayMontageAndWait_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onMontageEnded_)(UAbilityTask_PlayMontageAndWait_* self_p0, UAnimMontage* montage_p1, NIM_BOOL bInterrupted_p2);
N_LIB_PRIVATE N_NIMCALL(void, onMontageBlendingOut_)(UAbilityTask_PlayMontageAndWait_* self_p0, UAnimMontage* montage_p1, NIM_BOOL bInterrupted_p2);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_PlayMontageAndWait_*, createPlayMontageAndWaitProxy_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, UAnimMontage* montageToPlay_p2, NF32 rate_p3, FName startSection_p4, NIM_BOOL bStopWhenAbilityEnds_p5, NF32 animRootMotionTranslationScale_p6, NF32 startTimeSeconds_p7);
N_LIB_PRIVATE N_NIMCALL(FRepeatedActionDelegate_*, onPerformAction)(UAbilityTask_Repeat_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonPerformAction)(UAbilityTask_Repeat_* obj_p0, FRepeatedActionDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FRepeatedActionDelegate_*, onFinished)(UAbilityTask_Repeat_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinished)(UAbilityTask_Repeat_* obj_p0, FRepeatedActionDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_Repeat_*, repeatAction_)(UGameplayAbility* owningAbility_p0, NF32 timeBetweenActions_p1, NI32 totalActionCount_p2);
N_LIB_PRIVATE N_NIMCALL(FSpawnActorDelegate_*, success)(UAbilityTask_SpawnActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsuccess)(UAbilityTask_SpawnActor_* obj_p0, FSpawnActorDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSpawnActorDelegate_*, didNotSpawn)(UAbilityTask_SpawnActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdidNotSpawn)(UAbilityTask_SpawnActor_* obj_p0, FSpawnActorDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_SpawnActor_*, spawnActor_)(UGameplayAbility* owningAbility_p0, FGameplayAbilityTargetDataHandle targetData_p1, TY__9akcXb9b3ftlkdW8NDwR22Mg class_p2);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_SpawnActor_* self_p0, UGameplayAbility* owningAbility_p1, FGameplayAbilityTargetDataHandle targetData_p2, AActor* spawnedActor_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_SpawnActor_* self_p0, UGameplayAbility* owningAbility_p1, FGameplayAbilityTargetDataHandle targetData_p2, TY__9akcXb9b3ftlkdW8NDwR22Mg class_p3, AActor*& spawnedActor_p4);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_StartAbilityState_*, startAbilityState_)(UGameplayAbility* owningAbility_p0, FName stateName_p1, NIM_BOOL bEndCurrentState_p2);
N_LIB_PRIVATE N_NIMCALL(FVisualizeTargetingDelegate_*, timeElapsed)(UAbilityTask_VisualizeTargeting_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settimeElapsed)(UAbilityTask_VisualizeTargeting_* obj_p0, FVisualizeTargetingDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_VisualizeTargeting_*, visualizeTargetingUsingActor_)(UGameplayAbility* owningAbility_p0, AGameplayAbilityTargetActor_* targetActor_p1, FName taskInstanceName_p2, NF32 duration_p3);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_VisualizeTargeting_*, visualizeTargeting_)(UGameplayAbility* owningAbility_p0, TY__BI8SmagfluPMTT9a6rFT3XQ class_p1, FName taskInstanceName_p2, NF32 duration_p3);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_VisualizeTargeting_* self_p0, UGameplayAbility* owningAbility_p1, AGameplayAbilityTargetActor_* spawnedActor_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_VisualizeTargeting_* self_p0, UGameplayAbility* owningAbility_p1, TY__BI8SmagfluPMTT9a6rFT3XQ class_p2, AGameplayAbilityTargetActor_*& spawnedActor_p3);
N_LIB_PRIVATE N_NIMCALL(FWaitAbilityActivateDelegate_*, onActivate)(UAbilityTask_WaitAbilityActivate_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonActivate)(UAbilityTask_WaitAbilityActivate_* obj_p0, FWaitAbilityActivateDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityActivate_*, waitForAbilityActivateWithTagRequirements_)(UGameplayAbility* owningAbility_p0, FGameplayTagRequirements tagRequirements_p1, NIM_BOOL includeTriggeredAbilities_p2, NIM_BOOL triggerOnce_p3);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityActivate_*, waitForAbilityActivate_)(UGameplayAbility* owningAbility_p0, FGameplayTag withTag_p1, FGameplayTag withoutTag_p2, NIM_BOOL includeTriggeredAbilities_p3, NIM_BOOL triggerOnce_p4);
N_LIB_PRIVATE N_NIMCALL(void, onAbilityActivate_)(UAbilityTask_WaitAbilityActivate_* self_p0, UGameplayAbility* activatedAbility_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitAbilityCommitDelegate_*, onCommit)(UAbilityTask_WaitAbilityCommit_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonCommit)(UAbilityTask_WaitAbilityCommit_* obj_p0, FWaitAbilityCommitDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityCommit_*, waitForAbilityCommit_)(UGameplayAbility* owningAbility_p0, FGameplayTag withTag_p1, FGameplayTag withoutTage_p2, NIM_BOOL triggerOnce_p3);
N_LIB_PRIVATE N_NIMCALL(void, onAbilityCommit_)(UAbilityTask_WaitAbilityCommit_* self_p0, UGameplayAbility* activatedAbility_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeDelegate_*, onChange)(UAbilityTask_WaitAttributeChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChange_* obj_p0, FWaitAttributeChangeDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, externalOwner)(UAbilityTask_WaitAttributeChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChange_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChange_*, waitForAttributeChangeWithComparison_)(UGameplayAbility* owningAbility_p0, FGameplayAttribute inAttribute_p1, FGameplayTag inWithTag_p2, FGameplayTag inWithoutTag_p3, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w inComparisonType_p4, NF32 inComparisonValue_p5, NIM_BOOL triggerOnce_p6, AActor* optionalExternalOwner_p7);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChange_*, waitForAttributeChange_)(UGameplayAbility* owningAbility_p0, FGameplayAttribute attribute_p1, FGameplayTag withSrcTag_p2, FGameplayTag withoutSrcTag_p3, NIM_BOOL triggerOnce_p4, AActor* optionalExternalOwner_p5);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeRatioThresholdDelegate_*, onChange)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj_p0, FWaitAttributeChangeRatioThresholdDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, externalOwner)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChangeRatioThreshold_*, waitForAttributeChangeRatioThreshold_)(UGameplayAbility* owningAbility_p0, FGameplayAttribute attributeNumerator_p1, FGameplayAttribute attributeDenominator_p2, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w comparisonType_p3, NF32 comparisonValue_p4, NIM_BOOL bTriggerOnce_p5, AActor* optionalExternalOwner_p6);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeThresholdDelegate_*, onChange)(UAbilityTask_WaitAttributeChangeThreshold_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChangeThreshold_* obj_p0, FWaitAttributeChangeThresholdDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, externalOwner)(UAbilityTask_WaitAttributeChangeThreshold_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChangeThreshold_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChangeThreshold_*, waitForAttributeChangeThreshold_)(UGameplayAbility* owningAbility_p0, FGameplayAttribute attribute_p1, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w comparisonType_p2, NF32 comparisonValue_p3, NIM_BOOL bTriggerOnce_p4, AActor* optionalExternalOwner_p5);
N_LIB_PRIVATE N_NIMCALL(FWaitCancelDelegate_*, onCancel)(UAbilityTask_WaitCancel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonCancel)(UAbilityTask_WaitCancel_* obj_p0, FWaitCancelDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitCancel_*, waitCancel_)(UGameplayAbility* owningAbility_p0);
N_LIB_PRIVATE N_NIMCALL(void, onLocalCancelCallback_)(UAbilityTask_WaitCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onCancelCallback_)(UAbilityTask_WaitCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FGenericGameplayTaskDelegate_*, onConfirm)(UAbilityTask_WaitConfirm_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonConfirm)(UAbilityTask_WaitConfirm_* obj_p0, FGenericGameplayTaskDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitConfirm_*, waitConfirm_)(UGameplayAbility* owningAbility_p0);
N_LIB_PRIVATE N_NIMCALL(void, onConfirmCallback_)(UAbilityTask_WaitConfirm_* self_p0, UGameplayAbility* inAbility_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitConfirmCancelDelegate_*, onConfirm)(UAbilityTask_WaitConfirmCancel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonConfirm)(UAbilityTask_WaitConfirmCancel_* obj_p0, FWaitConfirmCancelDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitConfirmCancelDelegate_*, onCancel)(UAbilityTask_WaitConfirmCancel_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonCancel)(UAbilityTask_WaitConfirmCancel_* obj_p0, FWaitConfirmCancelDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitConfirmCancel_*, waitConfirmCancel_)(UGameplayAbility* owningAbility_p0);
N_LIB_PRIVATE N_NIMCALL(void, onLocalConfirmCallback_)(UAbilityTask_WaitConfirmCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onLocalCancelCallback_)(UAbilityTask_WaitConfirmCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onConfirmCallback_)(UAbilityTask_WaitConfirmCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onCancelCallback_)(UAbilityTask_WaitConfirmCancel_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FWaitDelayDelegate_*, onFinish)(UAbilityTask_WaitDelay_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_WaitDelay_* obj_p0, FWaitDelayDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitDelay_*, waitDelay_)(UGameplayAbility* owningAbility_p0, NF32 time_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, externalOwner)(UAbilityTask_WaitGameplayEffectApplied_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitGameplayEffectApplied_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onApplyGameplayEffectCallback_)(UAbilityTask_WaitGameplayEffectApplied_* self_p0, UAbilitySystemComponent* target_p1, FGameplayEffectSpec& specApplied_p2, FActiveGameplayEffectHandle activeHandle_p3);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectAppliedSelfDelegate_*, onApplied)(UAbilityTask_WaitGameplayEffectApplied_Self_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityTask_WaitGameplayEffectApplied_Self_* obj_p0, FGameplayEffectAppliedSelfDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectApplied_Self_*, waitGameplayEffectAppliedToSelf_)(UGameplayAbility* owningAbility_p0, FGameplayTargetDataFilterHandle_ sourceFilter_p1, FGameplayTagRequirements sourceTagRequirements_p2, FGameplayTagRequirements targetTagRequirements_p3, NIM_BOOL triggerOnce_p4, AActor* optionalExternalOwner_p5, NIM_BOOL listenForPeriodicEffect_p6);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectAppliedTargetDelegate_*, onApplied)(UAbilityTask_WaitGameplayEffectApplied_Target_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityTask_WaitGameplayEffectApplied_Target_* obj_p0, FGameplayEffectAppliedTargetDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectApplied_Target_*, waitGameplayEffectAppliedToTarget_)(UGameplayAbility* owningAbility_p0, FGameplayTargetDataFilterHandle_ targetFilter_p1, FGameplayTagRequirements sourceTagRequirements_p2, FGameplayTagRequirements targetTagRequirements_p3, NIM_BOOL triggerOnce_p4, AActor* optionalExternalOwner_p5, NIM_BOOL listenForPeriodicEffects_p6);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectBlockedDelegate_*, blocked)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblocked)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj_p0, FGameplayEffectBlockedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, externalOwner)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectBlockedImmunity_*, waitGameplayEffectBlockedByImmunity_)(UGameplayAbility* owningAbility_p0, FGameplayTagRequirements sourceTagRequirements_p1, FGameplayTagRequirements targetTagRequirements_p2, AActor* optionalExternalTarget_p3, NIM_BOOL onlyTriggerOnce_p4);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectRemovedDelegate_*, onRemoved)(UAbilityTask_WaitGameplayEffectRemoved_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonRemoved)(UAbilityTask_WaitGameplayEffectRemoved_* obj_p0, FWaitGameplayEffectRemovedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectRemovedDelegate_*, invalidHandle)(UAbilityTask_WaitGameplayEffectRemoved_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidHandle)(UAbilityTask_WaitGameplayEffectRemoved_* obj_p0, FWaitGameplayEffectRemovedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectRemoved_*, waitForGameplayEffectRemoved_)(UGameplayAbility* owningAbility_p0, FActiveGameplayEffectHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(void, onGameplayEffectRemoved_)(UAbilityTask_WaitGameplayEffectRemoved_* self_p0, FGameplayEffectRemovalInfo& inGameplayEffectRemovalInfo_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectStackChangeDelegate_*, onChange)(UAbilityTask_WaitGameplayEffectStackChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitGameplayEffectStackChange_* obj_p0, FWaitGameplayEffectStackChangeDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectStackChangeDelegate_*, invalidHandle)(UAbilityTask_WaitGameplayEffectStackChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidHandle)(UAbilityTask_WaitGameplayEffectStackChange_* obj_p0, FWaitGameplayEffectStackChangeDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectStackChange_*, waitForGameplayEffectStackChange_)(UGameplayAbility* owningAbility_p0, FActiveGameplayEffectHandle handle_p1);
N_LIB_PRIVATE N_NIMCALL(void, onGameplayEffectStackChange_)(UAbilityTask_WaitGameplayEffectStackChange_* self_p0, FActiveGameplayEffectHandle handle_p1, NI32 newCount_p2, NI32 oldCount_p3);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEventDelegate_*, eventReceived)(UAbilityTask_WaitGameplayEvent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, seteventReceived)(UAbilityTask_WaitGameplayEvent_* obj_p0, FWaitGameplayEventDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, optionalExternalTarget)(UAbilityTask_WaitGameplayEvent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayEvent_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEvent_*, waitGameplayEvent_)(UGameplayAbility* owningAbility_p0, FGameplayTag eventTag_p1, AActor* optionalExternalTarget_p2, NIM_BOOL onlyTriggerOnce_p3, NIM_BOOL onlyMatchExact_p4);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, optionalExternalTarget)(UAbilityTask_WaitGameplayTag_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayTag_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, gameplayTagCallback_)(UAbilityTask_WaitGameplayTag_* self_p0, FGameplayTag tag_p1, NI32 newCount_p2);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagDelegate_*, added)(UAbilityTask_WaitGameplayTagAdded_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setadded)(UAbilityTask_WaitGameplayTagAdded_* obj_p0, FWaitGameplayTagDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayTagAdded_*, waitGameplayTagAdd_)(UGameplayAbility* owningAbility_p0, FGameplayTag tag_p1, AActor* inOptionalExternalTarget_p2, NIM_BOOL onlyTriggerOnce_p3);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagDelegate_*, removed)(UAbilityTask_WaitGameplayTagRemoved_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setremoved)(UAbilityTask_WaitGameplayTagRemoved_* obj_p0, FWaitGameplayTagDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayTagRemoved_*, waitGameplayTagRemove_)(UGameplayAbility* owningAbility_p0, FGameplayTag tag_p1, AActor* inOptionalExternalTarget_p2, NIM_BOOL onlyTriggerOnce_p3);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagQueryDelegate_*, triggered)(UAbilityTask_WaitGameplayTagQuery_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settriggered)(UAbilityTask_WaitGameplayTagQuery_* obj_p0, FWaitGameplayTagQueryDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent*, optionalExternalTarget)(UAbilityTask_WaitGameplayTagQuery_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayTagQuery_* obj_p0, UAbilitySystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, updateTargetTags_)(UAbilityTask_WaitGameplayTagQuery_* self_p0, FGameplayTag tag_p1, NI32 newCount_p2);
N_LIB_PRIVATE N_NIMCALL(FInputPressDelegate_*, onPress)(UAbilityTask_WaitInputPress_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonPress)(UAbilityTask_WaitInputPress_* obj_p0, FInputPressDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitInputPress_*, waitInputPress_)(UGameplayAbility* owningAbility_p0, NIM_BOOL bTestAlreadyPressed_p1);
N_LIB_PRIVATE N_NIMCALL(void, onPressCallback_)(UAbilityTask_WaitInputPress_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FInputReleaseDelegate_*, onRelease)(UAbilityTask_WaitInputRelease_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonRelease)(UAbilityTask_WaitInputRelease_* obj_p0, FInputReleaseDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitInputRelease_*, waitInputRelease_)(UGameplayAbility* owningAbility_p0, NIM_BOOL bTestAlreadyReleased_p1);
N_LIB_PRIVATE N_NIMCALL(void, onReleaseCallback_)(UAbilityTask_WaitInputRelease_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMovementModeChangedDelegate_*, onChange)(UAbilityTask_WaitMovementModeChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitMovementModeChange_* obj_p0, FMovementModeChangedDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, onMovementModeChange_)(UAbilityTask_WaitMovementModeChange_* self_p0, ACharacter* character_p1, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ prevMovementMode_p2, NU8 previousCustomMode_p3);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitMovementModeChange_*, createWaitMovementModeChange_)(UGameplayAbility* owningAbility_p0, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ newMode_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitOverlapDelegate_*, onOverlap)(UAbilityTask_WaitOverlap_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonOverlap)(UAbilityTask_WaitOverlap_* obj_p0, FWaitOverlapDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitOverlap_*, waitForOverlap_)(UGameplayAbility* owningAbility_p0);
N_LIB_PRIVATE N_NIMCALL(void, onHitCallback_)(UAbilityTask_WaitOverlap_* self_p0, UPrimitiveComponent* hitComp_p1, AActor* otherActor_p2, UPrimitiveComponent* otherComp_p3, FVector normalImpulse_p4, FHitResult& hit_p5);
N_LIB_PRIVATE N_NIMCALL(FWaitTargetDataDelegate_*, validData)(UAbilityTask_WaitTargetData_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvalidData)(UAbilityTask_WaitTargetData_* obj_p0, FWaitTargetDataDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FWaitTargetDataDelegate_*, cancelled)(UAbilityTask_WaitTargetData_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcancelled)(UAbilityTask_WaitTargetData_* obj_p0, FWaitTargetDataDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BI8SmagfluPMTT9a6rFT3XQ, targetClass)(UAbilityTask_WaitTargetData_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetClass)(UAbilityTask_WaitTargetData_* obj_p0, TY__BI8SmagfluPMTT9a6rFT3XQ val_p1);
N_LIB_PRIVATE N_NIMCALL(AGameplayAbilityTargetActor_*, targetActor)(UAbilityTask_WaitTargetData_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetActor)(UAbilityTask_WaitTargetData_* obj_p0, AGameplayAbilityTargetActor_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitTargetData_*, waitTargetDataUsingActor_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A confirmationType_p2, AGameplayAbilityTargetActor_* targetActor_p3);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitTargetData_*, waitTargetData_)(UGameplayAbility* owningAbility_p0, FName taskInstanceName_p1, tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A confirmationType_p2, TY__BI8SmagfluPMTT9a6rFT3XQ class_p3);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReplicatedCancelledCallback_)(UAbilityTask_WaitTargetData_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReplicatedCallback_)(UAbilityTask_WaitTargetData_* self_p0, FGameplayAbilityTargetDataHandle& data_p1, FGameplayTag activationTag_p2);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReadyCallback_)(UAbilityTask_WaitTargetData_* self_p0, FGameplayAbilityTargetDataHandle& data_p1);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataCancelledCallback_)(UAbilityTask_WaitTargetData_* self_p0, FGameplayAbilityTargetDataHandle& data_p1);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_WaitTargetData_* self_p0, UGameplayAbility* owningAbility_p1, AGameplayAbilityTargetActor_* spawnedActor_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_WaitTargetData_* self_p0, UGameplayAbility* owningAbility_p1, TY__BI8SmagfluPMTT9a6rFT3XQ class_p2, AGameplayAbilityTargetActor_*& spawnedActor_p3);
N_LIB_PRIVATE N_NIMCALL(FWaitVelocityChangeDelegate_*, onVelocityChage)(UAbilityTask_WaitVelocityChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setonVelocityChage)(UAbilityTask_WaitVelocityChange_* obj_p0, FWaitVelocityChangeDelegate_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UMovementComponent_*, cachedMovementComponent)(UAbilityTask_WaitVelocityChange_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcachedMovementComponent)(UAbilityTask_WaitVelocityChange_* obj_p0, UMovementComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitVelocityChange_*, createWaitVelocityChange_)(UGameplayAbility* owningAbility_p0, FVector direction_p1, NF32 minimumMagnitude_p2);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesSequencer)(void);
N_LIB_PRIVATE N_NIMCALL(FMovieSceneGameplayCueChannel_*, channel)(UMovieSceneGameplayCueTriggerSection_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchannel)(UMovieSceneGameplayCueTriggerSection_* obj_p0, FMovieSceneGameplayCueChannel_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FMovieSceneGameplayCueKey_*, cue)(UMovieSceneGameplayCueSection_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcue)(UMovieSceneGameplayCueSection_* obj_p0, FMovieSceneGameplayCueKey_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSequencerTrackHandler_)(FMovieSceneGameplayCueEvent_* inGameplayCueTrackHandler_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesSerialization)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineActorPartition)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAI)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, registerMovementComponent_)(UAvoidanceManager_* self_p0, UMovementComponent_* movementComp_p1, NF32 avoidanceWeight_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getObjectCount_)(UAvoidanceManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNewAvoidanceUID_)(UAvoidanceManager_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getAvoidanceVelocityForComponent_)(UAvoidanceManager_* self_p0, UMovementComponent_* movementComp_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAtmosphere)(void);
N_LIB_PRIVATE N_NIMCALL(UAtmosphericFogComponent_*, atmosphericFogComponent)(AAtmosphericFog_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphericFogComponent)(AAtmosphericFog_* obj_p0, UAtmosphericFogComponent_* val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCamera)(void);
N_LIB_PRIVATE N_NIMCALL(UCameraComponent*, cameraComponent)(ACameraActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraComponent)(ACameraActor_* obj_p0, UCameraComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, sceneComponent)(ACameraActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsceneComponent)(ACameraActor_* obj_p0, USceneComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getAutoActivatePlayerIndex_)(ACameraActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, fieldOfView)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfieldOfView)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoWidth)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorthoWidth)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoNearClipPlane)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorthoNearClipPlane)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoFarClipPlane)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorthoFarClipPlane)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aspectRatio)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaspectRatio)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConstrainAspectRatio)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbConstrainAspectRatio)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFieldOfViewForLOD)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFieldOfViewForLOD)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawFrustumAllowed)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawFrustumAllowed)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCameraMeshHiddenInGame)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCameraMeshHiddenInGame)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLockToHmd)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLockToHmd)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePawnControlRotation)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePawnControlRotation)(UCameraComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw, projectionMode)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionMode)(UCameraComponent* obj_p0, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw val_p1);
N_LIB_PRIVATE N_NIMCALL(UStaticMesh*, cameraMesh)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraMesh)(UCameraComponent* obj_p0, UStaticMesh* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, postProcessBlendWeight)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessBlendWeight)(UCameraComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, postProcessSettings)(UCameraComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessSettings)(UCameraComponent* obj_p0, FPostProcessSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseFieldOfViewForLOD_)(UCameraComponent* self_p0, NIM_BOOL bInUseFieldOfViewForLOD_p1);
N_LIB_PRIVATE N_NIMCALL(void, setProjectionMode_)(UCameraComponent* self_p0, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw inProjectionMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPostProcessBlendWeight_)(UCameraComponent* self_p0, NF32 inPostProcessBlendWeight_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoWidth_)(UCameraComponent* self_p0, NF32 inOrthoWidth_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoNearClipPlane_)(UCameraComponent* self_p0, NF32 inOrthoNearClipPlane_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoFarClipPlane_)(UCameraComponent* self_p0, NF32 inOrthoFarClipPlane_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFieldOfView_)(UCameraComponent* self_p0, NF32 inFieldOfView_p1);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintAspectRatio_)(UCameraComponent* self_p0, NIM_BOOL bInConstrainAspectRatio_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAspectRatio_)(UCameraComponent* self_p0, NF32 inAspectRatio_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeBlendable_)(UCameraComponent* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, onCameraMeshHiddenChanged_)(UCameraComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getCameraView_)(UCameraComponent* self_p0, NF32 deltaTime_p1, FMinimalViewInfo& desiredView_p2);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(UCameraComponent* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1, NF32 inWeight_p2);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, transformComponent)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settransformComponent)(APlayerCameraManager* obj_p0, USceneComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultFOV)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultFOV)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultOrthoWidth)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultOrthoWidth)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultAspectRatio)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAspectRatio)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9bGGmzTmY6puojW0P5hirIA*, defaultModifiers)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultModifiers)(APlayerCameraManager* obj_p0, TY__9bGGmzTmY6puojW0P5hirIA val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, freeCamDistance)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfreeCamDistance)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, freeCamOffset)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfreeCamOffset)(APlayerCameraManager* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, viewTargetOffset)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewTargetOffset)(APlayerCameraManager* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsOrthographic)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsOrthographic)(APlayerCameraManager* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDefaultConstrainAspectRatio)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDefaultConstrainAspectRatio)(APlayerCameraManager* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClientSimulatingViewTarget)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbClientSimulatingViewTarget)(APlayerCameraManager* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseClientSideCameraUpdates)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseClientSideCameraUpdates)(APlayerCameraManager* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGameCameraCutThisFrame)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbGameCameraCutThisFrame)(APlayerCameraManager* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewPitchMin)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewPitchMin)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewPitchMax)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewPitchMax)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewYawMin)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewYawMin)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewYawMax)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewYawMax)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewRollMin)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewRollMin)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewRollMax)(APlayerCameraManager* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewRollMax)(APlayerCameraManager* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopCameraShake_)(APlayerCameraManager* self_p0, UCameraShakeBase_* shakeInstance_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopCameraFade_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stopAllInstancesOfCameraShakeFromSource_)(APlayerCameraManager* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, UCameraShakeSourceComponent_* sourceComponent_p2, NIM_BOOL bImmediately_p3);
N_LIB_PRIVATE N_NIMCALL(void, stopAllInstancesOfCameraShake_)(APlayerCameraManager* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shake_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakesFromSource_)(APlayerCameraManager* self_p0, UCameraShakeSourceComponent_* sourceComponent_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakes_)(APlayerCameraManager* self_p0, NIM_BOOL bImmediately_p1);
N_LIB_PRIVATE N_NIMCALL(UCameraShakeBase_*, startCameraShakeFromSource_)(APlayerCameraManager* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shakeClass_p1, UCameraShakeSourceComponent_* sourceComponent_p2, NF32 scale_p3, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace_p4, FRotator userPlaySpaceRot_p5);
N_LIB_PRIVATE N_NIMCALL(UCameraShakeBase_*, startCameraShake_)(APlayerCameraManager* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA shakeClass_p1, NF32 scale_p2, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace_p3, FRotator userPlaySpaceRot_p4);
N_LIB_PRIVATE N_NIMCALL(void, startCameraFade_)(APlayerCameraManager* self_p0, NF32 fromAlpha_p1, NF32 toAlpha_p2, NF32 duration_p3, FLinearColor color_p4, NIM_BOOL bShouldFadeAudio_p5, NIM_BOOL bHoldWhenFinished_p6);
N_LIB_PRIVATE N_NIMCALL(void, setManualCameraFade_)(APlayerCameraManager* self_p0, NF32 inFadeAmount_p1, FLinearColor color_p2, NIM_BOOL bInFadeAudio_p3);
N_LIB_PRIVATE N_NIMCALL(void, setGameCameraCutThisFrame_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, removeGenericCameraLensEffect_)(APlayerCameraManager* self_p0, TY__hvmi1aSu7TExY3gfL1PBlA emitter_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCameraModifier_)(APlayerCameraManager* self_p0, UCameraModifier_* modifierToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayerController_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getFOVAngle_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getCameraRotation_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getCameraLocation_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(UCameraModifier_*, findCameraModifierByClass_)(APlayerCameraManager* self_p0, TY__GYGn274MFCl9cAJqupIxNcA modifierClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearCameraLensEffects_)(APlayerCameraManager* self_p0);
N_LIB_PRIVATE N_NIMCALL(UCameraModifier_*, addNewCameraModifier_)(APlayerCameraManager* self_p0, TY__GYGn274MFCl9cAJqupIxNcA modifierClass_p1);
N_LIB_PRIVATE N_NIMCALL(TY__hvmi1aSu7TExY3gfL1PBlA, addGenericCameraLensEffect_)(APlayerCameraManager* self_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg lensEffectEmitterClass_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExclusive)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbExclusive)(UCameraModifier_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, priority)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UCameraModifier_* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, cameraOwner)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraOwner)(UCameraModifier_* obj_p0, APlayerCameraManager* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, alphaInTime)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalphaInTime)(UCameraModifier_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, alphaOutTime)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalphaOutTime)(UCameraModifier_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, alpha)(UCameraModifier_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setalpha)(UCameraModifier_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDisabled_)(UCameraModifier_* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getViewTarget_)(UCameraModifier_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, enableModifier_)(UCameraModifier_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, disableModifier_)(UCameraModifier_* self_p0, NIM_BOOL bImmediate_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shakeScale)(UCameraShakeBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshakeScale)(UCameraShakeBase_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRootShakePattern_)(UCameraShakeBase_* self_p0, UCameraShakePattern_* inPattern_p1);
N_LIB_PRIVATE N_NIMCALL(UCameraShakePattern_*, getRootShakePattern_)(UCameraShakeBase_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w, attenuation)(UCameraShakeSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(UCameraShakeSourceComponent_* obj_p0, tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, innerAttenuationRadius)(UCameraShakeSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinnerAttenuationRadius)(UCameraShakeSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, outerAttenuationRadius)(UCameraShakeSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setouterAttenuationRadius)(UCameraShakeSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__KQEDk1C09aJw5qI9c3NLtbyA, cameraShake)(UCameraShakeSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcameraShake)(UCameraShakeSourceComponent_* obj_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoStart)(UCameraShakeSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoStart)(UCameraShakeSourceComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakesOfType_)(UCameraShakeSourceComponent_* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA inCameraShake_p1, NIM_BOOL bImmediately_p2);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakes_)(UCameraShakeSourceComponent_* self_p0, NIM_BOOL bImmediately_p1);
N_LIB_PRIVATE N_NIMCALL(void, startCameraShake_)(UCameraShakeSourceComponent_* self_p0, TY__KQEDk1C09aJw5qI9c3NLtbyA inCameraShake_p1, NF32 scale_p2, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace_p3, FRotator userPlaySpaceRot_p4);
N_LIB_PRIVATE N_NIMCALL(void, start_)(UCameraShakeSourceComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getAttenuationFactor_)(UCameraShakeSourceComponent_* self_p0, FVector& location_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCommandlets)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineComponents)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, componentTags)(UActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcomponentTags)(UActorComponent* obj_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateUsingRegisteredSubObjectList)(UActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateUsingRegisteredSubObjectList)(UActorComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicates)(UActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicates)(UActorComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoActivate)(UActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoActivate)(UActorComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsEditorOnly)(UActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsEditorOnly)(UActorComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleActive_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setTickGroup_)(UActorComponent* self_p0, tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw newTickGroup_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTickableWhenPaused_)(UActorComponent* self_p0, NIM_BOOL bTickableWhenPaused_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsReplicated_)(UActorComponent* self_p0, NIM_BOOL shouldReplicate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickIntervalAndCooldown_)(UActorComponent* self_p0, NF32 tickInterval_p1);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickInterval_)(UActorComponent* self_p0, NF32 tickInterval_p1);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickEnabled_)(UActorComponent* self_p0, NIM_BOOL bEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAutoActivate_)(UActorComponent* self_p0, NIM_BOOL bNewAutoActivate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setActive_)(UActorComponent* self_p0, NIM_BOOL bNewActive_p1, NIM_BOOL bReset_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteComponent_)(UActorComponent* self_p0, UActorComponent* prerequisiteComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteActor_)(UActorComponent* self_p0, AActor* prerequisiteActor_p1);
N_LIB_PRIVATE N_NIMCALL(void, destroyComponent_)(UActorComponent* self_p0, UObject* object_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isComponentTickEnabled_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBeingDestroyed_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwner_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getComponentTickInterval_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, deactivate_)(UActorComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentHasTag_)(UActorComponent* self_p0, FName tag_p1);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteComponent_)(UActorComponent* self_p0, UActorComponent* prerequisiteComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteActor_)(UActorComponent* self_p0, AActor* prerequisiteActor_p1);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(UActorComponent* self_p0, NIM_BOOL bReset_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(USceneComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(USceneComponent* obj_p0, FRotator val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale3D)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale3D)(USceneComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteLocation)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteLocation)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteRotation)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteRotation)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteScale)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteScale)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisible)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbVisible)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldUpdatePhysicsVolume)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldUpdatePhysicsVolume)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHiddenInGame)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHiddenInGame)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAttachParentBound)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAttachParentBound)(USceneComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg, mobility)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmobility)(USceneComponent* obj_p0, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g, detailMode)(USceneComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdetailMode)(USceneComponent* obj_p0, tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleVisibility_)(USceneComponent* self_p0, NIM_BOOL bPropagateToChildren_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWorldScale3D_)(USceneComponent* self_p0, FVector newScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVisibility_)(USceneComponent* self_p0, NIM_BOOL bNewVisibility_p1, NIM_BOOL bPropagateToChildren_p2);
N_LIB_PRIVATE N_NIMCALL(void, setShouldUpdatePhysicsVolume_)(USceneComponent* self_p0, NIM_BOOL bInShouldUpdatePhysicsVolume_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeScale3D_)(USceneComponent* self_p0, FVector newScale3D_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMobility_)(USceneComponent* self_p0, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg newMobility_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHiddenInGame_)(USceneComponent* self_p0, NIM_BOOL newHidden_p1, NIM_BOOL bPropagateToChildren_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAbsolute_)(USceneComponent* self_p0, NIM_BOOL bNewAbsoluteLocation_p1, NIM_BOOL bNewAbsoluteRotation_p2, NIM_BOOL bNewAbsoluteScale_p3);
N_LIB_PRIVATE N_NIMCALL(void, resetRelativeTransform_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWorldTransform_)(USceneComponent* self_p0, FTransform& newTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setWorldRotation_)(USceneComponent* self_p0, FRotator newRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocationAndRotation_)(USceneComponent* self_p0, FVector newLocation_p1, FRotator newRotation_p2, NIM_BOOL bSweep_p3, FHitResult& sweepHitResult_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocation_)(USceneComponent* self_p0, FVector newLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeTransform_)(USceneComponent* self_p0, FTransform& newTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeRotation_)(USceneComponent* self_p0, FRotator newRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeLocationAndRotation_)(USceneComponent* self_p0, FVector newLocation_p1, FRotator newRotation_p2, NIM_BOOL bSweep_p3, FHitResult& sweepHitResult_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeLocation_)(USceneComponent* self_p0, FVector newLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(FTransform, getComponentToWorld_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentScale_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FRotator, getComponentRotation_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentLocation_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, detachFromComponent_)(USceneComponent* self_p0, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg locationRule_p1, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg rotationRule_p2, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg scaleRule_p3, NIM_BOOL bCallModify_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToComponent_)(USceneComponent* self_p0, USceneComponent* parent_p1, FName socketName_p2, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule_p3, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule_p4, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule_p5, NIM_BOOL bWeldSimulatedBodies_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachTo_)(USceneComponent* self_p0, USceneComponent* inParent_p1, FName inSocketName_p2, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachType_p3, NIM_BOOL bWeldSimulatedBodies_p4);
N_LIB_PRIVATE N_NIMCALL(void, addWorldTransformKeepScale_)(USceneComponent* self_p0, FTransform& deltaTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addWorldTransform_)(USceneComponent* self_p0, FTransform& deltaTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addWorldRotation_)(USceneComponent* self_p0, FRotator deltaRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addWorldOffset_)(USceneComponent* self_p0, FVector deltaLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addRelativeRotation_)(USceneComponent* self_p0, FRotator deltaRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addRelativeLocation_)(USceneComponent* self_p0, FVector deltaLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addLocalTransform_)(USceneComponent* self_p0, FTransform& deltaTransform_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addLocalRotation_)(USceneComponent* self_p0, FRotator deltaRotation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(void, addLocalOffset_)(USceneComponent* self_p0, FVector deltaLocation_p1, NIM_BOOL bSweep_p2, FHitResult& sweepHitResult_p3, NIM_BOOL bTeleport_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSimulatingPhysics_)(USceneComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnySimulatingPhysics_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVector_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getSocketTransform_)(USceneComponent* self_p0, FName inSocketName_p1, tyEnum_ERelativeTransformSpace__SP35ggqlhgdAFoiyxcw8gg transformSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getSocketRotation_)(USceneComponent* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(FQuat, getSocketQuaternion_)(USceneComponent* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getSocketLocation_)(USceneComponent* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getShouldUpdatePhysicsVolume_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVector_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getRelativeTransform_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getParentComponents_)(USceneComponent* self_p0, TY__7Q1qw9bMtL8Ptbe5C3movyA& parents_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumChildrenComponents_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getForwardVector_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentVelocity_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getChildrenComponents_)(USceneComponent* self_p0, NIM_BOOL bIncludeAllDescendants_p1, TY__7Q1qw9bMtL8Ptbe5C3movyA& children_p2);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, getChildComponent_)(USceneComponent* self_p0, NI32 childIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getAttachSocketName_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, getAttachParent_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getAllSocketNames_)(USceneComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesSocketExist_)(USceneComponent* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(void, detachFromParent_)(USceneComponent* self_p0, NIM_BOOL bMaintainWorldPosition_p1, NIM_BOOL bCallModify_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, minDrawDistance)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminDrawDistance)(UPrimitiveComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lDMaxDrawDistance)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlDMaxDrawDistance)(UPrimitiveComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cachedMaxDrawDistance)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcachedMaxDrawDistance)(UPrimitiveComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ, indirectLightingCacheQuality)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setindirectLightingCacheQuality)(UPrimitiveComponent* obj_p0, tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ, lightmapType)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightmapType)(UPrimitiveComponent* obj_p0, tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw, hLODBatchingPolicy)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethLODBatchingPolicy)(UPrimitiveComponent* obj_p0, tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableAutoLODGeneration)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableAutoLODGeneration)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNeverDistanceCull)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNeverDistanceCull)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysCreatePhysicsState)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysCreatePhysicsState)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGenerateOverlapEvents)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerateOverlapEvents)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMultiBodyOverlap)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMultiBodyOverlap)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTraceComplexOnMove)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTraceComplexOnMove)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReturnMaterialOnMove)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReturnMaterialOnMove)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowCullDistanceVolume)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowCullDistanceVolume)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInReflectionCaptures)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInReflectionCaptures)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInRealTimeSkyCaptures)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInRealTimeSkyCaptures)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInRayTracing)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInRayTracing)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderInMainPass)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderInMainPass)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderInDepthPass)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderInDepthPass)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReceivesDecals)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReceivesDecals)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHoldout)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHoldout)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOwnerNoSee)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOwnerNoSee)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOnlyOwnerSee)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOnlyOwnerSee)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTreatAsBackgroundForOcclusion)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTreatAsBackgroundForOcclusion)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAsOccluder)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAsOccluder)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceMipStreaming)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceMipStreaming)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, castShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastShadow)(UPrimitiveComponent* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEmissiveLightSource)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEmissiveLightSource)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDynamicIndirectLighting)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDynamicIndirectLighting)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectIndirectLightingWhileHidden)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectIndirectLightingWhileHidden)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDistanceFieldLighting)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDistanceFieldLighting)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDynamicShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDynamicShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastStaticShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastStaticShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastVolumetricTranslucentShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastVolumetricTranslucentShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastContactShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastContactShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSelfShadowOnly)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSelfShadowOnly)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastFarShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastFarShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastInsetShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastInsetShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCinematicShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCinematicShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastHiddenShadow)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastHiddenShadow)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowAsTwoSided)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowAsTwoSided)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLightAttachmentsAsGroup)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLightAttachmentsAsGroup)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExcludeFromLightAttachmentGroup)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbExcludeFromLightAttachmentGroup)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReceiveMobileCSMShadows)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReceiveMobileCSMShadows)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSingleSampleShadowFromStationaryLights)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSingleSampleShadowFromStationaryLights)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreRadialImpulse)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreRadialImpulse)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreRadialForce)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreRadialForce)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyImpulseOnDamage)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyImpulseOnDamage)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicatePhysicsToAutonomousProxy)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicatePhysicsToAutonomousProxy)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderCustomDepth)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderCustomDepth)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInSceneCaptureOnly)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInSceneCaptureOnly)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHiddenInSceneCapture)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbHiddenInSceneCapture)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStaticWhenNotMoveable)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStaticWhenNotMoveable)(UPrimitiveComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ, canCharacterStepUpOn)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcanCharacterStepUpOn)(UPrimitiveComponent* obj_p0, tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(UPrimitiveComponent* obj_p0, FLightingChannels val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, rayTracingGroupId)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayTracingGroupId)(UPrimitiveComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, customDepthStencilValue)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomDepthStencilValue)(UPrimitiveComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, translucencySortPriority)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settranslucencySortPriority)(UPrimitiveComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, translucencySortDistanceOffset)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settranslucencySortDistanceOffset)(UPrimitiveComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw, virtualTextureRenderPassType)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureRenderPassType)(UPrimitiveComponent* obj_p0, tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw val_p1);
N_LIB_PRIVATE N_NIMCALL(FBodyInstance*, bodyInstance)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbodyInstance)(UPrimitiveComponent* obj_p0, FBodyInstance val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA, rayTracingGroupCullingPriority)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayTracingGroupCullingPriority)(UPrimitiveComponent* obj_p0, tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A, customDepthStencilWriteMask)(UPrimitiveComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomDepthStencilWriteMask)(UPrimitiveComponent* obj_p0, tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasRecentlyRendered_)(UPrimitiveComponent* self_p0, NF32 tolerance_p1);
N_LIB_PRIVATE N_NIMCALL(void, wakeRigidBody_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, wakeAllRigidBodies_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableSlopeOverride_)(UPrimitiveComponent* self_p0, FWalkableSlopeOverride& newOverride_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVisibleInSceneCaptureOnly_)(UPrimitiveComponent* self_p0, NIM_BOOL bValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVisibleInRayTracing_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewVisibleInRayTracing_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterForDefaultCustomPrimitiveData_)(UPrimitiveComponent* self_p0, FName parameterName_p1, FVector4 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterForCustomPrimitiveData_)(UPrimitiveComponent* self_p0, FName parameterName_p1, FVector4 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setUseCCD_)(UPrimitiveComponent* self_p0, NIM_BOOL inUseCCD_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTranslucentSortPriority_)(UPrimitiveComponent* self_p0, NI32 newTranslucentSortPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTranslucencySortDistanceOffset_)(UPrimitiveComponent* self_p0, NF32 newTranslucencySortDistanceOffset_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStaticWhenNotMoveable_)(UPrimitiveComponent* self_p0, NIM_BOOL bInStaticWhenNotMoveable_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSingleSampleShadowFromStationaryLights_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewSingleSampleShadowFromStationaryLights_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSimulatePhysics_)(UPrimitiveComponent* self_p0, NIM_BOOL bSimulate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterForDefaultCustomPrimitiveData_)(UPrimitiveComponent* self_p0, FName parameterName_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterForCustomPrimitiveData_)(UPrimitiveComponent* self_p0, FName parameterName_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setRenderInMainPass_)(UPrimitiveComponent* self_p0, NIM_BOOL bValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderInDepthPass_)(UPrimitiveComponent* self_p0, NIM_BOOL bValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRenderCustomDepth_)(UPrimitiveComponent* self_p0, NIM_BOOL bValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReceivesDecals_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewReceivesDecals_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPhysMaterialOverride_)(UPrimitiveComponent* self_p0, UPhysicalMaterial* newPhysMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsMaxAngularVelocityInRadians_)(UPrimitiveComponent* self_p0, NF32 newMaxAngVel_p1, NIM_BOOL bAddToCurrent_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsMaxAngularVelocityInDegrees_)(UPrimitiveComponent* self_p0, NF32 newMaxAngVel_p1, NIM_BOOL bAddToCurrent_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsLinearVelocity_)(UPrimitiveComponent* self_p0, FVector newVel_p1, NIM_BOOL bAddToCurrent_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self_p0, FVector newAngVel_p1, NIM_BOOL bAddToCurrent_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self_p0, FVector newAngVel_p1, NIM_BOOL bAddToCurrent_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, setOwnerNoSee_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewOwnerNoSee_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOnlyOwnerSee_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewOnlyOwnerSee_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNotifyRigidBodyCollision_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewNotifyRigidBodyCollision_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialByName_)(UPrimitiveComponent* self_p0, FName materialSlotName_p1, UMaterialInterface* material_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UPrimitiveComponent* self_p0, NI32 elementIndex_p1, UMaterialInterface* material_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMassScale_)(UPrimitiveComponent* self_p0, FName boneName_p1, NF32 inMassScale_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMassOverrideInKg_)(UPrimitiveComponent* self_p0, FName boneName_p1, NF32 massInKg_p2, NIM_BOOL bOverrideMass_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDamping_)(UPrimitiveComponent* self_p0, NF32 inDamping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightingChannels_)(UPrimitiveComponent* self_p0, NIM_BOOL bChannel0_p1, NIM_BOOL bChannel1_p2, NIM_BOOL bChannel2_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLightAttachmentsAsGroup_)(UPrimitiveComponent* self_p0, NIM_BOOL bInLightAttachmentsAsGroup_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHoldout_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewHoldout_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHiddenInSceneCapture_)(UPrimitiveComponent* self_p0, NIM_BOOL bValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGenerateOverlapEvents_)(UPrimitiveComponent* self_p0, NIM_BOOL bInGenerateOverlapEvents_p1);
N_LIB_PRIVATE N_NIMCALL(void, setExcludeFromLightAttachmentGroup_)(UPrimitiveComponent* self_p0, NIM_BOOL bInExcludeFromLightAttachmentGroup_p1);
N_LIB_PRIVATE N_NIMCALL(void, setExcludeForSpecificHLODLevels_)(UPrimitiveComponent* self_p0, TY__TxfK2fhRJXNHttPFRcL6fA& inExcludeForSpecificHLODLevels_p1);
N_LIB_PRIVATE N_NIMCALL(void, setExcludedFromHLODLevel_)(UPrimitiveComponent* self_p0, tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ hLODLevel_p1, NIM_BOOL bExcluded_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEnableGravity_)(UPrimitiveComponent* self_p0, NIM_BOOL bGravityEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEmissiveLightSource_)(UPrimitiveComponent* self_p0, NIM_BOOL newEmissiveLightSource_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector4_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector4 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector3_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector2_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector2D value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataFloat_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector4_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector4 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector3_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector2_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, FVector2D value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataFloat_)(UPrimitiveComponent* self_p0, NI32 dataIndex_p1, NF32 value_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCustomDepthStencilWriteMask_)(UPrimitiveComponent* self_p0, tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A writeMaskBit_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCustomDepthStencilValue_)(UPrimitiveComponent* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCullDistance_)(UPrimitiveComponent* self_p0, NF32 newCullDistance_p1);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintMode_)(UPrimitiveComponent* self_p0, tyEnum_EDOFMode__Ae5jNwUvq1zlHN6TSX1GFA constraintMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionResponseToChannel_)(UPrimitiveComponent* self_p0, ECollisionChannel channel_p1, tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA newResponse_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionResponseToAllChannels_)(UPrimitiveComponent* self_p0, tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA newResponse_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionProfileName_)(UPrimitiveComponent* self_p0, FName inCollisionProfileName_p1, NIM_BOOL bUpdateOverlaps_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionObjectType_)(UPrimitiveComponent* self_p0, ECollisionChannel channel_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionEnabled_)(UPrimitiveComponent* self_p0, tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q newType_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCenterOfMass_)(UPrimitiveComponent* self_p0, FVector centerOfMassOffset_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadow_)(UPrimitiveComponent* self_p0, NIM_BOOL newCastShadow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastInsetShadow_)(UPrimitiveComponent* self_p0, NIM_BOOL bInCastInsetShadow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastHiddenShadow_)(UPrimitiveComponent* self_p0, NIM_BOOL newCastHiddenShadow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastContactShadow_)(UPrimitiveComponent* self_p0, NIM_BOOL bInCastContactShadow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBoundsScale_)(UPrimitiveComponent* self_p0, NF32 newBoundsScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDamping_)(UPrimitiveComponent* self_p0, NF32 inDamping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllUseCCD_)(UPrimitiveComponent* self_p0, NIM_BOOL inUseCCD_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsLinearVelocity_)(UPrimitiveComponent* self_p0, FVector newVel_p1, NIM_BOOL bAddToCurrent_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self_p0, FVector& newAngVel_p1, NIM_BOOL bAddToCurrent_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self_p0, FVector& newAngVel_p1, NIM_BOOL bAddToCurrent_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllMassScale_)(UPrimitiveComponent* self_p0, NF32 inMassScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectIndirectLightingWhileHidden_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewAffectIndirectLightingWhileHidden_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDynamicIndirectLighting_)(UPrimitiveComponent* self_p0, NIM_BOOL bNewAffectDynamicIndirectLighting_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDistanceFieldLighting_)(UPrimitiveComponent* self_p0, NIM_BOOL newAffectDistanceFieldLighting_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, scaleByMomentOfInertia_)(UPrimitiveComponent* self_p0, FVector inputVector_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(void, putRigidBodyToSleep_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceComponent_)(UPrimitiveComponent* self_p0, FVector traceStart_p1, FVector traceEnd_p2, NF32 sphereRadius_p3, NIM_BOOL bTraceComplex_p4, NIM_BOOL bShowTrace_p5, NIM_BOOL bPersistentShowTrace_p6, FVector& hitLocation_p7, FVector& hitNormal_p8, FName& boneName_p9, FHitResult& outHit_p10);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapComponent_)(UPrimitiveComponent* self_p0, FVector inSphereCentre_p1, NF32 inSphereRadius_p2, NIM_BOOL bTraceComplex_p3, NIM_BOOL bShowTrace_p4, NIM_BOOL bPersistentShowTrace_p5, FVector& hitLocation_p6, FVector& hitNormal_p7, FName& boneName_p8, FHitResult& outHit_p9);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceComponent_)(UPrimitiveComponent* self_p0, FVector traceStart_p1, FVector traceEnd_p2, NIM_BOOL bTraceComplex_p3, NIM_BOOL bShowTrace_p4, NIM_BOOL bPersistentShowTrace_p5, FVector& hitLocation_p6, FVector& hitNormal_p7, FName& boneName_p8, FHitResult& outHit_p9);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isQueryCollisionEnabled_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPhysicsCollisionEnabled_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCollisionEnabled_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapComponent_)(UPrimitiveComponent* self_p0, FVector inBoxCentre_p1, FBox inBox_p2, NIM_BOOL bTraceComplex_p3, NIM_BOOL bShowTrace_p4, NIM_BOOL bPersistentShowTrace_p5, FVector& hitLocation_p6, FVector& hitNormal_p7, FName& boneName_p8, FHitResult& outHit_p9);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingComponent_)(UPrimitiveComponent* self_p0, UPrimitiveComponent* otherComp_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingActor_)(UPrimitiveComponent* self_p0, AActor* other_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGravityEnabled_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isExcludedFromHLODLevel_)(UPrimitiveComponent* self_p0, tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ hLODLevel_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyRigidBodyAwake_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, invalidateLumenSurfaceCache_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, ignoreComponentWhenMoving_)(UPrimitiveComponent* self_p0, UPrimitiveComponent* component_p1, NIM_BOOL bShouldIgnore_p2);
N_LIB_PRIVATE N_NIMCALL(void, ignoreActorWhenMoving_)(UPrimitiveComponent* self_p0, AActor* actor_p1, NIM_BOOL bShouldIgnore_p2);
N_LIB_PRIVATE N_NIMCALL(FWalkableSlopeOverride, getWalkableSlopeOverride_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStaticWhenNotMoveable_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsLinearVelocityAtPoint_)(UPrimitiveComponent* self_p0, FVector point_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsLinearVelocity_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingComponents_)(UPrimitiveComponent* self_p0, TY__RN0jXIbC9cvfWt68iswDSAw& outOverlappingComponents_p1);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingActors_)(UPrimitiveComponent* self_p0, TY__kbK03O9cVTTS0GR9cjPhedTg& overlappingActors_p1, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumMaterials_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterialFromCollisionFaceIndex_)(UPrimitiveComponent* self_p0, NI32 faceIndex_p1, NI32& sectionIndex_p2);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterial_)(UPrimitiveComponent* self_p0, NI32 elementIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getMassScale_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getMass_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getLinearDamping_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getInertiaTensor_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGenerateOverlapEvents_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getExcludeForSpecificHLODLevels_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getCustomPrimitiveDataIndexForVectorParameter_)(UPrimitiveComponent* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getCustomPrimitiveDataIndexForScalarParameter_)(UPrimitiveComponent* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA, getCollisionResponseToChannel_)(UPrimitiveComponent* self_p0, ECollisionChannel channel_p1);
N_LIB_PRIVATE N_NIMCALL(FName, getCollisionProfileName_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, getCollisionObjectType_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q, getCollisionEnabled_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getClosestPointOnCollision_)(UPrimitiveComponent* self_p0, FVector& point_p1, FVector& outPointOnBody_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getCenterOfMass_)(UPrimitiveComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(FBodyInstanceAsyncPhysicsTickHandle, getBodyInstanceAsyncPhysicsTickHandle_)(UPrimitiveComponent* self_p0, FName boneName_p1, NIM_BOOL bGetWelded_p2, NI32 index_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getAngularDamping_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UPrimitiveComponent* self_p0, NI32 elementIndex_p1, UMaterialInterface* sourceMaterial_p2, FName optionalName_p3);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createAndSetMaterialInstanceDynamicFromMaterial_)(UPrimitiveComponent* self_p0, NI32 elementIndex_p1, UMaterialInterface* parent_p2);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createAndSetMaterialInstanceDynamic_)(UPrimitiveComponent* self_p0, NI32 elementIndex_p1);
N_LIB_PRIVATE N_NIMCALL(TY__RN0jXIbC9cvfWt68iswDSAw, copyArrayOfMoveIgnoreComponents_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, copyArrayOfMoveIgnoreActors_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMoveIgnoreComponents_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearMoveIgnoreActors_)(UPrimitiveComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canCharacterStepUp_)(UPrimitiveComponent* self_p0, APawn* pawn_p1);
N_LIB_PRIVATE N_NIMCALL(void, addVelocityChangeImpulseAtLocation_)(UPrimitiveComponent* self_p0, FVector impulse_p1, FVector location_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, addTorqueInRadians_)(UPrimitiveComponent* self_p0, FVector torque_p1, FName boneName_p2, NIM_BOOL bAccelChange_p3);
N_LIB_PRIVATE N_NIMCALL(void, addTorqueInDegrees_)(UPrimitiveComponent* self_p0, FVector torque_p1, FName boneName_p2, NIM_BOOL bAccelChange_p3);
N_LIB_PRIVATE N_NIMCALL(void, addRadialImpulse_)(UPrimitiveComponent* self_p0, FVector origin_p1, NF32 radius_p2, NF32 strength_p3, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg falloff_p4, NIM_BOOL bVelChange_p5);
N_LIB_PRIVATE N_NIMCALL(void, addRadialForce_)(UPrimitiveComponent* self_p0, FVector origin_p1, NF32 radius_p2, NF32 strength_p3, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg falloff_p4, NIM_BOOL bAccelChange_p5);
N_LIB_PRIVATE N_NIMCALL(void, addImpulseAtLocation_)(UPrimitiveComponent* self_p0, FVector impulse_p1, FVector location_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, addImpulse_)(UPrimitiveComponent* self_p0, FVector impulse_p1, FName boneName_p2, NIM_BOOL bVelChange_p3);
N_LIB_PRIVATE N_NIMCALL(void, addForceAtLocationLocal_)(UPrimitiveComponent* self_p0, FVector force_p1, FVector location_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, addForceAtLocation_)(UPrimitiveComponent* self_p0, FVector force_p1, FVector location_p2, FName boneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(UPrimitiveComponent* self_p0, FVector force_p1, FName boneName_p2, NIM_BOOL bAccelChange_p3);
N_LIB_PRIVATE N_NIMCALL(void, addAngularImpulseInRadians_)(UPrimitiveComponent* self_p0, FVector impulse_p1, FName boneName_p2, NIM_BOOL bVelChange_p3);
N_LIB_PRIVATE N_NIMCALL(void, addAngularImpulseInDegrees_)(UPrimitiveComponent* self_p0, FVector impulse_p1, FName boneName_p2, NIM_BOOL bVelChange_p3);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, overlayMaterial)(UMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayMaterial)(UMeshComponent* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, overlayMaterialMaxDrawDistance)(UMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayMaterialMaxDrawDistance)(UMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMaterialParameterCaching)(UMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMaterialParameterCaching)(UMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValueOnMaterials_)(UMeshComponent* self_p0, FName parameterName_p1, FVector parameterValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValueOnMaterials_)(UMeshComponent* self_p0, FName parameterName_p1, NF32 parameterValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayMaterialMaxDrawDistance_)(UMeshComponent* self_p0, NF32 inMaxDrawDistance_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayMaterial_)(UMeshComponent* self_p0, UMaterialInterface* newOverlayMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, prestreamTextures_)(UMeshComponent* self_p0, NF32 seconds_p1, NIM_BOOL bPrioritizeCharacterTextures_p2, NI32 cinematicTextureGroups_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMaterialSlotNameValid_)(UMeshComponent* self_p0, FName materialSlotName_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getOverlayMaterial_)(UMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getMaterialSlotNames_)(UMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__UxQQNE4PCeF9btDY9avFuEmA, getMaterials_)(UMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaterialIndex_)(UMeshComponent* self_p0, FName materialSlotName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLodModel)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLodModel)(UStaticMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, minLOD)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminLOD)(UStaticMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UStaticMesh*, staticMesh)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMesh)(UStaticMeshComponent* obj_p0, UStaticMesh* val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, wireframeColorOverride)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwireframeColorOverride)(UStaticMeshComponent* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisallowNanite)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisallowNanite)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEvaluateWorldPositionOffset)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEvaluateWorldPositionOffset)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEvaluateWorldPositionOffsetInRayTracing)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEvaluateWorldPositionOffsetInRayTracing)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, worldPositionOffsetDisableDistance)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setworldPositionOffsetDisableDistance)(UStaticMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideWireframeColor)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideWireframeColor)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideMinLOD)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideMinLOD)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisallowMeshPaintPerInstance)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisallowMeshPaintPerInstance)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreInstanceForTextureStreaming)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreInstanceForTextureStreaming)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLightMapRes)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLightMapRes)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDistanceFieldIndirectShadow)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDistanceFieldIndirectShadow)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideDistanceFieldSelfShadowBias)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideDistanceFieldSelfShadowBias)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSortTriangles)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSortTriangles)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReverseCulling)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbReverseCulling)(UStaticMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, overriddenLightMapRes)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverriddenLightMapRes)(UStaticMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldIndirectShadowMinVisibility)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldIndirectShadowMinVisibility)(UStaticMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldSelfShadowBias)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldSelfShadowBias)(UStaticMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, streamingDistanceMultiplier)(UStaticMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingDistanceMultiplier)(UStaticMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setStaticMesh_)(UStaticMeshComponent* self_p0, UStaticMesh* newMesh_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReverseCulling_)(UStaticMeshComponent* self_p0, NIM_BOOL reverseCulling_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForcedLodModel_)(UStaticMeshComponent* self_p0, NI32 newForcedLodModel_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceDisableNanite_)(UStaticMeshComponent* self_p0, NIM_BOOL bInForceDisableNanite_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEvaluateWorldPositionOffsetInRayTracing_)(UStaticMeshComponent* self_p0, NIM_BOOL newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEvaluateWorldPositionOffset_)(UStaticMeshComponent* self_p0, NIM_BOOL newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceFieldSelfShadowBias_)(UStaticMeshComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, getLocalBounds_)(UStaticMeshComponent* self_p0, FVector& min_p1, FVector& max_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getInitialEvaluateWorldPositionOffset_)(UStaticMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, skeletalMesh)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMesh)(USkinnedMeshComponent* obj_p0, USkeletalMesh* val_p1);
N_LIB_PRIVATE N_NIMCALL(USkinnedAsset*, skinnedAsset)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskinnedAsset)(USkinnedMeshComponent* obj_p0, USkinnedAsset* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__TroUwqr83BUH9a7zjBn89bmg, leaderPoseComponent)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setleaderPoseComponent)(USkinnedMeshComponent* obj_p0, TY__TroUwqr83BUH9a7zjBn89bmg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__wYMJCrtNG2j9b9bmJG11m7FA*, skinCacheUsage)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskinCacheUsage)(USkinnedMeshComponent* obj_p0, TY__wYMJCrtNG2j9b9bmJG11m7FA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetMeshDeformer)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSetMeshDeformer)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformer_*, meshDeformer)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformer)(USkinnedMeshComponent* obj_p0, UMeshDeformer_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstanceSettings_*, meshDeformerInstanceSettings)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformerInstanceSettings)(USkinnedMeshComponent* obj_p0, UMeshDeformerInstanceSettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstance_*, meshDeformerInstance)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformerInstance)(USkinnedMeshComponent* obj_p0, UMeshDeformerInstance_* val_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, physicsAssetOverride)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsAssetOverride)(USkinnedMeshComponent* obj_p0, UPhysicsAsset* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLodModel)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLodModel)(USkinnedMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, minLodModel)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminLodModel)(USkinnedMeshComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, streamingDistanceMultiplier)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingDistanceMultiplier)(USkinnedMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog, visibilityBasedAnimTickOption)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvisibilityBasedAnimTickOption)(USkinnedMeshComponent* obj_p0, tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideMinLod)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideMinLod)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseBoundsFromLeaderPoseComponent)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseBoundsFromLeaderPoseComponent)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableMorphTarget)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableMorphTarget)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPerBoneMotionBlur)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPerBoneMotionBlur)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bComponentUseFixedSkelBounds)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbComponentUseFixedSkelBounds)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsiderAllBodiesForBounds)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbConsiderAllBodiesForBounds)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSyncAttachParentLOD)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSyncAttachParentLOD)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCapsuleDirectShadow)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCapsuleDirectShadow)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCapsuleIndirectShadow)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCapsuleIndirectShadow)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableUpdateRateOptimizations)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableUpdateRateOptimizations)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisplayDebugUpdateRateOptimizations)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisplayDebugUpdateRateOptimizations)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderStatic)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderStatic)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreLeaderPoseComponentLOD)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreLeaderPoseComponentLOD)(USkinnedMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleIndirectShadowMinVisibility)(USkinnedMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleIndirectShadowMinVisibility)(USkinnedMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unsetMeshDeformer_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, unloadSkinWeightProfile_)(USkinnedMeshComponent* self_p0, FName inProfileName_p1);
N_LIB_PRIVATE N_NIMCALL(void, unHideBoneByName_)(USkinnedMeshComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, transformToBoneSpace_)(USkinnedMeshComponent* self_p0, FName boneName_p1, FVector inPosition_p2, FRotator inRotation_p3, FVector& outPosition_p4, FRotator& outRotation_p5);
N_LIB_PRIVATE N_NIMCALL(void, transformFromBoneSpace_)(USkinnedMeshComponent* self_p0, FName boneName_p1, FVector inPosition_p2, FRotator inRotation_p3, FVector& outPosition_p4, FRotator& outRotation_p5);
N_LIB_PRIVATE N_NIMCALL(void, showMaterialSection_)(USkinnedMeshComponent* self_p0, NI32 materialID_p1, NI32 sectionIndex_p2, NIM_BOOL bShow_p3, NI32 lODIndex_p4);
N_LIB_PRIVATE N_NIMCALL(void, showAllMaterialSections_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVertexOffsetUsage_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1, NI32 usage_p2);
N_LIB_PRIVATE N_NIMCALL(void, setVertexColorOverride_LinearColor_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1, TY__LIN349biVKUmlJo9abXyib3Q& vertexColors_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setSkinWeightProfile_)(USkinnedMeshComponent* self_p0, FName inProfileName_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkinWeightOverride_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1, TY__PF9cKY57TwRad2X4MD2NIXg& skinWeights_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSkinnedAssetAndUpdate_)(USkinnedMeshComponent* self_p0, USkinnedAsset* newMesh_p1, NIM_BOOL bReinitPose_p2);
N_LIB_PRIVATE N_NIMCALL(void, setRenderStatic_)(USkinnedMeshComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPreSkinningOffsets_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1, TY__Bz8EFFwaAOJiUrMHOIgVGw offsets_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPostSkinningOffsets_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1, TY__Bz8EFFwaAOJiUrMHOIgVGw offsets_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAsset_)(USkinnedMeshComponent* self_p0, UPhysicsAsset* newPhysicsAsset_p1, NIM_BOOL bForceReInit_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMinLOD_)(USkinnedMeshComponent* self_p0, NI32 inNewMinLOD_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMeshDeformer_)(USkinnedMeshComponent* self_p0, UMeshDeformer_* inMeshDeformer_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLeaderPoseComponent_)(USkinnedMeshComponent* self_p0, USkinnedMeshComponent* newLeaderBoneComponent_p1, NIM_BOOL bForceUpdate_p2, NIM_BOOL bInFollowerShouldTickPose_p3);
N_LIB_PRIVATE N_NIMCALL(void, setForcedLOD_)(USkinnedMeshComponent* self_p0, NI32 inNewForcedLOD_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastCapsuleIndirectShadow_)(USkinnedMeshComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastCapsuleDirectShadow_)(USkinnedMeshComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleIndirectShadowMinVisibility_)(USkinnedMeshComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUsingSkinWeightProfile_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMaterialSectionShown_)(USkinnedMeshComponent* self_p0, NI32 materialID_p1, NI32 lODIndex_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBoneHiddenByName_)(USkinnedMeshComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, hideBoneByName_)(USkinnedMeshComponent* self_p0, FName boneName_p1, tyEnum_EPhysBodyOp__ZRipZLaIbTXziX2enGnveA physBodyOption_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getVertexOffsetUsage_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTwistAndSwingAngleOfDeltaRotationFromRefPose_)(USkinnedMeshComponent* self_p0, FName boneName_p1, NF32& outTwistAngle_p2, NF32& outSwingAngle_p3);
N_LIB_PRIVATE N_NIMCALL(FName, getSocketBoneName_)(USkinnedMeshComponent* self_p0, FName inSocketName_p1);
N_LIB_PRIVATE N_NIMCALL(USkinnedAsset*, getSkinnedAsset_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, getSkeletalMesh_DEPRECATED_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getRefPoseTransform_)(USkinnedMeshComponent* self_p0, NI32 boneIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getRefPosePosition_)(USkinnedMeshComponent* self_p0, NI32 boneIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getPredictedLODLevel_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getParentBone_)(USkinnedMeshComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLODs_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumBones_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstance_*, getMeshDeformerInstance_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getForcedLOD_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FTransform, getDeltaTransformFromRefPose_)(USkinnedMeshComponent* self_p0, FName boneName_p1, FName baseName_p2);
N_LIB_PRIVATE N_NIMCALL(FName, getCurrentSkinWeightProfileName_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getBoneName_)(USkinnedMeshComponent* self_p0, NI32 boneIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneIndex_)(USkinnedMeshComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(FName, findClosestBone_K2_)(USkinnedMeshComponent* self_p0, FVector testLocation_p1, FVector& boneLocation_p2, NF32 ignoreScale_p3, NIM_BOOL bRequirePhysicsAsset_p4);
N_LIB_PRIVATE N_NIMCALL(void, clearVertexColorOverride_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearSkinWeightProfile_)(USkinnedMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearSkinWeightOverride_)(USkinnedMeshComponent* self_p0, NI32 lODIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boneIsChildOf_)(USkinnedMeshComponent* self_p0, FName boneName_p1, FName parentBoneName_p2);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, skeletalMeshAsset)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMeshAsset)(USkeletalMeshComponent* obj_p0, USkeletalMesh* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSingleAnimationPlayData*, animationData)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setanimationData)(USkeletalMeshComponent* obj_p0, FSingleAnimationPlayData val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, globalAnimRateScale)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAnimRateScale)(USkeletalMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg, kinematicBonesUpdateType)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setkinematicBonesUpdateType)(USkeletalMeshComponent* obj_p0, tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ, physicsTransformUpdateMode)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsTransformUpdateMode)(USkeletalMeshComponent* obj_p0, tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA, animationMode)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setanimationMode)(USkeletalMeshComponent* obj_p0, tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisablePostProcessBlueprint)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisablePostProcessBlueprint)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePhysicsOnDedicatedServer)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePhysicsOnDedicatedServer)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateMeshWhenKinematic)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateMeshWhenKinematic)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateJointsFromAnimation)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateJointsFromAnimation)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowClothActors)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowClothActors)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableClothSimulation)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableClothSimulation)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCollideWithEnvironment)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCollideWithEnvironment)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCollideWithAttachedChildren)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCollideWithAttachedChildren)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceCollisionUpdate)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceCollisionUpdate)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLocalSpaceSimulation)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLocalSpaceSimulation)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bResetAfterTeleport)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbResetAfterTeleport)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDeferKinematicBoneUpdate)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDeferKinematicBoneUpdate)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoSkeletonUpdate)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNoSkeletonUpdate)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseAnims)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseAnims)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePerPolyCollision)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePerPolyCollision)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIncludeComponentLocationIntoBounds)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIncludeComponentLocationIntoBounds)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPropagateCurvesToFollowers)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPropagateCurvesToFollowers)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSkipKinematicUpdateWhenInterpolating)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSkipKinematicUpdateWhenInterpolating)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSkipBoundsUpdateWhenInterpolating)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSkipBoundsUpdateWhenInterpolating)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, clothBlendWeight)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclothBlendWeight)(USkeletalMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWaitForParallelClothTask)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbWaitForParallelClothTask)(USkeletalMeshComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, clothMaxDistanceScale)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclothMaxDistanceScale)(USkeletalMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, teleportDistanceThreshold)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setteleportDistanceThreshold)(USkeletalMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, teleportRotationThreshold)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setteleportRotationThreshold)(USkeletalMeshComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, defaultAnimatingRigOverride)(USkeletalMeshComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAnimatingRigOverride)(USkeletalMeshComponent* obj_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg val_p1);
N_LIB_PRIVATE N_NIMCALL(void, unbindClothFromLeaderPoseComponent_)(USkeletalMeshComponent* self_p0, NIM_BOOL bRestoreSimulationSpace_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleDisablePostProcessBlueprint_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, termBodiesBelow_)(USkeletalMeshComponent* self_p0, FName parentBoneName_p1);
N_LIB_PRIVATE N_NIMCALL(void, suspendClothingSimulation_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, snapshotPose_)(USkeletalMeshComponent* self_p0, FPoseSnapshot& snapshot_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUpdateClothInEditor_)(USkeletalMeshComponent* self_p0, NIM_BOOL newUpdateState_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUpdateAnimationInEditor_)(USkeletalMeshComponent* self_p0, NIM_BOOL newUpdateState_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTeleportRotationThreshold_)(USkeletalMeshComponent* self_p0, NF32 threshold_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTeleportDistanceThreshold_)(USkeletalMeshComponent* self_p0, NF32 threshold_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkeletalMeshAsset_)(USkeletalMeshComponent* self_p0, USkeletalMesh* newMesh_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(USkeletalMeshComponent* self_p0, NF32 inPos_p1, NIM_BOOL bFireNotifies_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(USkeletalMeshComponent* self_p0, NF32 rate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsBlendWeight_)(USkeletalMeshComponent* self_p0, NF32 physicsBlendWeight_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNotifyRigidBodyCollisionBelow_)(USkeletalMeshComponent* self_p0, NIM_BOOL bNewNotifyRigidBodyCollision_p1, FName boneName_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTarget_)(USkeletalMeshComponent* self_p0, FName morphTargetName_p1, NF32 value_p2, NIM_BOOL bRemoveZeroWeight_p3);
N_LIB_PRIVATE N_NIMCALL(void, setEnablePhysicsBlending_)(USkeletalMeshComponent* self_p0, NIM_BOOL bNewBlendPhysics_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnableGravityOnAllBodiesBelow_)(USkeletalMeshComponent* self_p0, NIM_BOOL bEnableGravity_p1, FName boneName_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, setEnableBodyGravity_)(USkeletalMeshComponent* self_p0, NIM_BOOL bEnableGravity_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDisablePostProcessBlueprint_)(USkeletalMeshComponent* self_p0, NIM_BOOL bInDisablePostProcess_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDisableAnimCurves_)(USkeletalMeshComponent* self_p0, NIM_BOOL bInDisableAnimCurves_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultAnimatingRigOverride_)(USkeletalMeshComponent* self_p0, TY__9b5kQ3g2w5CXovAbu5D6pTg inAnimatingRig_p1);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintProfileForAll_)(USkeletalMeshComponent* self_p0, FName profileName_p1, NIM_BOOL bDefaultIfNotFound_p2);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintProfile_)(USkeletalMeshComponent* self_p0, FName jointName_p1, FName profileName_p2, NIM_BOOL bDefaultIfNotFound_p3);
N_LIB_PRIVATE N_NIMCALL(void, setClothMaxDistanceScale_)(USkeletalMeshComponent* self_p0, NF32 scale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBodyNotifyRigidBodyCollision_)(USkeletalMeshComponent* self_p0, NIM_BOOL bNewNotifyRigidBodyCollision_p1, FName boneName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAnimClass_)(USkeletalMeshComponent* self_p0, UClass* newClass_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationMode_)(USkeletalMeshComponent* self_p0, tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA inAnimationMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAnimation_)(USkeletalMeshComponent* self_p0, UAnimationAsset* newAnimToPlay_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularLimits_)(USkeletalMeshComponent* self_p0, FName inBoneName_p1, NF32 swing1LimitAngle_p2, NF32 twistLimitAngle_p3, NF32 swing2LimitAngle_p4);
N_LIB_PRIVATE N_NIMCALL(void, setAllowRigidBodyAnimNode_)(USkeletalMeshComponent* self_p0, NIM_BOOL bInAllow_p1, NIM_BOOL bReinitAnim_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllowedAnimCurvesEvaluation_)(USkeletalMeshComponent* self_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& list_p1, NIM_BOOL bAllow_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllowClothActors_)(USkeletalMeshComponent* self_p0, NIM_BOOL bInAllow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllowAnimCurveEvaluation_)(USkeletalMeshComponent* self_p0, NIM_BOOL bInAllow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularVelocityDrive_)(USkeletalMeshComponent* self_p0, NIM_BOOL bEnableSwingDrive_p1, NIM_BOOL bEnableTwistDrive_p2, NIM_BOOL bSkipCustomPhysicsType_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularPositionDrive_)(USkeletalMeshComponent* self_p0, NIM_BOOL bEnableSwingDrive_p1, NIM_BOOL bEnableTwistDrive_p2, NIM_BOOL bSkipCustomPhysicsType_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularDriveParams_)(USkeletalMeshComponent* self_p0, NF32 inSpring_p1, NF32 inDamping_p2, NF32 inForceLimit_p3, NIM_BOOL bSkipCustomPhysicsType_p4);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesSimulatePhysics_)(USkeletalMeshComponent* self_p0, NIM_BOOL bNewSimulate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesPhysicsBlendWeight_)(USkeletalMeshComponent* self_p0, NF32 physicsBlendWeight_p1, NIM_BOOL bSkipCustomPhysicsType_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowSimulatePhysics_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1, NIM_BOOL bNewSimulate_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowPhysicsDisabled_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1, NIM_BOOL bDisabled_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowPhysicsBlendWeight_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1, NF32 physicsBlendWeight_p2, NIM_BOOL bSkipCustomPhysicsType_p3, NIM_BOOL bIncludeSelf_p4);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowLinearVelocity_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1, FVector& linearVelocity_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, resumeClothingSimulation_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetClothTeleportMode_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetAnimInstanceDynamics_)(USkeletalMeshComponent* self_p0, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw inTeleportType_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetAllowedAnimCurveEvaluation_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, resetAllBodiesSimulatePhysics_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, playAnimation_)(USkeletalMeshComponent* self_p0, UAnimationAsset* newAnimToPlay_p1, NIM_BOOL bLooping_p2);
N_LIB_PRIVATE N_NIMCALL(void, play_)(USkeletalMeshComponent* self_p0, NIM_BOOL bLooping_p1);
N_LIB_PRIVATE N_NIMCALL(void, overrideAnimationData_)(USkeletalMeshComponent* self_p0, UAnimationAsset* inAnimToPlay_p1, NIM_BOOL bIsLooping_p2, NIM_BOOL bIsPlaying_p3, NF32 position_p4, NF32 playRate_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getClosestPointOnPhysicsAsset_)(USkeletalMeshComponent* self_p0, FVector& worldPosition_p1, FVector& closestWorldPosition_p2, FVector& normal_p3, FName& boneName_p4, NF32& distance_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isClothingSimulationSuspended_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBodyGravityEnabled_)(USkeletalMeshComponent* self_p0, FName boneName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasValidAnimationInstance_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformAttribute_Ref_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, FTransform& outValue_p3, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformAttribute_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, FTransform defaultValue_p3, FTransform& outValue_p4, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p5);
N_LIB_PRIVATE N_NIMCALL(NF32, getTeleportRotationThreshold_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTeleportDistanceThreshold_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStringAttribute_Ref_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, FString& outValue_p3, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStringAttribute_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, FString defaultValue_p3, FString& outValue_p4, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p5);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, getSkeletalMeshAsset_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getSkeletalCenterOfMass_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPosition_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayRate_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getMorphTarget_)(USkeletalMeshComponent* self_p0, FName morphTargetName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntegerAttribute_Ref_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, NI32& outValue_p3, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntegerAttribute_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, NI32 defaultValue_p3, NI32& outValue_p4, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFloatAttribute_Ref_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, NF32& outValue_p3, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFloatAttribute_)(USkeletalMeshComponent* self_p0, FName& boneName_p1, FName& attributeName_p2, NF32 defaultValue_p3, NF32& outValue_p4, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisablePostProcessBlueprint_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisableAnimCurves_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRigOverride_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRig_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getCurrentJointAngles_)(USkeletalMeshComponent* self_p0, FName inBoneName_p1, NF32& swing1Angle_p2, NF32& twistAngle_p3, NF32& swing2Angle_p4);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintsFromBody_)(USkeletalMeshComponent* self_p0, FName bodyName_p1, NIM_BOOL bParentConstraints_p2, NIM_BOOL bChildConstraints_p3, NIM_BOOL bIncludesTerminated_p4, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints_p5);
N_LIB_PRIVATE N_NIMCALL(void, getConstraints_)(USkeletalMeshComponent* self_p0, NIM_BOOL bIncludesTerminated_p1, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints_p2);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByName_)(USkeletalMeshComponent* self_p0, FName constraintName_p1, NIM_BOOL bIncludesTerminated_p2, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(NF32, getClothMaxDistanceScale_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoneMass_)(USkeletalMeshComponent* self_p0, FName boneName_p1, NIM_BOOL bScaleMass_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneLinearVelocity_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA, getAnimationMode_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowRigidBodyAnimNode_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowedAnimCurveEvaluate_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowClothActors_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, forceClothNextUpdateTeleportAndReset_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, forceClothNextUpdateTeleport_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, findConstraintBoneName_)(USkeletalMeshComponent* self_p0, NI32 constraintIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, clearMorphTargets_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, breakConstraint_)(USkeletalMeshComponent* self_p0, FVector impulse_p1, FVector hitLocation_p2, FName inBoneName_p3);
N_LIB_PRIVATE N_NIMCALL(void, bindClothToLeaderPoseComponent_)(USkeletalMeshComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, allowAnimCurveEvaluation_)(USkeletalMeshComponent* self_p0, FName nameOfCurve_p1, NIM_BOOL bAllow_p2);
N_LIB_PRIVATE N_NIMCALL(void, addImpulseToAllBodiesBelow_)(USkeletalMeshComponent* self_p0, FVector impulse_p1, FName boneName_p2, NIM_BOOL bVelChange_p3, NIM_BOOL bIncludeSelf_p4);
N_LIB_PRIVATE N_NIMCALL(void, addForceToAllBodiesBelow_)(USkeletalMeshComponent* self_p0, FVector force_p1, FName boneName_p2, NIM_BOOL bAccelChange_p3, NIM_BOOL bIncludeSelf_p4);
N_LIB_PRIVATE N_NIMCALL(void, accumulateAllBodiesBelowPhysicsBlendWeight_)(USkeletalMeshComponent* self_p0, FName& inBoneName_p1, NF32 addPhysicsBlendWeight_p2, NIM_BOOL bSkipCustomPhysicsType_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, instancingRandomSeed)(UInstancedStaticMeshComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstancingRandomSeed)(UInstancedStaticMeshComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, instanceStartCullDistance)(UInstancedStaticMeshComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceStartCullDistance)(UInstancedStaticMeshComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, instanceEndCullDistance)(UInstancedStaticMeshComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceEndCullDistance)(UInstancedStaticMeshComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, updateInstanceTransform_)(UInstancedStaticMeshComponent_* self_p0, NI32 instanceIndex_p1, FTransform& newInstanceTransform_p2, NIM_BOOL bWorldSpace_p3, NIM_BOOL bMarkRenderStateDirty_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCustomDataValue_)(UInstancedStaticMeshComponent_* self_p0, NI32 instanceIndex_p1, NI32 customDataIndex_p2, NF32 customDataValue_p3, NIM_BOOL bMarkRenderStateDirty_p4);
N_LIB_PRIVATE N_NIMCALL(void, setCullDistances_)(UInstancedStaticMeshComponent_* self_p0, NI32 startCullDistance_p1, NI32 endCullDistance_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeInstances_)(UInstancedStaticMeshComponent_* self_p0, TY__TxfK2fhRJXNHttPFRcL6fA& instancesToRemove_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeInstance_)(UInstancedStaticMeshComponent_* self_p0, NI32 instanceIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidInstance_)(UInstancedStaticMeshComponent_* self_p0, NI32 instanceIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getInstanceTransform_)(UInstancedStaticMeshComponent_* self_p0, NI32 instanceIndex_p1, FTransform& outInstanceTransform_p2, NIM_BOOL bWorldSpace_p3);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getInstancesOverlappingSphere_)(UInstancedStaticMeshComponent_* self_p0, FVector& center_p1, NF32 radius_p2, NIM_BOOL bSphereInWorldSpace_p3);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getInstancesOverlappingBox_)(UInstancedStaticMeshComponent_* self_p0, FBox& box_p1, NIM_BOOL bBoxInWorldSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getInstanceCount_)(UInstancedStaticMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearInstances_)(UInstancedStaticMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, batchUpdateInstancesTransforms_)(UInstancedStaticMeshComponent_* self_p0, NI32 startInstanceIndex_p1, TY__ZRKjvD0LxpBKI8XAOc3PKg& newInstancesTransforms_p2, NIM_BOOL bWorldSpace_p3, NIM_BOOL bMarkRenderStateDirty_p4, NIM_BOOL bTeleport_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, batchUpdateInstancesTransform_)(UInstancedStaticMeshComponent_* self_p0, NI32 startInstanceIndex_p1, NI32 numInstances_p2, FTransform& newInstancesTransform_p3, NIM_BOOL bWorldSpace_p4, NIM_BOOL bMarkRenderStateDirty_p5, NIM_BOOL bTeleport_p6);
N_LIB_PRIVATE N_NIMCALL(NI32, addInstanceWorldSpace_)(UInstancedStaticMeshComponent_* self_p0, FTransform& worldTransform_p1);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, addInstances_)(UInstancedStaticMeshComponent_* self_p0, TY__ZRKjvD0LxpBKI8XAOc3PKg& instanceTransforms_p1, NIM_BOOL bShouldReturnIndices_p2, NIM_BOOL bWorldSpace_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, addInstance_)(UInstancedStaticMeshComponent_* self_p0, FTransform& instanceTransform_p1, NIM_BOOL bWorldSpace_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg, reflectionSourceType)(UReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreflectionSourceType)(UReflectionCaptureComponent_* obj_p0, tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, cubemap)(UReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcubemap)(UReflectionCaptureComponent_* obj_p0, UTextureCube_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceCubemapAngle)(UReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceCubemapAngle)(UReflectionCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, brightness)(UReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbrightness)(UReflectionCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, captureOffset)(UReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureOffset)(UReflectionCaptureComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, boxTransitionDistance)(UBoxReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setboxTransitionDistance)(UBoxReflectionCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fogDensity)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfogDensity)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fogHeightFalloff)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfogHeightFalloff)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FExponentialHeightFogData_*, secondFogData)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsecondFogData)(UExponentialHeightFogComponent_* obj_p0, FExponentialHeightFogData_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, fogInscatteringLuminance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfogInscatteringLuminance)(UExponentialHeightFogComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, skyAtmosphereAmbientContributionColorScale)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskyAtmosphereAmbientContributionColorScale)(UExponentialHeightFogComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, inscatteringColorCubemap)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringColorCubemap)(UExponentialHeightFogComponent_* obj_p0, UTextureCube_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, inscatteringColorCubemapAngle)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringColorCubemapAngle)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, inscatteringTextureTint)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringTextureTint)(UExponentialHeightFogComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fullyDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfullyDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, nonDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnonDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, directionalInscatteringExponent)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringExponent)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, directionalInscatteringStartDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringStartDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, directionalInscatteringLuminance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringLuminance)(UExponentialHeightFogComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fogMaxOpacity)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfogMaxOpacity)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, startDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstartDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fogCutoffDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfogCutoffDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableVolumetricFog)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableVolumetricFog)(UExponentialHeightFogComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogScatteringDistribution)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogScatteringDistribution)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, volumetricFogAlbedo)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogAlbedo)(UExponentialHeightFogComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, volumetricFogEmissive)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogEmissive)(UExponentialHeightFogComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogExtinctionScale)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogExtinctionScale)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogStartDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogStartDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogNearFadeInDistance)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogNearFadeInDistance)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogStaticLightingScatteringIntensity)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogStaticLightingScatteringIntensity)(UExponentialHeightFogComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLightColorsWithFogInscatteringColors)(UExponentialHeightFogComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLightColorsWithFogInscatteringColors)(UExponentialHeightFogComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogScatteringDistribution_)(UExponentialHeightFogComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogExtinctionScale_)(UExponentialHeightFogComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogEmissive_)(UExponentialHeightFogComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogAlbedo_)(UExponentialHeightFogComponent_* self_p0, FColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFog_)(UExponentialHeightFogComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStartDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogHeightOffset_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogHeightFalloff_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogDensity_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogData_)(UExponentialHeightFogComponent_* self_p0, FExponentialHeightFogData_ newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNonDirectionalInscatteringColorDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringTextureTint_)(UExponentialHeightFogComponent_* self_p0, FLinearColor value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringColorCubemapAngle_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringColorCubemap_)(UExponentialHeightFogComponent_* self_p0, UTextureCube_* value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFullyDirectionalInscatteringColorDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFogMaxOpacity_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFogInscatteringColor_)(UExponentialHeightFogComponent_* self_p0, FLinearColor value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFogHeightFalloff_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFogDensity_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFogCutoffDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringStartDistance_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringExponent_)(UExponentialHeightFogComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringColor_)(UExponentialHeightFogComponent_* self_p0, FLinearColor value_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, intensity)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setintensity)(ULightComponentBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, lightColor)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightColor)(ULightComponentBase* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectsWorld)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectsWorld)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, castShadows)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastShadows)(ULightComponentBase* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, castStaticShadows)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastStaticShadows)(ULightComponentBase* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, castDynamicShadows)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastDynamicShadows)(ULightComponentBase* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectTranslucentLighting)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectTranslucentLighting)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTransmission)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTransmission)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastVolumetricShadow)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastVolumetricShadow)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDeepShadow)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDeepShadow)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg, castRaytracedShadow)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastRaytracedShadow)(ULightComponentBase* obj_p0, tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectReflection)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectReflection)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectGlobalIllumination)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectGlobalIllumination)(ULightComponentBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, deepShadowLayerDistribution)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdeepShadowLayerDistribution)(ULightComponentBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, indirectLightingIntensity)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setindirectLightingIntensity)(ULightComponentBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricScatteringIntensity)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricScatteringIntensity)(ULightComponentBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, samplesPerPixel)(ULightComponentBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsamplesPerPixel)(ULightComponentBase* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSamplesPerPixel_)(ULightComponentBase* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastVolumetricShadow_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadows_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastRaytracedShadows_)(ULightComponentBase* self_p0, tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastRaytracedShadow_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCastDeepShadow_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectReflection_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectGlobalIllumination_)(ULightComponentBase* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLightColor_)(ULightComponentBase* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA, primitiveRenderMode)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprimitiveRenderMode)(USceneCaptureComponent_* obj_p0, tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw, captureSource)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureSource)(USceneCaptureComponent_* obj_p0, tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureEveryFrame)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureEveryFrame)(USceneCaptureComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureOnMovement)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureOnMovement)(USceneCaptureComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysPersistRenderingState)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysPersistRenderingState)(USceneCaptureComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, hiddenActors)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethiddenActors)(USceneCaptureComponent_* obj_p0, TY__kbK03O9cVTTS0GR9cjPhedTg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, showOnlyActors)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshowOnlyActors)(USceneCaptureComponent_* obj_p0, TY__kbK03O9cVTTS0GR9cjPhedTg val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxViewDistanceOverride)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxViewDistanceOverride)(USceneCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, captureSortPriority)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureSortPriority)(USceneCaptureComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRayTracingIfEnabled)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRayTracingIfEnabled)(USceneCaptureComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__AJALGMHKFGHcjpT3h8NRJw*, showFlagSettings)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshowFlagSettings)(USceneCaptureComponent_* obj_p0, TY__AJALGMHKFGHcjpT3h8NRJw val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, profilingEventName)(USceneCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprofilingEventName)(USceneCaptureComponent_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(void, showOnlyComponent_)(USceneCaptureComponent_* self_p0, UPrimitiveComponent* inComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, showOnlyActorComponents_)(USceneCaptureComponent_* self_p0, AActor* inActor_p1, NIM_BOOL bIncludeFromChildActors_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCaptureSortPriority_)(USceneCaptureComponent_* self_p0, NI32 newCaptureSortPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeShowOnlyComponent_)(USceneCaptureComponent_* self_p0, UPrimitiveComponent* inComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeShowOnlyActorComponents_)(USceneCaptureComponent_* self_p0, AActor* inActor_p1, NIM_BOOL bIncludeFromChildActors_p2);
N_LIB_PRIVATE N_NIMCALL(void, hideComponent_)(USceneCaptureComponent_* self_p0, UPrimitiveComponent* inComponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, hideActorComponents_)(USceneCaptureComponent_* self_p0, AActor* inActor_p1, NIM_BOOL bIncludeFromChildActors_p2);
N_LIB_PRIVATE N_NIMCALL(void, clearShowOnlyComponents_)(USceneCaptureComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, clearHiddenComponents_)(USceneCaptureComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, influenceRadiusScale)(UPlaneReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinfluenceRadiusScale)(UPlaneReflectionCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw, projectionType)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionType)(USceneCaptureComponent2D_* obj_p0, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fOVAngle)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfOVAngle)(USceneCaptureComponent2D_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoWidth)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setorthoWidth)(USceneCaptureComponent2D_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, textureTarget)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextureTarget)(USceneCaptureComponent2D_* obj_p0, UTextureRenderTarget2D_* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg, compositeMode)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeMode)(USceneCaptureComponent2D_* obj_p0, tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg val_p1);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, postProcessSettings)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessSettings)(USceneCaptureComponent2D_* obj_p0, FPostProcessSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, postProcessBlendWeight)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessBlendWeight)(USceneCaptureComponent2D_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, customNearClippingPlane)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomNearClippingPlane)(USceneCaptureComponent2D_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseCustomProjectionMatrix)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseCustomProjectionMatrix)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FMatrix*, customProjectionMatrix)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomProjectionMatrix)(USceneCaptureComponent2D_* obj_p0, FMatrix val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFauxOrthoViewPos)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFauxOrthoViewPos)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableOrthographicTiling)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableOrthographicTiling)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numXTiles)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumXTiles)(USceneCaptureComponent2D_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, numYTiles)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumYTiles)(USceneCaptureComponent2D_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableClipPlane)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableClipPlane)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, clipPlaneBase)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclipPlaneBase)(USceneCaptureComponent2D_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, clipPlaneNormal)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setclipPlaneNormal)(USceneCaptureComponent2D_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCameraCutThisFrame)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCameraCutThisFrame)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsiderUnrenderedOpaquePixelAsFullyTranslucent)(USceneCaptureComponent2D_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbConsiderUnrenderedOpaquePixelAsFullyTranslucent)(USceneCaptureComponent2D_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeBlendable_)(USceneCaptureComponent2D_* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, captureScene_)(USceneCaptureComponent2D_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(USceneCaptureComponent2D_* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1, NF32 inWeight_p2);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTargetCube_*, textureTarget)(USceneCaptureComponentCube_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextureTarget)(USceneCaptureComponentCube_* obj_p0, UTextureRenderTargetCube_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureRotation)(USceneCaptureComponentCube_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureRotation)(USceneCaptureComponentCube_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, captureScene_)(USceneCaptureComponentCube_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRealTimeCapture)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbRealTimeCapture)(USkyLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A, sourceType)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceType)(USkyLightComponent_* obj_p0, tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, cubemap)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcubemap)(USkyLightComponent_* obj_p0, UTextureCube_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceCubemapAngle)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceCubemapAngle)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, cubemapResolution)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcubemapResolution)(USkyLightComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, skyDistanceThreshold)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskyDistanceThreshold)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureEmissiveOnly)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureEmissiveOnly)(USkyLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLowerHemisphereIsBlack)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLowerHemisphereIsBlack)(USkyLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, lowerHemisphereColor)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlowerHemisphereColor)(USkyLightComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionMaxDistance)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionMaxDistance)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, contrast)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontrast)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionExponent)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionExponent)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minOcclusion)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminOcclusion)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, occlusionTint)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionTint)(USkyLightComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCloudAmbientOcclusion)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCloudAmbientOcclusion)(USkyLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionStrength)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionStrength)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionExtent)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionExtent)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionMapResolutionScale)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionMapResolutionScale)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionApertureScale)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionApertureScale)(USkyLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg, occlusionCombineMode)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionCombineMode)(USkyLightComponent_* obj_p0, tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowIlluminanceMeter)(USkyLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbShowIlluminanceMeter)(USkyLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricScatteringIntensity_)(USkyLightComponent_* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceCubemapAngle_)(USkyLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionTint_)(USkyLightComponent_* self_p0, FColor& inTint_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionExponent_)(USkyLightComponent_* self_p0, NF32 inOcclusionExponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionContrast_)(USkyLightComponent_* self_p0, NF32 inOcclusionContrast_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinOcclusion_)(USkyLightComponent_* self_p0, NF32 inMinOcclusion_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLowerHemisphereColor_)(USkyLightComponent_* self_p0, FLinearColor& inLowerHemisphereColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(USkyLightComponent_* self_p0, FLinearColor newLightColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(USkyLightComponent_* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIndirectLightingIntensity_)(USkyLightComponent_* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCubemapBlend_)(USkyLightComponent_* self_p0, UTextureCube_* sourceCubemap_p1, UTextureCube_* destinationCubemap_p2, NF32 inBlendFraction_p3);
N_LIB_PRIVATE N_NIMCALL(void, setCubemap_)(USkyLightComponent_* self_p0, UTextureCube_* newCubemap_p1);
N_LIB_PRIVATE N_NIMCALL(void, recaptureSky_)(USkyLightComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, influenceRadius)(USphereReflectionCaptureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinfluenceRadius)(USphereReflectionCaptureComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UStereoLayerShapeCylinder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UStereoLayerShapeCylinder_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, overlayArc)(UStereoLayerShapeCylinder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayArc)(UStereoLayerShapeCylinder_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, height)(UStereoLayerShapeCylinder_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheight)(UStereoLayerShapeCylinder_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UStereoLayerShapeCylinder_* self_p0, NF32 inRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayArc_)(UStereoLayerShapeCylinder_* self_p0, NF32 inOverlayArc_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHeight_)(UStereoLayerShapeCylinder_* self_p0, NI32 inHeight_p1);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, leftUVRect)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setleftUVRect)(UStereoLayerShapeEquirect_* obj_p0, FBox2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, rightUVRect)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrightUVRect)(UStereoLayerShapeEquirect_* obj_p0, FBox2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, leftScale)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setleftScale)(UStereoLayerShapeEquirect_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, rightScale)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrightScale)(UStereoLayerShapeEquirect_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, leftBias)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setleftBias)(UStereoLayerShapeEquirect_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, rightBias)(UStereoLayerShapeEquirect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrightBias)(UStereoLayerShapeEquirect_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEquirectProps_)(UStereoLayerShapeEquirect_* self_p0, FEquirectProps_ inScaleBiases_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLiveTexture)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLiveTexture)(UStereoLayerComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSupportsDepth)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSupportsDepth)(UStereoLayerComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoAlphaChannel)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNoAlphaChannel)(UStereoLayerComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UStereoLayerComponent_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, leftTexture)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setleftTexture)(UStereoLayerComponent_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bQuadPreserveTextureRatio)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbQuadPreserveTextureRatio)(UStereoLayerComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, quadSize)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setquadSize)(UStereoLayerComponent_* obj_p0, FVector2D val_p1);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, uVRect)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuVRect)(UStereoLayerComponent_* obj_p0, FBox2D val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA, stereoLayerType)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstereoLayerType)(UStereoLayerComponent_* obj_p0, tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA val_p1);
N_LIB_PRIVATE N_NIMCALL(UStereoLayerShape_*, shape)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshape)(UStereoLayerComponent_* obj_p0, UStereoLayerShape_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, priority)(UStereoLayerComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UStereoLayerComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUVRect_)(UStereoLayerComponent_* self_p0, FBox2D inUVRect_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTexture_)(UStereoLayerComponent_* self_p0, UTexture* inTexture_p1);
N_LIB_PRIVATE N_NIMCALL(void, setQuadSize_)(UStereoLayerComponent_* self_p0, FVector2D inQuadSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(UStereoLayerComponent_* self_p0, NI32 inPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLeftTexture_)(UStereoLayerComponent_* self_p0, UTexture* inTexture_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEquirectProps_)(UStereoLayerComponent_* self_p0, FEquirectProps_ inScaleBiases_p1);
N_LIB_PRIVATE N_NIMCALL(void, markTextureForUpdate_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FBox2D, getUVRect_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTexture_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getQuadSize_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getPriority_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getLeftTexture_)(UStereoLayerComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UTextRenderComponent_* obj_p0, FText val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, textMaterial)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextMaterial)(UTextRenderComponent_* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(UFont_*, font)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UTextRenderComponent_* obj_p0, UFont_* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg, horizontalAlignment)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UTextRenderComponent_* obj_p0, tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw, verticalAlignment)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UTextRenderComponent_* obj_p0, tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, textRenderColor)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextRenderColor)(UTextRenderComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, xScale)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setxScale)(UTextRenderComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, yScale)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setyScale)(UTextRenderComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, worldSize)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setworldSize)(UTextRenderComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, horizSpacingAdjust)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, sethorizSpacingAdjust)(UTextRenderComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, vertSpacingAdjust)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvertSpacingAdjust)(UTextRenderComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysRenderAsText)(UTextRenderComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysRenderAsText)(UTextRenderComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setYScale_)(UTextRenderComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setXScale_)(UTextRenderComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWorldSize_)(UTextRenderComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVertSpacingAdjust_)(UTextRenderComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UTextRenderComponent_* self_p0, tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextRenderColor_)(UTextRenderComponent_* self_p0, FColor value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTextMaterial_)(UTextRenderComponent_* self_p0, UMaterialInterface* material_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizSpacingAdjust_)(UTextRenderComponent_* self_p0, NF32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UTextRenderComponent_* self_p0, tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UTextRenderComponent_* self_p0, UFont_* value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UTextRenderComponent_* self_p0, FText& value_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getTextWorldSize_)(UTextRenderComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getTextLocalSize_)(UTextRenderComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorCurve_)(UTimelineComponent_* self_p0, UCurveVector_* newVectorCurve_p1, FName vectorTrackName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTimelineLengthMode_)(UTimelineComponent_* self_p0, tyEnum_ETimelineLengthMode__UwOSsi5M2vIG2zFofBn0NQ newLengthMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTimelineLength_)(UTimelineComponent_* self_p0, NF32 newLength_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(UTimelineComponent_* self_p0, NF32 newRate_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlaybackPosition_)(UTimelineComponent_* self_p0, NF32 newPosition_p1, NIM_BOOL bFireEvents_p2, NIM_BOOL bFireUpdate_p3);
N_LIB_PRIVATE N_NIMCALL(void, setNewTime_)(UTimelineComponent_* self_p0, NF32 newTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLooping_)(UTimelineComponent_* self_p0, NIM_BOOL bNewLooping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearColorCurve_)(UTimelineComponent_* self_p0, UCurveLinearColor_* newLinearColorCurve_p1, FName linearColorTrackName_p2);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreTimeDilation_)(UTimelineComponent_* self_p0, NIM_BOOL bNewIgnoreTimeDilation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFloatCurve_)(UTimelineComponent_* self_p0, UCurveFloat* newFloatCurve_p1, FName floatTrackName_p2);
N_LIB_PRIVATE N_NIMCALL(void, reverseFromEnd_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, reverse_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, playFromStart_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReversing_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLooping_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimelineLength_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledTimelineLength_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayRate_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlaybackPosition_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIgnoreTimeDilation_)(UTimelineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, intensity)(UVectorFieldComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setintensity)(UVectorFieldComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, tightness)(UVectorFieldComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settightness)(UVectorFieldComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(UVectorFieldComponent_* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UWindDirectionalSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, speed)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspeed)(UWindDirectionalSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, minGustAmount)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminGustAmount)(UWindDirectionalSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxGustAmount)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxGustAmount)(UWindDirectionalSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UWindDirectionalSourceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPointWind)(UWindDirectionalSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPointWind)(UWindDirectionalSourceComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setWindType_)(UWindDirectionalSourceComponent_* self_p0, tyEnum_EWindSourceType__tgASMiEzikMy2tfW9aLcEXw inNewType_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStrength_)(UWindDirectionalSourceComponent_* self_p0, NF32 inNewStrength_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSpeed_)(UWindDirectionalSourceComponent_* self_p0, NF32 inNewSpeed_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UWindDirectionalSourceComponent_* self_p0, NF32 inNewRadius_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumGustAmount_)(UWindDirectionalSourceComponent_* self_p0, NF32 inNewMinGust_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaximumGustAmount_)(UWindDirectionalSourceComponent_* self_p0, NF32 inNewMaxGust_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw, transformMode)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settransformMode)(USkyAtmosphereComponent_* obj_p0, tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bottomRadius)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbottomRadius)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, groundAlbedo)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgroundAlbedo)(USkyAtmosphereComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, atmosphereHeight)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereHeight)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, multiScatteringFactor)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmultiScatteringFactor)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, traceSampleCountScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settraceSampleCountScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, rayleighScatteringScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighScatteringScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, rayleighScattering)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighScattering)(USkyAtmosphereComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, rayleighExponentialDistribution)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighExponentialDistribution)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mieScatteringScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieScatteringScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, mieScattering)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieScattering)(USkyAtmosphereComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mieAbsorptionScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieAbsorptionScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, mieAbsorption)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieAbsorption)(USkyAtmosphereComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mieAnisotropy)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieAnisotropy)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, mieExponentialDistribution)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmieExponentialDistribution)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, otherAbsorptionScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setotherAbsorptionScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, otherAbsorption)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setotherAbsorption)(USkyAtmosphereComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FTentDistribution_*, otherTentDistribution)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setotherTentDistribution)(USkyAtmosphereComponent_* obj_p0, FTentDistribution_ val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, skyLuminanceFactor)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskyLuminanceFactor)(USkyAtmosphereComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveViewDistanceScale)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveViewDistanceScale)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, heightFogContribution)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setheightFogContribution)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, transmittanceMinLightElevationAngle)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settransmittanceMinLightElevationAngle)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPerspectiveStartDepth)(USkyAtmosphereComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPerspectiveStartDepth)(USkyAtmosphereComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkyLuminanceFactor_)(USkyAtmosphereComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighScatteringScale_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighScattering_)(USkyAtmosphereComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighExponentialDistribution_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOtherAbsorptionScale_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOtherAbsorption_)(USkyAtmosphereComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMultiScatteringFactor_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieScatteringScale_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieScattering_)(USkyAtmosphereComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieExponentialDistribution_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieAnisotropy_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieAbsorptionScale_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMieAbsorption_)(USkyAtmosphereComponent_* self_p0, FLinearColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setHeightFogContribution_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereHeight_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAerialPespectiveViewDistanceScale_)(USkyAtmosphereComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetAtmosphereLightDirectionOverride_)(USkyAtmosphereComponent_* self_p0, NI32 atmosphereLightIndex_p1);
N_LIB_PRIVATE N_NIMCALL(void, overrideAtmosphereLightDirection_)(USkyAtmosphereComponent_* self_p0, NI32 atmosphereLightIndex_p1, FVector& lightDirection_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAtmosphereLightDirectionOverriden_)(USkyAtmosphereComponent_* self_p0, NI32 atmosphereLightIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getOverridenAtmosphereLightDirection_)(USkyAtmosphereComponent_* self_p0, NI32 atmosphereLightIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getAtmosphereTransmitanceOnGroundAtPlanetTop_)(USkyAtmosphereComponent_* self_p0, UDirectionalLightComponent_* directionalLight_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, arrowColor)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setarrowColor)(UArrowComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, arrowSize)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setarrowSize)(UArrowComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, arrowLength)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setarrowLength)(UArrowComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, screenSize)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscreenSize)(UArrowComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsScreenSizeScaled)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsScreenSizeScaled)(UArrowComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTreatAsASprite)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbTreatAsASprite)(UArrowComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInEditorScaling)(UArrowComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInEditorScaling)(UArrowComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseInEditorScaling_)(UArrowComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTreatAsASprite_)(UArrowComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScreenSize_)(UArrowComponent_* self_p0, NF32 newScreenSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIsScreenSizeScaled_)(UArrowComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setArrowSize_)(UArrowComponent_* self_p0, NF32 newSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setArrowLength_)(UArrowComponent_* self_p0, NF32 newLength_p1);
N_LIB_PRIVATE N_NIMCALL(void, setArrowFColor_)(UArrowComponent_* self_p0, FColor newColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setArrowColor_)(UArrowComponent_* self_p0, FLinearColor newColor_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowSpatialization)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowSpatialization)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideAttenuation)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideAttenuation)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideSubtitlePriority)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideSubtitlePriority)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsUISound)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsUISound)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLowPassFilter)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLowPassFilter)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverridePriority)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverridePriority)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressSubtitles)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressSubtitles)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanPlayMultipleInstances)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCanPlayMultipleInstances)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableParameterUpdatesWhilePlaying)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableParameterUpdatesWhilePlaying)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoManageAttachment)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoManageAttachment)(UAudioComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchModulationMin)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpitchModulationMin)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchModulationMax)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpitchModulationMax)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeModulationMin)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeModulationMin)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeModulationMax)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeModulationMax)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeMultiplier)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeMultiplier)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerAttackTime)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerAttackTime)(UAudioComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerReleaseTime)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerReleaseTime)(UAudioComponent* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, subtitlePriority)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitlePriority)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundEffectSourcePresetChain*, sourceEffectChain)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceEffectChain)(UAudioComponent* obj_p0, USoundEffectSourcePresetChain* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchMultiplier)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpitchMultiplier)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lowPassFilterFrequency)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlowPassFilterFrequency)(UAudioComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundAttenuation*, attenuationSettings)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationSettings)(UAudioComponent* obj_p0, USoundAttenuation* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundAttenuationSettings*, attenuationOverrides)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationOverrides)(UAudioComponent* obj_p0, FSoundAttenuationSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__NR5I3JrURnzfmlYGr3FAVw*, concurrencySet)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencySet)(UAudioComponent* obj_p0, TY__NR5I3JrURnzfmlYGr3FAVw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachLocationRule)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachLocationRule)(UAudioComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachRotationRule)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachRotationRule)(UAudioComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachScaleRule)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachScaleRule)(UAudioComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDefaultRoutingSettings*, modulationRouting)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmodulationRouting)(UAudioComponent* obj_p0, FSoundModulationDefaultRoutingSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, autoAttachParent)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachParent)(UAudioComponent* obj_p0, TY__9b9c0qopUCzSW4js0BJumMlQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, autoAttachSocketName)(UAudioComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachSocketName)(UAudioComponent* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopDelayed_)(UAudioComponent* self_p0, NF32 delayTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWaveParameter_)(UAudioComponent* self_p0, FName inName_p1, USoundWave* inWave_p2);
N_LIB_PRIVATE N_NIMCALL(void, setVolumeMultiplier_)(UAudioComponent* self_p0, NF32 newVolumeMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUISound_)(UAudioComponent* self_p0, NIM_BOOL bInUISound_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixSend_)(UAudioComponent* self_p0, USoundSubmixBase_* submix_p1, NF32 sendLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSourceBusSendPreEffect_)(UAudioComponent* self_p0, USoundSourceBus_* soundSourceBus_p1, NF32 sourceBusSendLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSourceBusSendPostEffect_)(UAudioComponent* self_p0, USoundSourceBus_* soundSourceBus_p1, NF32 sourceBusSendLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setPitchMultiplier_)(UAudioComponent* self_p0, NF32 newPitchMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPaused_)(UAudioComponent* self_p0, NIM_BOOL bPause_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOutputToBusOnly_)(UAudioComponent* self_p0, NIM_BOOL bInOutputToBusOnly_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLowPassFilterFrequency_)(UAudioComponent* self_p0, NF32 inLowPassFilterFrequency_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLowPassFilterEnabled_)(UAudioComponent* self_p0, NIM_BOOL inLowPassFilterEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIntParameter_)(UAudioComponent* self_p0, FName inName_p1, NI32 inInt_p2);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(UAudioComponent* self_p0, FName inName_p1, NF32 inFloat_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBoolParameter_)(UAudioComponent* self_p0, FName inName_p1, NIM_BOOL inBool_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAudioBusSendPreEffect_)(UAudioComponent* self_p0, UAudioBus_* audioBus_p1, NF32 audioBusSendLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAudioBusSendPostEffect_)(UAudioComponent* self_p0, UAudioBus_* audioBus_p1, NF32 audioBusSendLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UAudioComponent* self_p0, NF32 startTime_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVirtualized_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasCookedFFTData_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasCookedAmplitudeEnvelopeData_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAudioComponentPlayState__LNX4VedOxTvvUBfe9bW2uOQ, getPlayState_)(UAudioComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedFFTDataForAllPlayingSounds_)(UAudioComponent* self_p0, TY__c2I8cKDyC9czaUeSu84CUcg& outSoundWaveSpectralData_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedFFTData_)(UAudioComponent* self_p0, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& frequenciesToGet_p1, TY__7eS59amp9czNtrtz8r0Xjpgw& outSoundWaveSpectralData_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedEnvelopeDataForAllPlayingSounds_)(UAudioComponent* self_p0, TY__VJ3WomG9bWfW9bg7f8TWiOgQ& outEnvelopeData_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedEnvelopeData_)(UAudioComponent* self_p0, NF32& outEnvelopeData_p1);
N_LIB_PRIVATE N_NIMCALL(void, fadeOut_)(UAudioComponent* self_p0, NF32 fadeOutDuration_p1, NF32 fadeVolumeLevel_p2, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve_p3);
N_LIB_PRIVATE N_NIMCALL(void, fadeIn_)(UAudioComponent* self_p0, NF32 fadeInDuration_p1, NF32 fadeVolumeLevel_p2, NF32 startTime_p3, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve_p4);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAttenuationSettingsToApply_)(UAudioComponent* self_p0, FSoundAttenuationSettings& outAttenuationSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, adjustVolume_)(UAudioComponent* self_p0, NF32 adjustVolumeDuration_p1, NF32 adjustVolumeLevel_p2, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve_p3);
N_LIB_PRIVATE N_NIMCALL(void, adjustAttenuation_)(UAudioComponent* self_p0, FSoundAttenuationSettings& inAttenuationSettings_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, sprite)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsprite)(UBillboardComponent_* obj_p0, UTexture2D* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsScreenSizeScaled)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsScreenSizeScaled)(UBillboardComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, screenSize)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscreenSize)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, u)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setu)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, uL)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuL)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, v)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setv)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, vL)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvL)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, opacityMaskRefVal)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setopacityMaskRefVal)(UBillboardComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInEditorScaling)(UBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInEditorScaling)(UBillboardComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUV_)(UBillboardComponent_* self_p0, NI32 newU_p1, NI32 newUL_p2, NI32 newV_p3, NI32 newVL_p4);
N_LIB_PRIVATE N_NIMCALL(void, setSpriteAndUV_)(UBillboardComponent_* self_p0, UTexture2D* newSprite_p1, NI32 newU_p2, NI32 newUL_p3, NI32 newV_p4, NI32 newVL_p5);
N_LIB_PRIVATE N_NIMCALL(void, setSprite_)(UBillboardComponent_* self_p0, UTexture2D* newSprite_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOpacityMaskRefVal_)(UBillboardComponent_* self_p0, NF32 refVal_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTransformToBounds_)(UBoundsCopyComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setRotation_)(UBoundsCopyComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FColor*, shapeColor)(UShapeComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshapeColor)(UShapeComponent* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, boxExtent)(UBoxComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setboxExtent)(UBoxComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lineThickness)(UBoxComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlineThickness)(UBoxComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLineThickness_)(UBoxComponent* self_p0, NF32 thickness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBoxExtent_)(UBoxComponent* self_p0, FVector inBoxExtent_p1, NIM_BOOL bUpdateOverlaps_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnscaledBoxExtent_)(UBoxComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaledBoxExtent_)(UBoxComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleHalfHeight)(UCapsuleComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleHalfHeight)(UCapsuleComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleRadius)(UCapsuleComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleRadius)(UCapsuleComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleSize_)(UCapsuleComponent* self_p0, NF32 inRadius_p1, NF32 inHalfHeight_p2, NIM_BOOL bUpdateOverlaps_p3);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleRadius_)(UCapsuleComponent* self_p0, NF32 radius_p1, NIM_BOOL bUpdateOverlaps_p2);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleHalfHeight_)(UCapsuleComponent* self_p0, NF32 halfHeight_p1, NIM_BOOL bUpdateOverlaps_p2);
N_LIB_PRIVATE N_NIMCALL(void, getUnscaledCapsuleSize_WithoutHemisphere_)(UCapsuleComponent* self_p0, NF32& outRadius_p1, NF32& outHalfHeightWithoutHemisphere_p2);
N_LIB_PRIVATE N_NIMCALL(void, getUnscaledCapsuleSize_)(UCapsuleComponent* self_p0, NF32& outRadius_p1, NF32& outHalfHeight_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleRadius_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleHalfHeight_WithoutHemisphere_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleHalfHeight_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getShapeScale_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getScaledCapsuleSize_WithoutHemisphere_)(UCapsuleComponent* self_p0, NF32& outRadius_p1, NF32& outHalfHeightWithoutHemisphere_p2);
N_LIB_PRIVATE N_NIMCALL(void, getScaledCapsuleSize_)(UCapsuleComponent* self_p0, NF32& outRadius_p1, NF32& outHalfHeight_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleRadius_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleHalfHeight_WithoutHemisphere_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleHalfHeight_)(UCapsuleComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, childActorClass)(UChildActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchildActorClass)(UChildActorComponent* obj_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg val_p1);
N_LIB_PRIVATE N_NIMCALL(AActor*, childActor)(UChildActorComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchildActor)(UChildActorComponent* obj_p0, AActor* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setChildActorClass_)(UChildActorComponent* self_p0, TY__9akcXb9b3ftlkdW8NDwR22Mg inClass_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, decalMaterial)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdecalMaterial)(UDecalComponent_* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sortOrder)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsortOrder)(UDecalComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeScreenSize)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfadeScreenSize)(UDecalComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeStartDelay)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfadeStartDelay)(UDecalComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeDuration)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfadeDuration)(UDecalComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeInDuration)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfadeInDuration)(UDecalComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeInStartDelay)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfadeInStartDelay)(UDecalComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDestroyOwnerAfterFade)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDestroyOwnerAfterFade)(UDecalComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, decalSize)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdecalSize)(UDecalComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, decalColor)(UDecalComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdecalColor)(UDecalComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSortOrder_)(UDecalComponent_* self_p0, NI32 value_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFadeScreenSize_)(UDecalComponent_* self_p0, NF32 newFadeScreenSize_p1);
N_LIB_PRIVATE N_NIMCALL(void, setFadeOut_)(UDecalComponent_* self_p0, NF32 startDelay_p1, NF32 duration_p2, NIM_BOOL destroyOwnerAfterFade_p3);
N_LIB_PRIVATE N_NIMCALL(void, setFadeIn_)(UDecalComponent_* self_p0, NF32 startDelay_p1, NF32 duration_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDecalMaterial_)(UDecalComponent_* self_p0, UMaterialInterface* newDecalMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDecalColor_)(UDecalComponent_* self_p0, FLinearColor& color_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeStartDelay_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeInStartDelay_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeInDuration_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeDuration_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getDecalMaterial_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UDecalComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, temperature)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settemperature)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseTemperature)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseTemperature)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, specularScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspecularScale)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowResolutionScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowResolutionScale)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowBias)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowBias)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSlopeBias)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSlopeBias)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSharpen)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSharpen)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowLength)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowLength)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, contactShadowLengthInWS)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowLengthInWS)(ULightComponent* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowCastingIntensity)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowCastingIntensity)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowNonCastingIntensity)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowNonCastingIntensity)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, castTranslucentShadows)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcastTranslucentShadows)(ULightComponent* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsFromCinematicObjectsOnly)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsFromCinematicObjectsOnly)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDynamicIndirectLighting)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDynamicIndirectLighting)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceCachedShadowsForMovablePrimitives)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceCachedShadowsForMovablePrimitives)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(ULightComponent* obj_p0, FLightingChannels val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, lightFunctionMaterial)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionMaterial)(ULightComponent* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, lightFunctionScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionScale)(ULightComponent* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(UTextureLightProfile*, iESTexture)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setiESTexture)(ULightComponent* obj_p0, UTextureLightProfile* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseIESBrightness)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseIESBrightness)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, iESBrightnessScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setiESBrightnessScale)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lightFunctionFadeDistance)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionFadeDistance)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, disabledBrightness)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdisabledBrightness)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLightShaftBloom)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLightShaftBloom)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbloomScale)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomThreshold)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbloomThreshold)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomMaxBrightness)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbloomMaxBrightness)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, bloomTint)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbloomTint)(ULightComponent* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRayTracedDistanceFieldShadows)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRayTracedDistanceFieldShadows)(ULightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, rayStartOffsetDepthScale)(ULightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setrayStartOffsetDepthScale)(ULightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricScatteringIntensity_)(ULightComponent* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseTemperature_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseIESBrightness_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTransmission_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTemperature_)(ULightComponent* self_p0, NF32 newTemperature_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSpecularScale_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowSlopeBias_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowBias_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightingChannels_)(ULightComponent* self_p0, NIM_BOOL bChannel0_p1, NIM_BOOL bChannel1_p2, NIM_BOOL bChannel2_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionScale_)(ULightComponent* self_p0, FVector newLightFunctionScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionMaterial_)(ULightComponent* self_p0, UMaterialInterface* newLightFunctionMaterial_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionFadeDistance_)(ULightComponent* self_p0, NF32 newLightFunctionFadeDistance_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionDisabledBrightness_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(ULightComponent* self_p0, FLinearColor newLightColor_p1, NIM_BOOL bSRGB_p2);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(ULightComponent* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIndirectLightingIntensity_)(ULightComponent* self_p0, NF32 newIntensity_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIESTexture_)(ULightComponent* self_p0, UTextureLightProfile* newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIESBrightnessScale_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceCachedShadowsForMovablePrimitives_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnableLightShaftBloom_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBloomTint_)(ULightComponent* self_p0, FColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBloomThreshold_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBloomScale_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBloomMaxBrightness_)(ULightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectTranslucentLighting_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDynamicIndirectLighting_)(ULightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowCascadeBiasDistribution)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowCascadeBiasDistribution)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLightShaftOcclusion)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLightShaftOcclusion)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionMaskDarkness)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionMaskDarkness)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionDepthRange)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionDepthRange)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, lightShaftOverrideDirection)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightShaftOverrideDirection)(UDirectionalLightComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicShadowDistanceMovableLight)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowDistanceMovableLight)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicShadowDistanceStationaryLight)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowDistanceStationaryLight)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, dynamicShadowCascades)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowCascades)(UDirectionalLightComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cascadeDistributionExponent)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcascadeDistributionExponent)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cascadeTransitionFraction)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcascadeTransitionFraction)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowDistanceFadeoutFraction)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowDistanceFadeoutFraction)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInsetShadowsForMovableObjects)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInsetShadowsForMovableObjects)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, farShadowCascadeCount)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfarShadowCascadeCount)(UDirectionalLightComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, farShadowDistance)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfarShadowDistance)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldShadowDistance)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldShadowDistance)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, forwardShadingPriority)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforwardShadingPriority)(UDirectionalLightComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lightSourceAngle)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightSourceAngle)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lightSourceSoftAngle)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightSourceSoftAngle)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSourceAngleFactor)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSourceAngleFactor)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, traceDistance)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settraceDistance)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAtmosphereSunLight)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAtmosphereSunLight)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, atmosphereSunLightIndex)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereSunLightIndex)(UDirectionalLightComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, atmosphereSunDiskColorScale)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereSunDiskColorScale)(UDirectionalLightComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPerPixelAtmosphereTransmittance)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPerPixelAtmosphereTransmittance)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsOnClouds)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsOnClouds)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsOnAtmosphere)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsOnAtmosphere)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCloudShadows)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCloudShadows)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowStrength)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowStrength)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowOnAtmosphereStrength)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowOnAtmosphereStrength)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowOnSurfaceStrength)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowOnSurfaceStrength)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowDepthBias)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowDepthBias)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowExtent)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowExtent)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowMapResolutionScale)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowMapResolutionScale)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowRaySampleCountScale)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowRaySampleCountScale)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, cloudScatteredLuminanceScale)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcloudScatteredLuminanceScale)(UDirectionalLightComponent_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastModulatedShadows)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCastModulatedShadows)(UDirectionalLightComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, modulatedShadowColor)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmodulatedShadowColor)(UDirectionalLightComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowAmount)(UDirectionalLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowAmount)(UDirectionalLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowSourceAngleFactor_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowDistanceFadeoutFraction_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowCascadeBiasDistribution_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowAmount_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionMaskDarkness_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionDepthRange_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightSourceSoftAngle_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightSourceAngle_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightShaftOverrideDirection_)(UDirectionalLightComponent_* self_p0, FVector newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForwardShadingPriority_)(UDirectionalLightComponent_* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnableLightShaftOcclusion_)(UDirectionalLightComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowDistanceStationaryLight_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowDistanceMovableLight_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowCascades_)(UDirectionalLightComponent_* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCascadeTransitionFraction_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setCascadeDistributionExponent_)(UDirectionalLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereSunLightIndex_)(UDirectionalLightComponent_* self_p0, NI32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereSunLight_)(UDirectionalLightComponent_* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFrustumEnabled)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFrustumEnabled)(UDrawFrustumComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, frustumColor)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumColor)(UDrawFrustumComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumAngle)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumAngle)(UDrawFrustumComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumAspectRatio)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumAspectRatio)(UDrawFrustumComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumStartDist)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumStartDist)(UDrawFrustumComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumEndDist)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumEndDist)(UDrawFrustumComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UDrawFrustumComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UDrawFrustumComponent_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sphereRadius)(USphereComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsphereRadius)(USphereComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSphereRadius_)(USphereComponent* self_p0, NF32 inSphereRadius_p1, NIM_BOOL bUpdateOverlaps_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledSphereRadius_)(USphereComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getShapeScale_)(USphereComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledSphereRadius_)(USphereComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackEffect_*, forceFeedbackEffect)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforceFeedbackEffect)(UForceFeedbackComponent_* obj_p0, UForceFeedbackEffect_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLooping)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbLooping)(UForceFeedbackComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreTimeDilation)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreTimeDilation)(UForceFeedbackComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideAttenuation)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideAttenuation)(UForceFeedbackComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, intensityMultiplier)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setintensityMultiplier)(UForceFeedbackComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackAttenuation_*, attenuationSettings)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationSettings)(UForceFeedbackComponent_* obj_p0, UForceFeedbackAttenuation_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FForceFeedbackAttenuationSettings_*, attenuationOverrides)(UForceFeedbackComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationOverrides)(UForceFeedbackComponent_* obj_p0, FForceFeedbackAttenuationSettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UForceFeedbackComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setIntensityMultiplier_)(UForceFeedbackComponent_* self_p0, NF32 newIntensityMultiplier_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceFeedbackEffect_)(UForceFeedbackComponent_* self_p0, UForceFeedbackEffect_* newForceFeedbackEffect_p1);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UForceFeedbackComponent_* self_p0, NF32 startTime_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAttenuationSettingsToApply_)(UForceFeedbackComponent_* self_p0, FForceFeedbackAttenuationSettings_& outAttenuationSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, adjustAttenuation_)(UForceFeedbackComponent_* self_p0, FForceFeedbackAttenuationSettings_& inAttenuationSettings_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasControllerKeyJustReleased_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasControllerKeyJustPressed_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControllerKeyDown_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getTouchState_)(UInputComponent* self_p0, NI32 fingerIndex_p1, NF32& locationX_p2, NF32& locationY_p3, NIM_BOOL& bIsCurrentlyPressed_p4);
N_LIB_PRIVATE N_NIMCALL(FVector, getControllerVectorKeyState_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getControllerMouseDelta_)(UInputComponent* self_p0, NF32& deltaX_p1, NF32& deltaY_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getControllerKeyTimeDown_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(void, getControllerAnalogStickState_)(UInputComponent* self_p0, tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw whichStick_p1, NF32& stickX_p2, NF32& stickY_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getControllerAnalogKeyState_)(UInputComponent* self_p0, FKey key_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UInterpToMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseOnImpact)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseOnImpact)(UInterpToMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweep)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSweep)(UInterpToMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw, teleportType)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setteleportType)(UInterpToMovementComponent_* obj_p0, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw, behaviourType)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbehaviourType)(UInterpToMovementComponent_* obj_p0, tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCheckIfStillInWorld)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCheckIfStillInWorld)(UInterpToMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceSubStepping)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForceSubStepping)(UInterpToMovementComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UInterpToMovementComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UInterpToMovementComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__LjHVX64yOnazUBJDmecIJA*, controlPoints)(UInterpToMovementComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcontrolPoints)(UInterpToMovementComponent_* obj_p0, TY__LjHVX64yOnazUBJDmecIJA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopSimulating_)(UInterpToMovementComponent_* self_p0, FHitResult& hitResult_p1);
N_LIB_PRIVATE N_NIMCALL(void, restartMovement_)(UInterpToMovementComponent_* self_p0, NF32 initialDirection_p1);
N_LIB_PRIVATE N_NIMCALL(void, resetControlPoints_)(UInterpToMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, finaliseControlPoints_)(UInterpToMovementComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addControlPointPosition_)(UInterpToMovementComponent_* self_p0, FVector pos_p1, NIM_BOOL bPositionIsRelative_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ, intensityUnits)(ULocalLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setintensityUnits)(ULocalLightComponent* obj_p0, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, inverseExposureBlend)(ULocalLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinverseExposureBlend)(ULocalLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, attenuationRadius)(ULocalLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationRadius)(ULocalLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setIntensityUnits_)(ULocalLightComponent* self_p0, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ newIntensityUnits_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAttenuationRadius_)(ULocalLightComponent* self_p0, NF32 newRadius_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnitsConversionFactor_)(tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ srcUnits_p0, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ targetUnits_p1, NF32 cosHalfConeAngle_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, numLODs)(ULODSyncComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnumLODs)(ULODSyncComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLOD)(ULODSyncComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLOD)(ULODSyncComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, minLOD)(ULODSyncComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setminLOD)(ULODSyncComponent_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__gZurzBmXXyKQxXQIP32pOw*, componentsToSync)(ULODSyncComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcomponentsToSync)(ULODSyncComponent_* obj_p0, TY__gZurzBmXXyKQxXQIP32pOw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ*, customLODMapping)(ULODSyncComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomLODMapping)(ULODSyncComponent_* obj_p0, TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, getLODSyncDebugText_)(ULODSyncComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__Fu7t4gHlDqCFA1dFtsYkog*, elements)(UMaterialBillboardComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setelements)(UMaterialBillboardComponent_* obj_p0, TY__Fu7t4gHlDqCFA1dFtsYkog val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setElements_)(UMaterialBillboardComponent_* self_p0, TY__Fu7t4gHlDqCFA1dFtsYkog& newElements_p1);
N_LIB_PRIVATE N_NIMCALL(void, addElement_)(UMaterialBillboardComponent_* self_p0, UMaterialInterface* material_p1, UCurveFloat* distanceToOpacityCurve_p2, NIM_BOOL bSizeIsInScreenSpace_p3, NF32 baseSizeX_p4, NF32 baseSizeY_p5, UCurveFloat* distanceToSizeCurve_p6);
N_LIB_PRIVATE N_NIMCALL(NF32, noiseLifetime)(UPawnNoiseEmitterComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnoiseLifetime)(UPawnNoiseEmitterComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, makeNoise_)(UPawnNoiseEmitterComponent_* self_p0, AActor* noiseMaker_p1, NF32 loudness_p2, FVector& noiseLocation_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, supportsConvertibleLaptops_)(UPlatformEventsComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInTabletMode_)(UPlatformEventsComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInLaptopMode_)(UPlatformEventsComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInverseSquaredFalloff)(UPointLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInverseSquaredFalloff)(UPointLightComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, lightFalloffExponent)(UPointLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightFalloffExponent)(UPointLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceRadius)(UPointLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceRadius)(UPointLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, softSourceRadius)(UPointLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsoftSourceRadius)(UPointLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceLength)(UPointLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceLength)(UPointLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setUseInverseSquaredFalloff_)(UPointLightComponent* self_p0, NIM_BOOL bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceRadius_)(UPointLightComponent* self_p0, NF32 bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceLength_)(UPointLightComponent* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSoftSourceRadius_)(UPointLightComponent* self_p0, NF32 bNewValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLightFalloffExponent_)(UPointLightComponent* self_p0, NF32 newLightFalloffExponent_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInverseExposureBlend_)(UPointLightComponent* self_p0, NF32 newInverseExposureBlend_p1);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, settings)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(UPostProcessComponent_* obj_p0, FPostProcessSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UPostProcessComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, blendRadius)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendRadius)(UPostProcessComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, blendWeight)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendWeight)(UPostProcessComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(UPostProcessComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUnbound)(UPostProcessComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUnbound)(UPostProcessComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(UPostProcessComponent_* self_p0, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject_p1, NF32 inWeight_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceWidth)(URectLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceWidth)(URectLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceHeight)(URectLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceHeight)(URectLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, barnDoorAngle)(URectLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbarnDoorAngle)(URectLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, barnDoorLength)(URectLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbarnDoorLength)(URectLightComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, sourceTexture)(URectLightComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceTexture)(URectLightComponent_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceWidth_)(URectLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceTexture_)(URectLightComponent_* self_p0, UTexture* newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSourceHeight_)(URectLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBarnDoorLength_)(URectLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setBarnDoorAngle_)(URectLightComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(UVirtualTextureBuilder_*, streamingTexture)(URuntimeVirtualTextureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingTexture)(URuntimeVirtualTextureComponent_* obj_p0, UVirtualTextureBuilder_* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ, lossyCompressionAmount)(URuntimeVirtualTextureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlossyCompressionAmount)(URuntimeVirtualTextureComponent_* obj_p0, tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBuildDebugStreamingMips)(URuntimeVirtualTextureComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbBuildDebugStreamingMips)(URuntimeVirtualTextureComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, invalidate_)(URuntimeVirtualTextureComponent_* self_p0, FBoxSphereBounds& worldBounds_p1);
N_LIB_PRIVATE N_NIMCALL(USkyAtmosphereComponent_*, skyAtmosphereComponent)(ASkyAtmosphere_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskyAtmosphereComponent)(ASkyAtmosphere_* obj_p0, USkyAtmosphereComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(USplineComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(USplineComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStationaryEndpoints)(USplineComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbStationaryEndpoints)(USplineComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInputSplinePointsToConstructionScript)(USplineComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInputSplinePointsToConstructionScript)(USplineComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawDebug)(USplineComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawDebug)(USplineComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector*, defaultUpVector)(USplineComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultUpVector)(USplineComponent_* obj_p0, FVector val_p1);
N_LIB_PRIVATE N_NIMCALL(void, updateSpline_)(USplineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inLocation_p2);
N_LIB_PRIVATE N_NIMCALL(void, setUpVectorAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inUpVector_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NIM_BOOL bUpdateSpline_p4);
N_LIB_PRIVATE N_NIMCALL(void, setUnselectedSplineSegmentColor_)(USplineComponent_* self_p0, FLinearColor& segmentColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTangentsAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inArriveTangent_p2, FVector& inLeaveTangent_p3, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p4, NIM_BOOL bUpdateSpline_p5);
N_LIB_PRIVATE N_NIMCALL(void, setTangentColor_)(USplineComponent_* self_p0, FLinearColor& tangentColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inTangent_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NIM_BOOL bUpdateSpline_p4);
N_LIB_PRIVATE N_NIMCALL(void, setSplineWorldPoints_)(USplineComponent_* self_p0, TY__Bz8EFFwaAOJiUrMHOIgVGw& points_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSplinePointType_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw type_p2, NIM_BOOL bUpdateSpline_p3);
N_LIB_PRIVATE N_NIMCALL(void, setSplinePoints_)(USplineComponent_* self_p0, TY__Bz8EFFwaAOJiUrMHOIgVGw& points_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUpdateSpline_p3);
N_LIB_PRIVATE N_NIMCALL(void, setSplineLocalPoints_)(USplineComponent_* self_p0, TY__Bz8EFFwaAOJiUrMHOIgVGw& points_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedSplineSegmentColor_)(USplineComponent_* self_p0, FLinearColor& segmentColor_p1);
N_LIB_PRIVATE N_NIMCALL(void, setScaleAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inScaleVector_p2, NIM_BOOL bUpdateSpline_p3);
N_LIB_PRIVATE N_NIMCALL(void, setRotationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FRotator& inRotation_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NIM_BOOL bUpdateSpline_p4);
N_LIB_PRIVATE N_NIMCALL(void, setLocationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& inLocation_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NIM_BOOL bUpdateSpline_p4);
N_LIB_PRIVATE N_NIMCALL(void, setDrawDebug_)(USplineComponent_* self_p0, NIM_BOOL bShow_p1);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultUpVector_)(USplineComponent_* self_p0, FVector& upVector_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(void, setClosedLoopAtPosition_)(USplineComponent_* self_p0, NIM_BOOL bInClosedLoop_p1, NF32 key_p2, NIM_BOOL bUpdateSpline_p3);
N_LIB_PRIVATE N_NIMCALL(void, setClosedLoop_)(USplineComponent_* self_p0, NIM_BOOL bInClosedLoop_p1, NIM_BOOL bUpdateSpline_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeSplinePoint_)(USplineComponent_* self_p0, NI32 index_p1, NIM_BOOL bUpdateSpline_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isClosedLoop_)(USplineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldTangentAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, getWorldRotationAtTime_)(USplineComponent_* self_p0, NF32 time_p1, NIM_BOOL bUseConstantVelocity_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getWorldRotationAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtTime_)(USplineComponent_* self_p0, NF32 time_p1, NIM_BOOL bUseConstantVelocity_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldDirectionAtTime_)(USplineComponent_* self_p0, NF32 time_p1, NIM_BOOL bUseConstantVelocity_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldDirectionAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorPropertyAtSplinePoint_)(USplineComponent_* self_p0, NI32 index_p1, FName propertyName_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorPropertyAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, FName propertyName_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3, NIM_BOOL bUseScale_p4);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseScale_p3);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseScale_p3);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseScale_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimeAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw, getSplinePointType_)(USplineComponent_* self_p0, NI32 pointIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getSplineLength_)(USplineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtTime_)(USplineComponent_* self_p0, NF32 time_p1, NIM_BOOL bUseConstantVelocity_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfSplineSegments_)(USplineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfSplinePoints_)(USplineComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(void, getLocationAndTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& location_p2, FVector& tangent_p3, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p4);
N_LIB_PRIVATE N_NIMCALL(void, getLocalLocationAndTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, FVector& localLocation_p2, FVector& localTangent_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getLeaveTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyValueAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatPropertyAtSplinePoint_)(USplineComponent_* self_p0, NI32 index_p1, FName propertyName_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatPropertyAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, FName propertyName_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceAlongSplineAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceAlongSplineAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtTime_)(USplineComponent_* self_p0, NF32 time_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseConstantVelocity_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtSplineInputKey_)(USplineComponent_* self_p0, NF32 inKey_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtDistanceAlongSpline_)(USplineComponent_* self_p0, NF32 distance_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getDefaultUpVector_)(USplineComponent_* self_p0, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getArriveTangentAtSplinePoint_)(USplineComponent_* self_p0, NI32 pointIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, findUpVectorClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FTransform, findTransformClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUseScale_p3);
N_LIB_PRIVATE N_NIMCALL(FVector, findTangentClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, findScaleClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1);
N_LIB_PRIVATE N_NIMCALL(FRotator, findRotationClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, findRollClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, findRightVectorClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, findLocationClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, findInputKeyClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, findDirectionClosestToWorldLocation_)(USplineComponent_* self_p0, FVector& worldLocation_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, divideSplineIntoPolylineRecursiveWithDistances_)(USplineComponent_* self_p0, NF32 startDistanceAlongSpline_p1, NF32 endDistanceAlongSpline_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NF32 maxSquareDistanceFromSpline_p4, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints_p5, TY__cXi18VefLjgCunTrTLkfGw& outDistancesAlongSpline_p6);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, divideSplineIntoPolylineRecursive_)(USplineComponent_* self_p0, NF32 startDistanceAlongSpline_p1, NF32 endDistanceAlongSpline_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NF32 maxSquareDistanceFromSpline_p4, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints_p5);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, convertSplineToPolyLine_)(USplineComponent_* self_p0, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p1, NF32 maxSquareDistanceFromSpline_p2, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, convertSplineSegmentToPolyLine_)(USplineComponent_* self_p0, NI32 splinePointStartIndex_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NF32 maxSquareDistanceFromSpline_p3, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints_p4);
N_LIB_PRIVATE N_NIMCALL(void, clearSplinePoints_)(USplineComponent_* self_p0, NIM_BOOL bUpdateSpline_p1);
N_LIB_PRIVATE N_NIMCALL(void, addSplineWorldPoint_)(USplineComponent_* self_p0, FVector& position_p1);
N_LIB_PRIVATE N_NIMCALL(void, addSplinePointAtIndex_)(USplineComponent_* self_p0, FVector& position_p1, NI32 index_p2, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p3, NIM_BOOL bUpdateSpline_p4);
N_LIB_PRIVATE N_NIMCALL(void, addSplinePoint_)(USplineComponent_* self_p0, FVector& position_p1, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace_p2, NIM_BOOL bUpdateSpline_p3);
N_LIB_PRIVATE N_NIMCALL(void, addSplineLocalPoint_)(USplineComponent_* self_p0, FVector& position_p1);
N_LIB_PRIVATE N_NIMCALL(void, addPoints_)(USplineComponent_* self_p0, TY__mBZUVg11b9ab5AFrh8yZkWw& points_p1, NIM_BOOL bUpdateSpline_p2);
N_LIB_PRIVATE N_NIMCALL(void, addPoint_)(USplineComponent_* self_p0, FSplinePoint_& point_p1, NIM_BOOL bUpdateSpline_p2);
N_LIB_PRIVATE N_NIMCALL(void, updateMesh_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setStartTangent_)(USplineMeshComponent_* self_p0, FVector startTangent_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStartScale_)(USplineMeshComponent_* self_p0, FVector2D startScale_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStartRoll_)(USplineMeshComponent_* self_p0, NF32 startRoll_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStartPosition_)(USplineMeshComponent_* self_p0, FVector startPos_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStartOffset_)(USplineMeshComponent_* self_p0, FVector2D startOffset_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setStartAndEnd_)(USplineMeshComponent_* self_p0, FVector startPos_p1, FVector startTangent_p2, FVector endPos_p3, FVector endTangent_p4, NIM_BOOL bUpdateMesh_p5);
N_LIB_PRIVATE N_NIMCALL(void, setSplineUpDir_)(USplineMeshComponent_* self_p0, FVector& inSplineUpDir_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setForwardAxis_)(USplineMeshComponent_* self_p0, tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA inForwardAxis_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEndTangent_)(USplineMeshComponent_* self_p0, FVector endTangent_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEndScale_)(USplineMeshComponent_* self_p0, FVector2D endScale_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEndRoll_)(USplineMeshComponent_* self_p0, NF32 endRoll_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEndPosition_)(USplineMeshComponent_* self_p0, FVector endPos_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setEndOffset_)(USplineMeshComponent_* self_p0, FVector2D endOffset_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBoundaryMin_)(USplineMeshComponent_* self_p0, NF32 inBoundaryMin_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBoundaryMax_)(USplineMeshComponent_* self_p0, NF32 inBoundaryMax_p1, NIM_BOOL bUpdateMesh_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getStartTangent_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getStartScale_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getStartRoll_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getStartPosition_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getStartOffset_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getSplineUpDir_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA, getForwardAxis_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getEndTangent_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getEndScale_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getEndRoll_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getEndPosition_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getEndOffset_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoundaryMin_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoundaryMax_)(USplineMeshComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, innerConeAngle)(USpotLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinnerConeAngle)(USpotLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, outerConeAngle)(USpotLightComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setouterConeAngle)(USpotLightComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOuterConeAngle_)(USpotLightComponent* self_p0, NF32 newOuterConeAngle_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInnerConeAngle_)(USpotLightComponent* self_p0, NF32 newInnerConeAngle_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, layerBottomAltitude)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlayerBottomAltitude)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, layerHeight)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlayerHeight)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, tracingStartMaxDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settracingStartMaxDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow, tracingMaxDistanceMode)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settracingMaxDistanceMode)(UVolumetricCloudComponent_* obj_p0, tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, tracingMaxDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settracingMaxDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, planetRadius)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setplanetRadius)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FColor*, groundAlbedo)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setgroundAlbedo)(UVolumetricCloudComponent_* obj_p0, FColor val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, material)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterial)(UVolumetricCloudComponent_* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePerSampleAtmosphericLightTransmittance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePerSampleAtmosphericLightTransmittance)(UVolumetricCloudComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, skyLightCloudBottomOcclusion)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setskyLightCloudBottomOcclusion)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, viewSampleCountScale)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setviewSampleCountScale)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, reflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setreflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowViewSampleCountScale)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowViewSampleCountScale)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowReflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowReflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowTracingDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshadowTracingDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, stopTracingTransmittanceThreshold)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstopTracingTransmittanceThreshold)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveRayleighScatteringStartDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveRayleighScatteringStartDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveRayleighScatteringFadeDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveRayleighScatteringFadeDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveMieScatteringStartDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveMieScatteringStartDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveMieScatteringFadeDistance)(UVolumetricCloudComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveMieScatteringFadeDistance)(UVolumetricCloudComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setViewSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTracingStartMaxDistance_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTracingMaxDistance_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStopTracingTransmittanceThreshold_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkyLightCloudBottomOcclusion_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowViewSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowTracingDistance_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowReflectionViewSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setShadowReflectionSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionViewSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionSampleCountScale_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPlanetRadius_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UVolumetricCloudComponent_* self_p0, UMaterialInterface* newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLayerHeight_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLayerBottomAltitude_)(UVolumetricCloudComponent_* self_p0, NF32 newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setGroundAlbedo_)(UVolumetricCloudComponent_* self_p0, FColor newValue_p1);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePerSampleAtmosphericLightTransmittance_)(UVolumetricCloudComponent_* self_p0, NIM_BOOL newValue_p1);
N_LIB_PRIVATE N_NIMCALL(UVolumetricCloudComponent_*, volumetricCloudComponent)(AVolumetricCloud_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricCloudComponent)(AVolumetricCloud_* obj_p0, UVolumetricCloudComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA, targetBehavior)(UWorldPartitionStreamingSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetBehavior)(UWorldPartitionStreamingSourceComponent_* obj_p0, tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, targetGrids)(UWorldPartitionStreamingSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetGrids)(UWorldPartitionStreamingSourceComponent_* obj_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__hE3Vl7BBAFmzClPscSpXag*, targetHLODLayers)(UWorldPartitionStreamingSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetHLODLayers)(UWorldPartitionStreamingSourceComponent_* obj_p0, TY__hE3Vl7BBAFmzClPscSpXag val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__nOrP80JBRl6rmLy4ACFykA*, shapes)(UWorldPartitionStreamingSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setshapes)(UWorldPartitionStreamingSourceComponent_* obj_p0, TY__nOrP80JBRl6rmLy4ACFykA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, priority)(UWorldPartitionStreamingSourceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UWorldPartitionStreamingSourceComponent_* obj_p0, tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingSourceEnabled_)(UWorldPartitionStreamingSourceComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingCompleted_)(UWorldPartitionStreamingSourceComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, enableStreamingSource_)(UWorldPartitionStreamingSourceComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, disableStreamingSource_)(UWorldPartitionStreamingSourceComponent_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCurves)(void);
N_LIB_PRIVATE N_NIMCALL(void, getValueRange_)(UCurveBase_* self_p0, NF32& minValue_p1, NF32& maxValue_p2);
N_LIB_PRIVATE N_NIMCALL(void, getTimeRange_)(UCurveBase_* self_p0, NF32& minTime_p1, NF32& maxTime_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatValue_)(UCurveFloat* self_p0, NF32 inTime_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getUnadjustedLinearColorValue_)(UCurveLinearColor_* self_p0, NF32 inTime_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLinearColorValue_)(UCurveLinearColor_* self_p0, NF32 inTime_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getClampedLinearColorValue_)(UCurveLinearColor_* self_p0, NF32 inTime_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurvePosition_)(UCurveLinearColorAtlas_* self_p0, UCurveLinearColor_* inCurve_p1, NF32& position_p2);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorValue_)(UCurveVector_* self_p0, NF32 inTime_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDataDrivenCVars)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDistributions)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEdGraph)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEditorFramework)(void);
N_LIB_PRIVATE N_NIMCALL(void, scriptedAddFilename_)(UAssetImportData_* self_p0, FString inPath_p1, NI32 index_p2, FString sourceFileLabel_p3);
N_LIB_PRIVATE N_NIMCALL(FString, getFirstFilename_)(UAssetImportData_* self_p0);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, extractFilenames_)(UAssetImportData_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineElements)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineExporters)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, supportedClass)(UExporter_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsupportedClass)(UExporter_* obj_p0, TY__Gdb8rCprT6WGagrQes2BIg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, formatExtension)(UExporter_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setformatExtension)(UExporter_* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, formatDescription)(UExporter_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setformatDescription)(UExporter_* obj_p0, TY__myhN0u2pNczwuaOhbdYPXw val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bText)(UExporter_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbText)(UExporter_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(UAssetExportTask_*, exportTask)(UExporter_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setexportTask)(UExporter_* obj_p0, UAssetExportTask_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, runAssetExportTasks_)(TY__T8LsyrGmVj5MTxJHlTQQXA& exportTasks_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, runAssetExportTask_)(UAssetExportTask_* task_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineHaptics)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineInstances)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineISMPartition)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineKismet)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineLightmass)(void);
N_LIB_PRIVATE N_NIMCALL(ULightmassPortalComponent_*, portalComponent)(ALightmassPortal_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setportalComponent)(ALightmassPortal_* obj_p0, ULightmassPortalComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, overrideVisibleActors)(APrecomputedVisibilityOverrideVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideVisibleActors)(APrecomputedVisibilityOverrideVolume_* obj_p0, TY__kbK03O9cVTTS0GR9cjPhedTg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, overrideInvisibleActors)(APrecomputedVisibilityOverrideVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideInvisibleActors)(APrecomputedVisibilityOverrideVolume_* obj_p0, TY__kbK03O9cVTTS0GR9cjPhedTg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, overrideInvisibleLevels)(APrecomputedVisibilityOverrideVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideInvisibleLevels)(APrecomputedVisibilityOverrideVolume_* obj_p0, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineMaterials)(void);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialInterface* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialInterface* obj_p0, USubsurfaceProfile_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setForceMipLevelsToBeResident_)(UMaterialInterface* self_p0, NIM_BOOL overrideForceMiplevelsToBeResident_p1, NIM_BOOL bForceMiplevelsToBeResidentValue_p2, NF32 forceDuration_p3, NI32 cinematicTextureGroups_p4, NIM_BOOL bFastResponse_p5);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, getPhysicalMaterialFromMap_)(UMaterialInterface* self_p0, NI32 index_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, getPhysicalMaterial_)(UMaterialInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(FMaterialParameterInfo, getParameterInfo_)(UMaterialInterface* self_p0, tyEnum_EMaterialParameterAssociation__bQ0QFzWtAc9bK1kySiJFxnA association_p1, FName parameterName_p2, UMaterialFunctionInterface* layerFunction_p3);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw, getBlendMode_)(UMaterialInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterial*, getBaseMaterial_)(UMaterialInterface* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA, materialDomain)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialDomain)(UMaterial* obj_p0, tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw, blendMode)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendMode)(UMaterial* obj_p0, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ, materialDecalResponse)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialDecalResponse)(UMaterial* obj_p0, tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FMaterialOverrideNanite*, naniteOverrideMaterial)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setnaniteOverrideMaterial)(UMaterial* obj_p0, FMaterialOverrideNanite val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseEmissiveForDynamicAreaLighting)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseEmissiveForDynamicAreaLighting)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithSkeletalMesh)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithSkeletalMesh)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithEditorCompositing)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithEditorCompositing)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithParticleSprites)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithParticleSprites)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithBeamTrails)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithBeamTrails)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithMeshParticles)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithMeshParticles)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraSprites)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraSprites)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraRibbons)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraRibbons)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraMeshParticles)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraMeshParticles)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithGeometryCache)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithGeometryCache)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithStaticLighting)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithStaticLighting)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithMorphTargets)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithMorphTargets)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithSplineMeshes)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithSplineMeshes)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithInstancedStaticMeshes)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithInstancedStaticMeshes)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithGeometryCollections)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithGeometryCollections)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithClothing)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithClothing)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithWater)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithWater)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithHairStrands)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithHairStrands)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithLidarPointCloud)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithLidarPointCloud)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithVirtualHeightfieldMesh)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithVirtualHeightfieldMesh)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNanite)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNanite)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithVolumetricCloud)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithVolumetricCloud)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutomaticallySetUsageInEditor)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutomaticallySetUsageInEditor)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFullyRough)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbFullyRough)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA, floatPrecisionMode)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfloatPrecisionMode)(UMaterial* obj_p0, tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLightmapDirectionality)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLightmapDirectionality)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMobileEnableHighQualityBRDF)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMobileEnableHighQualityBRDF)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAlphaToCoverage)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAlphaToCoverage)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForwardRenderUsePreintegratedGFForSimpleIBL)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForwardRenderUsePreintegratedGFForSimpleIBL)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseHQForwardReflections)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseHQForwardReflections)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForwardBlendsSkyLightCubemaps)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbForwardBlendsSkyLightCubemaps)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePlanarForwardReflections)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePlanarForwardReflections)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNormalCurvatureToRoughness)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbNormalCurvatureToRoughness)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ, blendableLocation)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendableLocation)(UMaterial* obj_p0, tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NU8, blendableOutputAlpha)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendableOutputAlpha)(UMaterial* obj_p0, NU8 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, blendablePriority)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setblendablePriority)(UMaterial* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsBlendable)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIsBlendable)(UMaterial* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWorldPositionOffsetDisplacement)(UMaterial* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWorldPositionOffsetDisplacement)(UMaterial* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, physMaterial)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setphysMaterial)(UMaterialInstance* obj_p0, UPhysicalMaterial* val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, parent)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparent)(UMaterialInstance* obj_p0, UMaterialInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideSubsurfaceProfile)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideSubsurfaceProfile)(UMaterialInstance* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__wpkkvw3QAwKf7ZaACMVTtA*, scalarParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setscalarParameterValues)(UMaterialInstance* obj_p0, TY__wpkkvw3QAwKf7ZaACMVTtA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__sddSY5hxII7T4XO9a1Mez7g*, vectorParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvectorParameterValues)(UMaterialInstance* obj_p0, TY__sddSY5hxII7T4XO9a1Mez7g val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__MjN8bA2J7QGs87X9b69cz9ciA*, doubleVectorParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdoubleVectorParameterValues)(UMaterialInstance* obj_p0, TY__MjN8bA2J7QGs87X9b69cz9ciA val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__2e2kXW4qc0U6k9bt5o0wgDg*, textureParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settextureParameterValues)(UMaterialInstance* obj_p0, TY__2e2kXW4qc0U6k9bt5o0wgDg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__2kfN9asIen9adfoHPjm0OHLg*, runtimeVirtualTextureParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setruntimeVirtualTextureParameterValues)(UMaterialInstance* obj_p0, TY__2kfN9asIen9adfoHPjm0OHLg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__rZldDsDtIj9c5z9bC1DdMiHQ*, sparseVolumeTextureParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsparseVolumeTextureParameterValues)(UMaterialInstance* obj_p0, TY__rZldDsDtIj9c5z9bC1DdMiHQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__FGDznZ1p2MJe6xaB8q4CCQ*, fontParameterValues)(UMaterialInstance* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfontParameterValues)(UMaterialInstance* obj_p0, TY__FGDznZ1p2MJe6xaB8q4CCQ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setNaniteOverrideMaterial_)(UMaterialInstanceConstant_* self_p0, NIM_BOOL bInEnableOverride_p1, UMaterialInterface* inOverrideMaterial_p2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UMaterialInstanceConstant_* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValue_)(UMaterialInstanceConstant_* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UMaterialInstanceConstant_* self_p0, FName parameterName_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, materialExpressionEditorX)(UMaterialExpression* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialExpressionEditorX)(UMaterialExpression* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, materialExpressionEditorY)(UMaterialExpression* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialExpressionEditorY)(UMaterialExpression* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UMaterialExpressionTextureBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UMaterialExpressionTextureBase_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg, samplerType)(UMaterialExpressionTextureBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsamplerType)(UMaterialExpressionTextureBase_* obj_p0, tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, r)(UMaterialExpressionConstant_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setr)(UMaterialExpressionConstant_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, r)(UMaterialExpressionConstant2Vector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setr)(UMaterialExpressionConstant2Vector_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, g)(UMaterialExpressionConstant2Vector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setg)(UMaterialExpressionConstant2Vector_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, constant)(UMaterialExpressionConstant3Vector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconstant)(UMaterialExpressionConstant3Vector_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, constant)(UMaterialExpressionConstant4Vector_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconstant)(UMaterialExpressionConstant4Vector_* obj_p0, FLinearColor val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, inputName)(UMaterialExpressionFunctionInput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputName)(UMaterialExpressionFunctionInput_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ, inputType)(UMaterialExpressionFunctionInput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinputType)(UMaterialExpressionFunctionInput_* obj_p0, tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector4f*, previewValue)(UMaterialExpressionFunctionInput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpreviewValue)(UMaterialExpressionFunctionInput_* obj_p0, FVector4f val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePreviewValueAsDefault)(UMaterialExpressionFunctionInput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePreviewValueAsDefault)(UMaterialExpressionFunctionInput_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, sortPriority)(UMaterialExpressionFunctionInput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsortPriority)(UMaterialExpressionFunctionInput_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, outputName)(UMaterialExpressionFunctionOutput_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoutputName)(UMaterialExpressionFunctionOutput_* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(NF, value)(UMaterialExpressionConstantDouble_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(UMaterialExpressionConstantDouble_* obj_p0, NF val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setMaterialFunction_)(UMaterialExpressionMaterialFunctionCall* self_p0, UMaterialFunctionInterface* newMaterialFunction_p1);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataLegacyConversion_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataLegacyConversion_* obj_p0, USubsurfaceProfile_* val_p1);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataSlabBSDF_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataSlabBSDF_* obj_p0, USubsurfaceProfile_* val_p1);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataEyeBSDF_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataEyeBSDF_* obj_p0, USubsurfaceProfile_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, coordinateIndex)(UMaterialExpressionTextureCoordinate_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcoordinateIndex)(UMaterialExpressionTextureCoordinate_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, uTiling)(UMaterialExpressionTextureCoordinate_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuTiling)(UMaterialExpressionTextureCoordinate_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, vTiling)(UMaterialExpressionTextureCoordinate_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvTiling)(UMaterialExpressionTextureCoordinate_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UMaterialFunctionInterface*, parent)(UMaterialFunctionInstance_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparent)(UMaterialFunctionInstance_* obj_p0, UMaterialFunctionInterface* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, targetActors)(AMaterialInstanceActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settargetActors)(AMaterialInstanceActor_* obj_p0, TY__kbK03O9cVTTS0GR9cjPhedTg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getVectorParameterNames_)(UMaterialParameterCollection_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterDefaultValue_)(UMaterialParameterCollection_* self_p0, FName parameterName_p1, NIM_BOOL& bParameterFound_p2);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getScalarParameterNames_)(UMaterialParameterCollection_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterDefaultValue_)(UMaterialParameterCollection_* self_p0, FName parameterName_p1, NIM_BOOL& bParameterFound_p2);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineNet)(void);
N_LIB_PRIVATE N_NIMCALL(FVoiceSettings_*, settings)(UVOIPTalker_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(UVOIPTalker_* obj_p0, FVoiceSettings_ val_p1);
N_LIB_PRIVATE N_NIMCALL(void, registerWithPlayerState_)(UVOIPTalker_* self_p0, APlayerState_* owningState_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, getVoiceLevel_)(UVOIPTalker_* self_p0);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineParticles)(void);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, particleSystemComponent)(AEmitter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparticleSystemComponent)(AEmitter* obj_p0, UParticleSystemComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPostUpdateTickGroup)(AEmitter* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbPostUpdateTickGroup)(AEmitter* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleActive_)(AEmitter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameter_)(AEmitter* self_p0, FName parameterName_p1, FVector param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialParameter_)(AEmitter* self_p0, FName parameterName_p1, UMaterialInterface* param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(AEmitter* self_p0, FName parameterName_p1, NF32 param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setColorParameter_)(AEmitter* self_p0, FName parameterName_p1, FLinearColor param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setActorParameter_)(AEmitter* self_p0, FName parameterName_p1, AActor* param_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(AEmitter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, deactivate_)(AEmitter* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(AEmitter* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, containsEmitterType_)(UParticleSystem* self_p0, UClass* typeData_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, inverseExposureBlend)(UParticleModuleLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinverseExposureBlend)(UParticleModuleLight_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(UParticleModuleLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(UParticleModuleLight_* obj_p0, FLightingChannels val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricScatteringIntensity)(UParticleModuleLight_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricScatteringIntensity)(UParticleModuleLight_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, Template)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setTemplate)(UParticleSystemComponent* obj_p0, UParticleSystem* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bResetOnDetach)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbResetOnDetach)(UParticleSystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowRecycling)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowRecycling)(UParticleSystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoManageAttachment)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoManageAttachment)(UParticleSystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoAttachWeldSimulatedBodies)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoAttachWeldSimulatedBodies)(UParticleSystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLODMethod)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLODMethod)(UParticleSystemComponent* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg, lODMethod)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODMethod)(UParticleSystemComponent* obj_p0, tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__hRNirpXzEmqf49cUfEqEUHQ*, instanceParameters)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceParameters)(UParticleSystemComponent* obj_p0, TY__hRNirpXzEmqf49cUfEqEUHQ val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, secondsBeforeInactive)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsecondsBeforeInactive)(UParticleSystemComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, customTimeDilation)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcustomTimeDilation)(UParticleSystemComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, autoAttachParent)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachParent)(UParticleSystemComponent* obj_p0, TY__9b9c0qopUCzSW4js0BJumMlQ val_p1);
N_LIB_PRIVATE N_NIMCALL(FName*, autoAttachSocketName)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachSocketName)(UParticleSystemComponent* obj_p0, FName val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachLocationRule)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachLocationRule)(UParticleSystemComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachRotationRule)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachRotationRule)(UParticleSystemComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachScaleRule)(UParticleSystemComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachScaleRule)(UParticleSystemComponent* obj_p0, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTrailSourceData_)(UParticleSystemComponent* self_p0, FName inFirstSocketName_p1, FName inSecondSocketName_p2, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg inWidthMode_p3, NF32 inWidth_p4);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialParameter_)(UParticleSystemComponent* self_p0, FName parameterName_p1, UMaterialInterface* param_p2);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetTangent_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector newTangentPoint_p2, NI32 targetIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetStrength_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NF32 newTargetStrength_p2, NI32 targetIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetPoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector newTargetPoint_p2, NI32 targetIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourceTangent_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector newTangentPoint_p2, NI32 sourceIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourceStrength_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NF32 newSourceStrength_p2, NI32 sourceIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourcePoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector newSourcePoint_p2, NI32 sourceIndex_p3);
N_LIB_PRIVATE N_NIMCALL(void, setBeamEndPoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector newEndPoint_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAutoAttachParams_)(UParticleSystemComponent* self_p0, USceneComponent* parent_p1, FName socketName_p2, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType_p3);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumActiveParticles_)(UParticleSystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getNamedMaterial_)(UParticleSystemComponent* self_p0, FName inName_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetTangent_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 targetIndex_p2, FVector& outTangentPoint_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetStrength_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 targetIndex_p2, NF32& outTargetStrength_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetPoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 targetIndex_p2, FVector& outTargetPoint_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourceTangent_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 sourceIndex_p2, FVector& outTangentPoint_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourceStrength_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 sourceIndex_p2, NF32& outSourceStrength_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourcePoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, NI32 sourceIndex_p2, FVector& outSourcePoint_p3);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamEndPoint_)(UParticleSystemComponent* self_p0, NI32 emitterIndex_p1, FVector& outEndPoint_p2);
N_LIB_PRIVATE N_NIMCALL(void, generateParticleEvent_)(UParticleSystemComponent* self_p0, FName inEventName_p1, NF32 inEmitterTime_p2, FVector inLocation_p3, FVector inDirection_p4, FVector inVelocity_p5);
N_LIB_PRIVATE N_NIMCALL(void, endTrails_)(UParticleSystemComponent* self_p0);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createNamedDynamicMaterialInstance_)(UParticleSystemComponent* self_p0, FName inName_p1, UMaterialInterface* sourceMaterial_p2);
N_LIB_PRIVATE N_NIMCALL(void, beginTrails_)(UParticleSystemComponent* self_p0, FName inFirstSocketName_p1, FName inSecondSocketName_p2, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg inWidthMode_p3, NF32 inWidth_p4);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysicalMaterials)(void);
N_LIB_PRIVATE N_NIMCALL(UTexture*, maskTexture)(UPhysicalMaterialMask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaskTexture)(UPhysicalMaterialMask_* obj_p0, UTexture* val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, uVChannelIndex)(UPhysicalMaterialMask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setuVChannelIndex)(UPhysicalMaterialMask_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UPhysicalMaterialMask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UPhysicalMaterialMask_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UPhysicalMaterialMask_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UPhysicalMaterialMask_* obj_p0, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysics)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysicsEngine)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, springStiffness)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringStiffness)(UPhysicsSpringComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, springDamping)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringDamping)(UPhysicsSpringComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, springLengthAtRest)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringLengthAtRest)(UPhysicsSpringComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, springRadius)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringRadius)(UPhysicsSpringComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, springChannel)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringChannel)(UPhysicsSpringComponent_* obj_p0, ECollisionChannel val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreSelf)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreSelf)(UPhysicsSpringComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, springCompression)(UPhysicsSpringComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspringCompression)(UPhysicsSpringComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringRestingPoint_)(UPhysicsSpringComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringDirection_)(UPhysicsSpringComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringCurrentEndPoint_)(UPhysicsSpringComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getNormalizedCompressionScalar_)(UPhysicsSpringComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, thrustStrength)(UPhysicsThrusterComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setthrustStrength)(UPhysicsThrusterComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(URadialForceComponent_*, forceComponent)(ARadialForceActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforceComponent)(ARadialForceActor_* obj_p0, URadialForceComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, toggleForce_)(ARadialForceActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, fireImpulse_)(ARadialForceActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, enableForce_)(ARadialForceActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, disableForce_)(ARadialForceActor_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, strengthMultiplyer)(UPhysicalAnimationComponent* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthMultiplyer)(UPhysicalAnimationComponent* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setStrengthMultiplyer_)(UPhysicalAnimationComponent* self_p0, NF32 inStrengthMultiplyer_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSkeletalMeshComponent_)(UPhysicalAnimationComponent* self_p0, USkeletalMeshComponent* inSkeletalMeshComponent_p1);
N_LIB_PRIVATE N_NIMCALL(FTransform, getBodyTargetTransform_)(UPhysicalAnimationComponent* self_p0, FName bodyName_p1);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationSettingsBelow_)(UPhysicalAnimationComponent* self_p0, FName bodyName_p1, FPhysicalAnimationData& physicalAnimationData_p2, NIM_BOOL bIncludeSelf_p3);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationSettings_)(UPhysicalAnimationComponent* self_p0, FName bodyName_p1, FPhysicalAnimationData& physicalAnimationData_p2);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationProfileBelow_)(UPhysicalAnimationComponent* self_p0, FName bodyName_p1, FName profileName_p2, NIM_BOOL bIncludeSelf_p3, NIM_BOOL bClearNotFound_p4);
N_LIB_PRIVATE N_NIMCALL(void, getConstraints_)(UPhysicsAsset* self_p0, NIM_BOOL bIncludesTerminated_p1, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints_p2);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByName_)(UPhysicsAsset* self_p0, FName constraintName_p1, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByBoneNames_)(UPhysicsAsset* self_p0, FName bone1Name_p1, FName bone2Name_p2, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(NF32, impactThreshold)(UPhysicsCollisionHandler_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setimpactThreshold)(UPhysicsCollisionHandler_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, impactReFireDelay)(UPhysicsCollisionHandler_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setimpactReFireDelay)(UPhysicsCollisionHandler_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(UPhysicsConstraintComponent_*, constraintComp)(APhysicsConstraintActor_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconstraintComp)(APhysicsConstraintActor_* obj_p0, UPhysicsConstraintComponent_* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveTwistAndSwing_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableTwistDrive_p1, NIM_BOOL bEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveSLERP_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearZLimit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType_p1, NF32 limitSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setLinearYLimit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType_p1, NF32 limitSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setLinearXLimit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType_p1, NF32 limitSize_p2);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityTarget_)(UPhysicsConstraintComponent_* self_p0, FVector& inVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityDrive_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableDriveX_p1, NIM_BOOL bEnableDriveY_p2, NIM_BOOL bEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionTarget_)(UPhysicsConstraintComponent_* self_p0, FVector& inPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionDrive_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableDriveX_p1, NIM_BOOL bEnableDriveY_p2, NIM_BOOL bEnableDriveZ_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPlasticity_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bLinearPlasticity_p1, NF32 linearPlasticityThreshold_p2, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA plasticityType_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDriveParams_)(UPhysicsConstraintComponent_* self_p0, NF32 positionStrength_p1, NF32 velocityStrength_p2, NF32 inForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, setLinearBreakable_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bLinearBreakable_p1, NF32 linearBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDisableCollision_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bDisableCollision_p1);
N_LIB_PRIVATE N_NIMCALL(void, setContactTransferScale_)(UPhysicsConstraintComponent_* self_p0, NF32 contactTransferScale_p1);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferencePosition_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame_p1, FVector& refPosition_p2);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferenceOrientation_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame_p1, FVector& priAxis_p2, FVector& secAxis_p3);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferenceFrame_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame_p1, FTransform& refFrame_p2);
N_LIB_PRIVATE N_NIMCALL(void, setConstrainedComponents_)(UPhysicsConstraintComponent_* self_p0, UPrimitiveComponent* component1_p1, FName boneName1_p2, UPrimitiveComponent* component2_p3, FName boneName2_p4);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityTarget_)(UPhysicsConstraintComponent_* self_p0, FVector& inVelTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveTwistAndSwing_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableTwistDrive_p1, NIM_BOOL bEnableSwingDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveSLERP_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableSLERP_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDrive_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableSwingDrive_p1, NIM_BOOL bEnableTwistDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularTwistLimit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg constraintType_p1, NF32 twistLimitAngle_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSwing2Limit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg motionType_p1, NF32 swing2LimitAngle_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSwing1Limit_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg motionType_p1, NF32 swing1LimitAngle_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularPlasticity_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bAngularPlasticity_p1, NF32 angularPlasticityThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationTarget_)(UPhysicsConstraintComponent_* self_p0, FRotator& inPosTarget_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationDrive_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bEnableSwingDrive_p1, NIM_BOOL bEnableTwistDrive_p2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveParams_)(UPhysicsConstraintComponent_* self_p0, NF32 positionStrength_p1, NF32 velocityStrength_p2, NF32 inForceLimit_p3);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveMode_)(UPhysicsConstraintComponent_* self_p0, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ driveMode_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularBreakable_)(UPhysicsConstraintComponent_* self_p0, NIM_BOOL bAngularBreakable_p1, NF32 angularBreakThreshold_p2);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBroken_)(UPhysicsConstraintComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentTwist_)(UPhysicsConstraintComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentSwing2_)(UPhysicsConstraintComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentSwing1_)(UPhysicsConstraintComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintForce_)(UPhysicsConstraintComponent_* self_p0, FVector& outLinearForce_p1, FVector& outAngularForce_p2);
N_LIB_PRIVATE N_NIMCALL(void, getConstraint_)(UPhysicsConstraintComponent_* self_p0, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getConstrainedComponents_)(UPhysicsConstraintComponent_* self_p0, UPrimitiveComponent*& outComponent1_p1, FName& outBoneName1_p2, UPrimitiveComponent*& outComponent2_p3, FName& outBoneName2_p4);
N_LIB_PRIVATE N_NIMCALL(void, breakConstraint_)(UPhysicsConstraintComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSoftAngularConstraint)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSoftAngularConstraint)(UPhysicsHandleComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSoftLinearConstraint)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSoftLinearConstraint)(UPhysicsHandleComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpolateTarget)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpolateTarget)(UPhysicsHandleComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, linearDamping)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlinearDamping)(UPhysicsHandleComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, linearStiffness)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlinearStiffness)(UPhysicsHandleComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, angularDamping)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setangularDamping)(UPhysicsHandleComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, angularStiffness)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setangularStiffness)(UPhysicsHandleComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, interpolationSpeed)(UPhysicsHandleComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setinterpolationSpeed)(UPhysicsHandleComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTargetRotation_)(UPhysicsHandleComponent_* self_p0, FRotator newRotation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setTargetLocationAndRotation_)(UPhysicsHandleComponent_* self_p0, FVector newLocation_p1, FRotator newRotation_p2);
N_LIB_PRIVATE N_NIMCALL(void, setTargetLocation_)(UPhysicsHandleComponent_* self_p0, FVector newLocation_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearStiffness_)(UPhysicsHandleComponent_* self_p0, NF32 newLinearStiffness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDamping_)(UPhysicsHandleComponent_* self_p0, NF32 newLinearDamping_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInterpolationSpeed_)(UPhysicsHandleComponent_* self_p0, NF32 newInterpolationSpeed_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularStiffness_)(UPhysicsHandleComponent_* self_p0, NF32 newAngularStiffness_p1);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDamping_)(UPhysicsHandleComponent_* self_p0, NF32 newAngularDamping_p1);
N_LIB_PRIVATE N_NIMCALL(void, releaseComponent_)(UPhysicsHandleComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, grabComponentAtLocationWithRotation_)(UPhysicsHandleComponent_* self_p0, UPrimitiveComponent* component_p1, FName inBoneName_p2, FVector location_p3, FRotator rotation_p4);
N_LIB_PRIVATE N_NIMCALL(void, grabComponentAtLocation_)(UPhysicsHandleComponent_* self_p0, UPrimitiveComponent* component_p1, FName inBoneName_p2, FVector grabLocation_p3);
N_LIB_PRIVATE N_NIMCALL(void, grabComponent_)(UPhysicsHandleComponent_* self_p0, UPrimitiveComponent* component_p1, FName inBoneName_p2, FVector grabLocation_p3, NIM_BOOL bConstrainRotation_p4);
N_LIB_PRIVATE N_NIMCALL(void, getTargetLocationAndRotation_)(UPhysicsHandleComponent_* self_p0, FVector& targetLocation_p1, FRotator& targetRotation_p2);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, getGrabbedComponent_)(UPhysicsHandleComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(URadialForceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg, falloff)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setfalloff)(URadialForceComponent_* obj_p0, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, impulseStrength)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setimpulseStrength)(URadialForceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpulseVelChange)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbImpulseVelChange)(URadialForceComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreOwningActor)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreOwningActor)(URadialForceComponent_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, forceStrength)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setforceStrength)(URadialForceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamage)(URadialForceComponent_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamage)(URadialForceComponent_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(void, removeObjectTypeToAffect_)(URadialForceComponent_* self_p0, EObjectTypeQuery objectType_p1);
N_LIB_PRIVATE N_NIMCALL(void, fireImpulse_)(URadialForceComponent_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, addObjectTypeToAffect_)(URadialForceComponent_* self_p0, EObjectTypeQuery objectType_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSound)(void);
N_LIB_PRIVATE N_NIMCALL(USoundClass*, soundClassObject)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsoundClassObject)(USoundBase* obj_p0, USoundClass* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideConcurrency)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideConcurrency)(USoundBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableBusSends)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableBusSends)(USoundBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassVolumeScaleForPriority)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassVolumeScaleForPriority)(USoundBase* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw, virtualizationMode)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualizationMode)(USoundBase* obj_p0, tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__NR5I3JrURnzfmlYGr3FAVw*, concurrencySet)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencySet)(USoundBase* obj_p0, TY__NR5I3JrURnzfmlYGr3FAVw val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundConcurrencySettings_*, concurrencyOverrides)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencyOverrides)(USoundBase* obj_p0, FSoundConcurrencySettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(USoundBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDistance)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDistance)(USoundBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, totalSamples)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settotalSamples)(USoundBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(USoundBase* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundSubmixBase_*, soundSubmixObject)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsoundSubmixObject)(USoundBase* obj_p0, USoundSubmixBase_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__mYFRCs9aMXMCd4LKh8IWtiQ*, soundSubmixSends)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsoundSubmixSends)(USoundBase* obj_p0, TY__mYFRCs9aMXMCd4LKh8IWtiQ val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundEffectSourcePresetChain*, sourceEffectChain)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsourceEffectChain)(USoundBase* obj_p0, USoundEffectSourcePresetChain* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__E1cF89aBHPPsJaR6qT9cRcgw*, busSends)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbusSends)(USoundBase* obj_p0, TY__E1cF89aBHPPsJaR6qT9cRcgw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__E1cF89aBHPPsJaR6qT9cRcgw*, preEffectBusSends)(USoundBase* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpreEffectBusSends)(USoundBase* obj_p0, TY__E1cF89aBHPPsJaR6qT9cRcgw val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDefaultRoutingSettings*, modulationSettings)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmodulationSettings)(USoundWave* obj_p0, FSoundModulationDefaultRoutingSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMature)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMature)(USoundWave* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bManualWordWrap)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbManualWordWrap)(USoundWave* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSingleLine)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSingleLine)(USoundWave* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, subtitlePriority)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitlePriority)(USoundWave* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__BOJ5ThsWgCz3WmPBwfzXrQ*, cuePoints)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setcuePoints)(USoundWave* obj_p0, TY__BOJ5ThsWgCz3WmPBwfzXrQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__J5oi1L6HY7OmrYakjq3uIg*, subtitles)(USoundWave* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitles)(USoundWave* obj_p0, TY__J5oi1L6HY7OmrYakjq3uIg val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSoundAssetCompressionType_)(USoundWave* self_p0, tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg inSoundAssetCompressionType_p1, NIM_BOOL bMarkDirty_p2);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg, getSoundAssetCompressionType_)(USoundWave* self_p0);
N_LIB_PRIVATE N_NIMCALL(FSoundAttenuationSettings*, attenuation)(USoundAttenuation* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(USoundAttenuation* obj_p0, FSoundAttenuationSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, audioComponent)(AAmbientSound_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setaudioComponent)(AAmbientSound_* obj_p0, UAudioComponent* val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(AAmbientSound_* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, play_)(AAmbientSound_* self_p0, NF32 startTime_p1);
N_LIB_PRIVATE N_NIMCALL(void, fadeOut_)(AAmbientSound_* self_p0, NF32 fadeOutDuration_p1, NF32 fadeVolumeLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, fadeIn_)(AAmbientSound_* self_p0, NF32 fadeInDuration_p1, NF32 fadeVolumeLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, adjustVolume_)(AAmbientSound_* self_p0, NF32 adjustVolumeDuration_p1, NF32 adjustVolumeLevel_p2);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(AAudioVolume_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(AAudioVolume_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FReverbSettings_*, settings)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(AAudioVolume_* obj_p0, FReverbSettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(FInteriorSettings_*, ambientZoneSettings)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setambientZoneSettings)(AAudioVolume_* obj_p0, FInteriorSettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__0P3QE6CnwcQtnLUClvj1AQ*, submixSendSettings)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixSendSettings)(AAudioVolume_* obj_p0, TY__0P3QE6CnwcQtnLUClvj1AQ val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__KW4wPWVxwu2sHCJkJbVpzA*, submixOverrideSettings)(AAudioVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixOverrideSettings)(AAudioVolume_* obj_p0, TY__KW4wPWVxwu2sHCJkJbVpzA val_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixSendSettings_)(AAudioVolume_* self_p0, TY__0P3QE6CnwcQtnLUClvj1AQ& newSubmixSendSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixOverrideSettings_)(AAudioVolume_* self_p0, TY__KW4wPWVxwu2sHCJkJbVpzA& newSubmixOverrideSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setReverbSettings_)(AAudioVolume_* self_p0, FReverbSettings_& newReverbSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(AAudioVolume_* self_p0, NF32 newPriority_p1);
N_LIB_PRIVATE N_NIMCALL(void, setInteriorSettings_)(AAudioVolume_* self_p0, FInteriorSettings_& newInteriorSettings_p1);
N_LIB_PRIVATE N_NIMCALL(void, setEnabled_)(AAudioVolume_* self_p0, NIM_BOOL bNewEnabled_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMature)(UDialogueWave_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMature)(UDialogueWave_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverride_SubtitleOverride)(UDialogueWave_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbOverride_SubtitleOverride)(UDialogueWave_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, spokenText)(UDialogueWave_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setspokenText)(UDialogueWave_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(FString, subtitleOverride)(UDialogueWave_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitleOverride)(UDialogueWave_* obj_p0, FString val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassEarlyReflections)(UReverbEffect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassEarlyReflections)(UReverbEffect_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassLateReflections)(UReverbEffect_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassLateReflections)(UReverbEffect_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundClassProperties*, properties)(USoundClass* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setproperties)(USoundClass* obj_p0, FSoundClassProperties val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__pVtcV5B6QAzor9cajvYb6Rw*, childClasses)(USoundClass* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchildClasses)(USoundClass* obj_p0, TY__pVtcV5B6QAzor9cajvYb6Rw val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__gUl6WccpnVptdwE9bBR9a1YA*, passiveSoundMixModifiers)(USoundClass* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpassiveSoundMixModifiers)(USoundClass* obj_p0, TY__gUl6WccpnVptdwE9bBR9a1YA val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundClass*, parentClass)(USoundClass* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparentClass)(USoundClass* obj_p0, USoundClass* val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundConcurrencySettings_*, concurrency)(USoundConcurrency_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrency)(USoundConcurrency_* obj_p0, FSoundConcurrencySettings_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeMultiplier)(USoundCue_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeMultiplier)(USoundCue_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchMultiplier)(USoundCue_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setpitchMultiplier)(USoundCue_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__rlPCp7fOS9bDL40uDDNAn7Q*, soundClassEffects)(USoundMix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsoundClassEffects)(USoundMix_* obj_p0, TY__rlPCp7fOS9bDL40uDDNAn7Q val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDisable)(USoundSubmixBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDisable)(USoundSubmixBase_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NF32, autoDisableTime)(USoundSubmixBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setautoDisableTime)(USoundSubmixBase_* obj_p0, NF32 val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__Qd9alkOGuaEndLtq9bIq1VEg*, childSubmixes)(USoundSubmixBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setchildSubmixes)(USoundSubmixBase_* obj_p0, TY__Qd9alkOGuaEndLtq9bIq1VEg val_p1);
N_LIB_PRIVATE N_NIMCALL(USoundSubmixBase_*, parentSubmix)(USoundSubmixWithParentBase_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setparentSubmix)(USoundSubmixWithParentBase_* obj_p0, USoundSubmixBase_* val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMuteWhenBackgrounded)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbMuteWhenBackgrounded)(USoundSubmix_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(TY__vn4YR8N1PwW0D5S5BkY6Bw*, submixEffectChain)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixEffectChain)(USoundSubmix_* obj_p0, TY__vn4YR8N1PwW0D5S5BkY6Bw val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerAttackTime)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerAttackTime)(USoundSubmix_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerReleaseTime)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerReleaseTime)(USoundSubmix_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, outputVolumeModulation)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setoutputVolumeModulation)(USoundSubmix_* obj_p0, FSoundModulationDestinationSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, wetLevelModulation)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setwetLevelModulation)(USoundSubmix_* obj_p0, FSoundModulationDestinationSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, dryLevelModulation)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setdryLevelModulation)(USoundSubmix_* obj_p0, FSoundModulationDestinationSettings val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSendToAudioLink)(USoundSubmix_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbSendToAudioLink)(USoundSubmix_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopSpectralAnalysis_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, stopRecordingOutput_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, tyEnum_EAudioRecordingExportType__qlXKZXxaYYHpNNXF9c6VXpw exportType_p2, FString name_p3, FString path_p4, USoundWave* existingSoundWaveToOverwrite_p5);
N_LIB_PRIVATE N_NIMCALL(void, stopEnvelopeFollowing_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, startSpectralAnalysis_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, tyEnum_EFFTSize__No3IgC1Ccv23sZ7WxluZ9bA fFTSize_p2, tyEnum_EFFTPeakInterpolationMethod__zmX0701g3VBVwdHQWTBJcA interpolationMethod_p3, tyEnum_EFFTWindowType__9bGZdJ7a6H0fb4ugFfpr9bxQ windowType_p4, NF32 hopSize_p5, tyEnum_EAudioSpectrumType__TBhtE9b2LCSM7FAMCe4f7ow spectrumType_p6);
N_LIB_PRIVATE N_NIMCALL(void, startRecordingOutput_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, NF32 expectedDuration_p2);
N_LIB_PRIVATE N_NIMCALL(void, startEnvelopeFollowing_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixWetLevel_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, NF32 inWetLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixOutputVolume_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, NF32 inOutputVolume_p2);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixDryLevel_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, NF32 inDryLevel_p2);
N_LIB_PRIVATE N_NIMCALL(void, removeSpectralAnalysisDelegate_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, FOnSubmixSpectralAnalysisBP_& onSubmixSpectralAnalysisBP_p2);
N_LIB_PRIVATE N_NIMCALL(void, addSpectralAnalysisDelegate_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, TY__LOMy3VrBsbR5p06Yi7CKVg& inBandSettings_p2, FOnSubmixSpectralAnalysisBP_& onSubmixSpectralAnalysisBP_p3, NF32 updateRate_p4, NF32 decibelNoiseFloor_p5, NIM_BOOL bDoNormalize_p6, NIM_BOOL bDoAutoRange_p7, NF32 autoRangeAttackTime_p8, NF32 autoRangeReleaseTime_p9);
N_LIB_PRIVATE N_NIMCALL(void, addEnvelopeFollowerDelegate_)(USoundSubmix_* self_p0, UObject* worldContextObject_p1, FOnSubmixEnvelopeBP_& onSubmixEnvelopeBP_p2);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSparseVolumeTexture)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineVectorField)(void);
N_LIB_PRIVATE N_NIMCALL(UVectorFieldComponent_*, vectorFieldComponent)(AVectorFieldVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvectorFieldComponent)(AVectorFieldVolume_* obj_p0, UVectorFieldComponent_* val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineVT)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, tileCount)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settileCount)(URuntimeVirtualTexture_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, tileSize)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settileSize)(URuntimeVirtualTexture_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, tileBorderSize)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, settileBorderSize)(URuntimeVirtualTexture_* obj_p0, NI32 val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w, materialType)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialType)(URuntimeVirtualTexture_* obj_p0, tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCompressTextures)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbCompressTextures)(URuntimeVirtualTexture_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLowQualityCompression)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLowQualityCompression)(URuntimeVirtualTexture_* obj_p0, NIM_BOOL val_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw, lODGroup)(URuntimeVirtualTexture_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setlODGroup)(URuntimeVirtualTexture_* obj_p0, tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw val_p1);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileSize_)(URuntimeVirtualTexture_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileCount_)(URuntimeVirtualTexture_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileBorderSize_)(URuntimeVirtualTexture_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getSize_)(URuntimeVirtualTexture_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NI32, getPageTableSize_)(URuntimeVirtualTexture_* self_p0);
N_LIB_PRIVATE N_NIMCALL(URuntimeVirtualTextureComponent_*, virtualTextureComponent)(ARuntimeVirtualTextureVolume_* obj_p0);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureComponent)(ARuntimeVirtualTextureVolume_* obj_p0, URuntimeVirtualTextureComponent_* val_p1);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineWorldPartition)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyVisible_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyActive_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEffectiveVisible_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicallyLoaded_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getInitialState_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getInitialRuntimeState_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FName, getDataLayerLabel_)(UDEPRECATED_DataLayer_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(UDEPRECATED_DataLayer_* self_p0, FActorDataLayer& actorDataLayer_p1);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDataLayerAsset_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ, getType_)(UDataLayerAsset_* self_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDataLayerAsset_* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyVisible_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEffectiveVisible_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ, getType_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getInitialRuntimeState_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDataLayerInstance* self_p0);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerStateByLabel_)(UDataLayerSubsystem_* self_p0, FName& inDataLayerLabel_p1, tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA inState_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerState_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1, tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA inState_p2);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerRuntimeStateByLabel_)(UDataLayerSubsystem_* self_p0, FName& inDataLayerLabel_p1, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState_p2, NIM_BOOL bInIsRecursive_p3);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerRuntimeState_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState_p2, NIM_BOOL bInIsRecursive_p3);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerInstanceRuntimeState_)(UDataLayerSubsystem_* self_p0, UDataLayerAsset_* inDataLayerAsset_p1, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState_p2, NIM_BOOL bInIsRecursive_p3);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, getLoadedDataLayerNames_)(UDataLayerSubsystem_* self_p0);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getDataLayerStateByLabel_)(UDataLayerSubsystem_* self_p0, FName& inDataLayerLabel_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getDataLayerState_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerRuntimeStateByLabel_)(UDataLayerSubsystem_* self_p0, FName& inDataLayerLabel_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerRuntimeState_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerInstanceRuntimeState_)(UDataLayerSubsystem_* self_p0, UDataLayerAsset_* inDataLayerAsset_p1);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerInstanceFromAsset_)(UDataLayerSubsystem_* self_p0, UDataLayerAsset_* inDataLayerAsset_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerInstanceEffectiveRuntimeState_)(UDataLayerSubsystem_* self_p0, UDataLayerAsset_* inDataLayerAsset_p1);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerFromName_)(UDataLayerSubsystem_* self_p0, FName inDataLayerName_p1);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerFromLabel_)(UDataLayerSubsystem_* self_p0, FName inDataLayerLabel_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerEffectiveRuntimeStateByLabel_)(UDataLayerSubsystem_* self_p0, FName& inDataLayerLabel_p1);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerEffectiveRuntimeState_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayer_)(UDataLayerSubsystem_* self_p0, FActorDataLayer& inDataLayer_p1);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, getActiveDataLayerNames_)(UDataLayerSubsystem_* self_p0);

#endif /* __UEGenBindings__ */

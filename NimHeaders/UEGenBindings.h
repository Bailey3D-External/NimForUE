/* Generated by Nim Compiler v1.6.13 */
#ifndef __UEGenBindings__
#define __UEGenBindings__
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include "UEDeps.h"
#include "nimbase.h"
    
#include "UEGenClassDefs.h"
#include "Styling/SlateBrush.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
struct tyObject_UEEmitter__yFEGdOoEpsg7Gf9aKb9cZKbQ;
struct FTagAndValue_;
struct FClosestPhysicsObjectResult_;
struct FSolverTrailingFilterSettings_;
struct FSolverBreakingFilterSettings_;
struct FSolverCollisionFilterSettings_;
struct FSolverRemovalFilterSettings_;
struct FPredictionKey_;
struct FGameplayEffectSpec_;
struct FGameplayEffectModifiedAttribute_;
struct FGameplayEffectAttributeCaptureSpecContainer_;
struct FGameplayEffectAttributeCaptureSpec_;
struct FModifierSpec_;
struct FGameplayAbilitySpecDef_;
struct FScalableFloat_;
struct FCurveTableRowHandle_;
struct FGameplayAbilitySpecHandle_;
struct FGameplayAbilityTargetDataHandle_;
struct FGameplayTargetDataFilterHandle_;
struct FGameplayAbilityActivationInfo_;
struct FActiveGameplayEffect_;
struct FFormatArgumentData_;
struct FPredictProjectilePathParams_;
struct FPredictProjectilePathResult_;
struct FPredictProjectilePathPointData_;
struct FSlateModifierKeysState_;
struct FDrawToRenderTargetContext_;
struct FImportanceTexture_;
struct FCameraLensInterfaceClassSupport_;
struct FEventReply_;
struct FInputDevicePropertyHandle_;
struct FAnimationCurveIdentifier_;
struct FAnimationAttributeIdentifier_;
struct FBoneAnimationTrack_;
struct FForceFeedbackAttenuationSettings_;
struct FPoseLink_;
struct FComponentSpacePoseLink_;
struct FAnimDataModelNotifPayload_;
struct FConstraintInstanceAccessor_;
struct FGameplayEventData_;
struct FServerAbilityRPCBatch_;
struct FGameplayAbilityLocalAnimMontage_;
struct FGameplayAbilityRepAnimMontage_;
struct FAttributeDefaults_;
struct FGameplayTargetDataFilter_;
struct FGameplayAbilityTargetingLocationInfo_;
struct FActorDesc_;
struct FGameViewportWidgetSlot_;
struct FAnchors_;
struct FSlateBrushOutlineSettings_;
struct FToolBarStyle_;
struct FSlateSound_;
struct FSlateFontInfo_;
struct FSegmentedControlStyle_;
struct FEmptyPayload_;
struct FCullDistanceSizePair_;
struct FViewportDisplayCallback_;
struct FVectorSpringState_;
struct FQuaternionSpringState_;
struct FFloatSpringState_;
struct FOnAssetClassLoaded_;
struct FOnAssetLoaded_;
struct FTimerDynamicDelegate_;
struct FFloatRK4SpringInterpolator_;
struct FVectorRK4SpringInterpolator_;
struct FCanvasIcon_;
struct FAnimNodeReference_;
struct FAnimNode_AssetPlayerRelevancyBase_;
struct FSceneViewExtensionIsActiveFunctor_;
struct FAnimExecutionContext_;
struct FInputScaleBiasClampState_;
struct FInputClampState_;
struct FAssetCompileData_;
struct FCameraShakeUpdateResult_;
struct FSubsurfaceProfileStruct_;
struct FSkelMeshMergeSectionMapping_;
struct FSkelMeshMergeMeshUVTransforms_;
struct FSkelMeshMergeUVTransformMapping_;
struct FBlueprintEnhancedInputActionBinding_;
struct FDefaultContextSetting_;
struct FOnControlMappingsRebuilt_;
struct FBlueprintInputDebugKeyDelegateBinding_;
struct FMyStructTableRow_;
struct FDynamicMulticastDelegateOneParamTest_;
struct FDynamicDelegateOneParamTest_;
struct FStructToUseAsVar_;
struct FStructToUseAsVarDelTest_;
struct FExponentialHeightFogData_;
struct FEngineShowFlagsSetting_;
struct FEquirectProps_;
struct FTentDistribution_;
struct FInterpControlPoint_;
struct FComponentSync_;
struct FLODMappingData_;
struct FMaterialSpriteElement_;
struct FSplinePoint_;
struct FPCGAttributePropertySelector_;
struct FPCGWorldVolumetricQueryParams_;
struct FPCGWorldRayHitQueryParams_;
struct FPCGMetadataTypesConstantStruct_;
struct FPCGActorSelectorSettings_;
struct FPCGActorPropertyOverride_;
struct FPCGSplineSamplerParams_;
struct FPCGLandscapeLayerWeight_;
struct FPCGMeshInstanceList_;
struct FPCGPackedCustomData_;
struct FPCGMatchAndSetByAttributeEntry_;
struct FPCGMatchAndSetWeightedEntry_;
struct FPCGMatchAndSetWeightedByCategoryEntryList_;
struct FPCGMeshSelectorWeightedEntry_;
struct FPCGWeightedByCategoryEntryList_;
struct FDeterminismTestResult_;
struct FPCGAttributeExtractorTestStructDepth2_;
struct FPCGAttributeExtractorTestStructDepth1_;
struct FPCGAttributeExtractorTestStruct_;
struct FPCGDataTableRowToParamDataTestStruct_;
struct FPCGStaticMeshSpawnerEntry_;
struct FPCGStaticMeshSpawnerContext_;
struct FPCGComponentInstanceData_;
struct FAnchorData_;
struct FSlateChildSize_;
struct FRadialBoxSettings_;
struct FShapedTextOptions_;
struct FRichImageRow_;
struct FWidgetAnimationDynamicEvent_;
struct FOnInputAction_;
struct FWidgetNavigationData_;
struct FFieldNotificationId_;
struct FWidgetTransform_;
struct FOnGameWindowCloseButtonClickedDelegate_;
struct FPaintContext_;
struct FDeviceColorData_;
struct FDeviceColorCurveData_;
struct FDeviceTriggerBaseData_;
struct FDeviceTriggerFeedbackData_;
struct FDeviceTriggerTriggerResistanceData_;
struct FDeviceTriggerTriggerVibrationData_;
struct FAudioBasedVibrationData_;
struct FHardwareDeviceIdentifier_;
struct FActivateDevicePropertyParams_;
struct FLightmassWorldInfoSettings_;
struct FAsyncWaitAttributeChangedDelegate_;
struct FOnAppliedDelegate_;
struct FEventReceivedDelegate_;
struct FAsyncWaitGameplayTagDelegate_;
struct FAsyncWaitGameplayTagQueryDelegate_;
struct FAbilityTriggerData_;
struct FGameplayAbilityActorInfo_;
struct FWorldReticleParameters_;
struct FApplyRootMotionConstantForceDelegate_;
struct FApplyRootMotionJumpForceDelegate_;
struct FApplyRootMotionMoveToActorForceDelegate_;
struct FApplyRootMotionMoveToForceDelegate_;
struct FApplyRootMotionRadialForceDelegate_;
struct FMoveToLocationDelegate_;
struct FNetworkSyncDelegate_;
struct FMontageWaitSimpleDelegate_;
struct FRepeatedActionDelegate_;
struct FSpawnActorDelegate_;
struct FVisualizeTargetingDelegate_;
struct FWaitAbilityActivateDelegate_;
struct FWaitAbilityCommitDelegate_;
struct FWaitAttributeChangeDelegate_;
struct FWaitAttributeChangeRatioThresholdDelegate_;
struct FWaitAttributeChangeThresholdDelegate_;
struct FWaitCancelDelegate_;
struct FWaitConfirmCancelDelegate_;
struct FWaitDelayDelegate_;
struct FGameplayEffectAppliedSelfDelegate_;
struct FGameplayEffectAppliedTargetDelegate_;
struct FGameplayEffectBlockedDelegate_;
struct FWaitGameplayEffectRemovedDelegate_;
struct FWaitGameplayEffectStackChangeDelegate_;
struct FWaitGameplayEventDelegate_;
struct FWaitGameplayTagDelegate_;
struct FWaitGameplayTagQueryDelegate_;
struct FInputPressDelegate_;
struct FInputReleaseDelegate_;
struct FMovementModeChangedDelegate_;
struct FWaitOverlapDelegate_;
struct FWaitTargetDataDelegate_;
struct FWaitVelocityChangeDelegate_;
struct FGameplayAbilityTargetData_LocationInfo_;
struct FGameplayAbilityTargetData_ActorArray_;
struct FGameplayAbilityTargetData_SingleTargetHit_;
struct FAbilityEndedData_;
struct FAbilityTaskDebugMessage_;
struct FGameplayAbilitySpecHandleAndPredictionKey_;
struct FAnimationCurveData_;
struct FAnimatedBoneAttribute_;
struct FAttributeCurve_;
struct FPoseLinkBase_;
struct FAnimNode_Root_;
struct FInputScaleBiasClamp_;
struct FInputRange_;
struct FInputAlphaBoolBlend_;
struct FInputScaleBias_;
struct FAnimNode_AssetPlayerBase_;
struct FNamedFloat_;
struct FNamedVector_;
struct FNamedColor_;
struct FNamedTransform_;
struct FLocalSpacePose_;
struct FComponentSpacePose_;
struct FBracketPayload_;
struct FAnimationTrackPayload_;
struct FAnimationTrackAddedPayload_;
struct FSequenceLengthChangedPayload_;
struct FFrameRateChangedPayload_;
struct FCurvePayload_;
struct FCurveScaledPayload_;
struct FCurveRenamedPayload_;
struct FCurveFlagsChangedPayload_;
struct FAttributePayload_;
struct FAnimNodeConstantData_;
struct FFloatAnimationAttribute_;
struct FIntegerAnimationAttribute_;
struct FStringAnimationAttribute_;
struct FTransformAnimationAttribute_;
struct FVectorAnimationAttribute_;
struct FQuaternionAnimationAttribute_;
struct FAnimNodeData_;
struct FAnimNode_ConvertComponentToLocalSpace_;
struct FAnimNode_ConvertLocalToComponentSpace_;
struct FAnimNode_ApplyMeshSpaceAdditive_;
struct FAnimNode_Inertialization_;
struct FAnimNode_LinkedAnimGraph_;
struct FAnimNode_LinkedAnimLayer_;
struct FAnimNode_SaveCachedPose_;
struct FAnimNode_SequencePlayerBase_;
struct FAnimNode_SequencePlayer_;
struct FInputScaleBiasClampConstants_;
struct FAnimNode_SequencePlayer_Standalone_;
struct FAnimNode_TransitionPoseEvaluator_;
struct FAnimNode_TransitionResult_;
struct FAnimNode_SingleNode_;
struct FCachedAnimStateData_;
struct FCachedAnimStateArray_;
struct FCachedAnimAssetPlayerData_;
struct FCachedAnimRelevancyData_;
struct FCachedAnimTransitionData_;
struct FNamedCurveValue_;
struct FInputClampConstants_;
struct FTrajectorySample_;
struct FTrajectorySampleRange_;
struct FGameplayAbilityBindInfo_;
struct FGameplayAbilitySpecContainer_;
struct FGameplayAbilitySpec_;
struct FActiveGameplayEffectsContainer_;
struct FActiveGameplayCueContainer_;
struct FActiveGameplayCue_;
struct FReplicatedPredictionKeyMap_;
struct FReplicatedPredictionKeyItem_;
struct FGameplayEffectQuery_;
struct FActiveGameplayEffectQueryCustomMatch_Dynamic_;
struct FGameplayEffectSpecForRPC_;
struct FGameplayCueTag_;
struct FGameplayCueObjectLibrary_;
struct FGameplayCuePendingExecute_;
struct FPreallocationInfo_;
struct FGameplayCueNotifyActorArray_;
struct FGameplayCueNotify_SpawnCondition_;
struct FGameplayCueNotify_PlacementInfo_;
struct FGameplayCueNotify_BurstEffects_;
struct FGameplayCueNotify_ParticleInfo_;
struct FGameplayCueNotify_SoundInfo_;
struct FGameplayCueNotify_SoundParameterInterfaceInfo_;
struct FGameplayCueNotify_CameraShakeInfo_;
struct FGameplayCueNotify_CameraLensEffectInfo_;
struct FGameplayCueNotify_ForceFeedbackInfo_;
struct FGameplayCueNotify_InputDevicePropertyInfo_;
struct FGameplayCueNotify_DecalInfo_;
struct FGameplayCueNotify_SpawnResult_;
struct FGameplayCueNotify_LoopingEffects_;
struct FGameplayCueNotifyData_;
struct FGameplayEffectModifierMagnitude_;
struct FAttributeBasedFloat_;
struct FCustomCalculationBasedFloat_;
struct FSetByCallerFloat_;
struct FGameplayModifierInfo_;
struct FGameplayEffectExecutionDefinition_;
struct FGameplayEffectExecutionScopedModifierInfo_;
struct FConditionalGameplayEffect_;
struct FGameplayEffectCue_;
struct FInheritedTagContainer_;
struct FGameplayEffectCustomExecutionParameters_;
struct FGameplayEffectCustomExecutionOutput_;
struct FGameplayTagResponseTableEntry_;
struct FGameplayTagReponsePair_;
struct FPredictionKeyNetSerializerConfig_;
struct FGameplayAbilityRepAnimMontageNetSerializerConfig_;
struct FMinimalReplicationTagCountMapNetSerializerConfig_;
struct FMinimalGameplayCueReplicationProxyNetSerializerConfig_;
struct FGameplayEffectContextNetSerializerConfig_;
struct FGameplayEffectContextHandleNetSerializerConfig_;
struct FGameplayAbilityTargetData_;
struct FMinimalGameplayCueReplicationProxy_;
struct FGameplayCueTranslatorNodeIndex_;
struct FGameplayCueTranslationLink_;
struct FGameplayCueTranslatorNode_;
struct FGameplayCueTranslationManager_;
struct FActiveGameplayEffectQuery_;
struct FMovieSceneGameplayCueChannel_;
struct FMovieSceneGameplayCueKey_;
struct FMovieSceneGameplayCueEvent_;
struct FMinimalGameplayCueReplicationProxyForNetSerializer_;
struct FMinimalReplicationTagCountMapForNetSerializer_;
struct FCameraShakeStartParams_;
struct FCameraShakeUpdateParams_;
struct FCameraShakeScrubParams_;
struct FCameraShakeStopParams_;
struct FCameraShakeDuration_;
struct FCameraShakeInfo_;
struct FRuntimeVectorCurve_;
struct FDataDrivenConsoleVariable_;
struct FTypedElementPasteOptions_;
struct FTypedElementDeletionOptions_;
struct FVoiceSettings_;
struct FSoundConcurrencySettings_;
struct FReverbSettings_;
struct FInteriorSettings_;
struct FAudioVolumeSubmixSendSettings_;
struct FAudioVolumeSubmixOverrideSettings_;
struct FSoundClassAdjuster_;
struct FOnSubmixSpectralAnalysisBP_;
struct FOnSubmixEnvelopeBP_;
struct FWorldPartitionHLODDestructionTag_;
typedef NU8 tyArray__H8qf9bpC2ziYA2earmO8m7w[4];
struct FTagAndValue_ {FName tag;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FString value;
};
typedef TArray<FTagAndValue_> TY__HdzeEk4HpX19bllurNUyndA;
typedef TArray<FAssetData> TY__8erC4L7o5X0VmnCzY0GMhQ;
typedef TScriptInterface<UAssetRegistry>  TY__IYNsvvBlfnKuRz5TNKUqnw;
typedef TArray<FString> TY__myhN0u2pNczwuaOhbdYPXw;
typedef TArray<FName> TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ;
typedef TArray<FTopLevelAssetPath> TY__PRe8Jrdf8eYAEJilcBMaEQ;
typedef TSet<FTopLevelAssetPath>  TY__PRSVFfQEtqNnXT9a7lc0o6A;
typedef NU8 tyEnum_ChaosDeformableSimSpace__9aLN9caNkXayq9caISpR8o9a9bg;
typedef NU8 tyEnum_ESetMaskConditionType__elqIjc4wzCts7WoHSkH8Mw;
typedef NU8 tyEnum_EWaveFunctionType__X45NxYdXIqCn0Ntgf68xZA;
typedef NU8 tyEnum_EFieldOperationType__gVOes7uaou03Dai3l3iZpw;
typedef NU8 tyEnum_EFieldCullingOperationType__9bE7WIivF8eOzfdywHW19b4A;
typedef NU8 tyEnum_EFieldResolutionType__SM5XEOKHMdP9cOlDEZUdizA;
typedef NU8 tyEnum_EFieldFilterType__39anvg9aDdW7BhpR8L0ogHZw;
typedef NU8 tyEnum_EFieldObjectType__tDR2p9c33Roigo9awOe9abjTA;
typedef NU8 tyEnum_EFieldPositionType__DTB09cPse9aBa5uAE09bK9cm2A;
typedef NU8 tyEnum_EFieldFalloffType__caIM1UG9aLJwCa4Ha8xF0mw;
typedef NU8 tyEnum_EFieldPhysicsType__lC9ai00DtAQC9awPvf3aEASg;
typedef NU8 tyEnum_EFieldVectorType__pGz3AQq9bl4kW1oB5Z5VQoQ;
typedef NU8 tyEnum_EFieldScalarType__qtOF20Dkpb10DEnhLq7Prg;
typedef NU8 tyEnum_EFieldIntegerType__MD4euztRfjoPbO1X9b32yIQ;
typedef NU8 tyEnum_EFieldOutputType__ai9bgsV7ZMRVc8K562upTMg;
typedef NU8 tyEnum_EFieldPhysicsDefaultFields__QsEciSA7A6eyNG7sqYBePw;
typedef NU8 tyEnum_EConvexOverlapRemoval__eBuDJLsgVXj50eSMrmJUfA;
typedef NU8 tyEnum_EProximityMethod__k6nO3HLKp6039aCDIlfBhgA;
typedef NU8 tyEnum_EProximityContactMethod__eHpmfYA82KrZqcMHN5eaMQ;
typedef NU8 tyEnum_ECollisionTypeEnum__4dtqNfDyPHa6sDWWyxLB1A;
typedef NU8 tyEnum_EImplicitTypeEnum__J9afW9bArN9bsrnr3o9askMtVQ;
typedef NU8 tyEnum_EObjectStateTypeEnum__ELu3U0bSybVDJYwYCDEyCw;
typedef NU8 tyEnum_EGeometryCollectionPhysicsTypeEnum__X2aLtT4nZv68AdWZbaSB1A;
typedef NU8 tyEnum_EInitialVelocityTypeEnum__NsNe28RDuzc5KXvCpO3KXw;
typedef NU8 tyEnum_EEmissionPatternTypeEnum__SGA87CXwXXO5qyQqi8pbQA;
typedef NU8 tyEnum_EChaosSolverTickMode__ZBVKR9a86nJ9aG9bdRgAFSlKg;
typedef NU8 tyEnum_EChaosThreadingMode__FFfhVwhSry2F9cJ0AoBDeUw;
typedef NU8 tyEnum_EChaosBufferMode__fCVASttB31vIocb8Vj0Ilg;
typedef NU8 tyEnum_EClusterUnionMethod__mg0Dyv49cEul9bEZypbELipQ;
typedef NU8 tyEnum_EGeometryCollectionCacheType__KvKo9b5Zg1w9b0jRBIWbEwsQ;
typedef NU8 tyArray__ei1f5NP9cmpUVHoe9cUYpPag[40];
struct FClosestPhysicsObjectResult_ {tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
typedef NU8 tyArray__SpfepCfLRZtm9aHk9aP3FBeQ[3];
struct FSolverTrailingFilterSettings_ {NIM_BOOL filterEnabled;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 minMass;
NF32 minSpeed;
NF32 minVolume;
};
struct FSolverBreakingFilterSettings_ {NIM_BOOL filterEnabled;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 minMass;
NF32 minSpeed;
NF32 minVolume;
};
struct FSolverCollisionFilterSettings_ {NIM_BOOL filterEnabled;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 minMass;
NF32 minSpeed;
NF32 minImpulse;
};
struct FSolverRemovalFilterSettings_ {NIM_BOOL filterEnabled;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 minMass;
NF32 minVolume;
};
typedef NU8 tyArray__aczTGVLbkjaI8GxGYP6HtA[10];
struct FPredictionKey_ {UPackageMap* predictiveConnection;
NI16 current;
NI16 base;
NIM_BOOL bIsStale;
NIM_BOOL bIsServerInitiated;
tyArray__aczTGVLbkjaI8GxGYP6HtA pad_0;
};
struct FGameplayEffectModifiedAttribute_ {FGameplayAttribute attribute;
NF32 totalMagnitude;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TArray<FGameplayEffectModifiedAttribute_> TY__WmAHIZEZ9cpN3o9aZZVtPl3g;
typedef NU8 tyArray__qtqsWM5aXmcpMIVmvq3kAA[16];
struct FGameplayEffectAttributeCaptureSpec_ {FGameplayEffectAttributeCaptureDefinition backingDefinition;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TArray<FGameplayEffectAttributeCaptureSpec_> TY__bXgeBwTvh5vh69b7MH2vR5A;
typedef NU8 tyArray__HhO8EAlttg7Yo1LAKdC6hQ[7];
struct FGameplayEffectAttributeCaptureSpecContainer_ {TY__bXgeBwTvh5vh69b7MH2vR5A sourceAttributes;
TY__bXgeBwTvh5vh69b7MH2vR5A targetAttributes;
NIM_BOOL bHasNonSnapshottedAttributes;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
};
typedef NU8 tyArray__w5VB8h5K8DB3oWrO5U2wqg[64];
struct FModifierSpec_ {NF32 evaluatedMagnitude;
};
typedef TArray<FModifierSpec_> TY__dAyM9cmIgMF5FlX1EJvvlSQ;
typedef NU8 tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ[1];
typedef TSubclassOf<UGameplayAbility_> TY__DI8ISoHArYV9cXPAlxup7ow;
struct FCurveTableRowHandle_ {UCurveTable_* curveTable;
FName rowName;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef NU8 tyArray__izDbpwaA8Rxj9b5mE6pSF7Q[24];
struct FScalableFloat_ {NF32 value;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FCurveTableRowHandle_ curve;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
typedef TWeakObjectPtr<UObject>  TY__JNuX49bw2SzgYlt1yr74cAA;
typedef NU8 tyArray__9aT9a0df87P1N8C6tT67xdfQ[80];
struct FGameplayAbilitySpecHandle_ {NI32 handle;
};
struct FGameplayAbilitySpecDef_ {TY__DI8ISoHArYV9cXPAlxup7ow ability;
FScalableFloat_ levelScalableFloat;
NI32 inputID;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
TY__JNuX49bw2SzgYlt1yr74cAA sourceObject;
tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_1;
FGameplayAbilitySpecHandle_ assignedHandle;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_2;
};
typedef TArray<FGameplayAbilitySpecDef_> TY__Nfbibg9az9bLDonNBrt4vy4g;
typedef NU8 tyArray__3xXgtqiphP4Saazlw9cWQFA[160];
struct FGameplayEffectSpec_ {UGameplayEffect_* def;
TY__WmAHIZEZ9cpN3o9aZZVtPl3g modifiedAttributes;
FGameplayEffectAttributeCaptureSpecContainer_ capturedRelevantAttributes;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
NF32 duration;
NF32 period;
NF32 chanceToApplyToTarget;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
FTagContainerAggregator capturedSourceTags;
FTagContainerAggregator capturedTargetTags;
tyArray__w5VB8h5K8DB3oWrO5U2wqg pad_2;
TY__dAyM9cmIgMF5FlX1EJvvlSQ modifiers;
NI32 stackCount;
NIM_BOOL bCompletedSourceAttributeCapture;
NIM_BOOL bCompletedTargetAttributeCapture;
NIM_BOOL bDurationLocked;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_3;
TY__Nfbibg9az9bLDonNBrt4vy4g grantedAbilitySpecs;
tyArray__3xXgtqiphP4Saazlw9cWQFA pad_4;
FGameplayEffectContextHandle effectContext;
NF32 level;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_5;
};
struct FGameplayAbilityTargetDataHandle_ {tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
struct FGameplayTargetDataFilterHandle_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyEnum_EGameplayAbilityActivationMode__nbzY9aqfyH4GZUnaBUGNwsQ;
typedef NU8 tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ[6];
struct FGameplayAbilityActivationInfo_ {tyEnum_EGameplayAbilityActivationMode__nbzY9aqfyH4GZUnaBUGNwsQ activationMode;
NIM_BOOL bCanBeEndedByOtherInstance;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_0;
FPredictionKey_ predictionKeyWhenActivated;
};
typedef NU8 tyArray__LblujacFIzXJBp6Y75v82Q[131];
struct FActiveGameplayEffect_ {tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
FGameplayEffectSpec_ spec;
FPredictionKey_ predictionKey;
NF32 startServerWorldTime;
NF32 cachedStartServerWorldTime;
NF32 startWorldTime;
NIM_BOOL bIsInhibited;
tyArray__LblujacFIzXJBp6Y75v82Q pad_1;
};
typedef NU8 tyEnum_EFormatArgumentType__XhNvqFUjDEW9bUNWwu9b9b6MA;
struct FFormatArgumentData_ {FString argumentName;
tyEnum_EFormatArgumentType__XhNvqFUjDEW9bUNWwu9b9b6MA argumentValueType;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
FText argumentValue;
NI64 argumentValueInt;
NF32 argumentValueFloat;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
NF argumentValueDouble;
};
typedef NU8 tyArray__bN9bddWn8oiNSHn2MqEJSZQ[2];
typedef TArray<EObjectTypeQuery> TY__6r3nfRijJ9c5MKJaF9a9cYvbg;
typedef TArray<AActor*> TY__kbK03O9cVTTS0GR9cjPhedTg;
typedef NU8 tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg;
struct FPredictProjectilePathParams_ {FVector startLocation;
FVector launchVelocity;
NIM_BOOL bTraceWithCollision;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 projectileRadius;
NF32 maxSimTime;
NIM_BOOL bTraceWithChannel;
ECollisionChannel traceChannel;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_1;
TY__6r3nfRijJ9c5MKJaF9a9cYvbg objectTypes;
TY__kbK03O9cVTTS0GR9cjPhedTg actorsToIgnore;
NF32 simFrequency;
NF32 overrideGravityZ;
tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_2;
NF32 drawDebugTime;
NIM_BOOL bTraceComplex;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_3;
};
struct FPredictProjectilePathPointData_ {FVector location;
FVector velocity;
NF32 time;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TArray<FPredictProjectilePathPointData_> TY__4BgC3xXiX2Z5PS89aN9cvdNA;
struct FPredictProjectilePathResult_ {TY__4BgC3xXiX2Z5PS89aN9cvdNA pathData;
FPredictProjectilePathPointData_ lastTraceDestination;
FHitResult hitResult;
};
struct FSlateModifierKeysState_ {tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
struct FDrawToRenderTargetContext_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FImportanceTexture_ {tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
};
typedef NU8 tyArray__cdsir9aPB24hAk6k77P9b9bCA[8];
struct FCameraLensInterfaceClassSupport_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef NU8 tyArray__pPSgwee9cWjaxcnFhZCg7yA[192];
struct FEventReply_ {tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
struct FInputDevicePropertyHandle_ {tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef NU8 tyArray__YtcvxHNKV4YiecPE9ap1mcA[20];
struct FAnimationCurveIdentifier_ {tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
};
struct FAnimationAttributeIdentifier_ {FName name;
FName boneName;
NI32 boneIndex;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
UScriptStruct* scriptStruct;
FSoftObjectPath scriptStructPath;
};
struct FBoneAnimationTrack_ {FRawAnimSequenceTrack internalTrackData;
NI32 boneTreeIndex;
FName name;
};
struct FForceFeedbackAttenuationSettings_ {tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
struct FPoseLink_ {tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FComponentSpacePoseLink_ {tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FAnimDataModelNotifPayload_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__26aQaWOzPONEXg2JYXgXsA[96];
struct FConstraintInstanceAccessor_ {tyArray__26aQaWOzPONEXg2JYXgXsA pad_0;
};
struct FGameplayEventData_ {FGameplayTag eventTag;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
AActor* instigator;
AActor* target;
UObject* optionalObject;
UObject* optionalObject2;
FGameplayEffectContextHandle contextHandle;
tyArray__w5VB8h5K8DB3oWrO5U2wqg pad_1;
NF32 eventMagnitude;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_2;
FGameplayAbilityTargetDataHandle_ targetData;
};
typedef NU8 tyArray__39cnIm4v9c7pQp5XFRxTMpFg[5];
struct FServerAbilityRPCBatch_ {FGameplayAbilitySpecHandle_ abilitySpecHandle;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FPredictionKey_ predictionKey;
FGameplayAbilityTargetDataHandle_ targetData;
NIM_BOOL inputPressed;
NIM_BOOL ended;
NIM_BOOL started;
tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_1;
};
typedef TWeakObjectPtr<UGameplayAbility_>  TY__siVZF80aeVhdiuAGOGCr7Q;
struct FGameplayAbilityLocalAnimMontage_ {UAnimMontage* animMontage;
NU8 playInstanceId;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
FPredictionKey_ predictionKey;
TY__siVZF80aeVhdiuAGOGCr7Q animatingAbility;
};
struct FGameplayAbilityRepAnimMontage_ {UAnimMontage* animMontage;
NF32 playRate;
NF32 position;
NF32 blendTime;
NU8 nextSectionID;
NU8 playInstanceId;
NIM_BOOL bRepPosition;
NU8 isStopped;
NU8 skipPositionCorrection;
NIM_BOOL bSkipPlayRate;
FPredictionKey_ predictionKey;
NU8 sectionIdToPlay;
tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_0;
};
typedef TSubclassOf<UAttributeSet> TY__JVcLxy5VxXvcRj365E9bclg;
struct FAttributeDefaults_ {TY__JVcLxy5VxXvcRj365E9bclg attributes;
UDataTable* defaultStartingTable;
};
typedef TSubclassOf<AActor> TY__9akcXb9b3ftlkdW8NDwR22Mg;
typedef NU8 tyEnum_ETargetDataFilterSelf__0bLCHzq8oWhdsyxklAwILw;
struct FGameplayTargetDataFilter_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
AActor* selfActor;
TY__9akcXb9b3ftlkdW8NDwR22Mg requiredActorClass;
tyEnum_ETargetDataFilterSelf__0bLCHzq8oWhdsyxklAwILw selfFilter;
NIM_BOOL bReverseFilter;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_1;
};
typedef NU8 tyEnum_EGameplayAbilityTargetingLocationType__aufJVwEe2F7OdxXxGhlJiA;
typedef NU8 tyArray__akPGgPQbqzZVe609aayYXqA[15];
typedef NU8 tyArray__YHmXll5a9bp5TA5MVvQwRow[12];
struct FGameplayAbilityTargetingLocationInfo_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
tyEnum_EGameplayAbilityTargetingLocationType__aufJVwEe2F7OdxXxGhlJiA locationType;
tyArray__akPGgPQbqzZVe609aayYXqA pad_1;
FTransform literalTransform;
AActor* sourceActor;
UMeshComponent* sourceComponent;
UGameplayAbility_* sourceAbility;
FName sourceSocketName;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_2;
};
struct FActorDesc_ {FGuid guid;
FSoftObjectPath Class;
FName name;
FName label;
FBox bounds;
FName runtimeGrid;
NIM_BOOL bIsSpatiallyLoaded;
NIM_BOOL bActorIsEditorOnly;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
FName actorPackage;
FName actorPath;
};
struct FAnchors_ {FVector2D minimum;
FVector2D maximum;
};
struct FGameViewportWidgetSlot_ {FAnchors_ anchors;
FMargin offsets;
FVector2D alignment;
NI32 zOrder;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef NU8 tyEnum_ESleepFamily__OhSj9aODkqT0KjqIcfVWqvw;
typedef NU8 tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw;
typedef NU8 tyEnum_EDynamicGlobalIlluminationMethod__XSXABNupoK1YqGg1o2p9a0w;
typedef NU8 tyEnum_EReflectionMethod__M9b4Vr0yUcPiUIuK7axF9caA;
typedef NU8 tyEnum_EWalkableSlopeBehavior__ZMkElMfYOxGv9aEGwCOwr4Q;
typedef NU8 tyEnum_EMaterialParameterAssociation__bQ0QFzWtAc9bK1kySiJFxnA;
typedef NU8 tyEnum_EAutoExposureMethod__JpZOztQhwT5NDw3E68GObA;
typedef NU8 tyEnum_EBloomMethod__OR8Zq9afYZLfF9bSABwq15sQ;
typedef NU8 tyEnum_ETemperatureMethod__t9caSnJ1Sw8lyaDx8CzjB2Q;
typedef NU8 tyEnum_ELumenRayLightingModeOverride__ua2Pl72MdiPsZJ9a2881xKw;
typedef NU8 tyEnum_ETranslucencyType__OT2DL64WR9bZXhu9aXB6OHKw;
typedef NU8 tyEnum_ERayTracingGlobalIlluminationType__q3nfVcWx9cOMqrt3uLSmaGA;
typedef NU8 tyEnum_EReflectedAndRefractedRayTracedShadows__t6gmRc9aerYYJVf5bqXB9cDA;
typedef NU8 tyEnum_ESoundSpatializationAlgorithm__J5uWPo3JotuP9crntPThgtQ;
typedef NU8 tyEnum_EAirAbsorptionMethod__vZCMQCHDaUqkMqdhdaUHnQ;
typedef NU8 tyEnum_EReverbSendMethod__DGTHQB6E8LLjBUO2OsIJtw;
typedef NU8 tyEnum_EPriorityAttenuationMethod__cklkzbaOjTxZRYa9bqnR0Zg;
typedef NU8 tyEnum_EAlphaBlendOption__LKIa243bVL7z35YoC4pwhg;
typedef NU8 tyEnum_EModulationRouting__DpodZsZnVhWxqzmwwirXsQ;
typedef NU8 tyEnum_ESubmixSendMethod__z7qepf4QIwH2vYFTmLwiaA;
typedef NU8 tyEnum_EGameplayEffectAttributeCaptureSource__w1flbc62TTNAaQROKRIrig;
typedef NU8 tyEnum_ETextGender__qWH9co9alIoZsseduZnOsjkg;
typedef NU8 tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA;
typedef NU8 tyEnum_EAnimDataModelNotifyType__0L0gXcEg59asCmg3XGs6oZA;
typedef NU8 tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ;
typedef NU8 tyEnum_EAudioComponentPlayState__LNX4VedOxTvvUBfe9bW2uOQ;
typedef NU8 tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A;
typedef NU8 tyEnum_EQuartzCommandDelegateSubType__3rsNkR3Cqr4kyGvPGu21vQ;
typedef NU8 tyEnum_EQuartzCommandQuantization__09akKUlU43woRogjXzHKdcQ;
typedef NU8 tyEnum_EPlatformInterfaceDataType__W49b9aYkO9b0DWC9bm9b7vjbF5Q;
typedef NU8 tyEnum_EEndPlayReason__83Jx3inG29af0RIg6BEVzPw;
typedef NU8 tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw;
typedef NU8 tyEnum_EComponentCreationMethod__UBkwKKFkXqjelCjcNNvbIg;
typedef NU8 tyEnum_ETemperatureSeverityType__DD9ce6VpeAJH39b5Hawa0ySQ;
typedef NU8 tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA;
typedef NU8 tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw;
typedef NU8 tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw;
typedef NU8 tyEnum_EStreamingSourceTargetState__LHG7xK564qq9c2ZjvJfTJuQ;
typedef NU8 tyEnum_EMoveComponentAction__kDaFHmOTku89aVMGXCDq5HA;
typedef NU8 tyEnum_EQuitPreference__wKF27UdTU9cegJpfafBWsWw;
typedef NU8 tyEnum_ETravelFailure__P9b5sIfk09a0HvTpB0k9bPi2A;
typedef NU8 tyEnum_EApplicationState__8WWyy9aB5XXHoxfsgk7GmWA;
typedef NU8 tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q;
typedef NU8 tyEnum_EComponentPhysicsStateChange__j0wJcIa6k7UBm59aNVdJitQ;
typedef NU8 tyEnum_EStaticMeshReductionTerimationCriterion__69bOHJPxIeuVRQCZOR2zdHw;
typedef NU8 tyEnum_ERelativeTransformSpace__SP35ggqlhgdAFoiyxcw8gg;
typedef NU8 tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw;
typedef NU8 tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA;
typedef NU8 tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg;
typedef NU8 tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg;
typedef NU8 tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g;
typedef NU8 tyEnum_ENavPathEvent__q2Mi2eMkIr9bFWks4ZptwWw;
typedef NU8 tyEnum_EMouseLockMode__I9ayZCBnUIvVaajjWUrPbhw;
typedef NU8 tyEnum_EWindowTitleBarMode__4Q9bUYtcT85aKJEevN09czGA;
typedef NU8 tyEnum_AnimationKeyFormat__vp9cSTZDKUrN8Uwg6aXSL9bg;
typedef NU8 tyEnum_EAnimCurveType__bLSJ5hfWpuK9b9a9atpz9c41QQ;
typedef NU8 tyEnum_EAnimAssetCurveFlags__rdCcgUF0ueMLtHjAQ9a49a3Q;
typedef NU8 tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg;
typedef NU8 tyEnum_ERootMotionRootLock__d7F7TxVGg3aKKGxdznu9ckA;
typedef NU8 tyEnum_ERootMotionMode__oixCsBQZKA6SWRZ9bIVVRxQ;
typedef NU8 tyEnum_EAdditiveBasePoseType__p1tlAgqlGxCs5h80n9achzw;
typedef NU8 tyEnum_AnimationCompressionFormat__4MfAr4nX9aqSB3coB9al4yxA;
typedef NU8 tyEnum_AnimPhysTwistAxis__8ZzzaYrkwof2I1T07xyqQg;
typedef NU8 tyEnum_AnimPhysCollisionType__UUw6klGKD9ayAxGlXN9aA9cvw;
typedef NU8 tyEnum_ETypeAdvanceAnim__W0sOzJ6jj9aE6HOe0d6coqw;
typedef NU8 tyEnum_EBoneAxis__d9cl3nf4mB4aldwGN5Au40Q;
typedef NU8 tyEnum_EBoneControlSpace__P8H4Q6PXMSKuKfBUejCHrg;
typedef NU8 tyEnum_EBoneRotationSource__YtrbNA9bxlH9bZ7b4wKA9bc6A;
typedef NU8 tyEnum_EMontageNotifyTickType__wNa05dMxUy9cRUxXkWgbo9bA;
typedef NU8 tyEnum_ENotifyFilterType__f19cEW6i89cwMvL4L3ivArDA;
typedef NU8 tyEnum_EAdditiveAnimationType__IQ8DV60kdoBmud9ctc2j4nA;
typedef NU8 tyEnum_ECurveBlendOption__BvrifMNG1EvxheBuucf9cYQ;
typedef NU8 tyEnum_EAnimInterpolationType__m9ce72vMf1eBS6DLD6rM5MA;
typedef NU8 tyEnum_EAxisOption__JIub9cC9awbLkuhmZ5bU4Cng;
typedef NU8 tyEnum_EComponentType__OL9cRu1YCf6JCQTvzKVm7pA;
typedef NU8 tyEnum_EAudioOutputTarget__gcjv51I6LmSGdEv4VLNqQg;
typedef NU8 tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ;
typedef NU8 tyEnum_EBlendSpaceAxis__eThO4XN8idGY6OXTzU72jw;
typedef NU8 tyEnum_EPreferredTriangulationDirection__HGOHvLNsuHpynHsQO89cF1w;
typedef NU8 tyEnum_EBlendSpacePerBoneBlendMode__TzGLXZpksk6VA1yYDZsWFQ;
typedef NU8 tyEnum_ENotifyTriggerMode__5omyYQa1QjJ8LkQEhIrB8g;
typedef NU8 tyEnum_EBlueprintStatus__zfT1n9aJnqQ9ctR2maJb9c9bvg;
typedef NU8 tyEnum_EBlueprintType__kSGDtcjPktUXVuy0WvyTTw;
typedef NU8 tyEnum_EBlueprintCompileMode__8tDupO9bxTR1MrYWNnr5v9cA;
typedef NU8 tyEnum_EBlueprintNativizationFlag__W1lI8BMTzUcVla1LRyGX7g;
typedef NU8 tyEnum_EShouldCookBlueprintPropertyGuids__Of2g5COmXwHIGmKns2cPwA;
typedef NU8 tyEnum_ECsgOper__caPcwmRQY0eOmiyhUX4TnQ;
typedef NU8 tyEnum_EBrushType__mVZtw5EL0EveeKDC31p6Mw;
typedef NU8 tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA;
typedef NU8 tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg;
typedef NU8 tyEnum_ECloudStorageDelegate__vXeBiVl9bdd5FUiak59atcoQ;
typedef NU8 tyEnum_EContentBundleClientState__I9b4a7puWgxgXvthzR4jGeQ;
typedef NU8 tyEnum_EWorldContentState__bnFMyPU29aoWf9b8AH4tLBSA;
typedef NU8 tyEnum_EContentBundleStatus__nZ9a5vsa69biAyp9bzGJKJVbw;
typedef NU8 tyEnum_ECustomAttributeBlendType__Jvf4En5kXfTOkMzx9bxqMRw;
typedef NU8 tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ;
typedef NU8 tyEnum_DistributionParamMode__2zWZsUqm8BROpkFqKEHvNw;
typedef NU8 tyEnum_EDistributionVectorLockFlags__RtCW2vKj4s9bBWDGwOGfRkw;
typedef NU8 tyEnum_EDistributionVectorMirrorFlags__QkCwG1lYBc32hLp9alkeGkg;
typedef NU8 tyEnum_EEdGraphPinDirection__70IoIYXXMTBVZNql8ZDevg;
typedef NU8 tyEnum_EPinContainerType__b0zYOE3aDgOeIIwKnVz9cYQ;
typedef NU8 tyEnum_ENodeTitleType__BV9bu9c3jxdOpA3pnuwsprAw;
typedef NU8 tyEnum_ENodeAdvancedPins__b8lDMIWVQK3zkUJygyRZPw;
typedef NU8 tyEnum_ENodeEnabledState__9aLWkWoKS8aSp70KeQtulVg;
typedef NU8 tyEnum_EBlueprintPinStyleType__eDCrkJhMm9aGSaukS72tzXQ;
typedef NU8 tyEnum_EGraphType__1MLRhhE13lNRmE0NxpL8RA;
typedef NU8 tyEnum_ECanCreateConnectionResponse__A2x6DXk3IaIsrnYN9b9a9biGA;
typedef NU8 tyEnum_EFullyLoadPackageType__3xM9bDLMv7VMJwXslxSOQiw;
typedef NU8 tyEnum_ETransitionType__rBmXdR1WoF3U2Z4vKw8qjg;
typedef NU8 tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g;
typedef NU8 tyEnum_ENetworkLagState__v9bvlSmkNdeK11IkGuA1JHA;
typedef NU8 tyEnum_ETravelType__Q3R9b21ZBJDgJJoKWU3cMHA;
typedef NU8 tyEnum_EDemoPlayFailure__3FfPq289ba2pxHUdZ9ciiALw;
typedef NU8 tyEnum_EViewModeIndex__5wCj6DktydcBnRIACSNDiQ;
typedef NU8 tyEnum_EAspectRatioAxisConstraint__hMrtrGOXn5nUJD8zD654Hw;
typedef NU8 tyEnum_ESceneDepthPriorityGroup__yvgFPochB4gCG4GB4aSZ3w;
typedef NU8 tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ;
typedef NU8 tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ;
typedef NU8 tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg;
typedef NU8 tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw;
typedef NU8 tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA;
typedef NU8 tyEnum_ESamplerSourceMode__H7htG9bD1j1UOEcWqBkk22A;
typedef NU8 tyEnum_ETextureMipValueMode__1GTnkOIPBrVBcP03daoqnQ;
typedef NU8 tyEnum_ETranslucencyLightingMode__9cjdjlxX1woQogudop3hHtg;
typedef NU8 tyEnum_ERefractionMode__J3U9cG7FkMguL9bHUy29b6DFw;
typedef NU8 tyEnum_ETranslucentSortPolicy__Vod5MU9c17mVjSoZx9crddgw;
typedef NU8 tyEnum_EWorldPartitionStreamingPerformance__WsygRCmP6w3mgwaQmA9bDQQ;
typedef NU8 tyEnum_EWorldPartitionRuntimeCellState__vkrpaNcih6ma2naZWG9cYYQ;
typedef NU8 tyEnum_EShadowMapMethod__wx8oaEuOLB7n6eLDhJI25A;
typedef NU8 tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg;
typedef NU8 tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw;
typedef NU8 tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg;
typedef NU8 tyEnum_EGBufferFormat__86vc9cx9bxPjVBs8aa0fskjw;
typedef NU8 tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg;
typedef NU8 tyEnum_EParticleCollisionMode__xU9bjOjdnMhesN3ViPatOjg;
typedef NU8 tyEnum_EMaterialShadingModel__xyOBUs9bf1YnvkF0BffY9bOQ;
typedef NU8 tyEnum_EStrataShadingModel__b9aH0BOybVFKu6kHMyvTaiw;
typedef NU8 tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg;
typedef NU8 tyEnum_EMaterialStencilCompare__SAqASZAXCy9cyGoGjSh9bj1w;
typedef NU8 tyEnum_EMaterialShadingRate__9bc205y9c4nZ7tmA09btUAang;
typedef NU8 tyEnum_ELightingBuildQuality__NNXqbDMfeM5zWfiNfWM5FA;
typedef NU8 tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ;
typedef NU8 tyEnum_EOverlapFilterOption__OIIDd7vz9aPWwt9cwRcXAS0A;
typedef NU8 tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA;
typedef NU8 tyEnum_EFilterInterpolationType__QZuTV6YVOWdpVgXbMEsoDw;
typedef NU8 tyEnum_ETimelineSigType__DYZhh9chri3yp6SgVR0PoHg;
typedef NU8 tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q;
typedef NU8 tyEnum_ELightMapPaddingType__EBKlfUrJt8da9aD8dVJbI7Q;
typedef NU8 tyEnum_EShadowMapFlags__b1RxfbK9bnTEMpM2qYwotYg;
typedef NU8 tyEnum_EUpdateRateShiftBucket__4nqvm49bT4G4zHMzYy8QJNQ;
typedef NU8 tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw;
typedef NU8 tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow;
typedef NU8 tyEnum_EAutoReceiveInput__R2s518eVW3kD12Bb1SqVpg;
typedef NU8 tyEnum_EAutoPossessAI__XvyNnoTpfIhkQFX9cdsx9cQg;
typedef NU8 tyEnum_EHLODLayerType__IxD7IBen3Z1El7t0M0pd8A;
typedef NU8 tyEnum_EPhysicalMaterialMaskColor__pg9bAAYwM5oYNtr0wgVr52Q;
typedef NU8 tyEnum_EComponentSocketType__bL7yWKvQrcu9bmSlmcIY9aiQ;
typedef NU8 tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ;
typedef NU8 tyEnum_EMeshBufferAccess__7LifWE9aiZGG4qlcGgr2d3A;
typedef NU8 tyEnum_EFontImportCharacterSet__8e21JOPYHf6PreHGZY1z9cQ;
typedef NU8 tyEnum_EStandbyType__FBt4EYKR4479a42Bfgm4Liw;
typedef NU8 tyEnum_ESuggestProjVelocityTraceOption__KuHBSpJifpeqmLf689cx8uA;
typedef NU8 tyEnum_EHISMViewRelevanceType__8bRhyIbQNzcPV2sEvkTMBw;
typedef NU8 tyEnum_EHitProxyPriority__4g2Z2aEWALqFQ9c64WvNS5Q;
typedef NU8 tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw;
typedef NU8 tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ;
typedef NU8 tyEnum_EAdManagerDelegate__wqSFOJ4eKO5z29aHPJSTp1Q;
typedef NU8 tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw;
typedef NU8 tyEnum_EScreenPercentageMode__yEWV76H3bHdlxclGYIWpeQ;
typedef NU8 tyEnum_ELevelInstanceRuntimeBehavior__at9c3wCm9cFrEaFafwA09cxJg;
typedef NU8 tyEnum_ELevelInstanceCreationType__kfOTnfbIfnhsZVKICn5B7w;
typedef NU8 tyEnum_ELevelInstancePivotType__pXtNFsI7UMThU0CvxwEHng;
typedef NU8 tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw;
typedef NU8 tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA;
typedef NU8 tyEnum_ETextureColorChannel__vZOW1sJVMiG7RKJ3BLgglw;
typedef NU8 tyEnum_EMaterialAttributeBlend__4cp6dbunE2fduW9b5sv9bdDg;
typedef NU8 tyEnum_EChannelMaskParameterColor__bB4Pz8f6UiP2hFUydBeiLg;
typedef NU8 tyEnum_EClampMode__P2iUlGPxAjdgPTvnoefUdg;
typedef NU8 tyEnum_ECustomMaterialOutputType__2mA29brMTzIZxVL34VpOM8Q;
typedef NU8 tyEnum_EDataDrivenShaderPlatformInfoCondition__O2CVLMURZSh8ENVl3Y3ZUA;
typedef NU8 tyEnum_EDBufferTextureId__ctFSTdvTKMU9bTfi6U2ljxA;
typedef NU8 tyEnum_EDepthOfFieldFunctionValue__pewdhwiewKcXMt29a9bmyN2g;
typedef NU8 tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ;
typedef NU8 tyEnum_ENoiseFunction__jsdWzG7tfhr1AnYyDL2J8Q;
typedef NU8 tyEnum_ERuntimeVirtualTextureMipValueMode__NkGE7eHcA1b65E1rdBV1Bw;
typedef NU8 tyEnum_ERuntimeVirtualTextureTextureAddressMode__h2epoV7IquW3hy1LonhhfA;
typedef NU8 tyEnum_EMaterialSceneAttributeInputMode__56eLkLlAcqN1R5dFSf1E9aw;
typedef NU8 tyEnum_ESpeedTreeGeometryType__xPBJefUSkTtMepcMcL2PTA;
typedef NU8 tyEnum_ESpeedTreeWindType__pE9b04IT49cQYaBZoc1WZrfQ;
typedef NU8 tyEnum_ESpeedTreeLODType__bMMP3orBZGRettLh4CYZdA;
typedef NU8 tyEnum_ESwitchMaterialOutputType__LF6wkeLDPgKgScO6LnbsUg;
typedef NU8 tyEnum_EMaterialExposedTextureProperty__J7LPZLMW71fZVqGkhDqOvA;
typedef NU8 tyEnum_EMaterialVectorCoordTransformSource__Yo3FZtm9bd9aS8fCNU7fYwjw;
typedef NU8 tyEnum_EMaterialVectorCoordTransform__1SjLfLHwNO9bWS3duaZqXVA;
typedef NU8 tyEnum_EMaterialPositionTransformSource__GjbjhUiWlcmt66PGaHE9cAg;
typedef NU8 tyEnum_EVectorNoiseFunction__LAj0bk2Jm17WlZI9aZnsfZg;
typedef NU8 tyEnum_EMaterialExposedViewProperty__ObRtjcES2AyRKIidN1Lhmg;
typedef NU8 tyEnum_EWorldPositionIncludedOffsets__9aUn9b7YMvVWig27VMVnmrQw;
typedef NU8 tyEnum_EMaterialFunctionUsage__WhTdKHj0DSuuVoF2UEmgaw;
typedef NU8 tyEnum_EMaterialUsage__T2TF5LpY3CEkFGE7gAvFMA;
typedef NU8 tyEnum_EMaterialLayerLinkState__049bntwKEjzBnAuDV7gku8Q;
typedef NU8 tyEnum_ETextureSizingType__OSAHrU2hhM8DmHY9a1l9aEIg;
typedef NU8 tyEnum_EMaterialMergeType__n1J8GhB87kMB5rdNNXwvYA;
typedef NU8 tyEnum_ESceneTextureId__M9bK4Xzlp48YAthgj0Jzcag;
typedef NU8 tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA;
typedef NU8 tyEnum_EMicroTransactionDelegate__9c5mR3sbGg9cix6Ms79akvN0A;
typedef NU8 tyEnum_EMicroTransactionResult__rTmcCmNKdmsFwus7Ov1pIg;
typedef NU8 tyEnum_ENavigationDataResolution__U7Mrzd0xwgR9aI5eCLidQFw;
typedef NU8 tyEnum_ENavLinkDirection__t9aePIvBUBDC0y7Tf6uBEMA;
typedef NU8 tyEnum_EPingType__kvMdH7fJUMu4f6ear0IvTQ;
typedef NU8 tyEnum_EPingAverageType__pdYIr2vC08dB6y1I39aSR8w;
typedef NU8 tyEnum_EParticleBurstMethod__WpW4kbt3AYPpHyTpoZQZ8w;
typedef NU8 tyEnum_EParticleSubUVInterpMethod__O4VJK6rMDQ2aQpBOrEOqLA;
typedef NU8 tyEnum_EEmitterRenderMode__zrgei40n58zpQpYOLmL5lQ;
typedef NU8 tyEnum_EParticleDetailMode__CRemacA7qH9czV7QkeZPM9cw;
typedef NU8 tyEnum_EParticleSignificanceLevel__MOXswtNU2qzUnNJKb6qD2w;
typedef NU8 tyEnum_EParticleSystemInsignificanceReaction__5tLz8ZhiJYOwMOxz8Ax6YA;
typedef NU8 tyEnum_EModuleType__Od86t2g9b352X06sC9bfNs0w;
typedef NU8 tyEnum_EParticleSourceSelectionMethod__hwVDGbsbaQnDTw1BXPNnSg;
typedef NU8 tyEnum_EAttractorParticleSelectionMethod__JNPJnA69amZQ4GCe5QOI0bQ;
typedef NU8 tyEnum_Beam2SourceTargetMethod__gu2NYQgG9ceusoWOmB9amibA;
typedef NU8 tyEnum_Beam2SourceTargetTangentMethod__L9bOR9cZ0ma4588YYhldF5AA;
typedef NU8 tyEnum_BeamModifierType__OZqcshh4McMzfaLHwuf3Tw;
typedef NU8 tyEnum_EParticleCameraOffsetUpdateMethod__vft8A9btA3r9c4J5fvqAJ5aw;
typedef NU8 tyEnum_EParticleCollisionComplete__wc2mBsurRfhtssVLQdrUew;
typedef NU8 tyEnum_EParticleCollisionResponse__lY54TnrViJFm9b9c8kgDof8Q;
typedef NU8 tyEnum_ELocationBoneSocketSource__a4VjrNI9b5cQMABWShCGHBA;
typedef NU8 tyEnum_ELocationBoneSocketSelectionMethod__g4rg0RVf9cg4yRay21nrCIw;
typedef NU8 tyEnum_ELocationEmitterSelectionMethod__4LSK4ANwTAs4EblSGwpZiQ;
typedef NU8 tyEnum_CylinderHeightAxis__GOpNp4T4VixCPH0GH5PaZA;
typedef NU8 tyEnum_ELocationSkelVertSurfaceSource__i9bi0zR59c9awmxPTaR77ugcA;
typedef NU8 tyEnum_EOrbitChainMode__w06nsT4iiLznUW5WwE9bWOg;
typedef NU8 tyEnum_EParticleAxisLock__9a9c7gOufNXIa8YVEbR4Y0Dw;
typedef NU8 tyEnum_EEmitterDynamicParameterValue__hN6gW2eKzA9aSwFjGzMdtOQ;
typedef NU8 tyEnum_EParticleUVFlipMode__BIDoT11OH3XX8TZav2Jq9cw;
typedef NU8 tyEnum_EParticleSortMode__9cEdNH263LsVFv6yC9avFYCQ;
typedef NU8 tyEnum_EEmitterNormalsMode__uKqpWjABVjoGjjMU39cRnoQ;
typedef NU8 tyEnum_ETrail2SourceMethod__mbFjtZysZnpkohIj2SMAmw;
typedef NU8 tyEnum_EBeam2Method__9cFrbqkeww0ml4b1FB9avftw;
typedef NU8 tyEnum_EBeamTaperMethod__lTO2dKvfpCuKTSDkeNlCFQ;
typedef NU8 tyEnum_EMeshScreenAlignment__MWjd8AqOlvVcw3sW20UQKw;
typedef NU8 tyEnum_EMeshCameraFacingUpAxis__4PRRWBt3BawOki71uGhTbQ;
typedef NU8 tyEnum_EMeshCameraFacingOptions__vCHaQPL9aI2JtKHBdTxGHpA;
typedef NU8 tyEnum_ETrailsRenderAxisOption__ezW1OnJPRm05vZJ37IZlWg;
typedef NU8 tyEnum_EParticleScreenAlignment__eGoZy0OTwRoDNty6e2pDKw;
typedef NU8 tyEnum_EParticleSystemUpdateMode__03Y0XkdGe9bPC39csACDCwRA;
typedef NU8 tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg;
typedef NU8 tyEnum_EParticleSystemOcclusionBoundsMethod__1076NY75IYoJYhSJoV9aSmQ;
typedef NU8 tyEnum_EParticleSysParamType__TrAG2K4DxpIEqXB4OyK9cdA;
typedef NU8 tyEnum_ParticleReplayState__9bb76dCkQOl8T1WGKR19cycQ;
typedef NU8 tyEnum_EParticleEventType__CdX4rxrds9bgr55geeo7pWA;
typedef NU8 tyEnum_EViewTargetBlendFunction__bD49atsfKhTFQYLRCUW0iGQ;
typedef NU8 tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ;
typedef NU8 tyEnum_EHasCustomNavigableGeometry__wEdHOpxZ9c0QaQVRx9a9aLfog;
typedef NU8 tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A;
typedef NU8 tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA;
typedef NU8 tyEnum_ERichCurveInterpMode__r7w9a9b9cV1sgSNj1g9anCOMBw;
typedef NU8 tyEnum_ERichCurveExtrapolation__NzyMlzW7v9bY5DJccKvfrLQ;
typedef NU8 tyEnum_ReverbPreset__ToVYmBqzyKpD49bxQJMV89bA;
typedef NU8 tyEnum_ERichCurveTangentMode__8lF1QO9aj3Yjb2wysqxxZiQ;
typedef NU8 tyEnum_ERichCurveTangentWeightMode__RrYKuPYXcydVRf33S6onNw;
typedef NU8 tyEnum_ERichCurveCompressionFormat__UjPtY3pEt3TqXpHydpC8bQ;
typedef NU8 tyEnum_ERichCurveKeyTimeCompressionFormat__sP9aE5SUVIY9axpDrzCp6GPA;
typedef NU8 tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w;
typedef NU8 tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw;
typedef NU8 tyEnum_EDepthOfFieldMethod__LyqQrwRynWyE6AKb9bgNkZg;
typedef NU8 tyEnum_EUIScalingRule__YhnAKv27O9aIXqXNLamMv2g;
typedef NU8 tyEnum_ERenderFocusRule__vy2hIUaJEhhwM9c0vCNWJNg;
typedef NU8 tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w;
typedef NU8 tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ;
typedef NU8 tyEnum_EReflectionsType__3MEQmzUGMghZuaB3ddNqEg;
typedef NU8 tyEnum_ETextureEncodeSpeedOverride__9abqAHRiNyAVpxjszjKLVyQ;
typedef NU8 tyEnum_ETextureUniversalTiling__gsCW2vZf49az9bHcqtfg9cMFg;
typedef NU8 tyEnum_ETextureEncodeEffort__agwOPPnI9cIzzz8FAD9bcJbw;
typedef NU8 tyEnum_EOptimizationType__aMSqQdpoWapCnHfSfIB06Q;
typedef NU8 tyEnum_EMobilePlanarReflectionMode__B1g4hnKqBJYaI6xG5V9b1fg;
typedef NU8 tyEnum_EMobilePixelProjectedReflectionQuality__KOOZQWfcf3UH9czKnPe161A;
typedef NU8 tyEnum_EMaterialProperty__7tXom29aFagEQImJunDk9cuw;
typedef NU8 tyEnum_EAntiAliasingMethod__FxISTdSY7ZAaBUIpAYymwg;
typedef NU8 tyEnum_ESkeletalMeshGeoImportVersions__rV5Jky4Ch44zSPcv34q8Fg;
typedef NU8 tyEnum_ESkeletalMeshSkinningImportVersions__EkcgCBonlGfbPdO7T9cUXGQ;
typedef NU8 tyEnum_SkeletalMeshTerminationCriterion__sRHZtrFD9c4hqV9cO78rsZzg;
typedef NU8 tyEnum_SkeletalMeshOptimizationType__MXaWinT8ZUQjb7fx5aDqaA;
typedef NU8 tyEnum_SkeletalMeshOptimizationImportance__GGcoK0vTFfSuRxDIr0pHRg;
typedef NU8 tyEnum_EBoneVisibilityStatus__Q9c3fuagPHzfIw8R2S9a57XQ;
typedef NU8 tyEnum_EPhysBodyOp__ZRipZLaIbTXziX2enGnveA;
typedef NU8 tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog;
typedef NU8 tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg;
typedef NU8 tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A;
typedef NU8 tyEnum_ESoundDistanceCalc__9bAjikRSGHc9aMUKYpPH9c5xw;
typedef NU8 tyEnum_EImportanceLevel__lHtwcZnTAwq9aF1boDsSyqw;
typedef NU8 tyEnum_ENormalMode__9ccfGI5MPD2CkdRhd1Bt9bMg;
typedef NU8 tyEnum_ESubmixSendStage__tktZ7ezQlZEpnMgqAqkyJQ;
typedef NU8 tyEnum_EGainParamMode__isL7DeAbYICYc75UNN9bvZA;
typedef NU8 tyEnum_ESendLevelControlMethod__BU7L2C5p1GBUCH3NDwWbKQ;
typedef NU8 tyEnum_ESoundGroup__GpqbMQj9bWn0iRMRVbNpeKA;
typedef NU8 tyEnum_ModulationParamMode__mh86zLCKa9aDBTljVFzjDHA;
typedef NU8 tyEnum_ESourceBusSendLevelControlMethod__QhqmTdz7DfjGKOp8pli7Eg;
typedef NU8 tyEnum_EDecompressionType__mXjjit9c9cUe2YBEbYKBwo3w;
typedef NU8 tyEnum_ESoundWaveFFTSize__1FLfhVJ02SuGlxvyf1SvGw;
typedef NU8 tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg;
typedef NU8 tyEnum_ESoundWaveLoadingBehavior__qfM0CE4G4Iztm3u9bZ1u09bA;
typedef NU8 tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA;
typedef NU8 tyEnum_EStereoLayerShape__qp4EfWg3n6LBIU9byii1Mww;
typedef NU8 tyEnum_ESubUVBoundingVertexCount__qpCgfpJzY5HZCJfGL3m0XQ;
typedef NU8 tyEnum_EOpacitySourceMode__a3nMvSi9a3yLgoWc9bn3HDjA;
typedef NU8 tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg;
typedef NU8 tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw;
typedef NU8 tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw;
typedef NU8 tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ;
typedef NU8 tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g;
typedef NU8 tyEnum_ETextureSamplerFilter__h4PIK1Ssnd2K3mvvPax2bw;
typedef NU8 tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw;
typedef NU8 tyEnum_ETextureDownscaleOptions__pbGqcf2SwEYttX4ColUCZw;
typedef NU8 tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ;
typedef NU8 tyEnum_ETextureEncodeSpeed__83ZKrjF0kbUeQUPNq9cTALA;
typedef NU8 tyEnum_ETextureClass__HwK446ANjIqdLsgMWG9c1Pw;
typedef NU8 tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig;
typedef NU8 tyEnum_ETextureSourceCompressionFormat__v9bHP0kDx2SuG0CZGjelSRg;
typedef NU8 tyEnum_ETextureSourceFormat__SJGmAPWTV5EHbCiDemW4HA;
typedef NU8 tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw;
typedef NU8 tyEnum_ETextureSourceEncoding__tlUWilERzGlMvrGWAxyIAw;
typedef NU8 tyEnum_ETextureColorSpace__cMzsuQibtEeLb9bSQ9cfneUQ;
typedef NU8 tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg;
typedef NU8 tyEnum_ETextureChromaticAdaptationMethod__9c0onWHGG9bWvCfjQ8xPIOUw;
typedef NU8 tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag;
typedef NU8 tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA;
typedef NU8 tyEnum_ETextureMipCount__XqKNSs9aYHf5BIkn079aptBw;
typedef NU8 tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg;
typedef NU8 tyEnum_ETimelineLengthMode__UwOSsi5M2vIG2zFofBn0NQ;
typedef NU8 tyEnum_ETimelineDirection__BziiWqNR6y4V2pNAH555ig;
typedef NU8 tyEnum_ETwitterRequestMethod__4KfFSV6420et1hLSTXYTiQ;
typedef NU8 tyEnum_ETwitterIntegrationDelegate__PaSOfE6OnpMuxeutGvjWPQ;
typedef NU8 tyEnum_EUserDefinedStructureStatus__DE5v9apn9bLV9afkgs9b3qUi0Q;
typedef NU8 tyEnum_EVectorFieldConstructionOp__e9bFyongyo9bMfMDFrqDrOfA;
typedef NU8 tyEnum_ESplitScreenType__1zFP4z0FeIWt6ngVVHLK5A;
typedef NU8 tyEnum_EWindSourceType__tgASMiEzikMy2tfW9aLcEXw;
typedef NU8 tyEnum_EVisibilityAggressiveness__gqlziOIFuhwhS7UdaJFygg;
typedef NU8 tyEnum_EVolumeLightingMethod__V3zL9aUL0pQuGf1BNu7ChuQ;
typedef NU8 tyEnum_EHierarchicalSimplificationMethod__bq9auzMeJNorYGmeqak5ZFA;
typedef NU8 tyEnum_EQuartzTimeSignatureQuantization__hNjyY9b1OZxEPoI9bpuTtQzw;
typedef NU8 tyEnum_EQuartzDelegateType__1C9bJ9bz9co0qJGrAfkDCeCdg;
typedef NU8 tyEnum_EQuarztQuantizationReference__ia81sowpu3Au6ehwTBowfA;
typedef NU8 tyEnum_EQuartzCommandType__tSJsqh2Y3HMhQyjEAlJeJw;
typedef NU8 tyEnum_EActorUpdateOverlapsMethod__f14bpYndCdb6mmydENaZaw;
typedef NU8 tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg;
typedef NU8 tyEnum_EActorGridPlacement__hP7T4AnZYPKUD4UIz26h7w;
typedef NU8 tyEnum_FNavigationSystemRunMode__Qog57wwF1MdzYk9aAK8tvbA;
typedef NU8 tyEnum_ENavigationOptionFlag__yCCqGy0t6nUqKeuNxIp0Ug;
typedef NU8 tyEnum_ENavDataGatheringMode__gv6Mx0sU6URzZJab2MUt1w;
typedef NU8 tyEnum_ENavDataGatheringModeConfig__5CELEAz6FEUzzMLf8B2DGw;
typedef NU8 tyEnum_ENavigationQueryResult__nfD9cCvRJwyonDxaZx9bbhuw;
typedef NU8 tyEnum_EAudioRecordingExportType__qlXKZXxaYYHpNNXF9c6VXpw;
typedef NU8 tyEnum_EAnimGroupRole__0tpmCptyq83olRzRULzGcg;
typedef NU8 tyEnum_EAnimSyncGroupScope__XKtvj2B67ynmA1UDjkElcw;
typedef NU8 tyEnum_EAnimSyncMethod__JgU4trc9btp9bfDEJRu0t9cLQ;
typedef NU8 tyEnum_EAnimExecutionContextConversionResult__AguTojMVKcn9aGpcxMHI0FQ;
typedef NU8 tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw;
typedef NU8 tyEnum_EDrawDebugItemType__y4oiluO2zehi5iweJRbpuA;
typedef NU8 tyEnum_EAnimLinkMethod__cfeP6oeEcb2fEV39cJrkt9bA;
typedef NU8 tyEnum_EAnimNotifyEventType__W49cfXdUFEskexRiGGkAHlw;
typedef NU8 tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag;
typedef NU8 tyEnum_EMontageSubStepResult__1ZOUE9ayIQUMVvRxScF5mwQ;
typedef NU8 tyEnum_EPinHidingMode__0wNVaNYKI0uChN0xn51VFA;
typedef NU8 tyEnum_EAnimNodeDataFlags__a8ctPtLghdReZZfJYtfr1g;
typedef NU8 tyEnum_EAnimNodeReferenceConversionResult__8VeoQu9cAIDURuPgNuC249bw;
typedef NU8 tyEnum_EInertializationState__CjZetLxU2VduluDBMwiHZg;
typedef NU8 tyEnum_EInertializationBoneState__Q4nw3To9aTp7AUJaxMeco9bQ;
typedef NU8 tyEnum_EInertializationSpace__wJHcWNGwHQwqecF9chRR6jQ;
typedef NU8 tyEnum_EEvaluatorDataSource__8uWsKNkTkOBtdWA2gGoEyg;
typedef NU8 tyEnum_EEvaluatorMode__Yy8Am9cDHM5rpESkAfChCLA;
typedef NU8 tyEnum_ETransitionRequestQueueMode__x8ojufrQ2LY9a3P8sXTtX4A;
typedef NU8 tyEnum_ETransitionRequestOverwriteMode__SuW15yRCTZRz68GQ9cQsXwg;
typedef NU8 tyEnum_ETransitionBlendMode__JqZt8tpg9bFHJ2C4Go2qhcQ;
typedef NU8 tyEnum_ETransitionLogicType__hTbgSPQoaDLhluveIrMYcA;
typedef NU8 tyEnum_EAnimPropertyAccessCallSite__2rLOmJGn9cJ4Zy55cgIZM5g;
typedef NU8 tyEnum_EBlendProfileMode__r6YmpgP9am9c9bbK9bDGuZ8AOA;
typedef NU8 tyEnum_ETransformCurveChannel__sG9cBroBwptcTasMM12j8Dg;
typedef NU8 tyEnum_EVectorCurveChannel__58B9b1w9bqluWs3jPQdB1c6A;
typedef NU8 tyEnum_EPostCopyOperation__1LUcJV9cVMajHtJ6v9bCraRw;
typedef NU8 tyEnum_EAnimAlphaInputType__qqkmIhiXk03m9bkSCSRl5ZQ;
typedef NU8 tyEnum_EMirrorRowType__wH7Y4nlVL9aQA6RSlcj9ckcQ;
typedef NU8 tyEnum_EMirrorFindReplaceMethod__qXMeoilz9aG3axrio14HfIg;
typedef NU8 tyEnum_EControlConstraint__jYKcdQAXSVwwFzMJBAYnew;
typedef NU8 tyEnum_EConstraintTransform__m8TsyoZQ1bN1rghQVA2P8Q;
typedef NU8 tyEnum_EBoneTranslationRetargetingMode__XTT9aT9c9bgwbQTlBe4A4u9aYg;
typedef NU8 tyEnum_ETimeStretchCurveMapping__brqHjJIHq3cMv5sgfob64w;
typedef NU8 tyEnum_EPreviewAnimationBlueprintApplicationMethod__b9a1VkewVD7UxIhf0RqiLpQ;
typedef NU8 tyEnum_EPrimaryAssetCookRule__k5pXLvtytdRPv9bPxgCYroQ;
typedef NU8 tyEnum_EAttenuationDistanceModel__9c07egXX6esE9aE9bPNNiHqHA;
typedef NU8 tyEnum_EAttenuationShape__yhz5u9b0A65Ya40XQ47a8fA;
typedef NU8 tyEnum_ENaturalSoundFalloffMode__wycxNV4Mi37juKZEMTK1lQ;
typedef NU8 tyEnum_EAudioBusChannels__KUMWQY2fjte9a56ws15sE2g;
typedef NU8 tyEnum_EVoiceSampleRate__rmVyXWgDxNie4eqEgLxM4A;
typedef NU8 tyEnum_EPanningMethod__7KiW9bUqFboQXwCWAPNFlMg;
typedef NU8 tyEnum_EMonoChannelUpmixMethod__T5OEN9c4YQJPCosTRcqr70g;
typedef NU8 tyEnum_EDefaultAudioCompressionType__Ez5H6QETdPVfLaDLCvK0GQ;
typedef NU8 tyEnum_EAudioVolumeLocationState__cgdNqGrtoyp23ISYdoxqLw;
typedef NU8 tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag;
typedef NU8 tyEnum_ECameraShakeUpdateResultFlags__qtgdUGaDANIccSTxWwNmMg;
typedef NU8 tyEnum_ECameraShakeDurationType__r9bYuIEmrsu2qoUyuYYUGTQ;
typedef NU8 tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w;
typedef NU8 tyEnum_ECameraAlphaBlendMode__qV3bdcWucOAyyUDa9c606zA;
typedef NU8 tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q;
typedef NU8 tyEnum_EModulationDestination__5CB3PIMhfpTilSQJrD7fnw;
typedef NU8 tyEnum_EChildActorComponentTreeViewVisualizationMode__P8VgEzNh71IZ9cCcR5XeVFQ;
typedef NU8 tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw;
typedef NU8 tyEnum_ESyncOption__Wq9aDRl7DEltrSCAaJ7E7og;
typedef NU8 tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg;
typedef NU8 tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA;
typedef NU8 tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg;
typedef NU8 tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg;
typedef NU8 tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA;
typedef NU8 tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ;
typedef NU8 tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw;
typedef NU8 tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw;
typedef NU8 tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw;
typedef NU8 tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA;
typedef NU8 tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow;
typedef NU8 tyEnum_ECurveTableMode__gf8RU4Cyq7T7aOzoQZmtow;
typedef NU8 tyEnum_FDataDrivenCVarType__9crpm1bfI3vv9a6HLcZqlhyg;
typedef NU8 tyEnum_EEvaluateCurveTableResult__Cz3R9cE75Z6VtgD7SPlaxXg;
typedef NU8 tyEnum_EReporterLineStyle__WanNyNLrPp6OgRFwxqGVsA;
typedef NU8 tyEnum_EGraphAxisStyle__StYNnKdmEbcC2GKlLCVLHQ;
typedef NU8 tyEnum_EGraphDataStyle__k9cpBs62P5dAGUkV7ELxH2w;
typedef NU8 tyEnum_ELegendPosition__6AbBmHxb1q89cY9aKgByj1XA;
typedef NU8 tyEnum_EGrammaticalGender__rHxoW2Nm9czeucElZeG79cqA;
typedef NU8 tyEnum_EGrammaticalNumber__K7UFRoh52B1d9accqY0KQRQ;
typedef NU8 tyEnum_ETypedElementWorldType__7Sj9cv3PKdTPsymH5lkSS2A;
typedef NU8 tyEnum_ECustomTimeStepSynchronizationState__zBXqJQcv5YdTLjd9cOvhQAg;
typedef NU8 tyEnum_EVectorQuantization__mby19a8M2ZMXAUxl4ggGZWA;
typedef NU8 tyEnum_ERotatorQuantization__TdBQDTC1E9b1P3tYDpfet4Q;
typedef NU8 tyEnum_ETimecodeProviderSynchronizationState__7yX6oALT9bm9caipovYyZdxQ;
typedef NU8 tyEnum_EFontCacheType__fRhLFlAE4qhYyDkGs69bLZQ;
typedef NU8 tyEnum_ERootMotionAccumulateMode__KpcDFOcEBULHw2jXW7XfiQ;
typedef NU8 tyEnum_ERootMotionSourceStatusFlags__MbUBKG1zArr7PSJZ9bhbltg;
typedef NU8 tyEnum_ERootMotionSourceSettingsFlags__74zwVDywhRnwxZr9bOBxZdA;
typedef NU8 tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ;
typedef NU8 tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg;
typedef NU8 tyEnum_ESlateGesture__Pscv9bCSeopgM2S4iny2Wjw;
typedef NU8 tyEnum_EMIDCreationFlags__VI0UMZsMNapQIo2qZneX9bQ;
typedef NU8 tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw;
typedef NU8 tyEnum_ELerpInterpolationMode__1hcOsNVo9arJEZAb4iAEcLg;
typedef NU8 tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA;
typedef NU8 tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg;
typedef NU8 tyEnum_EActorPackagingScheme__srPeHn1pMaDfwnrL7Cvlow;
typedef NU8 tyEnum_EDecalBlendMode__1o0MR8Mmz9cUz9c4NAPxGjyg;
typedef NU8 tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ;
typedef NU8 tyEnum_EMaterialTranslucencyPass__Ew5hgBz89bD4GAsUrCj06pw;
typedef NU8 tyEnum_EMeshFeatureImportance__urQysqAJ8lU62e9bhAFY51Q;
typedef NU8 tyEnum_ELandscapeCullingPrecision__25upTRHdd2ed0PAPYS9b2kQ;
typedef NU8 tyEnum_EProxyNormalComputationMethod__eiPIJ0jiVVQ8aPFpq9c3AbQ;
typedef NU8 tyEnum_EMeshLODSelectionType__9agnVpccVBEFJy9aQsbzBEQQ;
typedef NU8 tyEnum_EMeshMergeType__yVLxiy9cEy42DGnMwH06u1w;
typedef NU8 tyEnum_EUVOutput__9a8uDZWqbXzJn8KSkhpynBA;
typedef NU8 tyEnum_EMeshApproximationType__rSR9btkn6Vl6FTrA57H50kg;
typedef NU8 tyEnum_EMeshApproximationBaseCappingType__aKrfLOyIUyPPShODXxWJfw;
typedef NU8 tyEnum_EOccludedGeometryFilteringPolicy__YJY1oiWF9cV2thXs2ZFYmzQ;
typedef NU8 tyEnum_EMeshApproximationSimplificationPolicy__EJ6Ed9cKSvgahw1IvVOG5TQ;
typedef NU8 tyEnum_EMeshApproximationGroundPlaneClippingPolicy__9b0UK9bd9cMuT04HYN5HKeTAw;
typedef NU8 tyEnum_EMeshApproximationUVGenerationPolicy__MSaMB9ck8d9b9ahM9atq8EtvPw;
typedef NU8 tyEnum_EVertexPaintAxis__xnbGI2wHzvdGeHn8hpYsPw;
typedef NU8 tyEnum_EReplayResult__342B7hfXRpGNdAEBFyHLpQ;
typedef NU8 tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw;
typedef NU8 tyEnum_EPerQualityLevels__acmnnNL9bB2U12jxcx4FOGg;
typedef NU8 tyEnum_EDOFMode__Ae5jNwUvq1zlHN6TSX1GFA;
typedef NU8 tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ;
typedef NU8 tyEnum_EConstraintTransformComponentFlags__ZA0GlyN5tkYyRF133fholA;
typedef NU8 tyEnum_EPhysicsAssetSolverType__offPalqzN009cA3cE5c29cpg;
typedef NU8 tyEnum_ESettingsDOF__IVjBkoQTWG3U09baj9bwMmHQ;
typedef NU8 tyEnum_ESettingsLockedAxis__9a7BoTatNMV7HlQbOVPHgqg;
typedef NU8 tyEnum_EDynamicForceFeedbackAction__8KJfWx2uBQLb8KhKL7Nljg;
typedef NU8 tyEnum_EVoiceBlockReasons__1FlfhYAC9aE7Y9bxxMuPJeOg;
typedef NU8 tyEnum_EPropertyAccessCopyBatch__XgCaeF8Xv4VQtJe3AFMWyg;
typedef NU8 tyEnum_EPropertyAccessIndirectionType__he0ipDUTlJNOLDGcTwabOg;
typedef NU8 tyEnum_EPropertyAccessObjectType__nuPxvLKnGNFfiSTij3mnbg;
typedef NU8 tyEnum_EPropertyAccessCopyType__RINJSvTPzQV414OieyJA4w;
typedef NU8 tyEnum_EClearSceneOptions__6DunOwK4W7wqaEa5W9aziiA;
typedef NU8 tyEnum_ECompositingSampleCount__vAEP9bxeONiJYzI4arkRRXA;
typedef NU8 tyEnum_ECustomDepthStencil__9b1qh3eHya9c21VKvDfI8A9aQ;
typedef NU8 tyEnum_EEarlyZPass__GWcmHPWByBFjlscXWcCwIg;
typedef NU8 tyEnum_EVelocityOutputPass__9bVp39cC5pB6YQd0TuQSsUtA;
typedef NU8 tyEnum_EVertexDeformationOutputsVelocity__cwRx6V6Jmb9ajnttyUVMldg;
typedef NU8 tyEnum_EAlphaChannelMode__O1jJfd14S6eaAW4XKoRpEQ;
typedef NU8 tyEnum_EAutoExposureMethodUI__VvqLDzpHla6siCig9b9aoWwQ;
typedef NU8 tyEnum_EDefaultBackBufferPixelFormat__MtpI5VUV3urPvnhTUq5NvA;
typedef NU8 tyEnum_EFixedFoveationLevels__Z6tp8aLsrQ17bEljsrpTiA;
typedef NU8 tyEnum_EMobileAntiAliasingMethod__0KF4u2lu8ZiDxklvnc09alQ;
typedef NU8 tyEnum_EMobileFloatPrecisionMode__mqXqB1f9bdvUErhSbuJ5kzQ;
typedef NU8 tyEnum_EMobileShadingPath__mTr4EE6uFEPWJCg9a25IflQ;
typedef NU8 tyEnum_EShaderCompressionFormat__rnp7RoqqyOMyLju9bqtLC5w;
typedef NU8 tyEnum_ELumenSoftwareTracingMode__Qo5sF2GIBUs5a2F1ToyQyw;
typedef NU8 tyEnum_ELumenRayLightingMode__1ZklsEdeitbrD79bdhFrzjg;
typedef NU8 tyEnum_EWorkingColorSpace__n3s2filMkeeMUYjzxEjrgg;
typedef NU8 tyEnum_ESkeletalMeshAsyncProperties__hAt9bie4SGuoWWaWJNhguJg;
typedef NU8 tyEnum_EClothLODBiasMode__rY9ccoAErZOEd8hcsu4Ey9aw;
typedef NU8 tyEnum_EBoneFilterActionOption__6oBixZgPKeZaNAC6rO3Buw;
typedef NU8 tyEnum_ESkinCacheUsage__V24C524t9ch9arnb2IiMsokA;
typedef NU8 tyEnum_ESkinCacheDefaultBehavior__BXV9bIGPdq9a9bjuD5jIKciDw;
typedef NU8 tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw;
typedef NU8 tyEnum_EMaxConcurrentResolutionRule__EzFMbBcK6m8QM1ovJjwNrA;
typedef NU8 tyEnum_EConcurrencyVolumeScaleMode__fu9btzHKAaOGmZR0XojVHRQ;
typedef NU8 tyEnum_EAudioSpectrumBandPresetType__RSJqkjQ8XzbqS1BImnpp5g;
typedef NU8 tyEnum_ESourceBusChannels__lAg3qpjgGd7fYyRtYBjVqQ;
typedef NU8 tyEnum_EFFTSize__No3IgC1Ccv23sZ7WxluZ9bA;
typedef NU8 tyEnum_EFFTPeakInterpolationMethod__zmX0701g3VBVwdHQWTBJcA;
typedef NU8 tyEnum_EFFTWindowType__9bGZdJ7a6H0fb4ugFfpr9bxQ;
typedef NU8 tyEnum_EAudioSpectrumType__TBhtE9b2LCSM7FAMCe4f7ow;
typedef NU8 tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA;
typedef NU8 tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg;
typedef NU8 tyEnum_EConsoleForGamepadLabels__VBG0246Si9ay1Rj54casvYg;
typedef NU8 tyEnum_ETouchType__sjMraGiDZ5LWA6GiRZUKBw;
typedef NU8 tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ;
typedef NU8 tyEnum_EColorVisionDeficiency__DU1qP5iJ6QOZvOs9aZQ1UTQ;
typedef NU8 tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw;
typedef NU8 tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA;
typedef NU8 tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg;
typedef NU8 tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ;
typedef NU8 tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA;
typedef NU8 tyEnum_ENavigationSource__IfAQSBSArxXqoz8iY2I9cEw;
typedef NU8 tyEnum_ENavigationGenesis__dhcPx9brXi9b0x09b1g9c783EA;
typedef NU8 tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A;
typedef NU8 tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA;
typedef NU8 tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA;
typedef NU8 tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A;
typedef NU8 tyEnum_EScrollDirection__KoclhJXuQYd09aHg0HO6sGQ;
typedef NU8 tyEnum_ETextCommit__w8QahiXQM4Ubq9anb9bM9cb9aQ;
typedef NU8 tyEnum_ESelectInfo__EOT8wgJpxSuu4ujIhn9budA;
typedef NU8 tyEnum_ESlateDebuggingInputEvent__cDV6I9bjhZeGbPvAYVZKmzQ;
typedef NU8 tyEnum_ESlateDebuggingStateChangeEvent__fJh2DfD9ctkXzeGqRFb5j7w;
typedef NU8 tyEnum_ESlateDebuggingNavigationMethod__cddgNoyqUwi8en6r6oTBpw;
typedef NU8 tyEnum_ESlateDebuggingFocusEvent__BxK4HUKgenIj5SzAmjQWzA;
typedef NU8 tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ;
typedef NU8 tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ;
typedef NU8 tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w;
typedef NU8 tyEnum_ETextShapingMethod__B2dNIKUbA18LrCAmTwu1bA;
typedef NU8 tyEnum_EFocusCause__08ky2DAtcwYlHCwpY0k3qQ;
typedef NU8 tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw;
typedef NU8 tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw;
typedef NU8 tyEnum_ESlateBrushDrawType__Rso1NoIB32j6bR02fIfMQg;
typedef NU8 tyEnum_ESlateBrushTileType__KGKfzp9cScMapTcImN2vq5A;
typedef NU8 tyEnum_ESlateBrushMirrorType__d4tbTBug9a9cwWFeNwMvUQBQ;
typedef NU8 tyEnum_ESlateBrushImageType__3PEKKUzgrKjUaKtxtYVcoA;
typedef NU8 tyEnum_ESlateBrushRoundingType__c2G4GhS6ZVIt5PuKJk1j2w;
typedef NU8 tyEnum_ESlateColorStylingMode__6MWbHgmuwpaFPxCPpP6QQg;
typedef NU8 tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg;
typedef NU8 tyEnum_ESlateParentWindowSearchMethod__IJhKv9arpPNtfC9bO6FC7VSA;
typedef NU8 tyEnum_ESlateCheckBoxType__2WSdSdyZtPcAtMaryeaSug;
typedef NU8 tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg;
typedef NU8 tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ;
typedef NU8 tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ;
typedef NU8 tyEnum_EStyleColor__ij8fBimBMrv3Kg4EZlmw0A;
struct FSlateBrushOutlineSettings_ {FVector4 cornerRadii;
FSlateColor color;
NF32 width;
tyEnum_ESlateBrushRoundingType__c2G4GhS6ZVIt5PuKJk1j2w roundingType;
NIM_BOOL bUseBrushTransparency;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_0;
};
typedef NU8 tyArray__2OatlL9b5t79c8TDf3fDsiRQ[1680];
struct FToolBarStyle_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FSlateBrush backgroundBrush;
FSlateBrush expandBrush;
FSlateBrush separatorBrush;
FTextBlockStyle labelStyle;
FEditableTextBoxStyle editableTextStyle;
FCheckBoxStyle toggleButton;
tyArray__2OatlL9b5t79c8TDf3fDsiRQ pad_1;
FButtonStyle settingsButtonStyle;
tyArray__2OatlL9b5t79c8TDf3fDsiRQ pad_2;
FCheckBoxStyle settingsToggleButton;
FButtonStyle buttonStyle;
FMargin labelPadding;
FMargin separatorPadding;
FMargin comboButtonPadding;
FMargin buttonPadding;
FMargin checkBoxPadding;
FMargin blockPadding;
FMargin indentedBlockPadding;
FMargin backgroundPadding;
FDeprecateSlateVector2D iconSize;
NIM_BOOL bShowLabels;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_3;
};
struct FSlateSound_ {UObject* resourceObject;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
typedef NU8 tyArray__imubzojaOiPVfv1g8EarTA[48];
struct FSlateFontInfo_ {UObject* fontObject;
UObject* fontMaterial;
tyArray__imubzojaOiPVfv1g8EarTA pad_0;
FName typefaceFontName;
NI32 size;
NI32 letterSpacing;
NF32 skewAmount;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FSegmentedControlStyle_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FCheckBoxStyle controlStyle;
FCheckBoxStyle firstControlStyle;
FCheckBoxStyle lastControlStyle;
FSlateBrush backgroundBrush;
FMargin uniformPadding;
};
typedef NU8 tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ;
typedef NU8 tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA;
typedef NU8 tyEnum_ECollisionTraceFlag__9aVLlngVixyzYms9ctTOAyzg;
typedef NU8 tyEnum_EPhysicsType__Rbuth1fe9bVCKRqC5kiYOEg;
typedef NU8 tyEnum_EBodyCollisionResponse__ThtsA9c5uzx9aH4zAsT0mqbw;
typedef NU8 tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg;
typedef NU8 tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg;
typedef NU8 tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q;
typedef NU8 tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA;
typedef NU8 tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw;
typedef NU8 tyEnum_EVirtualKeyboardTrigger__dNj7H5u9ab1STnC5et9bo69cg;
typedef NU8 tyEnum_EVirtualKeyboardDismissAction__7gdv8eKmj32Cnh7bZaDV1Q;
typedef NU8 tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A;
typedef NU8 tyEnum_ETableViewMode__GR20mP1OAVRUZ1HmPE1AkQ;
typedef NU8 tyEnum_EMultiBoxType__INhsMGdbY7hFUm2YBWwGIw;
typedef NU8 tyEnum_EMultiBlockType__9aAFbNaHXwyl51I9cVqEIm6w;
typedef NU8 tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ;
typedef NU8 tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ;
typedef NU8 tyEnum_ECustomizedToolMenuVisibility__b6YRo4QO7po3fsaWe8YtIQ;
typedef NU8 tyEnum_EUserInterfaceActionType__bazIs4nBBv57jE9aJHFomIA;
typedef NU8 tyEnum_EMultipleKeyBindingIndex__OqQuds3zajl0u7vDG0rp1g;
typedef NU8 tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA;
typedef NU8 tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww;
typedef NU8 tyEnum_ETextFlowDirection__it3WpzuuPfNKE51KjghOBA;
typedef NU8 tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew;
typedef NU8 tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w;
typedef NU8 tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA;
typedef NU8 tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA;
typedef NU8 tyEnum_EListItemAlignment__R6LyWnpWGyDYfyPJQsyXZA;
typedef TArray<UObject*> TY__meGclu4l9cwnqbgiIjRtfhA;
struct FEmptyPayload_ {tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
typedef TArray<FVector> TY__Bz8EFFwaAOJiUrMHOIgVGw;
typedef TArray<FQuat> TY__r61x9a9aUIJyVmP9bIukwh3zg;
typedef TArray<NF32> TY__LZaQ4h2l9bWQPMMIHjA9cwlA;
typedef TArray<FTransform> TY__ZRKjvD0LxpBKI8XAOc3PKg;
typedef TScriptInterface<UAnimationDataModel_>  TY__2oFl2vye442IAermOsWYpg;
typedef TArray<FRichCurveKey> TY__vtilWHQcza9aBHc3YkFx5Bw;
typedef TArray<FBoneAnimationTrack_> TY__Gur0dFjg9byOJEgqd1KOiLg;
typedef TArray<FFormatArgumentData_> TY__Hr8ModhbWslsFNX2oLz1GA;
typedef TSoftObjectPtr<UWorld> TY__9cPzWpX39aro9ack5dbCvRImQ;
typedef TSubclassOf<ULevelStreamingDynamic_> TY__cf9bOIrRZamf1HVVF7c2pXA;
typedef TArray<FAnimationCurveIdentifier_> TY__q0YKngudVysxlVXqMDII4A;
typedef TArray<FPrimaryAssetId> TY__9aw1VaWKZbUTzz1muwIRvsw;
typedef TMap<NI32 COMMA NI32>  TY__wpSBE9cf2usnCI0KGFU04xQ;
typedef TArray<NI32> TY__TxfK2fhRJXNHttPFRcL6fA;
typedef TSet<NI32>  TY__bdlO5kVNTRv59cPOoXMIbHw;
typedef TArray<UFXSystemComponent*> TY__Qu3WcNhn1GZqsD9bMGcV3pQ;
typedef TScriptInterface<UCameraLensEffectInterface_>  TY__hvmi1aSu7TExY3gfL1PBlA;
typedef TSubclassOf<UCanvasRenderTarget2D_> TY__cyRmGPtN9aq0VukEVoX3rGg;
typedef TArray<UCurveTable_*> TY__M4MmxYh2DRWibpvAY9b1bhg;
typedef TArray<UDataTable*> TY__CsVeHH6fpx8ZgI6qaaSz3A;
struct FCullDistanceSizePair_ {NF32 size;
NF32 cullDistance;
};
typedef TArray<FCullDistanceSizePair_> TY__IqXdAzIoi9cCuZiE2VD1lMg;
typedef TSubclassOf<UObject> TY__Gdb8rCprT6WGagrQes2BIg;
typedef TSubclassOf<UCameraShakeBase_> TY__KQEDk1C09aJw5qI9c3NLtbyA;
typedef TSubclassOf<UInterface> TY__KI5t49abR3sL6OsGNxWlhiQ;
typedef TSubclassOf<USaveGame_> TY__oMknOVX79awua0tCYRTqEkw;
typedef TSubclassOf<UDamageType_> TY__ABzvPARwjWflBz1vDaugrg;
typedef TArray<FInputDeviceId> TY__8C7BRYyFrahKcz3Rrc7csA;
typedef TArray<FPlatformUserId> TY__0LGdQsbQ049aRvnlezZzVcQ;
typedef NU8 tyEnum_ELocalizedTextSourceCategory__3Ltn8YdL2zodLqTHWaOvUQ;
typedef TArray<NU8> TY__41Mm7Z1nb8xYOi3Vy0ffmA;
typedef NU8 tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw;
typedef TArray<FLinearColor> TY__LIN349biVKUmlJo9abXyib3Q;
typedef TArray<FColor> TY__nVAGwAmGausuUwwMqG2Chg;
typedef NU8 tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ;
typedef NU8 tyEnum_ESearchDir__FGgOLWYHHOEEcatZwkhq0Q;
typedef NU8 tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw;
typedef TArray<FHitResult> TY__lzHXQP9bZ0fzOEdl9bhUHFMg;
typedef TArray<UPrimitiveComponent*> TY__RN0jXIbC9cvfWt68iswDSAw;
typedef TSoftObjectPtr<UObject> TY__9b5kQ3g2w5CXovAbu5D6pTg;
typedef TSoftClassPtr<UObject> TY__roSJObD9cij0IKr7nEgF3iw;
typedef TScriptInterface<UInterface>  TY__ifXM0HgR32dv0bADb0VXEw;
typedef NU8 tyEnum_EPropertyAccessChangeNotifyMode__tfIyzql3Jp1o4A9aSN3GRWw;
typedef TMap<FString COMMA FString>  TY__c0nBuI9a2FtGpQcNibWH5rw;
typedef TArray<FSoftObjectPath> TY__ENhz1y6sHvLdRa6kOBUI0g;
typedef TSet<FName>  TY__RB4z3ofWT3akwp9bOP7PhQA;
typedef TArray<FIntPoint> TY__yD9cabbXKxBhxxk9bEUjuWfQ;
typedef TArray<FPrimaryAssetType> TY__3W9bSP0TRlRfvoPW2wOyZSg;
typedef TScriptInterface<UBlendableInterface>  TY__F9b2cvIGUaHd4jgh3Qa4T7w;
typedef TArray<FSkeletalMaterial> TY__J4BsCVazMxnbn2pMa0gmYA;
typedef TArray<UNodeMappingContainer_*> TY__aQOYJDTq9cbs3kkjTFzDRtw;
typedef TArray<UMorphTarget*> TY__BkXM3seddDKCuk9ckyWy0BA;
typedef TMap<tyEnum_EPerQualityLevels__acmnnNL9bB2U12jxcx4FOGg COMMA NI32>  TY__MWSkMZZhor1rT7RX9cp2Htg;
typedef TArray<FStaticMaterial> TY__DjVkfHFhdnDmatCydN9cEqw;
typedef TMap<FName COMMA NI32>  TY__FlT4tcZm1cmdaT89ciajJfA;
typedef TArray<UStaticMeshSocket_*> TY__Cmu2WMlENYBnJ16EwepnUQ;
typedef TSubclassOf<UWorldSubsystem> TY__SZrhP2SaWueNLRMyRwUueg;
typedef TSubclassOf<ULocalPlayerSubsystem> TY__xoau9aGG9bGInThS5Ff3sLrA;
typedef TSubclassOf<UGameInstanceSubsystem> TY__t7MW8dNaA8xV9aQwPSWKF0w;
typedef TSubclassOf<UEngineSubsystem> TY__a9c7M9ap9aHvx2XoTZg2f8G9aA;
typedef TSubclassOf<UAudioEngineSubsystem_> TY__lMyEL238B9aDA0twt0Y33xA;
typedef TArray<FCanvasUVTri> TY__BpCzqwI2aoMmhSgofuM38A;
typedef TArray<FGuid> TY__QUxJb9b3YwzTBIcUvLm2j6Q;
typedef TArray<FActorDesc_> TY__L1uKoYpGltEdX5AMaAZBwA;
typedef TScriptInterface<UWorldPartitionDestructibleInHLODInterface_>  TY__Z9bblV6ojuGotVTgnCjfC4Q;
typedef TArray<FWorldPartitionStreamingQuerySource> TY__coX2EsXi9bBqBt2eQJWCxdw;
struct FFloatRK4SpringInterpolator_ {char dummy;
};
struct FVectorRK4SpringInterpolator_ {char dummy;
};
struct FCanvasIcon_ {UTexture* texture;
NF32 u;
NF32 v;
NF32 uL;
NF32 vL;
};
struct FAnimNodeReference_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__6qSULJVkHXjL25e22OI5AQ[136];
struct FAnimNode_AssetPlayerRelevancyBase_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
};
struct FSceneViewExtensionIsActiveFunctor_ {tyArray__26aQaWOzPONEXg2JYXgXsA pad_0;
};
struct FAnimExecutionContext_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FInputScaleBiasClampState_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FInputClampState_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FAssetCompileData_ {TY__JNuX49bw2SzgYlt1yr74cAA asset;
};
typedef NU8 tyArray__0TYgJNb2Cy78XDzz9c9a105Q[1872];
struct FCameraShakeUpdateResult_ {tyArray__0TYgJNb2Cy78XDzz9c9a105Q pad_0;
};
struct FFloatSpringState_ {tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
typedef NU8 tyArray__sH9avbK619blGCGFZhgSDaWg[56];
struct FVectorSpringState_ {tyArray__sH9avbK619blGCGFZhgSDaWg pad_0;
};
struct FQuaternionSpringState_ {tyArray__w5VB8h5K8DB3oWrO5U2wqg pad_0;
};
struct FSubsurfaceProfileStruct_ {FLinearColor surfaceAlbedo;
FLinearColor meanFreePathColor;
NF32 meanFreePathDistance;
NF32 worldUnitScale;
NIM_BOOL bEnableBurley;
NIM_BOOL bEnableMeanFreePath;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
FLinearColor tint;
NF32 scatterRadius;
FLinearColor subsurfaceColor;
FLinearColor falloffColor;
FLinearColor boundaryColorBleed;
NF32 extinctionScale;
NF32 normalScale;
NF32 scatteringDistribution;
NF32 iOR;
NF32 roughness0;
NF32 roughness1;
NF32 lobeMix;
FLinearColor transmissionTintColor;
};
struct FSkelMeshMergeSectionMapping_ {TY__TxfK2fhRJXNHttPFRcL6fA sectionIDs;
};
struct FSkelMeshMergeMeshUVTransforms_ {TY__ZRKjvD0LxpBKI8XAOc3PKg uVTransforms;
};
typedef TArray<FSkelMeshMergeMeshUVTransforms_> TY__y9bIc7g2Jyd7Dw7mLIlPqLQ;
struct FSkelMeshMergeUVTransformMapping_ {TY__y9bIc7g2Jyd7Dw7mLIlPqLQ uVTransformsPerMesh;
};
struct FBlueprintEnhancedInputActionBinding_ {UInputAction* inputAction;
ETriggerEvent triggerEvent;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
FName functionNameToBind;
};
typedef TArray<FBlueprintEnhancedInputActionBinding_> TY__thExvANNGNgDH8OkaKuR8A;
typedef TSoftObjectPtr<UInputMappingContext_> TY__peXTHnoP9a9aHft4wbs39bp8g;
struct FDefaultContextSetting_ {TY__peXTHnoP9a9aHft4wbs39bp8g inputMappingContext;
NI32 priority;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TArray<FDefaultContextSetting_> TY__wjhtp2nTDdhb86xh9cRyNdg;
typedef TSoftClassPtr<UEnhancedPlayerInput> TY__dPphnKVNcklyqD9cNMYlEAw;
typedef NU8 tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg;
typedef TMap<UInputMappingContext_* COMMA UInputMappingContext_*>  TY__akGNBG0tR9cxS6jqY9cPjDDg;
typedef TSoftClassPtr<UEnhancedInputPlatformData_> TY__qXIH63mi0grsjak9aYV5lAw;
typedef TArray<TY__qXIH63mi0grsjak9aYV5lAw> TY__Vl9a1S9a74enmUSPajJNLzGg;
typedef TSubclassOf<UEnhancedInputPlatformData_> TY__VDYysH7qpS8iExORrufSoQ;
typedef TArray<TY__VDYysH7qpS8iExORrufSoQ> TY__5VGVoPDWJG1SfBmRkBTYzg;
typedef NU8 tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA;
typedef NU8 tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ;
typedef TArray<UInputMappingContext_*> TY__lgKFBDQQJ4HcImBX8b3sLA;
typedef TArray<FMappingQueryIssue> TY__bjKA9cg0NSPZszptILQ9bYXg;
typedef NU8 tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ;
typedef TArray<FKey> TY__HqMsNoaajlV9ahHT79bz6bBA;
typedef TArray<UInputModifier*> TY__c8nNrl0cjgFNa0Q8UPdEvQ;
typedef TArray<UInputTrigger*> TY__FxqDNnZW9amc7oM6Ecl0Hcg;
typedef TArray<FEnhancedActionKeyMapping> TY__Rv7KwgUmzu2nlB7yhoSeJA;
typedef TWeakObjectPtr<UInputComponent>  TY__28wmLXlb9axZVYaBGL5Xrqw;
typedef TArray<TY__28wmLXlb9axZVYaBGL5Xrqw> TY__iZLNaT1K9bm5EsgMOTsKjcA;
typedef TMap<UInputMappingContext_* COMMA NI32>  TY__sOdDuvKiHtt9cumeGPfHn2A;
typedef TMap<UInputAction* COMMA FInputActionInstance>  TY__k9aNq3p033XWsku9bV9cgPW9bQ;
typedef TMap<FKey COMMA FVector>  TY__ycORZrEHfDeQwJCU7d1PHg;
typedef TMap<UInputAction* COMMA FInjectedInputArray>  TY__Ofsfce9bTEY1Wuud9a3bLwFQ;
typedef TSet<UInputAction*>  TY__SVxKloj6zDI4NdPm5EhnqQ;
struct FBlueprintInputDebugKeyDelegateBinding_ {FInputChord inputChord;
EInputEvent inputKeyEvent;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
FName functionNameToBind;
NIM_BOOL bExecuteWhenPaused;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef TArray<FBlueprintInputDebugKeyDelegateBinding_> TY__SkUL0XwwFFaUKA6OsdzxzA;
typedef NU8 tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ;
typedef NU8 tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA;
typedef NU8 tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g;
typedef NU8 tyEnum_ETriggerState__QCHs7MNqpyKxgNRnJWNtLg;
typedef NU8 tyEnum_ETriggerType__Ck7FJArFtrL50IHyr5xiCA;
typedef TArray<FInputComboStepData> TY__G0jxsrnIhOE5QUYUpdavEQ;
typedef TArray<FInputCancelAction> TY__6u4iFJ3xvKthNkXqw0X5Hw;
typedef NU8 tyEnum_EPlayerMappableKeySettingBehaviors__nt9aQL7DGExZMy0JBJqZ6jw;
typedef NU8 tyEnum_ETriggerEventsSupported__GEMvWt5q7YEiN12UVWvhiQ;
typedef NU8 tyEnum_EModelingSelectionInteraction_DragMode__ZjkB3T89aJhVMRBhhJGR64A;
typedef NU8 tyEnum_EModelingModeDefaultMeshObjectType__E9bdusL461LbQTx6ukyq8iA;
typedef NU8 tyEnum_EModelingModeAssetGenerationBehavior__nOP7xYo9baHepmKolJAUVEg;
typedef NU8 tyEnum_EModelingModeAssetGenerationLocation__1Efrkx4hZY9cgxJOVBAzxSw;
typedef TMap<NI32 COMMA FString>  TY__QJ877IzPgLt9brLepAnlabA;
typedef TMap<FString COMMA UObject*>  TY__gVNwDuZPrClicoyBZbjZRQ;
typedef NU8 tyEnum_EMyTestRegularEnum__z6lWgQvc4ZfzYzy9aat9c6Lw;
typedef NU8 tyEnum_EMyTestEnumClass__ap2Iap79bGAsbaNaGs9bW08g;
struct FMyStructTableRow_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
NF32 turnRateGamepad;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
UObject* objectTest;
};
typedef NU8 tyEnum_EMyTestEnum__ez400sk88IahMAGJcgRJ6Q;
typedef NU8 tyEnum_EMyTestEnum2__wQyKoDr32hbGH9b9bGZQHhew;
struct FDynamicMulticastDelegateOneParamTest_ : public FMulticastScriptDelegate {};
struct FStructToUseAsVar_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
TY__9akcXb9b3ftlkdW8NDwR22Mg actorSubclass;
FDynamicMulticastDelegateOneParamTest_ del;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_1;
};
struct FStructToUseAsVarDelTest_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TArray<USceneComponent*> TY__7Q1qw9bMtL8Ptbe5C3movyA;
typedef TArray<UMaterialInterface*> TY__UxQQNE4PCeF9btDY9avFuEmA;
typedef TWeakObjectPtr<USkinnedMeshComponent>  TY__TroUwqr83BUH9a7zjBn89bmg;
typedef TArray<tyEnum_ESkinCacheUsage__V24C524t9ch9arnb2IiMsokA> TY__wYMJCrtNG2j9b9bmJG11m7FA;
typedef TArray<FSkelMeshSkinWeightInfo> TY__PF9cKY57TwRad2X4MD2NIXg;
typedef TArray<FConstraintInstanceAccessor_> TY__JYFEBjy3RcdpO9bmahvDt9aw;
struct FExponentialHeightFogData_ {NF32 fogDensity;
NF32 fogHeightFalloff;
NF32 fogHeightOffset;
};
struct FEngineShowFlagsSetting_ {FString showFlagName;
NIM_BOOL enabled;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
};
typedef TArray<FEngineShowFlagsSetting_> TY__AJALGMHKFGHcjpT3h8NRJw;
struct FEquirectProps_ {FBox2D leftUVRect;
FBox2D rightUVRect;
FVector2D leftScale;
FVector2D rightScale;
FVector2D leftBias;
FVector2D rightBias;
};
struct FTentDistribution_ {NF32 tipAltitude;
NF32 tipValue;
NF32 width;
};
typedef TSet<USoundConcurrency_*>  TY__NR5I3JrURnzfmlYGr3FAVw;
typedef TWeakObjectPtr<USceneComponent>  TY__9b9c0qopUCzSW4js0BJumMlQ;
typedef TArray<FSoundWaveSpectralDataPerSound> TY__c2I8cKDyC9czaUeSu84CUcg;
typedef TArray<FSoundWaveSpectralData> TY__7eS59amp9czNtrtz8r0Xjpgw;
typedef TArray<FSoundWaveEnvelopeDataPerSound> TY__VJ3WomG9bWfW9bg7f8TWiOgQ;
struct FInterpControlPoint_ {FVector positionControlPoint;
NIM_BOOL bPositionIsRelative;
tyArray__akPGgPQbqzZVe609aayYXqA pad_0;
};
typedef TArray<FInterpControlPoint_> TY__LjHVX64yOnazUBJDmecIJA;
struct FComponentSync_ {FName name;
tyEnum_ESyncOption__Wq9aDRl7DEltrSCAaJ7E7og syncOption;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
};
typedef TArray<FComponentSync_> TY__gZurzBmXXyKQxXQIP32pOw;
struct FLODMappingData_ {TY__TxfK2fhRJXNHttPFRcL6fA mapping;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TMap<FName COMMA FLODMappingData_>  TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ;
struct FMaterialSpriteElement_ {UMaterialInterface* material;
UCurveFloat* distanceToOpacityCurve;
NIM_BOOL bSizeIsInScreenSpace;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 baseSizeX;
NF32 baseSizeY;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
UCurveFloat* distanceToSizeCurve;
};
typedef TArray<FMaterialSpriteElement_> TY__Fu7t4gHlDqCFA1dFtsYkog;
typedef TArray<NF> TY__cXi18VefLjgCunTrTLkfGw;
struct FSplinePoint_ {NF32 inputKey;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FVector position;
FVector arriveTangent;
FVector leaveTangent;
FRotator rotation;
FVector scale;
tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw type;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef TArray<FSplinePoint_> TY__mBZUVg11b9ab5AFrh8yZkWw;
typedef TArray<UHLODLayer_*> TY__hE3Vl7BBAFmzClPscSpXag;
typedef TArray<FStreamingSourceShape> TY__nOrP80JBRl6rmLy4ACFykA;
typedef NU8 tyEnum_EPCGPointProperties__rw7rzqyph3uFoGwyrqU9csg;
typedef TSet<FString>  TY__9aCX9aZpnTKyovkIUe9cAFdbw;
typedef TArray<FPCGSettingsOverridableParam> TY__Yo1Yjd7i2DutCIeMMgxJhw;
typedef NU8 tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ;
typedef TWeakObjectPtr<AActor>  TY__TE7SDEvuZgkTXbEmJ3FW6g;
typedef TArray<FBox> TY__9cjnl1CNmBfIpqRIgveS25A;
typedef TArray<UPCGPointData*> TY__nxdMDYrUQ4bAku2UsCNbSg;
typedef NU8 tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg;
typedef NU8 tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA;
typedef TArray<FPCGPoint> TY__WAW1niCvvRSIrb9cTV52p1w;
typedef TWeakObjectPtr<UPrimitiveComponent>  TY__YVH2XmMPmrhAfzjN9awnywA;
typedef NU8 tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg;
typedef NU8 tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A;
typedef TSoftObjectPtr<USplineComponent_> TY__PWP0I58i3Y9a8vOEBvaexPQ;
typedef TWeakObjectPtr<UTexture2D>  TY__TJsOsj3giRybq8BLPALfug;
typedef TArray<UPCGSpatialData*> TY__GV9bgTRIC3LTNTm8aIOqkIA;
typedef NU8 tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg;
typedef NU8 tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ;
typedef TWeakObjectPtr<AVolume>  TY__C5WBk6ZJB2jIMppRl9a5zkw;
typedef TWeakObjectPtr<UWorld>  TY__9aywsppiUJ9atOSncC9bVP09ag;
typedef TWeakObjectPtr<UPCGComponent_>  TY__PbI9bnM9aNXYPU9amBlqzxcDQ;
struct FPCGWorldVolumetricQueryParams_ {NIM_BOOL bSearchForOverlap;
NIM_BOOL bIgnorePCGHits;
NIM_BOOL bIgnoreSelfHits;
ECollisionChannel collisionChannel;
};
struct FPCGWorldRayHitQueryParams_ {NIM_BOOL bOverrideDefaultParams;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
FVector rayOrigin;
FVector rayDirection;
NF rayLength;
NIM_BOOL bIgnorePCGHits;
NIM_BOOL bIgnoreSelfHits;
ECollisionChannel collisionChannel;
tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_1;
};
typedef NU8 tyEnum_EPCGAttributePropertySelection__mxMbik0yEVcbD9c9bv9a8owwA;
struct FPCGAttributePropertySelector_ {tyEnum_EPCGAttributePropertySelection__mxMbik0yEVcbD9c9bv9a8owwA selection;
FName attributeName;
tyEnum_EPCGPointProperties__rw7rzqyph3uFoGwyrqU9csg pointProperty;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
TY__myhN0u2pNczwuaOhbdYPXw extraNames;
};
typedef NU8 tyEnum_EPCGMedadataBitwiseOperation__ADpdVAzFzpPEt9bVM5tXlCw;
typedef NU8 tyEnum_EPCGMedadataBooleanOperation__yU5n45qHYIMGVNiiwnDJqA;
typedef NU8 tyEnum_EPCGMedadataCompareOperation__9czpO1jGxXkwz3vTi9cfw0pw;
typedef NU8 tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg;
typedef NU8 tyEnum_EPCGMetadataMakeVector3__IgZkeqBaiPjzOH9brtqe30A;
typedef NU8 tyEnum_EPCGMetadataMakeVector4__Wa2okPGqlQ4kb5cRAkhtvw;
typedef NU8 tyEnum_EPCGMedadataMathsOperation__sAq9cHT4FTrT5pZRayVIhcg;
typedef NU8 tyEnum_EPCGMedadataRotatorOperation__oB9avmFJHHWzrCTE2HhRNgg;
typedef NU8 tyEnum_EPCGMedadataTransformOperation__3XDJ3FzE0zDv1B8HLFx1Yw;
typedef NU8 tyEnum_EPCGTransformLerpMode__iMBMX3id6u2K48FH2JEbEw;
typedef NU8 tyEnum_EPCGMedadataTrigOperation__lSdWiP2T3hpnvY9bKeMF9cnA;
typedef NU8 tyEnum_EPCGMedadataVectorOperation__ZFtca5ZQfvHWYc9a83sq6sA;
typedef NU8 tyEnum_EPCGAttributeFilterOperation__yXS49bhn7oL9cVG9c7LN5O9apA;
typedef NU8 tyEnum_EPCGAttributeReduceOperation__5ib0IoARKp2ZNusyr0HUJg;
typedef NU8 tyEnum_EPCGAttributeSelectOperation__25QXLzVuNnUQyh0sfrPHqQ;
typedef NU8 tyEnum_EPCGAttributeSelectAxis__5mkieF6V6F9bwj4OA42jsow;
typedef NU8 tyEnum_EPCGBoundsModifierMode__GVOSg4JrpzkuFeiw5iHT2A;
typedef NU8 tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw;
typedef NU8 tyEnum_EPCGCopyPointsMetadataInheritanceMode__hjw8Kcu9cmq9btRyVLnDTdTg;
typedef NU8 tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ;
struct FPCGMetadataTypesConstantStruct_ {tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg type;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ stringMode;
NF32 floatValue;
NI32 int32Value;
NF doubleValue;
NI64 intValue;
FVector2D vector2Value;
FVector vectorValue;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
FVector4 vector4Value;
FQuat quatValue;
FTransform transformValue;
FString stringValue;
NIM_BOOL boolValue;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_2;
FRotator rotatorValue;
FName nameValue;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_3;
FSoftClassPath softClassPathValue;
FSoftObjectPath softObjectPathValue;
NIM_BOOL bAllowsTypeChange;
tyArray__akPGgPQbqzZVe609aayYXqA pad_4;
};
typedef NU8 tyEnum_EPCGActorFilter__xd6p9a16K19cu0P3uD9aZyLnw;
typedef NU8 tyEnum_EPCGActorSelection__A19aK9b9bIyF2Pyi09bvlM2SLw;
struct FPCGActorSelectorSettings_ {tyEnum_EPCGActorFilter__xd6p9a16K19cu0P3uD9aZyLnw actorFilter;
NIM_BOOL bIncludeChildren;
NIM_BOOL bDisableFilter;
tyEnum_EPCGActorSelection__A19aK9b9bIyF2Pyi09bvlM2SLw actorSelection;
FName actorSelectionTag;
FName actorSelectionName;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
TY__9akcXb9b3ftlkdW8NDwR22Mg actorSelectionClass;
NIM_BOOL bSelectMultiple;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef NU8 tyEnum_EPCGGetDataFromActorMode__mH6PPaKeTPC9azIoWuHx85g;
typedef TSoftObjectPtr<UDataTable> TY__mobDcUdFBbH5oSUq9bhIcYQ;
typedef NU8 tyEnum_EPCGDensityNoiseMode__srW8K9aBWT9bnQc3FJFy1qBg;
typedef NU8 tyEnum_EPCGDifferenceMode__CzPAakEbQBuTqovbywDp6g;
typedef TArray<FPCGPinProperties> TY__qUrNne0wu4kCq2fgTGFcwQ;
typedef NU8 tyEnum_EPCGSettingsType__cSTBn3GvXArMlLGuDLmozA;
typedef TSubclassOf<UPCGBlueprintElement> TY__dhnvFye89crSEkh8OFZUroQ;
typedef NU8 tyEnum_EPCGFilterByTagOperation__aMnr1uvYzJvUeKa1OiIlXQ;
typedef NU8 tyEnum_EPCGPointExtentsModifierMode__3W4BB249cxezywbCsDc26WQ;
typedef NU8 tyEnum_EPCGPointFilterOperator__k9bc10IrnW6KAOhNr9bjCCRw;
typedef TSubclassOf<UPCGMatchAndSetBase_> TY__HsruxL9cSZAsQtAYkILObJw;
typedef TSubclassOf<UActorComponent> TY__EMMPexIt2htv9ac7xWWGtbw;
typedef NU8 tyEnum_EPCGSelfPruningType__Rs3msIwbIBK4GyC39bc1Hjw;
typedef NU8 tyEnum_EPCGSpawnActorOption__Nzg19cZ3Ruaf9cb85pvVjQjA;
typedef NU8 tyEnum_EPCGSpawnActorGenerationTrigger__fG4cucW1s4fHQD1ktbsvQQ;
struct FPCGActorPropertyOverride_ {FPCGAttributePropertySelector_ inputSource;
FString propertyTarget;
};
typedef TArray<FPCGActorPropertyOverride_> TY__xKLBeTWDyMlF04su9aoMraA;
typedef TArray<UPCGPin*> TY__cjm3znKcOU1b9cTi62gkADA;
typedef NU8 tyEnum_EPCGSplineSamplingMode__8vzW49bKgXl4GQZE3e72Dtg;
typedef NU8 tyEnum_EPCGSplineSamplingDimension__hbAj0W8w9bu7rlsf9byJ9aYgg;
typedef NU8 tyEnum_EPCGSplineSamplingFill__NXBWXV6W5Jo8xwqiwt4O0A;
typedef NU8 tyEnum_EPCGSplineSamplingInteriorOrientation__LfiQO00Vtl1hESyCaPUWxQ;
struct FPCGSplineSamplerParams_ {tyEnum_EPCGSplineSamplingMode__8vzW49bKgXl4GQZE3e72Dtg mode;
tyEnum_EPCGSplineSamplingDimension__hbAj0W8w9bu7rlsf9byJ9aYgg dimension;
tyEnum_EPCGSplineSamplingFill__NXBWXV6W5Jo8xwqiwt4O0A fill;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
NI32 subdivisionsPerSegment;
NF32 distanceIncrement;
NI32 numPlanarSubdivisions;
NI32 numHeightSubdivisions;
NIM_BOOL bComputeDirectionDelta;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_1;
FName nextDirectionDeltaAttribute;
NIM_BOOL bComputeCurvature;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_2;
FName curvatureAttribute;
NF32 interiorSampleSpacing;
NF32 interiorBorderSampleSpacing;
NIM_BOOL bTreatSplineAsPolyline;
tyEnum_EPCGSplineSamplingInteriorOrientation__LfiQO00Vtl1hESyCaPUWxQ interiorOrientation;
NIM_BOOL bProjectOntoSurface;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_3;
FRuntimeFloatCurve interiorDensityFalloffCurve;
NIM_BOOL bSeedFromLocalPosition;
NIM_BOOL bSeedFrom2DPosition;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_4;
};
typedef TSubclassOf<UPCGMeshSelectorBase_> TY__z28N9aglbyH7XZ0vyLS2Tvg;
typedef TSubclassOf<UPCGInstancePackerBase_> TY__pnkhlx5XNLEapSerF7hq7A;
typedef TSoftObjectPtr<UPCGComponent_> TY__JdB555ruuo1H4hkOoy87vQ;
typedef TMap<UPCGComponent_* COMMA TY__JdB555ruuo1H4hkOoy87vQ>  TY__1ARzpSrn9ajz2xuiHZvZ6SA;
struct FPCGLandscapeLayerWeight_ {FName name;
NF32 weight;
};
typedef TArray<FPCGLandscapeLayerWeight_> TY__3C1oGjx6xhSmdT0iGLlwqg;
typedef TArray<UPCGData*> TY__ik2mkdGmfvKDkWVA6Ejc7w;
struct FPCGMatchAndSetByAttributeEntry_ {FPCGMetadataTypesConstantStruct_ valueToMatch;
FPCGMetadataTypesConstantStruct_ value;
};
typedef TArray<FPCGMatchAndSetByAttributeEntry_> TY__dO8cRGajPOVm9bZeP5qtCMQ;
struct FPCGMatchAndSetWeightedEntry_ {FPCGMetadataTypesConstantStruct_ value;
NI32 weight;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
typedef TArray<FPCGMatchAndSetWeightedEntry_> TY__w1hH69aY8Vs2nUQhenyepew;
struct FPCGMatchAndSetWeightedByCategoryEntryList_ {FPCGMetadataTypesConstantStruct_ categoryValue;
NIM_BOOL bIsDefault;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
TY__w1hH69aY8Vs2nUQhenyepew weightedEntries;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
typedef TArray<FPCGMatchAndSetWeightedByCategoryEntryList_> TY__ZJxv4TPNxMQz2U7iXbSWtw;
typedef TSoftObjectPtr<UStaticMesh> TY__cgfzaLYkvR8gASam8GmF9aQ;
typedef TSoftObjectPtr<UMaterialInterface> TY__s6S1etbTGDD5NQkdAHEaiA;
typedef TArray<TY__s6S1etbTGDD5NQkdAHEaiA> TY__Zcyk57qkIPgK6SupYoPdQA;
struct FPCGMeshInstanceList_ {TY__cgfzaLYkvR8gASam8GmF9aQ mesh;
NIM_BOOL bOverrideCollisionProfile;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
FCollisionProfileName collisionProfile;
NIM_BOOL bOverrideMaterials;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
TY__Zcyk57qkIPgK6SupYoPdQA materialOverrides;
TY__WAW1niCvvRSIrb9cTV52p1w instances;
NF32 cullStartDistance;
NF32 cullEndDistance;
NI32 worldPositionOffsetDisableDistance;
NIM_BOOL bIsLocalToWorldDeterminantNegative;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_2;
};
typedef TArray<FPCGMeshInstanceList_> TY__chrcws6Xncp9byajS1AkSSw;
typedef NU8 tyEnum_EPCGMeshSelectorMaterialOverrideMode__XVonjagNBrqQZ7lGt2kMtg;
struct FPCGMeshSelectorWeightedEntry_ {TY__cgfzaLYkvR8gASam8GmF9aQ mesh;
NIM_BOOL bOverrideCollisionProfile;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
FCollisionProfileName collisionProfile;
NIM_BOOL bOverrideMaterials;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
TY__Zcyk57qkIPgK6SupYoPdQA materialOverrides;
NF32 cullStartDistance;
NF32 cullEndDistance;
NI32 worldPositionOffsetDisableDistance;
NI32 weight;
};
typedef TArray<FPCGMeshSelectorWeightedEntry_> TY__Q7m2Srck8lLPPdo3FLWSmQ;
struct FPCGWeightedByCategoryEntryList_ {FString categoryEntry;
NIM_BOOL isDefault;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
TY__Q7m2Srck8lLPPdo3FLWSmQ weightedMeshEntries;
};
typedef TArray<FPCGWeightedByCategoryEntryList_> TY__2u5KFbn3jssxMaqMpUBOfQ;
typedef TWeakObjectPtr<UPCGMetadata>  TY__JqwUQSiVLUAee9aOpG6gRDA;
typedef TSet<TY__JqwUQSiVLUAee9aOpG6gRDA>  TY__0X3wlb5Am7uYoMWU7otqVA;
typedef NU8 tyEnum_EPCGMetadataOp__5fYhITzgXjwEfE3AAJRWow;
typedef NU8 tyEnum_EPCGMetadataFilterMode__M9ccjw9bqAK1lTC3vHyDWj3Q;
typedef TArray<tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg> TY__vMhGRq9bJyL9cC1ZhezH79cEw;
typedef NU8 tyEnum_EPCGComponentInput__rFf5aGBy1cCO9cB3AapGLpA;
typedef NU8 tyEnum_EPCGComponentGenerationTrigger__aYbGhTP7Ot1Iv59awCf9ab0w;
typedef TMap<AActor* COMMA UPCGData*>  TY__ulkyY621Pa6neqvmqfzomw;
typedef TSet<TY__TE7SDEvuZgkTXbEmJ3FW6g>  TY__qRCVTZ39bcyDpq9brptOSklg;
typedef TArray<UPCGManagedResource_*> TY__Ob2KLzao5wgNmhmsqpXl9bQ;
typedef TMap<UPCGNode* COMMA FPCGDataCollection>  TY__2mwCJl4UU9cnqJim1sPVm7Q;
typedef TArray<FPCGTaggedData> TY__pH7dUNsozwGkUZcCXvEg4Q;
typedef TArray<UPCGNode*> TY__KI01TIoxPyYoQFcJxyVlNg;
typedef TSubclassOf<UPCGSettings> TY__OiWUVGkvRw3pRmhJnTvVKQ;
typedef TSoftObjectPtr<AActor> TY__9crzqsfNP6whUeWHnqCVjUg;
typedef TSet<TY__9crzqsfNP6whUeWHnqCVjUg>  TY__eJlYjkPa6UOLys7xswOIXQ;
typedef TSoftObjectPtr<UActorComponent> TY__zWLvg1dgOERNf5T5tyQxZg;
typedef TMap<FName COMMA NI64>  TY__StISvkbgZNFWoWFGmFzG6g;
typedef TArray<UPCGEdge_*> TY__Coaz0mpT9a13rSXri4j9chZg;
typedef NU8 tyEnum_EPCGAttributeAccessorFlags__e6DOhTV78hZxxr1G5Y8npg;
typedef NU8 tyEnum_EPCGChangeType__9cfGQf5bSbNzTfJ4657brIQ;
typedef NU8 tyEnum_EPCGDataType__p9cVLVSP9a3h039bCibj7DQ8A;
typedef NU8 tyEnum_EPCGMetadataOperationTarget__mJOQ9ccnEjwxMLu9aEZWquhQ;
typedef NU8 tyEnum_EPCGMetadataSettingsBaseMode__Derk4U9bLwX7jqIlLMwDaIQ;
typedef NU8 tyEnum_EPCGMetadataSettingsBaseTypes__OsZlJeK9avyPHjEfs0hfzhg;
typedef NU8 tyEnum_EPCGPointTargetFilterType__M5UDq6XARgcBBgYPJU4VrA;
typedef NU8 tyEnum_EPCGPointThresholdType__9aRW5kOZiSWZeu5ZxCW9aUCA;
typedef NU8 tyEnum_EPCGPointFilterConstantType__cYxVsgm0b9c7bMHeEqpG2ow;
typedef NU8 tyEnum_EPCGComponentDirtyFlag__3W9acPZCqd4K2PUKmU7RsLw;
typedef NU8 tyEnum_EPCGExecutionPhase__9arNc9a3Q4sTqzcil2bPofYw;
typedef NU8 tyEnum_EPCGDebugVisScaleMethod__Pnm3Oz2h4odcSwAt7YGWPw;
typedef NU8 tyEnum_EPCGSettingsExecutionMode__Chrw4e7Ai81vHxT7oLJwng;
typedef NU8 tyEnum_EDeterminismLevel__g6mjxt7Vfb56aSJvNGkX9cw;
typedef NU8 tyEnum_EPCGUnitTestDummyEnum__6pFN9aDzKSCpq1XvvE07MdA;
struct FPCGAttributeExtractorTestStructDepth2_ {NI32 intValue;
};
struct FPCGAttributeExtractorTestStructDepth1_ {FPCGAttributeExtractorTestStructDepth2_ depth2Struct;
NF32 floatValue;
};
struct FPCGAttributeExtractorTestStruct_ {FPCGAttributeExtractorTestStructDepth1_ depthStruct;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FPCGDataTableRowToParamDataTestStruct_ {FName name;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FString string;
NI32 i32;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
NI64 i64;
NF32 f32;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_2;
NF f64;
FVector2D v2;
FVector v3;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_3;
FVector4 v4;
FSoftObjectPath softPath;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_4;
};
struct FPCGStaticMeshSpawnerEntry_ {NI32 weight;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
TY__cgfzaLYkvR8gASam8GmF9aQ mesh;
NIM_BOOL bOverrideCollisionProfile;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_1;
FCollisionProfileName collisionProfile;
};
typedef NU8 tyArray__7olo62xCzatsEsOL6P2XqQ[176];
struct FPCGStaticMeshSpawnerContext_ {tyArray__7olo62xCzatsEsOL6P2XqQ pad_0;
};
struct FPCGPackedCustomData_ {NI32 numCustomDataFloats;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
TY__LZaQ4h2l9bWQPMMIHjA9cwlA customData;
};
typedef NU8 tyArray__1hXbzlgLOIbL3YQQPV8rsA[104];
struct FPCGComponentInstanceData_ {tyArray__1hXbzlgLOIbL3YQQPV8rsA pad_0;
TY__Ob2KLzao5wgNmhmsqpXl9bQ generatedResources;
UPCGComponent_* sourceComponent;
};
typedef TMap<FName COMMA tyEnum_EDeterminismLevel__g6mjxt7Vfb56aSJvNGkX9cw>  TY__qFr8n9cIO34ibYdLvH4BWKA;
struct FDeterminismTestResult_ {FName testResultTitle;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FString testResultName;
NI32 seed;
tyEnum_EPCGDataType__p9cVLVSP9a3h039bCibj7DQ8A dataTypesTested;
TY__qFr8n9cIO34ibYdLvH4BWKA testResults;
TY__myhN0u2pNczwuaOhbdYPXw additionalDetails;
NIM_BOOL bFlagRaised;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef NU8 tyEnum_EPCGElementType__UwshTmT5GgRTPISkyjFisw;
typedef NU8 tyEnum_EPCGEditorNewSettingsBehavior__eltpO0FmTG0iakZo6xqxaQ;
typedef NU8 tyEnum_ESlateVisibility__wmqFvYTZe5cX56vce2POXg;
typedef NU8 tyEnum_ESlateAccessibleBehavior__d9a6bnYFuDPVpJbB1QB17mg;
typedef NU8 tyEnum_EVirtualKeyboardType__rrKnI7b9ccRFKrHvxADPq9bA;
typedef NU8 tyEnum_ESlateSizeRule__1MvHQwW2720UN9cA69alaKWg;
typedef NU8 tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A;
typedef NU8 tyEnum_EWidgetDesignFlags__L8u9cWwY9cBph5FDiD7pHAfQ;
typedef NU8 tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw;
typedef NU8 tyEnum_EWidgetTimingPolicy__GBR2weYA6gtS3fpUb5ouVg;
typedef NU8 tyEnum_EWidgetBlendMode__ujc9c7kzGBUoFoBDfAdNDvg;
typedef NU8 tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog;
typedef NU8 tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw;
typedef NU8 tyEnum_ETickMode__rpxnv5vHIZR9bdO1o6wQZXw;
typedef NU8 tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ;
typedef NU8 tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA;
typedef NU8 tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw;
typedef NU8 tyEnum_EWidgetAnimationEvent__9aZSQO2S3MK3lhbZMiPssPA;
typedef NU8 tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA;
typedef NU8 tyEnum_EDesignPreviewSizeMode__FsmMFGO6pksT9cx9c66XO3CQ;
typedef NU8 tyEnum_EBindingKind__69bj9cjlS9bRECMNejM5dz06g;
typedef NU8 tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g;
struct FAnchorData_ {FMargin offsets;
FAnchors_ anchors;
FVector2D alignment;
};
typedef TArray<FVector2D> TY__fBi9aXEAuMMk9cMD1hVzuHSg;
struct FSlateChildSize_ {NF32 value;
tyEnum_ESlateSizeRule__1MvHQwW2720UN9cA69alaKWg sizeRule;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
};
struct FRadialBoxSettings_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FShapedTextOptions_ {tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
tyEnum_ETextShapingMethod__B2dNIKUbA18LrCAmTwu1bA textShapingMethod;
tyEnum_ETextFlowDirection__it3WpzuuPfNKE51KjghOBA textFlowDirection;
};
typedef TSoftObjectPtr<UTexture2D> TY__mOiS9a9b9aowIwwaaQjcI1LkQ;
typedef TScriptInterface<USlateTextureAtlasInterface_>  TY__ChHEiSofKQOcZRnlxAau9bg;
typedef TSubclassOf<URichTextBlockDecorator_> TY__wB9bgWhg9b9cgeGP1bZZpMvHw;
typedef TArray<TY__wB9bgWhg9b9cgeGP1bZZpMvHw> TY__fjyUyrp2lTh3XJrhJ8LRSQ;
typedef NU8 tyArray__wknELTfNGbUq9aI09bLKcmWQ[240];
struct FRichImageRow_ {tyArray__wknELTfNGbUq9aI09bLKcmWQ pad_0;
};
typedef TSubclassOf<UUserWidgetExtension_> TY__MF9aiABZZTdnJbCQRWxbIrg;
typedef TArray<UUserWidgetExtension_*> TY__scxiKf9aWv3hy9bytmcQJthg;
typedef NU8 tyArray__aU9aWOuC5AtjvRJWm9cUbeUg[28];
struct FWidgetNavigationData_ {tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
FName widgetToFocus;
tyArray__aU9aWOuC5AtjvRJWm9cUbeUg pad_1;
};
struct FFieldNotificationId_ {FName fieldName;
};
struct FWidgetTransform_ {FVector2D translation;
FVector2D scale;
FVector2D shear;
NF32 angle;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TScriptInterface<UUserListEntry_>  TY__M4mwXcspPRSAdUWKKmEmmQ;
typedef TScriptInterface<UUserObjectListEntry_>  TY__GhlSt2m1FF0wdkWz1n7qNQ;
typedef TSubclassOf<UDragDropOperation_> TY__zPh84RcCsFVoqOO9cBQteOA;
struct FPaintContext_ {tyArray__imubzojaOiPVfv1g8EarTA pad_0;
};
typedef NU8 tyEnum_EGameplayEffectGrantedAbilityRemovePolicy__mFJ2QshzmvY9aBGV9anxq9a9bw;
typedef NU8 tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA;
typedef NU8 tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ;
typedef NU8 tyEnum_EGameplayTagEventType__eA6ynhiShPOYe7hX0KwsJQ;
typedef NU8 tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig;
typedef NU8 tyEnum_EGameplayCuePayloadType__QHvYj9cxEVspK3bO9cQZEMRQ;
typedef NU8 tyEnum_EGameplayAbilityInputBinds__gxNBBDWDwKeEuT2YwW9bhTQ;
typedef NU8 tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ;
typedef NU8 tyEnum_EAbilityTaskWaitState__I69af9b9acsZuDJo4RUfev1mQ;
typedef NU8 tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow;
typedef NU8 tyEnum_EAbilityTaskNetSyncType__EgeSxV6iySO44lsR1IuGDQ;
typedef NU8 tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w;
typedef NU8 tyEnum_EWaitGameplayTagQueryTriggerCondition__UIb9a9aTBI3wOnJsZINctZoA;
typedef NU8 tyEnum_EGameplayEffectReplicationMode__IoBM2fMQ9aDTdWeEpaRBA6w;
typedef NU8 tyEnum_ERepAnimPositionMethod__I64P5RrYvF9cKmgVjQSXObg;
typedef NU8 tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A;
typedef NU8 tyEnum_EGameplayModOp__v19aw0PxobwarcxLjVX9bwcQ;
typedef NU8 tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg;
typedef NU8 tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A;
typedef NU8 tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w;
typedef NU8 tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g;
typedef NU8 tyEnum_EGameplayAbilityTriggerSource__yeV9b8LqakJJagbdms9ac23Q;
typedef NU8 tyEnum_EGameplayCueNotify_EffectPlaySpace__ls9bpY57c4u9cCGBtI5iQmaA;
typedef NU8 tyEnum_EGameplayCueNotify_LocallyControlledSource__UF9aDiEhe4SIhTQ23RLBfdA;
typedef NU8 tyEnum_EGameplayCueNotify_LocallyControlledPolicy__jC51JtVaN5J4iPbI9akqTEA;
typedef NU8 tyEnum_EGameplayCueNotify_AttachPolicy__Li75monpMAfqjkIgqWJTig;
typedef NU8 tyEnum_EGameplayEffectMagnitudeCalculation__ZZG9a3O09aRhyA9bY9bzuV3wXw;
typedef NU8 tyEnum_EAttributeBasedFloatCalculationType__XODnU48w9b8Rh8j66oGdjjQ;
typedef NU8 tyEnum_EGameplayEffectScopedModifierAggregatorType__MQeYQSPiYnqsqfDrtk1Qxg;
typedef NU8 tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg;
typedef NU8 tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A;
typedef NU8 tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw;
typedef NU8 tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA;
typedef NU8 tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg;
typedef TArray<UActorComponent*> TY__ZQxjzvTP9ciBbsMII1UY6aA;
typedef TSubclassOf<UInputComponent> TY__eU3i2csv9bKuRFwfWpzG1Fg;
typedef TSubclassOf<AGameStateBase_> TY__LFVmNDCDdFSsmxhHiPJYiQ;
typedef TSubclassOf<APlayerController> TY__N5tiyJcFjwg9aEWJ9bLqgW2A;
typedef TSubclassOf<APlayerState_> TY__XW1e9bzrz7QIZaZL5gPko1g;
typedef TSubclassOf<AHUD_> TY__BkcX38UniVJ8g2gZm25M2w;
typedef TSubclassOf<APawn> TY__0urt5qtPpUJuYc9bl6N2OHg;
typedef TSubclassOf<ASpectatorPawn_> TY__eoFRbGE42PWBoR9bvsC8c9cw;
typedef TSubclassOf<AServerStatReplicator> TY__CwGWlh85GBrNQk9cYdk5JEA;
typedef TSubclassOf<AGameModeBase> TY__L4ksf6eGEOlpaGPAe08vkg;
typedef TArray<APlayerState_*> TY__Y5TxId8qcU0GFittS1bC9bA;
typedef TSubclassOf<APlayerCameraManager> TY__nUsLbvR9bTg9anoy6IEB7FSw;
typedef TSubclassOf<UCheatManager_> TY__gzb18rEfE25lh72hBxz6wA;
typedef TSubclassOf<UPlayerInput> TY__9b1Wl2DWbmWU3i39cb0aYLdw;
typedef TSubclassOf<AController> TY__KGHReoQbDEGLKq1y5YM6eQ;
typedef TSubclassOf<ADebugCameraController_> TY__foOrAswB6Owyr0RwoeenmA;
struct FDeviceColorData_ {NIM_BOOL bEnable;
NIM_BOOL bResetAfterCompletion;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
FColor lightColor;
};
typedef TMap<FName COMMA FDeviceColorData_>  TY__mOpL05xw2iQakSy1XAlwfw;
struct FDeviceColorCurveData_ {NIM_BOOL bEnable;
NIM_BOOL bResetAfterCompletion;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_0;
UCurveLinearColor_* deviceColorCurve;
};
typedef TMap<FName COMMA FDeviceColorCurveData_>  TY__p8Wi6T89cTmksGlyV10Mycw;
struct FDeviceTriggerBaseData_ {tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
NIM_BOOL bResetUponCompletion;
};
struct FDeviceTriggerFeedbackData_ {UCurveFloat* feedbackPositionCurve;
UCurveFloat* feedbackStrenghCurve;
};
typedef TMap<FName COMMA FDeviceTriggerFeedbackData_>  TY__HBpy4JXT1fKa0SBtmqqvbg;
struct FDeviceTriggerTriggerResistanceData_ {NI32 startPosition;
NI32 startStrengh;
NI32 endPosition;
NI32 endStrengh;
};
typedef TMap<FName COMMA FDeviceTriggerTriggerResistanceData_>  TY__dbgBQsZXRZeU0c9bvitCtFA;
struct FDeviceTriggerTriggerVibrationData_ {UCurveFloat* triggerPositionCurve;
UCurveFloat* vibrationFrequencyCurve;
UCurveFloat* vibrationAmplitudeCurve;
};
typedef TMap<FName COMMA FDeviceTriggerTriggerVibrationData_>  TY__0yQe9aDyyKVPv0QVddqTZAg;
struct FAudioBasedVibrationData_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef TMap<FName COMMA FAudioBasedVibrationData_>  TY__bG8gCXIR8Js247Oljg5dng;
typedef TSet<FInputDevicePropertyHandle_>  TY__AyZkHVlB2X6bv9cl4qwczAw;
struct FHardwareDeviceIdentifier_ {FName inputClassName;
FName hardwareDeviceIdentifier;
};
typedef TSubclassOf<UInputDeviceProperty_> TY__aqfsbs05nDl2Mv2M0XZFpg;
typedef TArray<FInputAxisKeyMapping> TY__CLT5yrXFP3HZX5VORHV70A;
typedef TArray<FInputActionKeyMapping> TY__LgeuiTWlJeQFCA1Wq3za9bg;
struct FLightmassWorldInfoSettings_ {NF32 staticLightingLevelScale;
NI32 numIndirectLightingBounces;
NI32 numSkyLightingBounces;
NF32 indirectLightingQuality;
NF32 indirectLightingSmoothness;
FColor environmentColor;
NF32 environmentIntensity;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
NF32 diffuseBoost;
tyEnum_EVolumeLightingMethod__V3zL9aUL0pQuGf1BNu7ChuQ volumeLightingMethod;
NIM_BOOL bUseAmbientOcclusion;
NIM_BOOL bGenerateAmbientOcclusionMaterialMask;
NIM_BOOL bVisualizeMaterialDiffuse;
NIM_BOOL bVisualizeAmbientOcclusion;
NIM_BOOL bCompressLightmaps;
NF32 volumetricLightmapDetailCellSize;
NF32 volumetricLightmapMaximumBrickMemoryMb;
NF32 volumetricLightmapSphericalHarmonicSmoothing;
NF32 volumeLightSamplePlacementScale;
NF32 directIlluminationOcclusionFraction;
NF32 indirectIlluminationOcclusionFraction;
NF32 occlusionExponent;
NF32 fullyOccludedSamplesFraction;
NF32 maxOcclusionDistance;
};
struct FActivateDevicePropertyParams_ {FPlatformUserId userId;
FInputDeviceId deviceId;
NIM_BOOL bLooping;
NIM_BOOL bIgnoreTimeDilation;
NIM_BOOL bPlayWhilePaused;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
};
typedef TSubclassOf<UGameplayEffect_> TY__o5lmm3YGRQTdI9c9ccmTHabQ;
struct FAbilityTriggerData_ {FGameplayTag triggerTag;
tyEnum_EGameplayAbilityTriggerSource__yeV9b8LqakJJagbdms9ac23Q triggerSource;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
};
typedef TArray<FAbilityTriggerData_> TY__otj1SVV0qRIXABYwhGjz8Q;
typedef TWeakObjectPtr<APlayerController>  TY__vhq5SKI7p1hYzyv58A9cY6Q;
typedef TWeakObjectPtr<UAbilitySystemComponent_>  TY__hFhEBnfnW3mNoU09cbSj9cww;
typedef TWeakObjectPtr<USkeletalMeshComponent>  TY__F4D53XMhlqVGOJbHx4DNug;
typedef TWeakObjectPtr<UMovementComponent_>  TY__NO68a0HthgPnreZ6T89bl7Q;
struct FGameplayAbilityActorInfo_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
TY__TE7SDEvuZgkTXbEmJ3FW6g ownerActor;
TY__TE7SDEvuZgkTXbEmJ3FW6g avatarActor;
TY__vhq5SKI7p1hYzyv58A9cY6Q playerController;
TY__hFhEBnfnW3mNoU09cbSj9cww abilitySystemComponent;
TY__F4D53XMhlqVGOJbHx4DNug skeletalMeshComponent;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
TY__NO68a0HthgPnreZ6T89bl7Q movementComponent;
FName affectedAnimInstanceTag;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_2;
};
typedef TArray<FActiveGameplayEffectHandle> TY__x1jrflF2XK116qRMnTohKA;
struct FWorldReticleParameters_ {FVector aOEScale;
};
typedef TSubclassOf<AGameplayAbilityWorldReticle_> TY__BbC1f9cl7UvV7ShysOkJw9bQ;
typedef TArray<TY__o5lmm3YGRQTdI9c9ccmTHabQ> TY__YWxhJKhKplqKD9bzBoR0fzQ;
typedef TArray<UGameplayEffect_*> TY__HS3GOnZWYOzZ9c6h38vBKFQ;
typedef TSubclassOf<AGameplayAbilityTargetActor_> TY__BI8SmagfluPMTT9a6rFT3XQ;
struct FGameplayAbilityTargetData_LocationInfo_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FGameplayAbilityTargetingLocationInfo_ sourceLocation;
FGameplayAbilityTargetingLocationInfo_ targetLocation;
};
typedef TArray<TY__TE7SDEvuZgkTXbEmJ3FW6g> TY__TYwHXrHAfgpxL3tlgCVfxA;
struct FGameplayAbilityTargetData_ActorArray_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FGameplayAbilityTargetingLocationInfo_ sourceLocation;
TY__TYwHXrHAfgpxL3tlgCVfxA targetActorArray;
};
struct FGameplayAbilityTargetData_SingleTargetHit_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
FHitResult hitResult;
NIM_BOOL bHitReplaced;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
struct FAbilityEndedData_ {UGameplayAbility_* abilityThatEnded;
FGameplayAbilitySpecHandle_ abilitySpecHandle;
NIM_BOOL bReplicateEndAbility;
NIM_BOOL bWasCancelled;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
};
struct FAbilityTaskDebugMessage_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
FString message;
};
struct FGameplayAbilitySpecHandleAndPredictionKey_ {FGameplayAbilitySpecHandle_ abilityHandle;
NI32 predictionKeyAtCreation;
};
typedef TSubclassOf<UAnimNotify_> TY__JNf5Wvjeg5cqxRK9cyfRJPw;
typedef TSubclassOf<UAnimNotifyState_> TY__mWBoF7VeC4X20sAoMjXlVA;
typedef TScriptInterface<UAnimationDataController>  TY__GmxQYRLn4JVnyI7Ef9c9aRsw;
typedef TArray<FFloatCurve> TY__KUWt1ue3OVxZn07Y1DKXSA;
typedef TArray<FTransformCurve> TY__9cM6OHIWVtEkIQ9bybSH3m0w;
struct FAnimationCurveData_ {TY__KUWt1ue3OVxZn07Y1DKXSA floatCurves;
TY__9cM6OHIWVtEkIQ9bybSH3m0w transformCurves;
};
typedef NU8 tyArray__OLmQMe9cyeh27L3PXXozplQ[184];
struct FAttributeCurve_ {tyArray__OLmQMe9cyeh27L3PXXozplQ pad_0;
};
struct FAnimatedBoneAttribute_ {FAnimationAttributeIdentifier_ identifier;
FAttributeCurve_ curve;
};
typedef TArray<FAnimatedBoneAttribute_> TY__uvC4hJjePbPu61EoaxB1QQ;
typedef TSoftObjectPtr<USkeleton> TY__KIrNCXNdi1DZ0tXfl0ZD9aQ;
typedef TArray<TY__KIrNCXNdi1DZ0tXfl0ZD9aQ> TY__DqtnNclNKsonqiNHV0i59bw;
struct FPoseLinkBase_ {tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FAnimNode_Root_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FPoseLink_ Result;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FInputRange_ {NF32 Min;
NF32 Max;
};
struct FInputScaleBiasClamp_ {NIM_BOOL bMapRange;
NIM_BOOL bClampResult;
NIM_BOOL bInterpResult;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
FInputRange_ inRange;
FInputRange_ outRange;
NF32 scale;
NF32 bias;
NF32 clampMin;
NF32 clampMax;
NF32 interpSpeedIncreasing;
NF32 interpSpeedDecreasing;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FInputAlphaBoolBlend_ {NF32 blendInTime;
NF32 blendOutTime;
tyEnum_EAlphaBlendOption__LKIa243bVL7z35YoC4pwhg blendOption;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
UCurveFloat* customCurve;
tyArray__imubzojaOiPVfv1g8EarTA pad_1;
};
struct FInputScaleBias_ {NF32 scale;
NF32 bias;
};
struct FAnimNode_AssetPlayerBase_ {tyArray__3xXgtqiphP4Saazlw9cWQFA pad_0;
NF32 blendWeight;
NF32 internalTimeAccumulator;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_1;
};
struct FNamedFloat_ {NF32 value;
FName name;
};
struct FNamedVector_ {FVector value;
FName name;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FNamedColor_ {FColor value;
FName name;
};
struct FNamedTransform_ {FTransform value;
FName name;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
struct FLocalSpacePose_ {TY__ZRKjvD0LxpBKI8XAOc3PKg transforms;
TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ names;
};
struct FComponentSpacePose_ {TY__ZRKjvD0LxpBKI8XAOc3PKg transforms;
TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ names;
};
struct FBracketPayload_ {FString description;
};
struct FAnimationTrackPayload_ {FName name;
};
struct FAnimationTrackAddedPayload_ {tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
NI32 trackIndex;
};
struct FSequenceLengthChangedPayload_ {NF32 previousLength;
NF32 t0;
NF32 t1;
FFrameNumber previousNumberOfFrames;
FFrameNumber frame0;
FFrameNumber frame1;
};
struct FFrameRateChangedPayload_ {FFrameRate previousFrameRate;
};
struct FCurvePayload_ {FAnimationCurveIdentifier_ identifier;
};
struct FCurveScaledPayload_ {tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
NF32 factor;
NF32 origin;
};
struct FCurveRenamedPayload_ {tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
FAnimationCurveIdentifier_ newIdentifier;
};
struct FCurveFlagsChangedPayload_ {tyArray__YtcvxHNKV4YiecPE9ap1mcA pad_0;
NI32 oldFlags;
};
struct FAttributePayload_ {FAnimationAttributeIdentifier_ identifier;
};
struct FAnimNodeConstantData_ {tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_0;
};
struct FFloatAnimationAttribute_ {NF32 value;
};
struct FIntegerAnimationAttribute_ {NI32 value;
};
struct FStringAnimationAttribute_ {FString value;
};
struct FTransformAnimationAttribute_ {FTransform value;
};
struct FVectorAnimationAttribute_ {FVector value;
};
struct FQuaternionAnimationAttribute_ {FQuat value;
};
struct FAnimNodeData_ {tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
struct FAnimNode_ConvertComponentToLocalSpace_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FComponentSpacePoseLink_ componentPose;
};
struct FAnimNode_ConvertLocalToComponentSpace_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FPoseLink_ localPose;
};
struct FAnimNode_ApplyMeshSpaceAdditive_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FPoseLink_ base;
FPoseLink_ additive;
tyEnum_EAnimAlphaInputType__qqkmIhiXk03m9bkSCSRl5ZQ alphaInputType;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_1;
NF32 alpha;
NIM_BOOL bAlphaBoolEnabled;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_2;
FInputAlphaBoolBlend_ alphaBoolBlend;
FName alphaCurveName;
FInputScaleBias_ alphaScaleBias;
FInputScaleBiasClamp_ alphaScaleBiasClamp;
NI32 lODThreshold;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_3;
};
typedef NU8 tyArray__8Q4Zf7Ql3HGDlmTJ7tdguQ[384];
struct FAnimNode_Inertialization_ {tyArray__8Q4Zf7Ql3HGDlmTJ7tdguQ pad_0;
};
typedef NU8 tyArray__cKG3vT0OC7vNRmxPTePMjw[328];
struct FAnimNode_LinkedAnimGraph_ {tyArray__cKG3vT0OC7vNRmxPTePMjw pad_0;
};
typedef NU8 tyArray__mt9a1Sp7ZofJTEUP8QsIYGw[376];
struct FAnimNode_LinkedAnimLayer_ {tyArray__mt9a1Sp7ZofJTEUP8QsIYGw pad_0;
};
typedef NU8 tyArray__9aY65sZE2Ki3PrLwrA54miw[232];
struct FAnimNode_SaveCachedPose_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FPoseLink_ pose;
tyArray__9aY65sZE2Ki3PrLwrA54miw pad_1;
};
struct FAnimNode_SequencePlayerBase_ {tyArray__pPSgwee9cWjaxcnFhZCg7yA pad_0;
};
struct FAnimNode_SequencePlayer_ {tyArray__cKG3vT0OC7vNRmxPTePMjw pad_0;
};
struct FInputScaleBiasClampConstants_ {NIM_BOOL bMapRange;
NIM_BOOL bClampResult;
NIM_BOOL bInterpResult;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
FInputRange_ inRange;
FInputRange_ outRange;
NF32 scale;
NF32 bias;
NF32 clampMin;
NF32 clampMax;
NF32 interpSpeedIncreasing;
NF32 interpSpeedDecreasing;
};
typedef NU8 tyArray__ygU1vpFxYOlyRiRkLB1kJQ[280];
struct FAnimNode_SequencePlayer_Standalone_ {tyArray__ygU1vpFxYOlyRiRkLB1kJQ pad_0;
};
typedef NU8 tyArray__zc4u4RrSbA1hwf3CQE69cog[272];
typedef NU8 tyArray__CqHFRL3DoaCjN54AqEF16g[23];
struct FAnimNode_TransitionPoseEvaluator_ {tyArray__zc4u4RrSbA1hwf3CQE69cog pad_0;
NI32 framesToCachePose;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
tyEnum_EEvaluatorDataSource__8uWsKNkTkOBtdWA2gGoEyg dataSource;
tyArray__CqHFRL3DoaCjN54AqEF16g pad_2;
};
struct FAnimNode_TransitionResult_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
NIM_BOOL bCanEnterTransition;
tyArray__CqHFRL3DoaCjN54AqEF16g pad_1;
};
struct FAnimNode_SingleNode_ {tyArray__6qSULJVkHXjL25e22OI5AQ pad_0;
FPoseLink_ sourcePose;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_1;
};
struct FCachedAnimStateData_ {FName stateMachineName;
FName stateName;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
typedef TArray<FCachedAnimStateData_> TY__RSev49cSp36pj3QRpRHRmMw;
struct FCachedAnimStateArray_ {TY__RSev49cSp36pj3QRpRHRmMw states;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCachedAnimAssetPlayerData_ {FName stateMachineName;
FName stateName;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCachedAnimRelevancyData_ {FName stateMachineName;
FName stateName;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
struct FCachedAnimTransitionData_ {FName stateMachineName;
FName fromStateName;
FName toStateName;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
};
struct FNamedCurveValue_ {FName name;
NF32 value;
};
struct FInputClampConstants_ {NIM_BOOL bClampResult;
NIM_BOOL bInterpResult;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
NF32 clampMin;
NF32 clampMax;
NF32 interpSpeedIncreasing;
NF32 interpSpeedDecreasing;
};
struct FTrajectorySample_ {NF32 accumulatedSeconds;
tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
FTransform transform;
FVector linearVelocity;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
typedef TArray<FTrajectorySample_> TY__EMmcxSvhuUScoxpip56vPQ;
struct FTrajectorySampleRange_ {TY__EMmcxSvhuUScoxpip56vPQ samples;
};
struct FGameplayAbilityBindInfo_ {tyEnum_EGameplayAbilityInputBinds__gxNBBDWDwKeEuT2YwW9bhTQ command;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
TY__DI8ISoHArYV9cXPAlxup7ow gameplayAbilityClass;
};
typedef TArray<FGameplayAbilityBindInfo_> TY__c5YQSe1beacSx4MfVBpM6g;
typedef TSubclassOf<UGameplayEffectUIData_> TY__C5hI9bGz02aJQ8jd1yCg9aWw;
typedef TArray<FGameplayEffectSpecHandle> TY__ApMORIOJRIJuzL5PAQu9cEg;
typedef TScriptInterface<UGameplayCueInterface_>  TY__sYXgxujJplhjPGLjVhFu2A;
typedef TArray<FAttributeDefaults_> TY__SElPEbSc5uW3wbDAeOJeXw;
typedef TArray<AGameplayAbilityTargetActor_*> TY__UmMCwJHxy5cVkk9ctXMLdwA;
typedef NU8 tyArray__vEOa9c5qaE9ajWxR5R4zwfQg[32];
typedef TArray<UGameplayAbility_*> TY__1iVhbK34EtpVHrTeNCGvNw;
struct FGameplayAbilitySpec_ {tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
FGameplayAbilitySpecHandle_ handle;
UGameplayAbility_* ability;
NI32 level;
NI32 inputID;
TY__JNuX49bw2SzgYlt1yr74cAA sourceObject;
NU8 activeCount;
NU8 inputPressed;
NU8 removeAfterActivation;
NU8 pendingRemove;
NIM_BOOL bActivateOnce;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_1;
FGameplayAbilityActivationInfo_ activationInfo;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_2;
TY__1iVhbK34EtpVHrTeNCGvNw nonReplicatedInstances;
TY__1iVhbK34EtpVHrTeNCGvNw replicatedInstances;
FActiveGameplayEffectHandle gameplayEffectHandle;
tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_3;
};
typedef TArray<FGameplayAbilitySpec_> TY__N9bF7D6Zjtcv9ctL5GZUYLmA;
struct FGameplayAbilitySpecContainer_ {tyArray__zc4u4RrSbA1hwf3CQE69cog pad_0;
TY__N9bF7D6Zjtcv9ctL5GZUYLmA items;
UAbilitySystemComponent_* owner;
};
typedef TArray<FActiveGameplayEffect_> TY__HzruYaUZ0LE4oBvZ1PlZqg;
typedef NU8 tyArray__4PpmEtIl9bZsaQtIwe9aio7w[784];
struct FActiveGameplayEffectsContainer_ {tyArray__cKG3vT0OC7vNRmxPTePMjw pad_0;
TY__HzruYaUZ0LE4oBvZ1PlZqg gameplayEffects_Internal;
tyArray__4PpmEtIl9bZsaQtIwe9aio7w pad_1;
TY__HS3GOnZWYOzZ9c6h38vBKFQ applicationImmunityQueryEffects;
tyArray__izDbpwaA8Rxj9b5mE6pSF7Q pad_2;
};
struct FActiveGameplayCue_ {tyArray__YHmXll5a9bp5TA5MVvQwRow pad_0;
FGameplayTag gameplayCueTag;
FPredictionKey_ predictionKey;
FGameplayCueParameters parameters;
NIM_BOOL bPredictivelyRemoved;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
};
typedef TArray<FActiveGameplayCue_> TY__DtwHAag3tP69csOkty9bP3JQ;
struct FActiveGameplayCueContainer_ {tyArray__zc4u4RrSbA1hwf3CQE69cog pad_0;
TY__DtwHAag3tP69csOkty9bP3JQ gameplayCues;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
UAbilitySystemComponent_* owner;
};
typedef TArray<UAttributeSet*> TY__MTgP1q0moW3ktYPggh9a8TA;
struct FReplicatedPredictionKeyItem_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FPredictionKey_ predictionKey;
};
typedef TArray<FReplicatedPredictionKeyItem_> TY__wZmESsIuvz1avnJ2qF29csQ;
struct FReplicatedPredictionKeyMap_ {tyArray__zc4u4RrSbA1hwf3CQE69cog pad_0;
TY__wZmESsIuvz1avnJ2qF29csQ predictionKeys;
};
typedef TMap<FGameplayTag COMMA NF32>  TY__UsuvlHgFUvpcHHVMn6XwRw;
struct FActiveGameplayEffectQueryCustomMatch_Dynamic_ : public FScriptDelegate {};
typedef NU8 tyArray__mwzDYI9am4Vxh5AkLmxCo9cQ[220];
struct FGameplayEffectQuery_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
FActiveGameplayEffectQueryCustomMatch_Dynamic_ customMatchDelegate_BP;
tyArray__mwzDYI9am4Vxh5AkLmxCo9cQ pad_1;
FGameplayAttribute modifyingAttribute;
UObject* effectSource;
TY__o5lmm3YGRQTdI9c9ccmTHabQ effectDefinition;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_2;
};
struct FGameplayEffectSpecForRPC_ {UGameplayEffect_* def;
TY__WmAHIZEZ9cpN3o9aZZVtPl3g modifiedAttributes;
FGameplayEffectContextHandle effectContext;
tyArray__w5VB8h5K8DB3oWrO5U2wqg pad_0;
NF32 level;
NF32 abilityLevel;
};
typedef TSoftClassPtr<UGameplayEffect_> TY__khlKMeIkNjMzqw2TfIXxWA;
typedef TArray<FGameplayAttribute> TY__0e5LS6UfmhaWdcjpiaKDgQ;
typedef TArray<FGameplayAbilitySpecHandle_> TY__jBGmxbqnyTV447L3R9bbKnQ;
struct FGameplayCueTag_ {FGameplayTag gameplayCueTag;
};
struct FGameplayCueObjectLibrary_ {TY__myhN0u2pNczwuaOhbdYPXw paths;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
UObjectLibrary_* actorObjectLibrary;
UObjectLibrary_* staticObjectLibrary;
UGameplayCueSet_* cueSet;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
NIM_BOOL bShouldSyncScan;
NIM_BOOL bShouldAsyncLoad;
NIM_BOOL bShouldSyncLoad;
NIM_BOOL bHasBeenInitialized;
};
typedef TArray<UClass*> TY__Oycn0Wv4Wvu5QjPDMJ4iYA;
typedef TSubclassOf<AGameplayCueNotify_Actor_> TY__ROB2i9cysobginb5ZaB34eQ;
typedef TArray<TY__ROB2i9cysobginb5ZaB34eQ> TY__yFf9bt3gETA9bmErFkGcaITA;
struct FGameplayCuePendingExecute_ {tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
FPredictionKey_ predictionKey;
tyEnum_EGameplayCuePayloadType__QHvYj9cxEVspK3bO9cQZEMRQ payloadType;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
UAbilitySystemComponent_* owningComponent;
FGameplayEffectSpecForRPC_ fromSpec;
FGameplayCueParameters cueParameters;
};
typedef TArray<FGameplayCuePendingExecute_> TY__3EayRS3K5H6lKVUDWcwkUA;
typedef TArray<AGameplayCueNotify_Actor_*> TY__ntaWYtDOxlmgcrRq4jKMRg;
struct FGameplayCueNotifyActorArray_ {TY__ntaWYtDOxlmgcrRq4jKMRg actors;
};
typedef TMap<UClass* COMMA FGameplayCueNotifyActorArray_>  TY__FccDQ5AAW9cDVh9bPc9a8dGJQ;
struct FPreallocationInfo_ {TY__FccDQ5AAW9cDVh9bPc9a8dGJQ preallocatedInstances;
TY__yFf9bt3gETA9bmErFkGcaITA classesNeedingPreallocation;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef TArray<FPreallocationInfo_> TY__uqV1eG9a5U54FsunlxDWftQ;
typedef TArray<tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA> TY__TEr2nhUmC0Z6pBsZzEVmQw;
struct FGameplayCueNotify_SpawnCondition_ {tyEnum_EGameplayCueNotify_LocallyControlledSource__UF9aDiEhe4SIhTQ23RLBfdA locallyControlledSource;
tyEnum_EGameplayCueNotify_LocallyControlledPolicy__jC51JtVaN5J4iPbI9akqTEA locallyControlledPolicy;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
NF32 chanceToPlay;
TY__TEr2nhUmC0Z6pBsZzEVmQw allowedSurfaceTypes;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
TY__TEr2nhUmC0Z6pBsZzEVmQw rejectedSurfaceTypes;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_2;
};
struct FGameplayCueNotify_PlacementInfo_ {FName socketName;
tyEnum_EGameplayCueNotify_AttachPolicy__Li75monpMAfqjkIgqWJTig attachPolicy;
tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA attachmentRule;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
NIM_BOOL bOverrideRotation;
NIM_BOOL bOverrideScale;
tyArray__9cZQ9c8IqkFU8PfW4YTh44AQ pad_1;
FRotator rotationOverride;
FVector scaleOverride;
};
struct FGameplayCueNotify_ParticleInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bCastShadow;
tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_1;
};
typedef TArray<FGameplayCueNotify_ParticleInfo_> TY__JPKFlIdlGkYMJ5qVPrWh9cA;
struct FGameplayCueNotify_SoundParameterInterfaceInfo_ {FName stopTriggerName;
};
struct FGameplayCueNotify_SoundInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
NF32 loopingFadeOutDuration;
NF32 loopingFadeVolumeLevel;
FGameplayCueNotify_SoundParameterInterfaceInfo_ soundParameterInterfaceInfo;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bUseSoundParameterInterface;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_1;
};
typedef TArray<FGameplayCueNotify_SoundInfo_> TY__ddwBOpW9cMK7s9bvoKc1ZRHQ;
struct FGameplayCueNotify_CameraShakeInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
TY__KQEDk1C09aJw5qI9c3NLtbyA cameraShake;
NF32 shakeScale;
tyEnum_EGameplayCueNotify_EffectPlaySpace__ls9bpY57c4u9cCGBtI5iQmaA playSpace;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bPlayInWorld;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_1;
NF32 worldInnerRadius;
NF32 worldOuterRadius;
NF32 worldFalloffExponent;
};
struct FGameplayCueNotify_CameraLensEffectInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
TY__9akcXb9b3ftlkdW8NDwR22Mg cameraLensEffect;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bPlayInWorld;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
NF32 worldInnerRadius;
NF32 worldOuterRadius;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FGameplayCueNotify_ForceFeedbackInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
UForceFeedbackEffect_* forceFeedbackEffect;
FName forceFeedbackTag;
NIM_BOOL bIsLooping;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bPlayInWorld;
NF32 worldIntensity;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
UForceFeedbackAttenuation_* worldAttenuation;
};
typedef TArray<TY__aqfsbs05nDl2Mv2M0XZFpg> TY__m7NHFYcy8yrkqPr9baQrh7A;
struct FGameplayCueNotify_InputDevicePropertyInfo_ {TY__m7NHFYcy8yrkqPr9baQrh7A deviceProperties;
};
struct FGameplayCueNotify_DecalInfo_ {FGameplayCueNotify_SpawnCondition_ spawnConditionOverride;
FGameplayCueNotify_PlacementInfo_ placementInfoOverride;
UMaterialInterface* decalMaterial;
FVector decalSize;
NIM_BOOL bOverrideSpawnCondition;
NIM_BOOL bOverridePlacementInfo;
NIM_BOOL bOverrideFadeOut;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
NF32 fadeOutStartDelay;
NF32 fadeOutDuration;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FGameplayCueNotify_BurstEffects_ {TY__JPKFlIdlGkYMJ5qVPrWh9cA burstParticles;
TY__ddwBOpW9cMK7s9bvoKc1ZRHQ burstSounds;
FGameplayCueNotify_CameraShakeInfo_ burstCameraShake;
FGameplayCueNotify_CameraLensEffectInfo_ burstCameraLensEffect;
FGameplayCueNotify_ForceFeedbackInfo_ burstForceFeedback;
FGameplayCueNotify_InputDevicePropertyInfo_ burstDevicePropertyEffect;
FGameplayCueNotify_DecalInfo_ burstDecal;
};
typedef TArray<UAudioComponent*> TY__xE9c0zpihvKbXMHhd47HI8Q;
typedef TArray<UCameraShakeBase_*> TY__4LC6SiNHnpLyZlKgHJd4Ew;
typedef TArray<TY__hvmi1aSu7TExY3gfL1PBlA> TY__lIY1kK6VORISVYAH9ctablg;
struct FGameplayCueNotify_SpawnResult_ {TY__Qu3WcNhn1GZqsD9bMGcV3pQ fxSystemComponents;
TY__xE9c0zpihvKbXMHhd47HI8Q audioComponents;
TY__4LC6SiNHnpLyZlKgHJd4Ew cameraShakes;
TY__lIY1kK6VORISVYAH9ctablg cameraLensEffects;
UForceFeedbackComponent_* forceFeedbackComponent;
APlayerController* forceFeedbackTargetPC;
UDecalComponent_* decalComponent;
};
struct FGameplayCueNotify_LoopingEffects_ {TY__JPKFlIdlGkYMJ5qVPrWh9cA loopingParticles;
TY__ddwBOpW9cMK7s9bvoKc1ZRHQ loopingSounds;
FGameplayCueNotify_CameraShakeInfo_ loopingCameraShake;
FGameplayCueNotify_CameraLensEffectInfo_ loopingCameraLensEffect;
FGameplayCueNotify_ForceFeedbackInfo_ loopingForceFeedback;
FGameplayCueNotify_InputDevicePropertyInfo_ loopingInputDevicePropertyEffect;
};
struct FGameplayCueNotifyData_ {FGameplayTag gameplayCueTag;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FSoftObjectPath gameplayCueNotifyObj;
UClass* loadedGameplayCueClass;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
typedef TArray<FGameplayCueNotifyData_> TY__iipK89cMQmmOQ9bmmnPnwHwQ;
typedef NU8 tyArray__VcfXBC9a9co86vgFc32t9cHOw[70];
struct FAttributeBasedFloat_ {FScalableFloat_ coefficient;
FScalableFloat_ preMultiplyAdditiveValue;
FScalableFloat_ postMultiplyAdditiveValue;
FGameplayEffectAttributeCaptureDefinition backingAttribute;
FCurveTableRowHandle_ attributeCurve;
tyEnum_EAttributeBasedFloatCalculationType__XODnU48w9b8Rh8j66oGdjjQ attributeCalculationType;
tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA finalChannel;
tyArray__VcfXBC9a9co86vgFc32t9cHOw pad_0;
};
typedef TSubclassOf<UGameplayModMagnitudeCalculation_> TY__yF5zqpc2DFk0uN4hFwRLqA;
struct FCustomCalculationBasedFloat_ {TY__yF5zqpc2DFk0uN4hFwRLqA calculationClassMagnitude;
FScalableFloat_ coefficient;
FScalableFloat_ preMultiplyAdditiveValue;
FScalableFloat_ postMultiplyAdditiveValue;
FCurveTableRowHandle_ finalLookupCurve;
};
struct FSetByCallerFloat_ {FName dataName;
FGameplayTag dataTag;
};
struct FGameplayEffectModifierMagnitude_ {tyEnum_EGameplayEffectMagnitudeCalculation__ZZG9a3O09aRhyA9bY9bzuV3wXw magnitudeCalculationType;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
FScalableFloat_ scalableFloatMagnitude;
FAttributeBasedFloat_ attributeBasedMagnitude;
FCustomCalculationBasedFloat_ customMagnitude;
FSetByCallerFloat_ setByCallerMagnitude;
};
struct FGameplayModifierInfo_ {FGameplayAttribute attribute;
tyEnum_EGameplayModOp__v19aw0PxobwarcxLjVX9bwcQ modifierOp;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
FGameplayEffectModifierMagnitude_ modifierMagnitude;
FGameplayModEvaluationChannelSettings evaluationChannelSettings;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
FGameplayTagRequirements sourceTags;
FGameplayTagRequirements targetTags;
};
typedef TArray<FGameplayModifierInfo_> TY__SMXWF8IaQIMjnWJWW9aw9bWg;
typedef TSubclassOf<UGameplayEffectExecutionCalculation_> TY__GsIcKiAhjqAVt83oOK8jgw;
struct FGameplayEffectExecutionScopedModifierInfo_ {FGameplayEffectAttributeCaptureDefinition capturedAttribute;
FGameplayTag transientAggregatorIdentifier;
tyEnum_EGameplayEffectScopedModifierAggregatorType__MQeYQSPiYnqsqfDrtk1Qxg aggregatorType;
tyEnum_EGameplayModOp__v19aw0PxobwarcxLjVX9bwcQ modifierOp;
tyArray__bN9bddWn8oiNSHn2MqEJSZQ pad_0;
FGameplayEffectModifierMagnitude_ modifierMagnitude;
FGameplayModEvaluationChannelSettings evaluationChannelSettings;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
FGameplayTagRequirements sourceTags;
FGameplayTagRequirements targetTags;
};
typedef TArray<FGameplayEffectExecutionScopedModifierInfo_> TY__6znLu50wLo6gFEyCHYeSVw;
struct FConditionalGameplayEffect_ {TY__o5lmm3YGRQTdI9c9ccmTHabQ effectClass;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
};
typedef TArray<FConditionalGameplayEffect_> TY__iyRh6NGfBn32Zv3ywMk9bgw;
struct FGameplayEffectExecutionDefinition_ {TY__GsIcKiAhjqAVt83oOK8jgw calculationClass;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
TY__6znLu50wLo6gFEyCHYeSVw calculationModifiers;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_1;
TY__iyRh6NGfBn32Zv3ywMk9bgw conditionalGameplayEffects;
};
typedef TArray<FGameplayEffectExecutionDefinition_> TY__u78TYFr18r345jyU1USShA;
typedef TSubclassOf<UGameplayEffectCustomApplicationRequirement_> TY__7xWcfWXhuCWwWKsJ9aygnfQ;
typedef TArray<TY__7xWcfWXhuCWwWKsJ9aygnfQ> TY__JhMKUoilyazmRBfr9c6i9aAA;
struct FGameplayEffectCue_ {FGameplayAttribute magnitudeAttribute;
NF32 minLevel;
NF32 maxLevel;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
};
typedef TArray<FGameplayEffectCue_> TY__UjE9b8CGGMCLhKCOumAta4Q;
struct FInheritedTagContainer_ {tyArray__26aQaWOzPONEXg2JYXgXsA pad_0;
};
typedef TArray<FGameplayEffectAttributeCaptureDefinition> TY__7dBu6g16YDeBHjA4ZfidNQ;
struct FGameplayTagReponsePair_ {FGameplayTag tag;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
TY__o5lmm3YGRQTdI9c9ccmTHabQ responseGameplayEffect;
TY__YWxhJKhKplqKD9bzBoR0fzQ responseGameplayEffects;
NI32 softCountCap;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
struct FGameplayTagResponseTableEntry_ {FGameplayTagReponsePair_ positive;
FGameplayTagReponsePair_ negative;
};
typedef TArray<FGameplayTagResponseTableEntry_> TY__9anH0Dz9c0Cr10xgCVjcFJzw;
struct FPredictionKeyNetSerializerConfig_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FGameplayAbilityRepAnimMontageNetSerializerConfig_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FMinimalReplicationTagCountMapNetSerializerConfig_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FMinimalGameplayCueReplicationProxyNetSerializerConfig_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FGameplayEffectContextNetSerializerConfig_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
struct FGameplayEffectContextHandleNetSerializerConfig_ {tyArray__ei1f5NP9cmpUVHoe9cUYpPag pad_0;
};
struct FGameplayAbilityTargetData_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
typedef NU8 tyArray__zsrOqAc7tmot37s68VT2cQ[976];
struct FMinimalGameplayCueReplicationProxy_ {tyArray__zsrOqAc7tmot37s68VT2cQ pad_0;
UAbilitySystemComponent_* owner;
tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_1;
};
struct FGameplayCueTranslatorNodeIndex_ {NI32 index;
};
struct FGameplayCueTranslationLink_ {UGameplayCueTranslator_* rulesCDO;
tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef TArray<FGameplayCueTranslationLink_> TY__oxZWcI5p63641JFpYX1cPw;
typedef NU8 tyArray__OquSYG9ba9cX0EVMypYKiWWQ[84];
struct FGameplayCueTranslatorNode_ {TY__oxZWcI5p63641JFpYX1cPw links;
FGameplayCueTranslatorNodeIndex_ cachedIndex;
FGameplayTag cachedGameplayTag;
FName cachedGameplayTagName;
tyArray__OquSYG9ba9cX0EVMypYKiWWQ pad_0;
};
typedef TArray<FGameplayCueTranslatorNode_> TY__JtgItvMoOJTo49btMvWJ8nA;
typedef TMap<FName COMMA FGameplayCueTranslatorNodeIndex_>  TY__Y6UrN9b20hHpFTMWbUoBRCA;
struct FGameplayCueTranslationManager_ {TY__JtgItvMoOJTo49btMvWJ8nA translationLUT;
TY__Y6UrN9b20hHpFTMWbUoBRCA translationNameToIndexMap;
tyArray__vEOa9c5qaE9ajWxR5R4zwfQg pad_0;
};
typedef NU8 tyArray__8kqbJZnWwyez8yIz1pfAfg[152];
struct FActiveGameplayEffectQuery_ {tyArray__8kqbJZnWwyez8yIz1pfAfg pad_0;
};
typedef NU8 tyArray__MkdZYTPJCTDJaCPfmTk9bBw[248];
struct FGameplayEffectCustomExecutionParameters_ {tyArray__MkdZYTPJCTDJaCPfmTk9bBw pad_0;
};
typedef TArray<FGameplayModifierEvaluatedData> TY__hx07h4c4Ei7SP4sTrnRdyA;
struct FGameplayEffectCustomExecutionOutput_ {TY__hx07h4c4Ei7SP4sTrnRdyA outputModifiers;
NIM_BOOL bTriggerConditionalGameplayEffects;
NIM_BOOL bHandledStackCountManually;
NIM_BOOL bHandledGameplayCuesManually;
tyArray__39cnIm4v9c7pQp5XFRxTMpFg pad_0;
};
typedef TArray<FFrameNumber> TY__9bxQUE9aXtSTZGmHBx1ajVhA;
struct FMovieSceneGameplayCueKey_ {FGameplayCueTag_ cue;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
FVector location;
FVector Normal;
FName attachSocketName;
NF32 normalizedMagnitude;
tyArray__sH9avbK619blGCGFZhgSDaWg pad_1;
UPhysicalMaterial* physicalMaterial;
NI32 gameplayEffectLevel;
NI32 abilityLevel;
NIM_BOOL bAttachToBinding;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_2;
};
typedef TArray<FMovieSceneGameplayCueKey_> TY__5id0xYuFt50kJoCqeu1v0Q;
struct FMovieSceneGameplayCueChannel_ {tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
TY__9bxQUE9aXtSTZGmHBx1ajVhA keyTimes;
TY__5id0xYuFt50kJoCqeu1v0Q keyValues;
tyArray__6qSULJVkHXjL25e22OI5AQ pad_1;
};
typedef TArray<FGameplayTag> TY__ZMJgErclqmQcDHkV4SsgZA;
typedef TArray<FVector_NetQuantize> TY__LKX7LCvA3lHIPHJ3AWa9c6w;
struct FMinimalGameplayCueReplicationProxyForNetSerializer_ {TY__ZMJgErclqmQcDHkV4SsgZA tags;
TY__LKX7LCvA3lHIPHJ3AWa9c6w locations;
};
struct FMinimalReplicationTagCountMapForNetSerializer_ {TY__ZMJgErclqmQcDHkV4SsgZA tags;
};
typedef TSubclassOf<UCameraModifier_> TY__GYGn274MFCl9cAJqupIxNcA;
typedef TArray<TY__GYGn274MFCl9cAJqupIxNcA> TY__9bGGmzTmY6puojW0P5hirIA;
struct FCameraShakeStartParams_ {NIM_BOOL bIsRestarting;
};
struct FCameraShakeUpdateParams_ {NF32 deltaTime;
NF32 shakeScale;
NF32 dynamicScale;
NF32 blendingWeight;
FMinimalViewInfo pOV;
};
struct FCameraShakeScrubParams_ {NF32 absoluteTime;
NF32 shakeScale;
NF32 dynamicScale;
NF32 blendingWeight;
FMinimalViewInfo pOV;
};
struct FCameraShakeStopParams_ {NIM_BOOL bImmediately;
};
struct FCameraShakeDuration_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
};
struct FCameraShakeInfo_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
typedef NU8 tyArray__qnms0DSyctxftPk8tqs9bpA[392];
struct FRuntimeVectorCurve_ {tyArray__qnms0DSyctxftPk8tqs9bpA pad_0;
};
struct FDataDrivenConsoleVariable_ {tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_0;
};
struct FTypedElementPasteOptions_ {tyArray__cdsir9aPB24hAk6k77P9b9bCA pad_0;
NIM_BOOL bPasteAtLocation;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_1;
FVector pasteLocation;
tyArray__9aT9a0df87P1N8C6tT67xdfQ pad_2;
};
struct FTypedElementDeletionOptions_ {NIM_BOOL bVerifyDeletionCanHappen;
NIM_BOOL bWarnAboutReferences;
NIM_BOOL bWarnAboutSoftReferences;
};
typedef TArray<UAssetExportTask_*> TY__T8LsyrGmVj5MTxJHlTQQXA;
typedef TArray<FScalarParameterValue> TY__wpkkvw3QAwKf7ZaACMVTtA;
typedef TArray<FVectorParameterValue> TY__sddSY5hxII7T4XO9a1Mez7g;
typedef TArray<FDoubleVectorParameterValue> TY__MjN8bA2J7QGs87X9b69cz9ciA;
typedef TArray<FTextureParameterValue> TY__2e2kXW4qc0U6k9bt5o0wgDg;
typedef TArray<FRuntimeVirtualTextureParameterValue> TY__2kfN9asIen9adfoHPjm0OHLg;
typedef TArray<FSparseVolumeTextureParameterValue> TY__rZldDsDtIj9c5z9bC1DdMiHQ;
typedef TArray<FFontParameterValue> TY__FGDznZ1p2MJe6xaB8q4CCQ;
struct FVoiceSettings_ {USceneComponent* componentToAttachTo;
USoundAttenuation* attenuationSettings;
USoundEffectSourcePresetChain* sourceEffectChain;
};
typedef TArray<FParticleSysParam> TY__hRNirpXzEmqf49cUfEqEUHQ;
struct FSoundConcurrencySettings_ {NI32 maxCount;
NIM_BOOL bLimitToOwner;
NIM_BOOL bVolumeScaleCanRelease;
tyEnum_EMaxConcurrentResolutionRule__EzFMbBcK6m8QM1ovJjwNrA resolutionRule;
tyArray__cizw9bdTN1Bzer1N9ayP9cHbQ pad_0;
NF32 retriggerTime;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
tyEnum_EConcurrencyVolumeScaleMode__fu9btzHKAaOGmZR0XojVHRQ volumeScaleMode;
NF32 volumeScaleAttackTime;
NF32 volumeScaleReleaseTime;
NF32 voiceStealReleaseTime;
};
typedef TArray<FSoundSubmixSendInfo> TY__mYFRCs9aMXMCd4LKh8IWtiQ;
typedef TArray<FSoundSourceBusSendInfo> TY__E1cF89aBHPPsJaR6qT9cRcgw;
typedef TArray<FSoundWaveCuePoint> TY__BOJ5ThsWgCz3WmPBwfzXrQ;
typedef TArray<FSubtitleCue> TY__J5oi1L6HY7OmrYakjq3uIg;
struct FReverbSettings_ {NIM_BOOL bApplyReverb;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
UReverbEffect_* reverbEffect;
USoundEffectSubmixPreset_* reverbPluginEffect;
NF32 volume;
NF32 fadeTime;
};
struct FInteriorSettings_ {tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
NF32 exteriorVolume;
NF32 exteriorTime;
NF32 exteriorLPF;
NF32 exteriorLPFTime;
NF32 interiorVolume;
NF32 interiorTime;
NF32 interiorLPF;
NF32 interiorLPFTime;
};
struct FAudioVolumeSubmixSendSettings_ {tyEnum_EAudioVolumeLocationState__cgdNqGrtoyp23ISYdoxqLw listenerLocationState;
tyArray__HhO8EAlttg7Yo1LAKdC6hQ pad_0;
TY__mYFRCs9aMXMCd4LKh8IWtiQ submixSends;
};
typedef TArray<FAudioVolumeSubmixSendSettings_> TY__0P3QE6CnwcQtnLUClvj1AQ;
typedef TArray<USoundEffectSubmixPreset_*> TY__vn4YR8N1PwW0D5S5BkY6Bw;
struct FAudioVolumeSubmixOverrideSettings_ {USoundSubmix_* submix;
TY__vn4YR8N1PwW0D5S5BkY6Bw submixEffectChain;
NF32 crossfadeTime;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_0;
};
typedef TArray<FAudioVolumeSubmixOverrideSettings_> TY__KW4wPWVxwu2sHCJkJbVpzA;
typedef TArray<USoundClass*> TY__pVtcV5B6QAzor9cajvYb6Rw;
typedef TArray<FPassiveSoundMixModifier> TY__gUl6WccpnVptdwE9bBR9a1YA;
struct FSoundClassAdjuster_ {USoundClass* soundClassObject;
NF32 volumeAdjuster;
NF32 pitchAdjuster;
NF32 lowPassFilterFrequency;
NIM_BOOL bApplyToChildren;
tyArray__SpfepCfLRZtm9aHk9aP3FBeQ pad_0;
NF32 voiceCenterChannelVolumeAdjuster;
tyArray__H8qf9bpC2ziYA2earmO8m7w pad_1;
};
typedef TArray<FSoundClassAdjuster_> TY__rlPCp7fOS9bDL40uDDNAn7Q;
typedef TArray<USoundSubmixBase_*> TY__Qd9alkOGuaEndLtq9bIq1VEg;
typedef TArray<FSoundSubmixSpectralAnalysisBandSettings> TY__LOMy3VrBsbR5p06Yi7CKVg;
struct FWorldPartitionHLODDestructionTag_ {tyArray__qtqsWM5aXmcpMIVmvq3kAA pad_0;
};
extern "C" N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign);
N_LIB_PRIVATE N_NIMCALL(UClass*, getClassByName)(FString className);
N_LIB_PRIVATE N_NIMCALL(UScriptStruct*, getScriptStructByName)(FString strName);
extern "C" N_LIB_PRIVATE N_CDECL(tyObject_UEEmitter__yFEGdOoEpsg7Gf9aKb9cZKbQ*, getGlobalEmitterPtr)(void);
N_LIB_PRIVATE N_NIMCALL(UObject*, getDefaultObjectFromClassName)(FString clsName);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepAssetRegistry)(void);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, toSoftObjectPath_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(FARFilter, setFilterTagsAndValues_)(FARFilter& inFilter, TY__HdzeEk4HpX19bllurNUyndA& inTagsAndValues);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUAsset_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRedirector_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAssetLoaded_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTagValue_)(FAssetData& inAssetData, FName& inTagName, FString& outTagValue);
N_LIB_PRIVATE N_NIMCALL(FString, getFullName_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(FString, getExportTextName_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(UClass*, getClass_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(void, getBlueprintAssets_)(FARFilter& inFilter, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData);
N_LIB_PRIVATE N_NIMCALL(TY__IYNsvvBlfnKuRz5TNKUqnw, getAssetRegistry_)(void);
N_LIB_PRIVATE N_NIMCALL(UObject*, getAsset_)(FAssetData& inAssetData);
N_LIB_PRIVATE N_NIMCALL(UClass*, findAssetNativeClass_)(FAssetData& assetData);
N_LIB_PRIVATE N_NIMCALL(FAssetData, createAssetData_)(UObject* inAsset, NIM_BOOL bAllowBlueprintClass);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetRegistryHelpers)(UAssetRegistryHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(void, waitForPackage_)(UAssetRegistry* self, FString packageName);
N_LIB_PRIVATE N_NIMCALL(void, waitForCompletion_)(UAssetRegistry* self);
N_LIB_PRIVATE N_NIMCALL(void, useFilterToExcludeAssets_)(UAssetRegistry* self, TY__8erC4L7o5X0VmnCzY0GMhQ& assetDataList, FARFilter& filter);
N_LIB_PRIVATE N_NIMCALL(void, searchAllAssets_)(UAssetRegistry* self, NIM_BOOL bSynchronousSearch);
N_LIB_PRIVATE N_NIMCALL(void, scanPathsSynchronous_)(UAssetRegistry* self, TY__myhN0u2pNczwuaOhbdYPXw& inPaths, NIM_BOOL bForceRescan, NIM_BOOL bIgnoreDenyListScanFilters);
N_LIB_PRIVATE N_NIMCALL(void, scanModifiedAssetFiles_)(UAssetRegistry* self, TY__myhN0u2pNczwuaOhbdYPXw& inFilePaths);
N_LIB_PRIVATE N_NIMCALL(void, scanFilesSynchronous_)(UAssetRegistry* self, TY__myhN0u2pNczwuaOhbdYPXw& inFilePaths, NIM_BOOL bForceRescan);
N_LIB_PRIVATE N_NIMCALL(void, runAssetsThroughFilter_)(UAssetRegistry* self, TY__8erC4L7o5X0VmnCzY0GMhQ& assetDataList, FARFilter& filter);
N_LIB_PRIVATE N_NIMCALL(void, prioritizeSearchPath_)(UAssetRegistry* self, FString pathToPrioritize);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getReferencers_)(UAssetRegistry* self, FName packageName, FAssetRegistryDependencyOptions& referenceOptions, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outReferencers);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDependencies_)(UAssetRegistry* self, FName packageName, FAssetRegistryDependencyOptions& dependencyOptions, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outDependencies);
N_LIB_PRIVATE N_NIMCALL(FAssetData, k2_GetAssetByObjectPath_)(UAssetRegistry* self, FSoftObjectPath& objectPath, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSearchAsync_)(UAssetRegistry* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSearchAllAssets_)(UAssetRegistry* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoadingAssets_)(UAssetRegistry* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAssets_)(UAssetRegistry* self, FName packagePath, NIM_BOOL bRecursive);
N_LIB_PRIVATE N_NIMCALL(void, getSubPaths_)(UAssetRegistry* self, FString inBasePath, TY__myhN0u2pNczwuaOhbdYPXw& outPathList, NIM_BOOL bInRecurse);
N_LIB_PRIVATE N_NIMCALL(void, getDerivedClassNames_)(UAssetRegistry* self, TY__PRe8Jrdf8eYAEJilcBMaEQ& classNames, TY__PRSVFfQEtqNnXT9a7lc0o6A& excludedClassNames, TY__PRSVFfQEtqNnXT9a7lc0o6A& outDerivedClassNames);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPaths_)(UAssetRegistry* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ packagePaths, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bRecursive, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPath_)(UAssetRegistry* self, FName packagePath, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bRecursive, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByPackageName_)(UAssetRegistry* self, FName packageName, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bIncludeOnlyOnDiskAssets, NIM_BOOL bSkipARFilteredAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssetsByClass_)(UAssetRegistry* self, FTopLevelAssetPath classPathName, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bSearchSubClasses);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAssets_)(UAssetRegistry* self, FARFilter& filter, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bSkipARFilteredAssets);
N_LIB_PRIVATE N_NIMCALL(FAssetData, getAssetByObjectPath_)(UAssetRegistry* self, FName objectPath, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAncestorClassNames_)(UAssetRegistry* self, FTopLevelAssetPath classPathName, TY__PRe8Jrdf8eYAEJilcBMaEQ& outAncestorClassNames);
N_LIB_PRIVATE N_NIMCALL(void, getAllCachedPaths_)(UAssetRegistry* self, TY__myhN0u2pNczwuaOhbdYPXw& outPathList);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllAssets_)(UAssetRegistry* self, TY__8erC4L7o5X0VmnCzY0GMhQ& outAssetData, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetRegistry)(UAssetRegistry* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTagAndValue)(FTagAndValue_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAssetRegistryDependencyOptions)(FAssetRegistryDependencyOptions fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepChaos)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepChaosDeformableSimSpace)(tyEnum_ChaosDeformableSimSpace__9aLN9caNkXayq9caISpR8o9a9bg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESetMaskConditionType)(tyEnum_ESetMaskConditionType__elqIjc4wzCts7WoHSkH8Mw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWaveFunctionType)(tyEnum_EWaveFunctionType__X45NxYdXIqCn0Ntgf68xZA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldOperationType)(tyEnum_EFieldOperationType__gVOes7uaou03Dai3l3iZpw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldCullingOperationType)(tyEnum_EFieldCullingOperationType__9bE7WIivF8eOzfdywHW19b4A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldResolutionType)(tyEnum_EFieldResolutionType__SM5XEOKHMdP9cOlDEZUdizA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldFilterType)(tyEnum_EFieldFilterType__39anvg9aDdW7BhpR8L0ogHZw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldObjectType)(tyEnum_EFieldObjectType__tDR2p9c33Roigo9awOe9abjTA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldPositionType)(tyEnum_EFieldPositionType__DTB09cPse9aBa5uAE09bK9cm2A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldFalloffType)(tyEnum_EFieldFalloffType__caIM1UG9aLJwCa4Ha8xF0mw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldPhysicsType)(tyEnum_EFieldPhysicsType__lC9ai00DtAQC9awPvf3aEASg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldVectorType)(tyEnum_EFieldVectorType__pGz3AQq9bl4kW1oB5Z5VQoQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldScalarType)(tyEnum_EFieldScalarType__qtOF20Dkpb10DEnhLq7Prg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldIntegerType)(tyEnum_EFieldIntegerType__MD4euztRfjoPbO1X9b32yIQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldOutputType)(tyEnum_EFieldOutputType__ai9bgsV7ZMRVc8K562upTMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFieldPhysicsDefaultFields)(tyEnum_EFieldPhysicsDefaultFields__QsEciSA7A6eyNG7sqYBePw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConvexOverlapRemoval)(tyEnum_EConvexOverlapRemoval__eBuDJLsgVXj50eSMrmJUfA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEProximityMethod)(tyEnum_EProximityMethod__k6nO3HLKp6039aCDIlfBhgA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEProximityContactMethod)(tyEnum_EProximityContactMethod__eHpmfYA82KrZqcMHN5eaMQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECollisionTypeEnum)(tyEnum_ECollisionTypeEnum__4dtqNfDyPHa6sDWWyxLB1A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEImplicitTypeEnum)(tyEnum_EImplicitTypeEnum__J9afW9bArN9bsrnr3o9askMtVQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEObjectStateTypeEnum)(tyEnum_EObjectStateTypeEnum__ELu3U0bSybVDJYwYCDEyCw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGeometryCollectionPhysicsTypeEnum)(tyEnum_EGeometryCollectionPhysicsTypeEnum__X2aLtT4nZv68AdWZbaSB1A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInitialVelocityTypeEnum)(tyEnum_EInitialVelocityTypeEnum__NsNe28RDuzc5KXvCpO3KXw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEmissionPatternTypeEnum)(tyEnum_EEmissionPatternTypeEnum__SGA87CXwXXO5qyQqi8pbQA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEChaosSolverTickMode)(tyEnum_EChaosSolverTickMode__ZBVKR9a86nJ9aG9bdRgAFSlKg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEChaosThreadingMode)(tyEnum_EChaosThreadingMode__FFfhVwhSry2F9cJ0AoBDeUw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEChaosBufferMode)(tyEnum_EChaosBufferMode__fCVASttB31vIocb8Vj0Ilg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEClusterUnionMethod)(tyEnum_EClusterUnionMethod__mg0Dyv49cEul9bEZypbELipQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGeometryCollectionCacheType)(tyEnum_EGeometryCollectionCacheType__KvKo9b5Zg1w9b0jRBIWbEwsQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFClosestPhysicsObjectResult)(FClosestPhysicsObjectResult_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSolverTrailingFilterSettings)(FSolverTrailingFilterSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSolverBreakingFilterSettings)(FSolverBreakingFilterSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSolverCollisionFilterSettings)(FSolverCollisionFilterSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSolverRemovalFilterSettings)(FSolverRemovalFilterSettings_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnhancedInput)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEngine)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCommon)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveTable)(UCurveTable_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionInterface)(UMaterialFunctionInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundEffectPreset)(USoundEffectPreset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUStreamableRenderAsset)(UStreamableRenderAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUFontProviderInterface)(UFontProviderInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimBoneCompressionCodec)(UAnimBoneCompressionCodec_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSceneCaptureComponent)(USceneCaptureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULightComponentBase)(ULightComponentBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshComponent)(UMeshComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemReplicationProxyInterface)(UAbilitySystemReplicationProxyInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDialogueVoice)(UDialogueVoice_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDragDropOperation)(UDragDropOperation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataLayerInstance)(UDataLayerInstance* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHLODLayer)(UHLODLayer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveFloat)(UCurveFloat* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveVector)(UCurveVector_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveLinearColor)(UCurveLinearColor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor)(AGameplayAbilityTargetActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayAbility)(UGameplayAbility_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsAsset)(UPhysicsAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModule)(UParticleModule_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUFXSystemAsset)(UFXSystemAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleEmitter)(UParticleEmitter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialParameterCollection)(UMaterialParameterCollection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpression)(UMaterialExpression* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialInstance)(UMaterialInstance* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPanelSlot)(UPanelSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPanelWidget)(UPanelWidget_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUListViewBase)(UListViewBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepARigidBodyBase)(ARigidBodyBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_PreviewMeshProvider)(UInterface_PreviewMeshProvider* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionRuntimeCellOwner)(UWorldPartitionRuntimeCellOwner_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionCell)(UWorldPartitionCell_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraLensEffectInterface)(UCameraLensEffectInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUFXSystemComponent)(UFXSystemComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_AsyncCompilation)(UInterface_AsyncCompilation* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_AssetUserData)(UInterface_AssetUserData* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCanvas)(UCanvas_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSaveGame)(USaveGame_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationDataModel)(UAnimationDataModel_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepANavigationObjectBase)(ANavigationObjectBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUFont)(UFont_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAServerStatReplicator)(AServerStatReplicator* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULocalMessage)(ULocalMessage_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepADebugCameraController)(ADebugCameraController_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevel)(ULevel* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSMInstanceManager)(USMInstanceManager_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURVOAvoidanceInterface)(URVOAvoidanceInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNetworkPredictionInterface)(UNetworkPredictionInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavAgentInterface)(UNavAgentInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHapticFeedbackEffect_Base)(UHapticFeedbackEffect_Base_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintAsyncActionBase)(UBlueprintAsyncActionBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraShakePattern)(UCameraShakePattern_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlendableInterface)(UBlendableInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNodeMappingProviderInterface)(UNodeMappingProviderInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataTable)(UDataTable* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationDataController)(UAnimationDataController* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSubsurfaceProfile)(USubsurfaceProfile_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSparseVolumeTexture)(USparseVolumeTexture_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULODSyncInterface)(ULODSyncInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundParameterControllerInterface)(USoundParameterControllerInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUStereoLayerShape)(UStereoLayerShape_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavRelevantInterface)(UNavRelevantInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshDeformerInstance)(UMeshDeformerInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshDeformerInstanceSettings)(UMeshDeformerInstanceSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshDeformer)(UMeshDeformer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsComponent)(UPhysicsComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_PostProcessVolume)(UInterface_PostProcessVolume* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_CollisionDataProvider)(UInterface_CollisionDataProvider* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameInstance)(UGameInstance* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNodeMappingContainer)(UNodeMappingContainer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeleton)(USkeleton* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMorphTarget)(UMorphTarget* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationAsset)(UAnimationAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyState)(UAnimNotifyState_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUVirtualTextureBuilder)(UVirtualTextureBuilder_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAudioComponent)(UAudioComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURuntimeVirtualTextureComponent)(URuntimeVirtualTextureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUForceFeedbackComponent)(UForceFeedbackComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDecalComponent)(UDecalComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUShapeComponent)(UShapeComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBillboardComponent)(UBillboardComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUArrowComponent)(UArrowComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkyAtmosphereComponent)(USkyAtmosphereComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextRenderComponent)(UTextRenderComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUExponentialHeightFogComponent)(UExponentialHeightFogComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUReflectionCaptureComponent)(UReflectionCaptureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUChildActorComponent)(UChildActorComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlayerState)(APlayerState_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDamageType)(UDamageType_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepACharacter)(ACharacter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUForceFeedbackEffect)(UForceFeedbackEffect_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepADefaultPawn)(ADefaultPawn_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUForceFeedbackAttenuation)(UForceFeedbackAttenuation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameStateBase)(AGameStateBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovementComponent)(UMovementComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNamedSlotInterface)(UNamedSlotInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserWidgetExtension)(UUserWidgetExtension_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURichTextBlockDecorator)(URichTextBlockDecorator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraShakeBase)(UCameraShakeBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlayerCameraManager)(APlayerCameraManager* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraShakeSourceComponent)(UCameraShakeSourceComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffect)(UGameplayEffect_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAttributeSet)(UAttributeSet* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemComponent)(UAbilitySystemComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundWave)(USoundWave* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundMix)(USoundMix_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundClass)(USoundClass* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUReverbEffect)(UReverbEffect_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDialogueWave)(UDialogueWave_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNode)(USoundNode_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundAttenuation)(USoundAttenuation* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundSubmixBase)(USoundSubmixBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundConcurrency)(USoundConcurrency_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAudioBus)(UAudioBus_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundEffectSourcePresetChain)(USoundEffectSourcePresetChain* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundAttenuationSettings)(FSoundAttenuationSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundWaveSpectralData)(FSoundWaveSpectralData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundWaveSpectralDataPerSound)(FSoundWaveSpectralDataPerSound fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundWaveEnvelopeDataPerSound)(FSoundWaveEnvelopeDataPerSound fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundModulationDefaultRoutingSettings)(FSoundModulationDefaultRoutingSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDialogueContext)(FDialogueContext fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavAvoidanceMask)(FNavAvoidanceMask fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavAgentProperties)(FNavAgentProperties fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPredictionKey)(FPredictionKey_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectSpec)(FGameplayEffectSpec_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectContextHandle)(FGameplayEffectContextHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilitySpecHandle)(FGameplayAbilitySpecHandle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAttribute)(FGameplayAttribute fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayEffectHandle)(FActiveGameplayEffectHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectSpecHandle)(FGameplayEffectSpecHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueParameters)(FGameplayCueParameters fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectRemovalInfo)(FGameplayEffectRemovalInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetDataHandle)(FGameplayAbilityTargetDataHandle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTagRequirements)(FGameplayTagRequirements fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTargetDataFilterHandle)(FGameplayTargetDataFilterHandle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityActivationInfo)(FGameplayAbilityActivationInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayEffect)(FActiveGameplayEffect_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFormatArgumentData)(FFormatArgumentData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGenericStruct)(FGenericStruct fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPredictProjectilePathParams)(FPredictProjectilePathParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPredictProjectilePathResult)(FPredictProjectilePathResult_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateModifierKeysState)(FSlateModifierKeysState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDrawToRenderTargetContext)(FDrawToRenderTargetContext_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFImportanceTexture)(FImportanceTexture_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalViewInfo)(FMinimalViewInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraLensInterfaceClassSupport)(FCameraLensInterfaceClassSupport_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEventReply)(FEventReply_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputDevicePropertyHandle)(FInputDevicePropertyHandle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFUniqueNetIdRepl)(FUniqueNetIdRepl fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkelMeshSkinWeightInfo)(FSkelMeshSkinWeightInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPoseSnapshot)(FPoseSnapshot fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimationCurveIdentifier)(FAnimationCurveIdentifier_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimationAttributeIdentifier)(FAnimationAttributeIdentifier_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRawAnimSequenceTrack)(FRawAnimSequenceTrack fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBoneAnimationTrack)(FBoneAnimationTrack_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNotifyEventReference)(FAnimNotifyEventReference fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBodyInstanceAsyncPhysicsTickHandle)(FBodyInstanceAsyncPhysicsTickHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWalkableSlopeOverride)(FWalkableSlopeOverride fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLightingChannels)(FLightingChannels fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPostProcessSettings)(FPostProcessSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFForceFeedbackAttenuationSettings)(FForceFeedbackAttenuationSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSingleAnimationPlayData)(FSingleAnimationPlayData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMaterialParameterInfo)(FMaterialParameterInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPoseLink)(FPoseLink_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFComponentSpacePoseLink)(FComponentSpacePoseLink_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAlphaBlendArgs)(FAlphaBlendArgs fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLatentActionInfo)(FLatentActionInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFindFloorResult)(FFindFloorResult fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimDataModelNotifPayload)(FAnimDataModelNotifPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSubtitleCue)(FSubtitleCue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBodyInstance)(FBodyInstance fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFConstraintInstanceAccessor)(FConstraintInstanceAccessor_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEventData)(FGameplayEventData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFServerAbilityRPCBatch)(FServerAbilityRPCBatch_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityLocalAnimMontage)(FGameplayAbilityLocalAnimMontage_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityRepAnimMontage)(FGameplayAbilityRepAnimMontage_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttributeDefaults)(FAttributeDefaults_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTargetDataFilter)(FGameplayTargetDataFilter_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetingLocationInfo)(FGameplayAbilityTargetingLocationInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRuntimeFloatCurve)(FRuntimeFloatCurve fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRichCurveKey)(FRichCurveKey fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActorDesc)(FActorDesc_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWorldPartitionStreamingQuerySource)(FWorldPartitionStreamingQuerySource fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFStreamingSourceShape)(FStreamingSourceShape fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameViewportWidgetSlot)(FGameViewportWidgetSlot_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESleepFamily)(tyEnum_ESleepFamily__OhSj9aODkqT0KjqIcfVWqvw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundAttenuationPluginSettings)(FSoundAttenuationPluginSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttenuationSubmixSendSettings)(FAttenuationSubmixSendSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilitySpecDef)(FGameplayAbilitySpecDef_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFModifierSpec)(FModifierSpec_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTagContainerAggregator)(FTagContainerAggregator fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectAttributeCaptureSpecContainer)(FGameplayEffectAttributeCaptureSpecContainer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectModifiedAttribute)(FGameplayEffectModifiedAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPredictProjectilePathPointData)(FPredictProjectilePathPointData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMargin)(FMargin fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWeightedBlendables)(FWeightedBlendables fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFormatArgumentType)(tyEnum_EFormatArgumentType__XhNvqFUjDEW9bUNWwu9b9b6MA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDrawDebugTrace)(tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraProjectionMode)(tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDynamicGlobalIlluminationMethod)(tyEnum_EDynamicGlobalIlluminationMethod__XSXABNupoK1YqGg1o2p9a0w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReflectionMethod)(tyEnum_EReflectionMethod__M9b4Vr0yUcPiUIuK7axF9caA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWalkableSlopeBehavior)(tyEnum_EWalkableSlopeBehavior__ZMkElMfYOxGv9aEGwCOwr4Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialParameterAssociation)(tyEnum_EMaterialParameterAssociation__bQ0QFzWtAc9bK1kySiJFxnA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAutoExposureMethod)(tyEnum_EAutoExposureMethod__JpZOztQhwT5NDw3E68GObA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBloomMethod)(tyEnum_EBloomMethod__OR8Zq9afYZLfF9bSABwq15sQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETemperatureMethod)(tyEnum_ETemperatureMethod__t9caSnJ1Sw8lyaDx8CzjB2Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELumenRayLightingModeOverride)(tyEnum_ELumenRayLightingModeOverride__ua2Pl72MdiPsZJ9a2881xKw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETranslucencyType)(tyEnum_ETranslucencyType__OT2DL64WR9bZXhu9aXB6OHKw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERayTracingGlobalIlluminationType)(tyEnum_ERayTracingGlobalIlluminationType__q3nfVcWx9cOMqrt3uLSmaGA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReflectedAndRefractedRayTracedShadows)(tyEnum_EReflectedAndRefractedRayTracedShadows__t6gmRc9aerYYJVf5bqXB9cDA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundSpatializationAlgorithm)(tyEnum_ESoundSpatializationAlgorithm__J5uWPo3JotuP9crntPThgtQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAirAbsorptionMethod)(tyEnum_EAirAbsorptionMethod__vZCMQCHDaUqkMqdhdaUHnQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReverbSendMethod)(tyEnum_EReverbSendMethod__DGTHQB6E8LLjBUO2OsIJtw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPriorityAttenuationMethod)(tyEnum_EPriorityAttenuationMethod__cklkzbaOjTxZRYa9bqnR0Zg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAlphaBlendOption)(tyEnum_EAlphaBlendOption__LKIa243bVL7z35YoC4pwhg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModulationRouting)(tyEnum_EModulationRouting__DpodZsZnVhWxqzmwwirXsQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnchors)(FAnchors_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityActivationMode)(tyEnum_EGameplayAbilityActivationMode__nbzY9aqfyH4GZUnaBUGNwsQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETargetDataFilterSelf)(tyEnum_ETargetDataFilterSelf__0bLCHzq8oWhdsyxklAwILw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityTargetingLocationType)(tyEnum_EGameplayAbilityTargetingLocationType__aufJVwEe2F7OdxXxGhlJiA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFScalableFloat)(FScalableFloat_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectAttributeCaptureSpec)(FGameplayEffectAttributeCaptureSpec_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWeightedBlendable)(FWeightedBlendable fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESubmixSendMethod)(tyEnum_ESubmixSendMethod__z7qepf4QIwH2vYFTmLwiaA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectAttributeCaptureDefinition)(FGameplayEffectAttributeCaptureDefinition fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCurveTableRowHandle)(FCurveTableRowHandle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectAttributeCaptureSource)(tyEnum_EGameplayEffectAttributeCaptureSource__w1flbc62TTNAaQROKRIrig fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCancellableAsyncAction)(UCancellableAsyncAction_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor_Trace)(AGameplayAbilityTargetActor_Trace_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleSystem)(UParticleSystem* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleSystemComponent)(UParticleSystemComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionInstance)(UMaterialFunctionInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunction)(UMaterialFunction* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFunctionOutput)(UMaterialExpressionFunctionOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionBinaryOp)(UMaterialExpressionBinaryOp_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureBase)(UMaterialExpressionTextureBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialInstanceDynamic)(UMaterialInstanceDynamic* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVectorFieldBase)(UParticleModuleVectorFieldBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataBase)(UParticleModuleTypeDataBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTrailBase)(UParticleModuleTrailBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSubUVBase)(UParticleModuleSubUVBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSizeBase)(UParticleModuleSizeBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleParameterBase)(UParticleModuleParameterBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleOrientationBase)(UParticleModuleOrientationBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotationRateBase)(UParticleModuleRotationRateBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotationBase)(UParticleModuleRotationBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleMaterialBase)(UParticleModuleMaterialBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLightBase)(UParticleModuleLightBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLifetimeBase)(UParticleModuleLifetimeBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleEventBase)(UParticleModuleEventBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleColorBase)(UParticleModuleColorBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleCollisionBase)(UParticleModuleCollisionBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleCameraBase)(UParticleModuleCameraBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleBeamBase)(UParticleModuleBeamBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAttractorBase)(UParticleModuleAttractorBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeAssetReferencer)(USoundNodeAssetReferencer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundEffectSourcePreset)(USoundEffectSourcePreset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundEffectSubmixPreset)(USoundEffectSubmixPreset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUStaticMesh)(UStaticMesh* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepASpectatorPawn)(ASpectatorPawn_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTexture)(UTexture* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataUtilityBase)(UMaterialExpressionStrataUtilityBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataBSDF)(UMaterialExpressionStrataBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionGenericConstant)(UMaterialExpressionGenericConstant_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCustomOutput)(UMaterialExpressionCustomOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkinnedAsset)(USkinnedAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMirrorDataTable)(UMirrorDataTable_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompress)(UAnimCompress_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlendSpace)(UBlendSpace_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimSequenceBase)(UAnimSequenceBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSphereComponent)(USphereComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULightComponent)(ULightComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkyLightComponent)(USkyLightComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSceneCaptureComponentCube)(USceneCaptureComponentCube_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSceneCaptureComponent2D)(USceneCaptureComponent2D_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlanarReflectionComponent)(UPlanarReflectionComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkinnedMeshComponent)(USkinnedMeshComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUStaticMeshComponent)(UStaticMeshComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCapsuleComponent)(UCapsuleComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlayerStart)(APlayerStart_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUContentWidget)(UContentWidget_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundSourceBus)(USoundSourceBus_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureRenderTarget)(UTextureRenderTarget_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULocalLightComponent)(ULocalLightComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameter)(UMaterialExpressionTextureSampleParameter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTexture2D)(UTexture2D* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeletalMesh)(USkeletalMesh* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompositeBase)(UAnimCompositeBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureCube)(UTextureCube_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimSequence)(UAnimSequence_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlendSpace1D)(UBlendSpace1D_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeletalMeshComponent)(USkeletalMeshComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInstancedStaticMeshComponent)(UInstancedStaticMeshComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync)(UAbilityAsync_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimMontage)(UAnimMontage* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureRenderTargetCube)(UTextureRenderTargetCube_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureLightProfile)(UTextureLightProfile* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureRenderTarget2D)(UTextureRenderTarget2D_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURectLightComponent)(URectLightComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPointLightComponent)(UPointLightComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHierarchicalInstancedStaticMeshComponent)(UHierarchicalInstancedStaticMeshComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayTag)(UAbilityAsync_WaitGameplayTag_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSpotLightComponent)(USpotLightComponent* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEnums)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepETextGender)(tyEnum_ETextGender__qWH9co9alIoZsseduZnOsjkg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStreamingSourcePriority)(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimDataModelNotifyType)(tyEnum_EAnimDataModelNotifyType__0L0gXcEg59asCmg3XGs6oZA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMovementMode)(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioComponentPlayState)(tyEnum_EAudioComponentPlayState__LNX4VedOxTvvUBfe9bW2uOQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDataLayerRuntimeState)(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuartzCommandDelegateSubType)(tyEnum_EQuartzCommandDelegateSubType__3rsNkR3Cqr4kyGvPGu21vQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuartzCommandQuantization)(tyEnum_EQuartzCommandQuantization__09akKUlU43woRogjXzHKdcQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPlatformInterfaceDataType)(tyEnum_EPlatformInterfaceDataType__W49b9aYkO9b0DWC9bm9b7vjbF5Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEndPlayReason)(tyEnum_EEndPlayReason__83Jx3inG29af0RIg6BEVzPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETickingGroup)(tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEComponentCreationMethod)(tyEnum_EComponentCreationMethod__UBkwKKFkXqjelCjcNNvbIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETemperatureSeverityType)(tyEnum_ETemperatureSeverityType__DD9ce6VpeAJH39b5Hawa0ySQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPlaneConstraintAxisSetting)(tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInterpToBehaviourType)(tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETeleportType)(tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStreamingSourceTargetState)(tyEnum_EStreamingSourceTargetState__LHG7xK564qq9c2ZjvJfTJuQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMoveComponentAction)(tyEnum_EMoveComponentAction__kDaFHmOTku89aVMGXCDq5HA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuitPreference)(tyEnum_EQuitPreference__wKF27UdTU9cegJpfafBWsWw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETravelFailure)(tyEnum_ETravelFailure__P9b5sIfk09a0HvTpB0k9bPi2A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEApplicationState)(tyEnum_EApplicationState__8WWyy9aB5XXHoxfsgk7GmWA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEScreenOrientation)(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEComponentPhysicsStateChange)(tyEnum_EComponentPhysicsStateChange__j0wJcIa6k7UBm59aNVdJitQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStaticMeshReductionTerimationCriterion)(tyEnum_EStaticMeshReductionTerimationCriterion__69bOHJPxIeuVRQCZOR2zdHw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERelativeTransformSpace)(tyEnum_ERelativeTransformSpace__SP35ggqlhgdAFoiyxcw8gg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttachLocation)(tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttachmentRule)(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDetachmentRule)(tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEComponentMobility)(tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDetailMode)(tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavPathEvent)(tyEnum_ENavPathEvent__q2Mi2eMkIr9bFWks4ZptwWw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMouseLockMode)(tyEnum_EMouseLockMode__I9ayZCBnUIvVaajjWUrPbhw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWindowTitleBarMode)(tyEnum_EWindowTitleBarMode__4Q9bUYtcT85aKJEevN09czGA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAnimationKeyFormat)(tyEnum_AnimationKeyFormat__vp9cSTZDKUrN8Uwg6aXSL9bg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimCurveType)(tyEnum_EAnimCurveType__bLSJ5hfWpuK9b9a9atpz9c41QQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimAssetCurveFlags)(tyEnum_EAnimAssetCurveFlags__rdCcgUF0ueMLtHjAQ9a49a3Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERawCurveTrackTypes)(tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionRootLock)(tyEnum_ERootMotionRootLock__d7F7TxVGg3aKKGxdznu9ckA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionMode)(tyEnum_ERootMotionMode__oixCsBQZKA6SWRZ9bIVVRxQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAdditiveBasePoseType)(tyEnum_EAdditiveBasePoseType__p1tlAgqlGxCs5h80n9achzw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAnimationCompressionFormat)(tyEnum_AnimationCompressionFormat__4MfAr4nX9aqSB3coB9al4yxA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAnimPhysTwistAxis)(tyEnum_AnimPhysTwistAxis__8ZzzaYrkwof2I1T07xyqQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAnimPhysCollisionType)(tyEnum_AnimPhysCollisionType__UUw6klGKD9ayAxGlXN9aA9cvw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETypeAdvanceAnim)(tyEnum_ETypeAdvanceAnim__W0sOzJ6jj9aE6HOe0d6coqw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneAxis)(tyEnum_EBoneAxis__d9cl3nf4mB4aldwGN5Au40Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneControlSpace)(tyEnum_EBoneControlSpace__P8H4Q6PXMSKuKfBUejCHrg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneRotationSource)(tyEnum_EBoneRotationSource__YtrbNA9bxlH9bZ7b4wKA9bc6A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMontageNotifyTickType)(tyEnum_EMontageNotifyTickType__wNa05dMxUy9cRUxXkWgbo9bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENotifyFilterType)(tyEnum_ENotifyFilterType__f19cEW6i89cwMvL4L3ivArDA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAdditiveAnimationType)(tyEnum_EAdditiveAnimationType__IQ8DV60kdoBmud9ctc2j4nA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECurveBlendOption)(tyEnum_ECurveBlendOption__BvrifMNG1EvxheBuucf9cYQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimInterpolationType)(tyEnum_EAnimInterpolationType__m9ce72vMf1eBS6DLD6rM5MA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAxisOption)(tyEnum_EAxisOption__JIub9cC9awbLkuhmZ5bU4Cng fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEComponentType)(tyEnum_EComponentType__OL9cRu1YCf6JCQTvzKVm7pA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioOutputTarget)(tyEnum_EAudioOutputTarget__gcjv51I6LmSGdEv4VLNqQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlendableLocation)(tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlendSpaceAxis)(tyEnum_EBlendSpaceAxis__eThO4XN8idGY6OXTzU72jw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPreferredTriangulationDirection)(tyEnum_EPreferredTriangulationDirection__HGOHvLNsuHpynHsQO89cF1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlendSpacePerBoneBlendMode)(tyEnum_EBlendSpacePerBoneBlendMode__TzGLXZpksk6VA1yYDZsWFQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENotifyTriggerMode)(tyEnum_ENotifyTriggerMode__5omyYQa1QjJ8LkQEhIrB8g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlueprintStatus)(tyEnum_EBlueprintStatus__zfT1n9aJnqQ9ctR2maJb9c9bvg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlueprintType)(tyEnum_EBlueprintType__kSGDtcjPktUXVuy0WvyTTw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlueprintCompileMode)(tyEnum_EBlueprintCompileMode__8tDupO9bxTR1MrYWNnr5v9cA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlueprintNativizationFlag)(tyEnum_EBlueprintNativizationFlag__W1lI8BMTzUcVla1LRyGX7g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEShouldCookBlueprintPropertyGuids)(tyEnum_EShouldCookBlueprintPropertyGuids__Of2g5COmXwHIGmKns2cPwA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECsgOper)(tyEnum_ECsgOper__caPcwmRQY0eOmiyhUX4TnQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBrushType)(tyEnum_EBrushType__mVZtw5EL0EveeKDC31p6Mw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStreamingSourceTargetBehavior)(tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraShakePlaySpace)(tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECloudStorageDelegate)(tyEnum_ECloudStorageDelegate__vXeBiVl9bdd5FUiak59atcoQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEContentBundleClientState)(tyEnum_EContentBundleClientState__I9b4a7puWgxgXvthzR4jGeQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWorldContentState)(tyEnum_EWorldContentState__bnFMyPU29aoWf9b8AH4tLBSA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEContentBundleStatus)(tyEnum_EContentBundleStatus__nZ9a5vsa69biAyp9bzGJKJVbw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomAttributeBlendType)(tyEnum_ECustomAttributeBlendType__Jvf4En5kXfTOkMzx9bxqMRw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDataLayerType)(tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepDistributionParamMode)(tyEnum_DistributionParamMode__2zWZsUqm8BROpkFqKEHvNw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDistributionVectorLockFlags)(tyEnum_EDistributionVectorLockFlags__RtCW2vKj4s9bBWDGwOGfRkw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDistributionVectorMirrorFlags)(tyEnum_EDistributionVectorMirrorFlags__QkCwG1lYBc32hLp9alkeGkg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEdGraphPinDirection)(tyEnum_EEdGraphPinDirection__70IoIYXXMTBVZNql8ZDevg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPinContainerType)(tyEnum_EPinContainerType__b0zYOE3aDgOeIIwKnVz9cYQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENodeTitleType)(tyEnum_ENodeTitleType__BV9bu9c3jxdOpA3pnuwsprAw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENodeAdvancedPins)(tyEnum_ENodeAdvancedPins__b8lDMIWVQK3zkUJygyRZPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENodeEnabledState)(tyEnum_ENodeEnabledState__9aLWkWoKS8aSp70KeQtulVg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlueprintPinStyleType)(tyEnum_EBlueprintPinStyleType__eDCrkJhMm9aGSaukS72tzXQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGraphType)(tyEnum_EGraphType__1MLRhhE13lNRmE0NxpL8RA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECanCreateConnectionResponse)(tyEnum_ECanCreateConnectionResponse__A2x6DXk3IaIsrnYN9b9a9biGA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFullyLoadPackageType)(tyEnum_EFullyLoadPackageType__3xM9bDLMv7VMJwXslxSOQiw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransitionType)(tyEnum_ETransitionType__rBmXdR1WoF3U2Z4vKw8qjg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMouseCaptureMode)(tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENetworkLagState)(tyEnum_ENetworkLagState__v9bvlSmkNdeK11IkGuA1JHA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETravelType)(tyEnum_ETravelType__Q3R9b21ZBJDgJJoKWU3cMHA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDemoPlayFailure)(tyEnum_EDemoPlayFailure__3FfPq289ba2pxHUdZ9ciiALw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEViewModeIndex)(tyEnum_EViewModeIndex__5wCj6DktydcBnRIACSNDiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAspectRatioAxisConstraint)(tyEnum_EAspectRatioAxisConstraint__hMrtrGOXn5nUJD8zD654Hw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESceneDepthPriorityGroup)(tyEnum_ESceneDepthPriorityGroup__yvgFPochB4gCG4GB4aSZ3w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEIndirectLightingCacheQuality)(tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELightmapType)(tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOcclusionCombineMode)(tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlendMode)(tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialFloatPrecisionMode)(tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESamplerSourceMode)(tyEnum_ESamplerSourceMode__H7htG9bD1j1UOEcWqBkk22A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureMipValueMode)(tyEnum_ETextureMipValueMode__1GTnkOIPBrVBcP03daoqnQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETranslucencyLightingMode)(tyEnum_ETranslucencyLightingMode__9cjdjlxX1woQogudop3hHtg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERefractionMode)(tyEnum_ERefractionMode__J3U9cG7FkMguL9bHUy29b6DFw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETranslucentSortPolicy)(tyEnum_ETranslucentSortPolicy__Vod5MU9c17mVjSoZx9crddgw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWorldPartitionStreamingPerformance)(tyEnum_EWorldPartitionStreamingPerformance__WsygRCmP6w3mgwaQmA9bDQQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWorldPartitionRuntimeCellState)(tyEnum_EWorldPartitionRuntimeCellState__vkrpaNcih6ma2naZWG9cYYQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEShadowMapMethod)(tyEnum_EShadowMapMethod__wx8oaEuOLB7n6eLDhJI25A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECastRayTracedShadow)(tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESceneCaptureSource)(tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESceneCaptureCompositeMode)(tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGBufferFormat)(tyEnum_EGBufferFormat__86vc9cx9bxPjVBs8aa0fskjw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETrailWidthMode)(tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleCollisionMode)(tyEnum_EParticleCollisionMode__xU9bjOjdnMhesN3ViPatOjg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialShadingModel)(tyEnum_EMaterialShadingModel__xyOBUs9bf1YnvkF0BffY9bOQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStrataShadingModel)(tyEnum_EStrataShadingModel__b9aH0BOybVFKu6kHMyvTaiw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialSamplerType)(tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialStencilCompare)(tyEnum_EMaterialStencilCompare__SAqASZAXCy9cyGoGjSh9bj1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialShadingRate)(tyEnum_EMaterialShadingRate__9bc205y9c4nZ7tmA09btUAang fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELightingBuildQuality)(tyEnum_ELightingBuildQuality__NNXqbDMfeM5zWfiNfWM5FA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENetworkSmoothingMode)(tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOverlapFilterOption)(tyEnum_EOverlapFilterOption__OIIDd7vz9aPWwt9cwRcXAS0A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECollisionResponse)(tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFilterInterpolationType)(tyEnum_EFilterInterpolationType__QZuTV6YVOWdpVgXbMEsoDw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETimelineSigType)(tyEnum_ETimelineSigType__DYZhh9chri3yp6SgVR0PoHg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECollisionEnabled)(tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELightMapPaddingType)(tyEnum_ELightMapPaddingType__EBKlfUrJt8da9aD8dVJbI7Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEShadowMapFlags)(tyEnum_EShadowMapFlags__b1RxfbK9bnTEMpM2qYwotYg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUpdateRateShiftBucket)(tyEnum_EUpdateRateShiftBucket__4nqvm49bT4G4zHMzYy8QJNQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENetRole)(tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENetDormancy)(tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAutoReceiveInput)(tyEnum_EAutoReceiveInput__R2s518eVW3kD12Bb1SqVpg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAutoPossessAI)(tyEnum_EAutoPossessAI__XvyNnoTpfIhkQFX9cdsx9cQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHLODLayerType)(tyEnum_EHLODLayerType__IxD7IBen3Z1El7t0M0pd8A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysicalMaterialMaskColor)(tyEnum_EPhysicalMaterialMaskColor__pg9bAAYwM5oYNtr0wgVr52Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEComponentSocketType)(tyEnum_EComponentSocketType__bL7yWKvQrcu9bmSlmcIY9aiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESpawnActorCollisionHandlingMethod)(tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshBufferAccess)(tyEnum_EMeshBufferAccess__7LifWE9aiZGG4qlcGgr2d3A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFontImportCharacterSet)(tyEnum_EFontImportCharacterSet__8e21JOPYHf6PreHGZY1z9cQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStandbyType)(tyEnum_EStandbyType__FBt4EYKR4479a42Bfgm4Liw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESuggestProjVelocityTraceOption)(tyEnum_ESuggestProjVelocityTraceOption__KuHBSpJifpeqmLf689cx8uA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHISMViewRelevanceType)(tyEnum_EHISMViewRelevanceType__8bRhyIbQNzcPV2sEvkTMBw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHitProxyPriority)(tyEnum_EHitProxyPriority__4g2Z2aEWALqFQ9c64WvNS5Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHLODBatchingPolicy)(tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHLODLevelExclusion)(tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAdManagerDelegate)(tyEnum_EAdManagerDelegate__wqSFOJ4eKO5z29aHPJSTp1Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERoundingMode)(tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEScreenPercentageMode)(tyEnum_EScreenPercentageMode__yEWV76H3bHdlxclGYIWpeQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELevelInstanceRuntimeBehavior)(tyEnum_ELevelInstanceRuntimeBehavior__at9c3wCm9cFrEaFafwA09cxJg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELevelInstanceCreationType)(tyEnum_ELevelInstanceCreationType__kfOTnfbIfnhsZVKICn5B7w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELevelInstancePivotType)(tyEnum_ELevelInstancePivotType__pXtNFsI7UMThU0CvxwEHng fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStreamingVolumeUsage)(tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialDomain)(tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureColorChannel)(tyEnum_ETextureColorChannel__vZOW1sJVMiG7RKJ3BLgglw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialAttributeBlend)(tyEnum_EMaterialAttributeBlend__4cp6dbunE2fduW9b5sv9bdDg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEChannelMaskParameterColor)(tyEnum_EChannelMaskParameterColor__bB4Pz8f6UiP2hFUydBeiLg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEClampMode)(tyEnum_EClampMode__P2iUlGPxAjdgPTvnoefUdg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomMaterialOutputType)(tyEnum_ECustomMaterialOutputType__2mA29brMTzIZxVL34VpOM8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDataDrivenShaderPlatformInfoCondition)(tyEnum_EDataDrivenShaderPlatformInfoCondition__O2CVLMURZSh8ENVl3Y3ZUA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDBufferTextureId)(tyEnum_EDBufferTextureId__ctFSTdvTKMU9bTfi6U2ljxA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDepthOfFieldFunctionValue)(tyEnum_EDepthOfFieldFunctionValue__pewdhwiewKcXMt29a9bmyN2g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFunctionInputType)(tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENoiseFunction)(tyEnum_ENoiseFunction__jsdWzG7tfhr1AnYyDL2J8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERuntimeVirtualTextureMipValueMode)(tyEnum_ERuntimeVirtualTextureMipValueMode__NkGE7eHcA1b65E1rdBV1Bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERuntimeVirtualTextureTextureAddressMode)(tyEnum_ERuntimeVirtualTextureTextureAddressMode__h2epoV7IquW3hy1LonhhfA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialSceneAttributeInputMode)(tyEnum_EMaterialSceneAttributeInputMode__56eLkLlAcqN1R5dFSf1E9aw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESpeedTreeGeometryType)(tyEnum_ESpeedTreeGeometryType__xPBJefUSkTtMepcMcL2PTA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESpeedTreeWindType)(tyEnum_ESpeedTreeWindType__pE9b04IT49cQYaBZoc1WZrfQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESpeedTreeLODType)(tyEnum_ESpeedTreeLODType__bMMP3orBZGRettLh4CYZdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESwitchMaterialOutputType)(tyEnum_ESwitchMaterialOutputType__LF6wkeLDPgKgScO6LnbsUg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialExposedTextureProperty)(tyEnum_EMaterialExposedTextureProperty__J7LPZLMW71fZVqGkhDqOvA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialVectorCoordTransformSource)(tyEnum_EMaterialVectorCoordTransformSource__Yo3FZtm9bd9aS8fCNU7fYwjw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialVectorCoordTransform)(tyEnum_EMaterialVectorCoordTransform__1SjLfLHwNO9bWS3duaZqXVA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialPositionTransformSource)(tyEnum_EMaterialPositionTransformSource__GjbjhUiWlcmt66PGaHE9cAg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVectorNoiseFunction)(tyEnum_EVectorNoiseFunction__LAj0bk2Jm17WlZI9aZnsfZg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialExposedViewProperty)(tyEnum_EMaterialExposedViewProperty__ObRtjcES2AyRKIidN1Lhmg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWorldPositionIncludedOffsets)(tyEnum_EWorldPositionIncludedOffsets__9aUn9b7YMvVWig27VMVnmrQw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialFunctionUsage)(tyEnum_EMaterialFunctionUsage__WhTdKHj0DSuuVoF2UEmgaw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialUsage)(tyEnum_EMaterialUsage__T2TF5LpY3CEkFGE7gAvFMA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialLayerLinkState)(tyEnum_EMaterialLayerLinkState__049bntwKEjzBnAuDV7gku8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureSizingType)(tyEnum_ETextureSizingType__OSAHrU2hhM8DmHY9a1l9aEIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialMergeType)(tyEnum_EMaterialMergeType__n1J8GhB87kMB5rdNNXwvYA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESceneTextureId)(tyEnum_ESceneTextureId__M9bK4Xzlp48YAthgj0Jzcag fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDataLayerState)(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMicroTransactionDelegate)(tyEnum_EMicroTransactionDelegate__9c5mR3sbGg9cix6Ms79akvN0A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMicroTransactionResult)(tyEnum_EMicroTransactionResult__rTmcCmNKdmsFwus7Ov1pIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavigationDataResolution)(tyEnum_ENavigationDataResolution__U7Mrzd0xwgR9aI5eCLidQFw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavLinkDirection)(tyEnum_ENavLinkDirection__t9aePIvBUBDC0y7Tf6uBEMA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPingType)(tyEnum_EPingType__kvMdH7fJUMu4f6ear0IvTQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPingAverageType)(tyEnum_EPingAverageType__pdYIr2vC08dB6y1I39aSR8w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleBurstMethod)(tyEnum_EParticleBurstMethod__WpW4kbt3AYPpHyTpoZQZ8w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSubUVInterpMethod)(tyEnum_EParticleSubUVInterpMethod__O4VJK6rMDQ2aQpBOrEOqLA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEmitterRenderMode)(tyEnum_EEmitterRenderMode__zrgei40n58zpQpYOLmL5lQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleDetailMode)(tyEnum_EParticleDetailMode__CRemacA7qH9czV7QkeZPM9cw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSignificanceLevel)(tyEnum_EParticleSignificanceLevel__MOXswtNU2qzUnNJKb6qD2w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSystemInsignificanceReaction)(tyEnum_EParticleSystemInsignificanceReaction__5tLz8ZhiJYOwMOxz8Ax6YA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModuleType)(tyEnum_EModuleType__Od86t2g9b352X06sC9bfNs0w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSourceSelectionMethod)(tyEnum_EParticleSourceSelectionMethod__hwVDGbsbaQnDTw1BXPNnSg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttractorParticleSelectionMethod)(tyEnum_EAttractorParticleSelectionMethod__JNPJnA69amZQ4GCe5QOI0bQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepBeam2SourceTargetMethod)(tyEnum_Beam2SourceTargetMethod__gu2NYQgG9ceusoWOmB9amibA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepBeam2SourceTargetTangentMethod)(tyEnum_Beam2SourceTargetTangentMethod__L9bOR9cZ0ma4588YYhldF5AA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepBeamModifierType)(tyEnum_BeamModifierType__OZqcshh4McMzfaLHwuf3Tw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleCameraOffsetUpdateMethod)(tyEnum_EParticleCameraOffsetUpdateMethod__vft8A9btA3r9c4J5fvqAJ5aw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleCollisionComplete)(tyEnum_EParticleCollisionComplete__wc2mBsurRfhtssVLQdrUew fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleCollisionResponse)(tyEnum_EParticleCollisionResponse__lY54TnrViJFm9b9c8kgDof8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELocationBoneSocketSource)(tyEnum_ELocationBoneSocketSource__a4VjrNI9b5cQMABWShCGHBA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELocationBoneSocketSelectionMethod)(tyEnum_ELocationBoneSocketSelectionMethod__g4rg0RVf9cg4yRay21nrCIw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELocationEmitterSelectionMethod)(tyEnum_ELocationEmitterSelectionMethod__4LSK4ANwTAs4EblSGwpZiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepCylinderHeightAxis)(tyEnum_CylinderHeightAxis__GOpNp4T4VixCPH0GH5PaZA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELocationSkelVertSurfaceSource)(tyEnum_ELocationSkelVertSurfaceSource__i9bi0zR59c9awmxPTaR77ugcA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOrbitChainMode)(tyEnum_EOrbitChainMode__w06nsT4iiLznUW5WwE9bWOg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleAxisLock)(tyEnum_EParticleAxisLock__9a9c7gOufNXIa8YVEbR4Y0Dw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEmitterDynamicParameterValue)(tyEnum_EEmitterDynamicParameterValue__hN6gW2eKzA9aSwFjGzMdtOQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleUVFlipMode)(tyEnum_EParticleUVFlipMode__BIDoT11OH3XX8TZav2Jq9cw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSortMode)(tyEnum_EParticleSortMode__9cEdNH263LsVFv6yC9avFYCQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEmitterNormalsMode)(tyEnum_EEmitterNormalsMode__uKqpWjABVjoGjjMU39cRnoQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETrail2SourceMethod)(tyEnum_ETrail2SourceMethod__mbFjtZysZnpkohIj2SMAmw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBeam2Method)(tyEnum_EBeam2Method__9cFrbqkeww0ml4b1FB9avftw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBeamTaperMethod)(tyEnum_EBeamTaperMethod__lTO2dKvfpCuKTSDkeNlCFQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshScreenAlignment)(tyEnum_EMeshScreenAlignment__MWjd8AqOlvVcw3sW20UQKw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshCameraFacingUpAxis)(tyEnum_EMeshCameraFacingUpAxis__4PRRWBt3BawOki71uGhTbQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshCameraFacingOptions)(tyEnum_EMeshCameraFacingOptions__vCHaQPL9aI2JtKHBdTxGHpA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETrailsRenderAxisOption)(tyEnum_ETrailsRenderAxisOption__ezW1OnJPRm05vZJ37IZlWg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleScreenAlignment)(tyEnum_EParticleScreenAlignment__eGoZy0OTwRoDNty6e2pDKw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSystemUpdateMode)(tyEnum_EParticleSystemUpdateMode__03Y0XkdGe9bPC39csACDCwRA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepParticleSystemLODMethod)(tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSystemOcclusionBoundsMethod)(tyEnum_EParticleSystemOcclusionBoundsMethod__1076NY75IYoJYhSJoV9aSmQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleSysParamType)(tyEnum_EParticleSysParamType__TrAG2K4DxpIEqXB4OyK9cdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepParticleReplayState)(tyEnum_ParticleReplayState__9bb76dCkQOl8T1WGKR19cycQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEParticleEventType)(tyEnum_EParticleEventType__CdX4rxrds9bgr55geeo7pWA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEViewTargetBlendFunction)(tyEnum_EViewTargetBlendFunction__bD49atsfKhTFQYLRCUW0iGQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECanBeCharacterBase)(tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHasCustomNavigableGeometry)(tyEnum_EHasCustomNavigableGeometry__wEdHOpxZ9c0QaQVRx9a9aLfog fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERendererStencilMask)(tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERayTracingGroupCullingPriority)(tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveInterpMode)(tyEnum_ERichCurveInterpMode__r7w9a9b9cV1sgSNj1g9anCOMBw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveExtrapolation)(tyEnum_ERichCurveExtrapolation__NzyMlzW7v9bY5DJccKvfrLQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepReverbPreset)(tyEnum_ReverbPreset__ToVYmBqzyKpD49bxQJMV89bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveTangentMode)(tyEnum_ERichCurveTangentMode__8lF1QO9aj3Yjb2wysqxxZiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveTangentWeightMode)(tyEnum_ERichCurveTangentWeightMode__RrYKuPYXcydVRf33S6onNw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveCompressionFormat)(tyEnum_ERichCurveCompressionFormat__UjPtY3pEt3TqXpHydpC8bQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERichCurveKeyTimeCompressionFormat)(tyEnum_ERichCurveKeyTimeCompressionFormat__sP9aE5SUVIY9axpDrzCp6GPA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERuntimeVirtualTextureMaterialType)(tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERuntimeVirtualTextureMainPassType)(tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDepthOfFieldMethod)(tyEnum_EDepthOfFieldMethod__LyqQrwRynWyE6AKb9bgNkZg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUIScalingRule)(tyEnum_EUIScalingRule__YhnAKv27O9aIXqXNLamMv2g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERenderFocusRule)(tyEnum_ERenderFocusRule__vy2hIUaJEhhwM9c0vCNWJNg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureRenderTargetFormat)(tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELightUnits)(tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReflectionsType)(tyEnum_EReflectionsType__3MEQmzUGMghZuaB3ddNqEg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureEncodeSpeedOverride)(tyEnum_ETextureEncodeSpeedOverride__9abqAHRiNyAVpxjszjKLVyQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureUniversalTiling)(tyEnum_ETextureUniversalTiling__gsCW2vZf49az9bHcqtfg9cMFg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureEncodeEffort)(tyEnum_ETextureEncodeEffort__agwOPPnI9cIzzz8FAD9bcJbw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOptimizationType)(tyEnum_EOptimizationType__aMSqQdpoWapCnHfSfIB06Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMobilePlanarReflectionMode)(tyEnum_EMobilePlanarReflectionMode__B1g4hnKqBJYaI6xG5V9b1fg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMobilePixelProjectedReflectionQuality)(tyEnum_EMobilePixelProjectedReflectionQuality__KOOZQWfcf3UH9czKnPe161A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialProperty)(tyEnum_EMaterialProperty__7tXom29aFagEQImJunDk9cuw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAntiAliasingMethod)(tyEnum_EAntiAliasingMethod__FxISTdSY7ZAaBUIpAYymwg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkeletalMeshGeoImportVersions)(tyEnum_ESkeletalMeshGeoImportVersions__rV5Jky4Ch44zSPcv34q8Fg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkeletalMeshSkinningImportVersions)(tyEnum_ESkeletalMeshSkinningImportVersions__EkcgCBonlGfbPdO7T9cUXGQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepSkeletalMeshTerminationCriterion)(tyEnum_SkeletalMeshTerminationCriterion__sRHZtrFD9c4hqV9cO78rsZzg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepSkeletalMeshOptimizationType)(tyEnum_SkeletalMeshOptimizationType__MXaWinT8ZUQjb7fx5aDqaA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepSkeletalMeshOptimizationImportance)(tyEnum_SkeletalMeshOptimizationImportance__GGcoK0vTFfSuRxDIr0pHRg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneVisibilityStatus)(tyEnum_EBoneVisibilityStatus__Q9c3fuagPHzfIw8R2S9a57XQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysBodyOp)(tyEnum_EPhysBodyOp__ZRipZLaIbTXziX2enGnveA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVisibilityBasedAnimTickOption)(tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneSpaces)(tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkyLightSourceType)(tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundDistanceCalc)(tyEnum_ESoundDistanceCalc__9bAjikRSGHc9aMUKYpPH9c5xw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEImportanceLevel)(tyEnum_EImportanceLevel__lHtwcZnTAwq9aF1boDsSyqw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENormalMode)(tyEnum_ENormalMode__9ccfGI5MPD2CkdRhd1Bt9bMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESubmixSendStage)(tyEnum_ESubmixSendStage__tktZ7ezQlZEpnMgqAqkyJQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGainParamMode)(tyEnum_EGainParamMode__isL7DeAbYICYc75UNN9bvZA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESendLevelControlMethod)(tyEnum_ESendLevelControlMethod__BU7L2C5p1GBUCH3NDwWbKQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundGroup)(tyEnum_ESoundGroup__GpqbMQj9bWn0iRMRVbNpeKA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepModulationParamMode)(tyEnum_ModulationParamMode__mh86zLCKa9aDBTljVFzjDHA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESourceBusSendLevelControlMethod)(tyEnum_ESourceBusSendLevelControlMethod__QhqmTdz7DfjGKOp8pli7Eg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDecompressionType)(tyEnum_EDecompressionType__mXjjit9c9cUe2YBEbYKBwo3w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundWaveFFTSize)(tyEnum_ESoundWaveFFTSize__1FLfhVJ02SuGlxvyf1SvGw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundAssetCompressionType)(tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESoundWaveLoadingBehavior)(tyEnum_ESoundWaveLoadingBehavior__qfM0CE4G4Iztm3u9bZ1u09bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStereoLayerType)(tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStereoLayerShape)(tyEnum_EStereoLayerShape__qp4EfWg3n6LBIU9byii1Mww fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESubUVBoundingVertexCount)(tyEnum_ESubUVBoundingVertexCount__qpCgfpJzY5HZCJfGL3m0XQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOpacitySourceMode)(tyEnum_EOpacitySourceMode__a3nMvSi9a3yLgoWc9bn3HDjA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHorizTextAligment)(tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVerticalTextAligment)(tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureGroup)(tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureMipGenSettings)(tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETexturePowerOfTwoSetting)(tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureSamplerFilter)(tyEnum_ETextureSamplerFilter__h4PIK1Ssnd2K3mvvPax2bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureMipLoadOptions)(tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureDownscaleOptions)(tyEnum_ETextureDownscaleOptions__pbGqcf2SwEYttX4ColUCZw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureLossyCompressionAmount)(tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureEncodeSpeed)(tyEnum_ETextureEncodeSpeed__83ZKrjF0kbUeQUPNq9cTALA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureClass)(tyEnum_ETextureClass__HwK446ANjIqdLsgMWG9c1Pw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECompositeTextureMode)(tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureSourceCompressionFormat)(tyEnum_ETextureSourceCompressionFormat__v9bHP0kDx2SuG0CZGjelSRg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureSourceFormat)(tyEnum_ETextureSourceFormat__SJGmAPWTV5EHbCiDemW4HA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureCompressionSettings)(tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureSourceEncoding)(tyEnum_ETextureSourceEncoding__tlUWilERzGlMvrGWAxyIAw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureColorSpace)(tyEnum_ETextureColorSpace__cMzsuQibtEeLb9bSQ9cfneUQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureCookPlatformTilingSettings)(tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureChromaticAdaptationMethod)(tyEnum_ETextureChromaticAdaptationMethod__9c0onWHGG9bWvCfjQ8xPIOUw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureFilter)(tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag fake);
N_LIB_PRIVATE N_NIMCALL(void, keepTextureAddress)(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureMipCount)(tyEnum_ETextureMipCount__XqKNSs9aYHf5BIkn079aptBw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextureCompressionQuality)(tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETimelineLengthMode)(tyEnum_ETimelineLengthMode__UwOSsi5M2vIG2zFofBn0NQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETimelineDirection)(tyEnum_ETimelineDirection__BziiWqNR6y4V2pNAH555ig fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETwitterRequestMethod)(tyEnum_ETwitterRequestMethod__4KfFSV6420et1hLSTXYTiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETwitterIntegrationDelegate)(tyEnum_ETwitterIntegrationDelegate__PaSOfE6OnpMuxeutGvjWPQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUserDefinedStructureStatus)(tyEnum_EUserDefinedStructureStatus__DE5v9apn9bLV9afkgs9b3qUi0Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVectorFieldConstructionOp)(tyEnum_EVectorFieldConstructionOp__e9bFyongyo9bMfMDFrqDrOfA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESplitScreenType)(tyEnum_ESplitScreenType__1zFP4z0FeIWt6ngVVHLK5A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWindSourceType)(tyEnum_EWindSourceType__tgASMiEzikMy2tfW9aLcEXw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVisibilityAggressiveness)(tyEnum_EVisibilityAggressiveness__gqlziOIFuhwhS7UdaJFygg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVolumeLightingMethod)(tyEnum_EVolumeLightingMethod__V3zL9aUL0pQuGf1BNu7ChuQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHierarchicalSimplificationMethod)(tyEnum_EHierarchicalSimplificationMethod__bq9auzMeJNorYGmeqak5ZFA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuartzTimeSignatureQuantization)(tyEnum_EQuartzTimeSignatureQuantization__hNjyY9b1OZxEPoI9bpuTtQzw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuartzDelegateType)(tyEnum_EQuartzDelegateType__1C9bJ9bz9co0qJGrAfkDCeCdg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuarztQuantizationReference)(tyEnum_EQuarztQuantizationReference__ia81sowpu3Au6ehwTBowfA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEQuartzCommandType)(tyEnum_EQuartzCommandType__tSJsqh2Y3HMhQyjEAlJeJw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEActorUpdateOverlapsMethod)(tyEnum_EActorUpdateOverlapsMethod__f14bpYndCdb6mmydENaZaw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESpawnActorScaleMethod)(tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEActorGridPlacement)(tyEnum_EActorGridPlacement__hP7T4AnZYPKUD4UIz26h7w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavigationSystemRunMode)(tyEnum_FNavigationSystemRunMode__Qog57wwF1MdzYk9aAK8tvbA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavigationOptionFlag)(tyEnum_ENavigationOptionFlag__yCCqGy0t6nUqKeuNxIp0Ug fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavDataGatheringMode)(tyEnum_ENavDataGatheringMode__gv6Mx0sU6URzZJab2MUt1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavDataGatheringModeConfig)(tyEnum_ENavDataGatheringModeConfig__5CELEAz6FEUzzMLf8B2DGw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavigationQueryResult)(tyEnum_ENavigationQueryResult__nfD9cCvRJwyonDxaZx9bbhuw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioRecordingExportType)(tyEnum_EAudioRecordingExportType__qlXKZXxaYYHpNNXF9c6VXpw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimGroupRole)(tyEnum_EAnimGroupRole__0tpmCptyq83olRzRULzGcg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimSyncGroupScope)(tyEnum_EAnimSyncGroupScope__XKtvj2B67ynmA1UDjkElcw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimSyncMethod)(tyEnum_EAnimSyncMethod__JgU4trc9btp9bfDEJRu0t9cLQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimExecutionContextConversionResult)(tyEnum_EAnimExecutionContextConversionResult__AguTojMVKcn9aGpcxMHI0FQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMontagePlayReturnType)(tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDrawDebugItemType)(tyEnum_EDrawDebugItemType__y4oiluO2zehi5iweJRbpuA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimLinkMethod)(tyEnum_EAnimLinkMethod__cfeP6oeEcb2fEV39cJrkt9bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimNotifyEventType)(tyEnum_EAnimNotifyEventType__W49cfXdUFEskexRiGGkAHlw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMontageBlendMode)(tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMontageSubStepResult)(tyEnum_EMontageSubStepResult__1ZOUE9ayIQUMVvRxScF5mwQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPinHidingMode)(tyEnum_EPinHidingMode__0wNVaNYKI0uChN0xn51VFA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimNodeDataFlags)(tyEnum_EAnimNodeDataFlags__a8ctPtLghdReZZfJYtfr1g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimNodeReferenceConversionResult)(tyEnum_EAnimNodeReferenceConversionResult__8VeoQu9cAIDURuPgNuC249bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInertializationState)(tyEnum_EInertializationState__CjZetLxU2VduluDBMwiHZg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInertializationBoneState)(tyEnum_EInertializationBoneState__Q4nw3To9aTp7AUJaxMeco9bQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInertializationSpace)(tyEnum_EInertializationSpace__wJHcWNGwHQwqecF9chRR6jQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEvaluatorDataSource)(tyEnum_EEvaluatorDataSource__8uWsKNkTkOBtdWA2gGoEyg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEvaluatorMode)(tyEnum_EEvaluatorMode__Yy8Am9cDHM5rpESkAfChCLA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransitionRequestQueueMode)(tyEnum_ETransitionRequestQueueMode__x8ojufrQ2LY9a3P8sXTtX4A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransitionRequestOverwriteMode)(tyEnum_ETransitionRequestOverwriteMode__SuW15yRCTZRz68GQ9cQsXwg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransitionBlendMode)(tyEnum_ETransitionBlendMode__JqZt8tpg9bFHJ2C4Go2qhcQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransitionLogicType)(tyEnum_ETransitionLogicType__hTbgSPQoaDLhluveIrMYcA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimPropertyAccessCallSite)(tyEnum_EAnimPropertyAccessCallSite__2rLOmJGn9cJ4Zy55cgIZM5g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBlendProfileMode)(tyEnum_EBlendProfileMode__r6YmpgP9am9c9bbK9bDGuZ8AOA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETransformCurveChannel)(tyEnum_ETransformCurveChannel__sG9cBroBwptcTasMM12j8Dg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVectorCurveChannel)(tyEnum_EVectorCurveChannel__58B9b1w9bqluWs3jPQdB1c6A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPostCopyOperation)(tyEnum_EPostCopyOperation__1LUcJV9cVMajHtJ6v9bCraRw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimAlphaInputType)(tyEnum_EAnimAlphaInputType__qqkmIhiXk03m9bkSCSRl5ZQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMirrorRowType)(tyEnum_EMirrorRowType__wH7Y4nlVL9aQA6RSlcj9ckcQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMirrorFindReplaceMethod)(tyEnum_EMirrorFindReplaceMethod__qXMeoilz9aG3axrio14HfIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEControlConstraint)(tyEnum_EControlConstraint__jYKcdQAXSVwwFzMJBAYnew fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConstraintTransform)(tyEnum_EConstraintTransform__m8TsyoZQ1bN1rghQVA2P8Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneTranslationRetargetingMode)(tyEnum_EBoneTranslationRetargetingMode__XTT9aT9c9bgwbQTlBe4A4u9aYg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETimeStretchCurveMapping)(tyEnum_ETimeStretchCurveMapping__brqHjJIHq3cMv5sgfob64w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPreviewAnimationBlueprintApplicationMethod)(tyEnum_EPreviewAnimationBlueprintApplicationMethod__b9a1VkewVD7UxIhf0RqiLpQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPrimaryAssetCookRule)(tyEnum_EPrimaryAssetCookRule__k5pXLvtytdRPv9bPxgCYroQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttenuationDistanceModel)(tyEnum_EAttenuationDistanceModel__9c07egXX6esE9aE9bPNNiHqHA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttenuationShape)(tyEnum_EAttenuationShape__yhz5u9b0A65Ya40XQ47a8fA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENaturalSoundFalloffMode)(tyEnum_ENaturalSoundFalloffMode__wycxNV4Mi37juKZEMTK1lQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioBusChannels)(tyEnum_EAudioBusChannels__KUMWQY2fjte9a56ws15sE2g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVoiceSampleRate)(tyEnum_EVoiceSampleRate__rmVyXWgDxNie4eqEgLxM4A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPanningMethod)(tyEnum_EPanningMethod__7KiW9bUqFboQXwCWAPNFlMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMonoChannelUpmixMethod)(tyEnum_EMonoChannelUpmixMethod__T5OEN9c4YQJPCosTRcqr70g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDefaultAudioCompressionType)(tyEnum_EDefaultAudioCompressionType__Ez5H6QETdPVfLaDLCvK0GQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioVolumeLocationState)(tyEnum_EAudioVolumeLocationState__cgdNqGrtoyp23ISYdoxqLw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInterfaceValidResult)(tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraShakeUpdateResultFlags)(tyEnum_ECameraShakeUpdateResultFlags__qtgdUGaDANIccSTxWwNmMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraShakeDurationType)(tyEnum_ECameraShakeDurationType__r9bYuIEmrsu2qoUyuYYUGTQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraShakeAttenuation)(tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECameraAlphaBlendMode)(tyEnum_ECameraAlphaBlendMode__qV3bdcWucOAyyUDa9c606zA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioFaderCurve)(tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModulationDestination)(tyEnum_EModulationDestination__5CB3PIMhfpTilSQJrD7fnw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEChildActorComponentTreeViewVisualizationMode)(tyEnum_EChildActorComponentTreeViewVisualizationMode__P8VgEzNh71IZ9cCcR5XeVFQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEControllerAnalogStick)(tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESyncOption)(tyEnum_ESyncOption__Wq9aDRl7DEltrSCAaJ7E7og fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReflectionSourceType)(tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESceneCapturePrimitiveRenderMode)(tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomBoneAttributeLookup)(tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEKinematicBonesUpdateToPhysics)(tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAnimationMode)(tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysicsTransformUpdateMode)(tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkyAtmosphereTransformMode)(tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESplinePointType)(tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESplineCoordinateSpace)(tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESplineMeshAxis)(tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVolumetricCloudTracingMaxDistanceMode)(tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECurveTableMode)(tyEnum_ECurveTableMode__gf8RU4Cyq7T7aOzoQZmtow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDataDrivenCVarType)(tyEnum_FDataDrivenCVarType__9crpm1bfI3vv9a6HLcZqlhyg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEvaluateCurveTableResult)(tyEnum_EEvaluateCurveTableResult__Cz3R9cE75Z6VtgD7SPlaxXg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReporterLineStyle)(tyEnum_EReporterLineStyle__WanNyNLrPp6OgRFwxqGVsA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGraphAxisStyle)(tyEnum_EGraphAxisStyle__StYNnKdmEbcC2GKlLCVLHQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGraphDataStyle)(tyEnum_EGraphDataStyle__k9cpBs62P5dAGUkV7ELxH2w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELegendPosition)(tyEnum_ELegendPosition__6AbBmHxb1q89cY9aKgByj1XA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGrammaticalGender)(tyEnum_EGrammaticalGender__rHxoW2Nm9czeucElZeG79cqA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGrammaticalNumber)(tyEnum_EGrammaticalNumber__K7UFRoh52B1d9accqY0KQRQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETypedElementWorldType)(tyEnum_ETypedElementWorldType__7Sj9cv3PKdTPsymH5lkSS2A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomTimeStepSynchronizationState)(tyEnum_ECustomTimeStepSynchronizationState__zBXqJQcv5YdTLjd9cOvhQAg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVectorQuantization)(tyEnum_EVectorQuantization__mby19a8M2ZMXAUxl4ggGZWA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERotatorQuantization)(tyEnum_ERotatorQuantization__TdBQDTC1E9b1P3tYDpfet4Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETimecodeProviderSynchronizationState)(tyEnum_ETimecodeProviderSynchronizationState__7yX6oALT9bm9caipovYyZdxQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFontCacheType)(tyEnum_EFontCacheType__fRhLFlAE4qhYyDkGs69bLZQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionAccumulateMode)(tyEnum_ERootMotionAccumulateMode__KpcDFOcEBULHw2jXW7XfiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionSourceStatusFlags)(tyEnum_ERootMotionSourceStatusFlags__MbUBKG1zArr7PSJZ9bhbltg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionSourceSettingsFlags)(tyEnum_ERootMotionSourceSettingsFlags__74zwVDywhRnwxZr9bOBxZdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionFinishVelocityMode)(tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWindowMode)(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateGesture)(tyEnum_ESlateGesture__Pscv9bCSeopgM2S4iny2Wjw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMIDCreationFlags)(tyEnum_EMIDCreationFlags__VI0UMZsMNapQIo2qZneX9bQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEasingFunc)(tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELerpInterpolationMode)(tyEnum_ELerpInterpolationMode__1hcOsNVo9arJEZAb4iAEcLg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMatrixColumns)(tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEImportanceWeight)(tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEActorPackagingScheme)(tyEnum_EActorPackagingScheme__srPeHn1pMaDfwnrL7Cvlow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDecalBlendMode)(tyEnum_EDecalBlendMode__1o0MR8Mmz9cUz9c4NAPxGjyg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialDecalResponse)(tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaterialTranslucencyPass)(tyEnum_EMaterialTranslucencyPass__Ew5hgBz89bD4GAsUrCj06pw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshFeatureImportance)(tyEnum_EMeshFeatureImportance__urQysqAJ8lU62e9bhAFY51Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELandscapeCullingPrecision)(tyEnum_ELandscapeCullingPrecision__25upTRHdd2ed0PAPYS9b2kQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEProxyNormalComputationMethod)(tyEnum_EProxyNormalComputationMethod__eiPIJ0jiVVQ8aPFpq9c3AbQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshLODSelectionType)(tyEnum_EMeshLODSelectionType__9agnVpccVBEFJy9aQsbzBEQQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshMergeType)(tyEnum_EMeshMergeType__yVLxiy9cEy42DGnMwH06u1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUVOutput)(tyEnum_EUVOutput__9a8uDZWqbXzJn8KSkhpynBA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshApproximationType)(tyEnum_EMeshApproximationType__rSR9btkn6Vl6FTrA57H50kg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshApproximationBaseCappingType)(tyEnum_EMeshApproximationBaseCappingType__aKrfLOyIUyPPShODXxWJfw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOccludedGeometryFilteringPolicy)(tyEnum_EOccludedGeometryFilteringPolicy__YJY1oiWF9cV2thXs2ZFYmzQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshApproximationSimplificationPolicy)(tyEnum_EMeshApproximationSimplificationPolicy__EJ6Ed9cKSvgahw1IvVOG5TQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshApproximationGroundPlaneClippingPolicy)(tyEnum_EMeshApproximationGroundPlaneClippingPolicy__9b0UK9bd9cMuT04HYN5HKeTAw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMeshApproximationUVGenerationPolicy)(tyEnum_EMeshApproximationUVGenerationPolicy__MSaMB9ck8d9b9ahM9atq8EtvPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVertexPaintAxis)(tyEnum_EVertexPaintAxis__xnbGI2wHzvdGeHn8hpYsPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEReplayResult)(tyEnum_EReplayResult__342B7hfXRpGNdAEBFyHLpQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPSCPoolMethod)(tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPerQualityLevels)(tyEnum_EPerQualityLevels__acmnnNL9bB2U12jxcx4FOGg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDOFMode)(tyEnum_EDOFMode__Ae5jNwUvq1zlHN6TSX1GFA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAngularDriveMode)(tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConstraintTransformComponentFlags)(tyEnum_EConstraintTransformComponentFlags__ZA0GlyN5tkYyRF133fholA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysicsAssetSolverType)(tyEnum_EPhysicsAssetSolverType__offPalqzN009cA3cE5c29cpg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESettingsDOF)(tyEnum_ESettingsDOF__IVjBkoQTWG3U09baj9bwMmHQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESettingsLockedAxis)(tyEnum_ESettingsLockedAxis__9a7BoTatNMV7HlQbOVPHgqg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDynamicForceFeedbackAction)(tyEnum_EDynamicForceFeedbackAction__8KJfWx2uBQLb8KhKL7Nljg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVoiceBlockReasons)(tyEnum_EVoiceBlockReasons__1FlfhYAC9aE7Y9bxxMuPJeOg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPropertyAccessCopyBatch)(tyEnum_EPropertyAccessCopyBatch__XgCaeF8Xv4VQtJe3AFMWyg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPropertyAccessIndirectionType)(tyEnum_EPropertyAccessIndirectionType__he0ipDUTlJNOLDGcTwabOg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPropertyAccessObjectType)(tyEnum_EPropertyAccessObjectType__nuPxvLKnGNFfiSTij3mnbg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPropertyAccessCopyType)(tyEnum_EPropertyAccessCopyType__RINJSvTPzQV414OieyJA4w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEClearSceneOptions)(tyEnum_EClearSceneOptions__6DunOwK4W7wqaEa5W9aziiA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECompositingSampleCount)(tyEnum_ECompositingSampleCount__vAEP9bxeONiJYzI4arkRRXA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomDepthStencil)(tyEnum_ECustomDepthStencil__9b1qh3eHya9c21VKvDfI8A9aQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEEarlyZPass)(tyEnum_EEarlyZPass__GWcmHPWByBFjlscXWcCwIg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVelocityOutputPass)(tyEnum_EVelocityOutputPass__9bVp39cC5pB6YQd0TuQSsUtA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVertexDeformationOutputsVelocity)(tyEnum_EVertexDeformationOutputsVelocity__cwRx6V6Jmb9ajnttyUVMldg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAlphaChannelMode)(tyEnum_EAlphaChannelMode__O1jJfd14S6eaAW4XKoRpEQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAutoExposureMethodUI)(tyEnum_EAutoExposureMethodUI__VvqLDzpHla6siCig9b9aoWwQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDefaultBackBufferPixelFormat)(tyEnum_EDefaultBackBufferPixelFormat__MtpI5VUV3urPvnhTUq5NvA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFixedFoveationLevels)(tyEnum_EFixedFoveationLevels__Z6tp8aLsrQ17bEljsrpTiA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMobileAntiAliasingMethod)(tyEnum_EMobileAntiAliasingMethod__0KF4u2lu8ZiDxklvnc09alQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMobileFloatPrecisionMode)(tyEnum_EMobileFloatPrecisionMode__mqXqB1f9bdvUErhSbuJ5kzQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMobileShadingPath)(tyEnum_EMobileShadingPath__mTr4EE6uFEPWJCg9a25IflQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEShaderCompressionFormat)(tyEnum_EShaderCompressionFormat__rnp7RoqqyOMyLju9bqtLC5w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELumenSoftwareTracingMode)(tyEnum_ELumenSoftwareTracingMode__Qo5sF2GIBUs5a2F1ToyQyw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELumenRayLightingMode)(tyEnum_ELumenRayLightingMode__1ZklsEdeitbrD79bdhFrzjg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWorkingColorSpace)(tyEnum_EWorkingColorSpace__n3s2filMkeeMUYjzxEjrgg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkeletalMeshAsyncProperties)(tyEnum_ESkeletalMeshAsyncProperties__hAt9bie4SGuoWWaWJNhguJg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEClothLODBiasMode)(tyEnum_EClothLODBiasMode__rY9ccoAErZOEd8hcsu4Ey9aw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBoneFilterActionOption)(tyEnum_EBoneFilterActionOption__6oBixZgPKeZaNAC6rO3Buw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkinCacheUsage)(tyEnum_ESkinCacheUsage__V24C524t9ch9arnb2IiMsokA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESkinCacheDefaultBehavior)(tyEnum_ESkinCacheDefaultBehavior__BXV9bIGPdq9a9bjuD5jIKciDw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVirtualizationMode)(tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMaxConcurrentResolutionRule)(tyEnum_EMaxConcurrentResolutionRule__EzFMbBcK6m8QM1ovJjwNrA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConcurrencyVolumeScaleMode)(tyEnum_EConcurrencyVolumeScaleMode__fu9btzHKAaOGmZR0XojVHRQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioSpectrumBandPresetType)(tyEnum_EAudioSpectrumBandPresetType__RSJqkjQ8XzbqS1BImnpp5g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESourceBusChannels)(tyEnum_ESourceBusChannels__lAg3qpjgGd7fYyRtYBjVqQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFFTSize)(tyEnum_EFFTSize__No3IgC1Ccv23sZ7WxluZ9bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFFTPeakInterpolationMethod)(tyEnum_EFFTPeakInterpolationMethod__zmX0701g3VBVwdHQWTBJcA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFFTWindowType)(tyEnum_EFFTWindowType__9bGZdJ7a6H0fb4ugFfpr9bxQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAudioSpectrumType)(tyEnum_EAudioSpectrumType__TBhtE9b2LCSM7FAMCe4f7ow fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepInputCore)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputCoreTypes)(UInputCoreTypes* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETouchIndex)(tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEControllerHand)(tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConsoleForGamepadLabels)(tyEnum_EConsoleForGamepadLabels__VBG0246Si9ay1Rj54casvYg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETouchType)(tyEnum_ETouchType__sjMraGiDZ5LWA6GiRZUKBw fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepSlateCore)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUFontFaceInterface)(UFontFaceInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSlateWidgetStyleContainerInterface)(USlateWidgetStyleContainerInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUINavigationRule)(tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEColorVisionDeficiency)(tyEnum_EColorVisionDeficiency__DU1qP5iJ6QOZvOs9aZQ1UTQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEButtonClickMethod)(tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEButtonTouchMethod)(tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEButtonPressMethod)(tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUINavigation)(tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUINavigationAction)(tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavigationSource)(tyEnum_ENavigationSource__IfAQSBSArxXqoz8iY2I9cEw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepENavigationGenesis)(tyEnum_ENavigationGenesis__dhcPx9brXi9b0x09b1g9c783EA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEHorizontalAlignment)(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVerticalAlignment)(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMenuPlacement)(tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEOrientation)(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEScrollDirection)(tyEnum_EScrollDirection__KoclhJXuQYd09aHg0HO6sGQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextCommit)(tyEnum_ETextCommit__w8QahiXQM4Ubq9anb9bM9cb9aQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESelectInfo)(tyEnum_ESelectInfo__EOT8wgJpxSuu4ujIhn9budA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateDebuggingInputEvent)(tyEnum_ESlateDebuggingInputEvent__cDV6I9bjhZeGbPvAYVZKmzQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateDebuggingStateChangeEvent)(tyEnum_ESlateDebuggingStateChangeEvent__fJh2DfD9ctkXzeGqRFb5j7w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateDebuggingNavigationMethod)(tyEnum_ESlateDebuggingNavigationMethod__cddgNoyqUwi8en6r6oTBpw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateDebuggingFocusEvent)(tyEnum_ESlateDebuggingFocusEvent__BxK4HUKgenIj5SzAmjQWzA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFontHinting)(tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFontLoadingPolicy)(tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFontLayoutMethod)(tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextShapingMethod)(tyEnum_ETextShapingMethod__B2dNIKUbA18LrCAmTwu1bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFocusCause)(tyEnum_EFocusCause__08ky2DAtcwYlHCwpY0k3qQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetClipping)(tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFlowDirectionPreference)(tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateBrushDrawType)(tyEnum_ESlateBrushDrawType__Rso1NoIB32j6bR02fIfMQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateBrushTileType)(tyEnum_ESlateBrushTileType__KGKfzp9cScMapTcImN2vq5A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateBrushMirrorType)(tyEnum_ESlateBrushMirrorType__d4tbTBug9a9cwWFeNwMvUQBQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateBrushImageType)(tyEnum_ESlateBrushImageType__3PEKKUzgrKjUaKtxtYVcoA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateBrushRoundingType)(tyEnum_ESlateBrushRoundingType__c2G4GhS6ZVIt5PuKJk1j2w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateColorStylingMode)(tyEnum_ESlateColorStylingMode__6MWbHgmuwpaFPxCPpP6QQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConsumeMouseWheel)(tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateParentWindowSearchMethod)(tyEnum_ESlateParentWindowSearchMethod__IJhKv9arpPNtfC9bO6FC7VSA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateCheckBoxType)(tyEnum_ESlateCheckBoxType__2WSdSdyZtPcAtMaryeaSug fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECheckBoxState)(tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextOverflowPolicy)(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextTransformPolicy)(tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStyleColor)(tyEnum_EStyleColor__ij8fBimBMrv3Kg4EZlmw0A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGeometry)(FGeometry fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateBrushOutlineSettings)(FSlateBrushOutlineSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateColor)(FSlateColor fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFToolBarStyle)(FToolBarStyle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeprecateSlateVector2D)(FDeprecateSlateVector2D fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputEvent)(FInputEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPointerEvent)(FPointerEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFScrollBarStyle)(FScrollBarStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTableRowStyle)(FTableRowStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFComboBoxStyle)(FComboBoxStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateSound)(FSlateSound_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFButtonStyle)(FButtonStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateFontInfo)(FSlateFontInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEditableTextStyle)(FEditableTextStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEditableTextBoxStyle)(FEditableTextBoxStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTextBlockStyle)(FTextBlockStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSpinBoxStyle)(FSpinBoxStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCharacterEvent)(FCharacterEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavigationEvent)(FNavigationEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnalogInputEvent)(FAnalogInputEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFocusEvent)(FFocusEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCaptureLostEvent)(FCaptureLostEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMotionEvent)(FMotionEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSegmentedControlStyle)(FSegmentedControlStyle_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCheckBoxStyle)(FCheckBoxStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFHyperlinkStyle)(FHyperlinkStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInlineEditableTextBlockStyle)(FInlineEditableTextBlockStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFProgressBarStyle)(FProgressBarStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSliderStyle)(FSliderStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSplitterStyle)(FSplitterStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTableViewStyle)(FTableViewStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFScrollBoxStyle)(FScrollBoxStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFScrollBorderStyle)(FScrollBorderStyle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWindowStyle)(FWindowStyle fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepPhysicsCore)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUDEPRECATED_PhysicalMaterialPropertyBase)(UDEPRECATED_PhysicalMaterialPropertyBase_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, staticFriction)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticFriction)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, restitution)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrestitution)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, linearEtherDrag)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlinearEtherDrag)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, angularEtherDrag)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setangularEtherDrag)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepingLinearVelocityThreshold)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsleepingLinearVelocityThreshold)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepingAngularVelocityThreshold)(UChaosPhysicalMaterial_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsleepingAngularVelocityThreshold)(UChaosPhysicalMaterial_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUChaosPhysicalMaterial)(UChaosPhysicalMaterial_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, staticFriction)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticFriction)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ, frictionCombineMode)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrictionCombineMode)(UPhysicalMaterial* obj, tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideFrictionCombineMode)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideFrictionCombineMode)(UPhysicalMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, restitution)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrestitution)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ, restitutionCombineMode)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrestitutionCombineMode)(UPhysicalMaterial* obj, tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideRestitutionCombineMode)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideRestitutionCombineMode)(UPhysicalMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, density)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensity)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepLinearVelocityThreshold)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsleepLinearVelocityThreshold)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sleepAngularVelocityThreshold)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsleepAngularVelocityThreshold)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sleepCounterThreshold)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsleepCounterThreshold)(UPhysicalMaterial* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, raiseMassToPower)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setraiseMassToPower)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamageThresholdScale)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamageThresholdScale)(UPhysicalMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA, surfaceType)(UPhysicalMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsurfaceType)(UPhysicalMaterial* obj, tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA val);
N_LIB_PRIVATE N_NIMCALL(void, keepECollisionTraceFlag)(tyEnum_ECollisionTraceFlag__9aVLlngVixyzYms9ctTOAyzg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysicsType)(tyEnum_EPhysicsType__Rbuth1fe9bVCKRqC5kiYOEg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBodyCollisionResponse)(tyEnum_EBodyCollisionResponse__ThtsA9c5uzx9aH4zAsT0mqbw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPhysicalSurface)(tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERadialImpulseFalloff)(tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBodyInstanceCore)(FBodyInstanceCore fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAngularConstraintMotion)(tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConstraintFrame)(tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEConstraintPlasticityType)(tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepELinearConstraintMotion)(tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFrictionCombineMode)(tyEnum_EFrictionCombineMode__FXJtMieZCWAr5F0TaVpYjQ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepSlate)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUToolMenuBase)(UToolMenuBase_* fake);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, buttonStyle)(UButtonWidgetStyle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbuttonStyle)(UButtonWidgetStyle_* obj, FButtonStyle val);
N_LIB_PRIVATE N_NIMCALL(void, keepUButtonWidgetStyle)(UButtonWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCheckBoxWidgetStyle)(UCheckBoxWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUComboBoxWidgetStyle)(UComboBoxWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUComboButtonWidgetStyle)(UComboButtonWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEditableTextBoxWidgetStyle)(UEditableTextBoxWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEditableTextWidgetStyle)(UEditableTextWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(FProgressBarStyle*, progressBarStyle)(UProgressWidgetStyle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprogressBarStyle)(UProgressWidgetStyle_* obj, FProgressBarStyle val);
N_LIB_PRIVATE N_NIMCALL(void, keepUProgressWidgetStyle)(UProgressWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUScrollBarWidgetStyle)(UScrollBarWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUScrollBoxWidgetStyle)(UScrollBoxWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSpinBoxWidgetStyle)(USpinBoxWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextBlockWidgetStyle)(UTextBlockWidgetStyle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVirtualKeyboardTrigger)(tyEnum_EVirtualKeyboardTrigger__dNj7H5u9ab1STnC5et9bo69cg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVirtualKeyboardDismissAction)(tyEnum_EVirtualKeyboardDismissAction__7gdv8eKmj32Cnh7bZaDV1Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESelectionMode)(tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETableViewMode)(tyEnum_ETableViewMode__GR20mP1OAVRUZ1HmPE1AkQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMultiBoxType)(tyEnum_EMultiBoxType__INhsMGdbY7hFUm2YBWwGIw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMultiBlockType)(tyEnum_EMultiBlockType__9aAFbNaHXwyl51I9cVqEIm6w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDescendantScrollDestination)(tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEScrollWhenFocusChanges)(tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepECustomizedToolMenuVisibility)(tyEnum_ECustomizedToolMenuVisibility__b6YRo4QO7po3fsaWe8YtIQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUserInterfaceActionType)(tyEnum_EUserInterfaceActionType__bazIs4nBBv57jE9aJHFomIA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMultipleKeyBindingIndex)(tyEnum_EMultipleKeyBindingIndex__OqQuds3zajl0u7vDG0rp1g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextJustify)(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextWrappingPolicy)(tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETextFlowDirection)(tyEnum_ETextFlowDirection__it3WpzuuPfNKE51KjghOBA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStretchDirection)(tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEStretch)(tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEProgressBarFillType)(tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEProgressBarFillStyle)(tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEListItemAlignment)(tyEnum_EListItemAlignment__R6LyWnpWGyDYfyPJQsyXZA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputChord)(FInputChord fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintFunctionLibrary)(UBlueprintFunctionLibrary* fake);
N_LIB_PRIVATE N_NIMCALL(UObject*, object)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setobject)(UAssetExportTask_* obj, UObject* val);
N_LIB_PRIVATE N_NIMCALL(FString, filename)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfilename)(UAssetExportTask_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSelected)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSelected)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplaceIdentical)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplaceIdentical)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPrompt)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPrompt)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutomated)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutomated)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFileArchive)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFileArchive)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWriteEmptyFiles)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWriteEmptyFiles)(UAssetExportTask_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA*, ignoreObjectList)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setignoreObjectList)(UAssetExportTask_* obj, TY__meGclu4l9cwnqbgiIjRtfhA val);
N_LIB_PRIVATE N_NIMCALL(UObject*, options)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoptions)(UAssetExportTask_* obj, UObject* val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, errors)(UAssetExportTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seterrors)(UAssetExportTask_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetExportTask)(UAssetExportTask_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataAsset)(UDataAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(UBlueprintAsyncActionBase_* self);
N_LIB_PRIVATE N_NIMCALL(USkyLightComponent_*, lightComponent)(ASkyLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightComponent)(ASkyLight_* obj, USkyLightComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepASkyLight)(ASkyLight_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, numCinematicMipLevels)(UStreamableRenderAsset* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumCinematicMipLevels)(UStreamableRenderAsset* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NU8, neverStream)(UStreamableRenderAsset* obj);
N_LIB_PRIVATE N_NIMCALL(void, setneverStream)(UStreamableRenderAsset* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGlobalForceMipLevelsToBeResident)(UStreamableRenderAsset* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGlobalForceMipLevelsToBeResident)(UStreamableRenderAsset* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setForceMipLevelsToBeResident_)(UStreamableRenderAsset* self, NF32 seconds, NI32 cinematicLODGroupMask);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustBrightness)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustBrightness)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustBrightnessCurve)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustBrightnessCurve)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustVibrance)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustVibrance)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustSaturation)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustSaturation)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustRGBCurve)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustRGBCurve)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustHue)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustHue)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustMinAlpha)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustMinAlpha)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, adjustMaxAlpha)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadjustMaxAlpha)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NU8, compressionNoAlpha)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionNoAlpha)(UTexture* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NU8, compressFinal)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompressFinal)(UTexture* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NU8, deferCompression)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeferCompression)(UTexture* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ, lossyCompressionAmount)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlossyCompressionAmount)(UTexture* obj, tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ val);
N_LIB_PRIVATE N_NIMCALL(FName*, oodleTextureSdkVersion)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoodleTextureSdkVersion)(UTexture* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxTextureSize)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxTextureSize)(UTexture* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg, compressionQuality)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionQuality)(UTexture* obj, tyEnum_ETextureCompressionQuality__FLvhdX44MG6UZ6Xcrp64gg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoScaleMipsForAlphaCoverage)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDoScaleMipsForAlphaCoverage)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector4*, alphaCoverageThresholds)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalphaCoverageThresholds)(UTexture* obj, FVector4 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseNewMipFilter)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseNewMipFilter)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPreserveBorder)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPreserveBorder)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFlipGreenChannel)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFlipGreenChannel)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g, powerOfTwoMode)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpowerOfTwoMode)(UTexture* obj, tyEnum_ETexturePowerOfTwoSetting__We50u8vhfyzQcdHNlTT78g val);
N_LIB_PRIVATE N_NIMCALL(FColor*, paddingColor)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpaddingColor)(UTexture* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bChromaKeyTexture)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbChromaKeyTexture)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, chromaKeyThreshold)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchromaKeyThreshold)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, chromaKeyColor)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchromaKeyColor)(UTexture* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ, mipGenSettings)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmipGenSettings)(UTexture* obj, tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ val);
N_LIB_PRIVATE N_NIMCALL(UTexture*, compositeTexture)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeTexture)(UTexture* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig, compositeTextureMode)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeTextureMode)(UTexture* obj, tyEnum_ECompositeTextureMode__MyrK9bVD8IpqQiGNv0bduig val);
N_LIB_PRIVATE N_NIMCALL(NF32, compositePower)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompositePower)(UTexture* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, lODBias)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODBias)(UTexture* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw, compressionSettings)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompressionSettings)(UTexture* obj, tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag, filter)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfilter)(UTexture* obj, tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw, mipLoadOptions)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmipLoadOptions)(UTexture* obj, tyEnum_ETextureMipLoadOptions__GVyE9biq684C9cjsmiRpm9c9cw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg, cookPlatformTilingSettings)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcookPlatformTilingSettings)(UTexture* obj, tyEnum_TextureCookPlatformTilingSettings__ugMAGdRMtBWMXcSiYsqRIg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw, lODGroup)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODGroup)(UTexture* obj, tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw val);
N_LIB_PRIVATE N_NIMCALL(NU8, sRGB)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsRGB)(UTexture* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNormalizeNormals)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNormalizeNormals)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLegacyGamma)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLegacyGamma)(UTexture* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FTextureSourceColorSettings*, sourceColorSettings)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceColorSettings)(UTexture* obj, FTextureSourceColorSettings val);
N_LIB_PRIVATE N_NIMCALL(NU8, virtualTextureStreaming)(UTexture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureStreaming)(UTexture* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, computeTextureSourceChannelMinMax_)(UTexture* self, FLinearColor& outColorMin, FLinearColor& outColorMax);
N_LIB_PRIVATE N_NIMCALL(void, blueprint_GetTextureSourceDiskAndMemorySize_)(UTexture* self, NI64& outDiskSize, NI64& outMemorySize);
N_LIB_PRIVATE N_NIMCALL(NI64, blueprint_GetMemorySize_)(UTexture* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUDebugDrawComponent)(UDebugDrawComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavAreaBase)(UNavAreaBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavigationSystemBase)(UNavigationSystemBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDynamicBlueprintBinding)(UDynamicBlueprintBinding_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEdGraphSchema)(UEdGraphSchema_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEngineCustomTimeStep)(UEngineCustomTimeStep_* fake);
N_LIB_PRIVATE N_NIMCALL(FTimecode, getTimecode_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETimecodeProviderSynchronizationState__7yX6oALT9bm9caipovYyZdxQ, getSynchronizationState_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, getQualifiedFrameTime_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, getFrameRate_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(FTimecode, getDelayedTimecode_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, getDelayedQualifiedFrameTime_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fetchTimecode_)(UTimecodeProvider_* self, FQualifiedFrameTime& outFrameTime);
N_LIB_PRIVATE N_NIMCALL(void, fetchAndUpdate_)(UTimecodeProvider_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUTimecodeProvider)(UTimecodeProvider_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAudioEngineSubsystem)(UAudioEngineSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetUserData)(UAssetUserData* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBrushBuilder)(UBrushBuilder_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUThumbnailInfo)(UThumbnailInfo_* fake);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshComponent*, staticMeshComponent)(AStaticMeshActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMeshComponent)(AStaticMeshActor_* obj, UStaticMeshComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, setMobility_)(AStaticMeshActor_* self, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg inMobility);
N_LIB_PRIVATE N_NIMCALL(void, keepAStaticMeshActor)(AStaticMeshActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUActiveSoundUpdateInterface)(UActiveSoundUpdateInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUChannel)(UChannel* fake);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, getSkeleton_)(UAnimationAsset* inAsset);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationAssetExtensions)(UAnimationAssetExtensions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimBlueprintClassSubsystem_PropertyAccess)(UAnimBlueprintClassSubsystem_PropertyAccess_* fake);
N_LIB_PRIVATE N_NIMCALL(FEmptyPayload_, getPayload_)(FAnimDataModelNotifPayload_& payload);
N_LIB_PRIVATE N_NIMCALL(void, copyPayload_)(FAnimDataModelNotifPayload_& payload, UScriptStruct* expectedStruct, FEmptyPayload_& outPayload);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationDataModelNotifiesExtensions)(UAnimationDataModelNotifiesExtensions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimLayerInterface)(UAnimLayerInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Bz8EFFwaAOJiUrMHOIgVGw, getScaleKeys_)(FRawAnimSequenceTrack& track);
N_LIB_PRIVATE N_NIMCALL(TY__r61x9a9aUIJyVmP9bIukwh3zg, getRotationalKeys_)(FRawAnimSequenceTrack& track);
N_LIB_PRIVATE N_NIMCALL(TY__Bz8EFFwaAOJiUrMHOIgVGw, getPositionalKeys_)(FRawAnimSequenceTrack& track);
N_LIB_PRIVATE N_NIMCALL(void, keepURawAnimSequenceTrackExtensions)(URawAnimSequenceTrackExtensions* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAudioPanelWidgetInterface)(UAudioPanelWidgetInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBookmarkBase)(UBookmarkBase_* fake);
N_LIB_PRIVATE N_NIMCALL(UReflectionCaptureComponent_*, captureComponent)(AReflectionCapture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponent)(AReflectionCapture_* obj, UReflectionCaptureComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAReflectionCapture)(AReflectionCapture_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepABoxReflectionCapture)(ABoxReflectionCapture_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addTransformAttribute_)(UAnimSequenceBase* animSequenceBase, FName& attributeName, FName& boneName, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& keys, TY__ZRKjvD0LxpBKI8XAOc3PKg& values);
N_LIB_PRIVATE N_NIMCALL(void, keepUBuiltInAttributesExtensions)(UBuiltInAttributesExtensions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlayer)(UPlayer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNetConnection)(UNetConnection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUChildConnection)(UChildConnection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlatformInterfaceBase)(UPlatformInterfaceBase_* fake);
N_LIB_PRIVATE N_NIMCALL(ULightComponent*, lightComponent)(ALight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightComponent)(ALight_* obj, ULightComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, toggleEnabled_)(ALight_* self);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionScale_)(ALight_* self, FVector newLightFunctionScale);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionMaterial_)(ALight_* self, UMaterialInterface* newLightFunctionMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionFadeDistance_)(ALight_* self, NF32 newLightFunctionFadeDistance);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(ALight_* self, FLinearColor newLightColor);
N_LIB_PRIVATE N_NIMCALL(void, setEnabled_)(ALight_* self, NIM_BOOL bSetEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadows_)(ALight_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setBrightness_)(ALight_* self, NF32 newBrightness);
N_LIB_PRIVATE N_NIMCALL(void, setAffectTranslucentLighting_)(ALight_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEnabled_)(ALight_* self);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLightColor_)(ALight_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getBrightness_)(ALight_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepALight)(ALight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepADirectionalLight)(ADirectionalLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDistribution)(UDistribution* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEngineBaseTypes)(UEngineBaseTypes* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEngineTypes)(UEngineTypes* fake);
N_LIB_PRIVATE N_NIMCALL(UExponentialHeightFogComponent_*, component)(AExponentialHeightFog_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcomponent)(AExponentialHeightFog_* obj, UExponentialHeightFogComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAExponentialHeightFog)(AExponentialHeightFog_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUFontImportOptions)(UFontImportOptions_* fake);
N_LIB_PRIVATE N_NIMCALL(USpotLightComponent*, spotLightComponent)(ASpotLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspotLightComponent)(ASpotLight_* obj, USpotLightComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, setOuterConeAngle_)(ASpotLight_* self, NF32 newOuterConeAngle);
N_LIB_PRIVATE N_NIMCALL(void, setInnerConeAngle_)(ASpotLight_* self, NF32 newInnerConeAngle);
N_LIB_PRIVATE N_NIMCALL(void, keepASpotLight)(ASpotLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAGeneratedMeshAreaLight)(AGeneratedMeshAreaLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, updateCurveNamesFromSkeleton_)(UAnimationDataController* self, USkeleton* skeleton, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setTransformCurveKeys_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, TY__ZRKjvD0LxpBKI8XAOc3PKg& transformValues, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setTransformCurveKey_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NF32 time, FTransform& value, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, setPlayLength_)(UAnimationDataController* self, NF32 length, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfFrames_)(UAnimationDataController* self, FFrameNumber newLengthInFrames, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, setModel_)(UAnimationDataController* self, TY__2oFl2vye442IAermOsWYpg inModel);
N_LIB_PRIVATE N_NIMCALL(void, setFrameRate_)(UAnimationDataController* self, FFrameRate frameRate, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveKeys_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, TY__vtilWHQcza9aBHc3YkFx5Bw& curveKeys, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveKey_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, FRichCurveKey& key, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveFlags_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NI32 flags, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveFlag_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, tyEnum_EAnimAssetCurveFlags__rdCcgUF0ueMLtHjAQ9a49a3Q flag, NIM_BOOL bState, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurveColor_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, FLinearColor color, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setBoneTrackKeys_)(UAnimationDataController* self, FName boneName, TY__Bz8EFFwaAOJiUrMHOIgVGw& positionalKeys, TY__r61x9a9aUIJyVmP9bIukwh3zg& rotationalKeys, TY__Bz8EFFwaAOJiUrMHOIgVGw& scalingKeys, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, scaleCurve_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NF32 origin, NF32 factor, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, resizePlayLength_)(UAnimationDataController* self, NF32 newLength, NF32 t0, NF32 t1, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, resizeNumberOfFrames_)(UAnimationDataController* self, FFrameNumber newLengthInFrames, FFrameNumber t0, FFrameNumber t1, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, resizeInFrames_)(UAnimationDataController* self, FFrameNumber newLengthInFrames, FFrameNumber t0, FFrameNumber t1, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, resize_)(UAnimationDataController* self, NF32 length, NF32 t0, NF32 t1, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renameCurve_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveToRenameId, FAnimationCurveIdentifier_& newCurveId, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeTransformCurveKey_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NF32 time, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCurveKey_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NF32 time, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCurve_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeBoneTrack_)(UAnimationDataController* self, FName boneName, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeAttributeKey_)(UAnimationDataController* self, FAnimationAttributeIdentifier_& attributeIdentifier, NF32 time, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeAttribute_)(UAnimationDataController* self, FAnimationAttributeIdentifier_& attributeIdentifier, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCurvesOfType_)(UAnimationDataController* self, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, removeAllBoneTracks_)(UAnimationDataController* self, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllAttributesForBone_)(UAnimationDataController* self, FName& boneName, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllAttributes_)(UAnimationDataController* self, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, openBracket_)(UAnimationDataController* self, FText& inTitle, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NI32, insertBoneTrack_)(UAnimationDataController* self, FName boneName, NI32 desiredIndex, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(TY__2oFl2vye442IAermOsWYpg, getModelInterface_)(UAnimationDataController* self);
N_LIB_PRIVATE N_NIMCALL(void, findOrAddCurveNamesOnSkeleton_)(UAnimationDataController* self, USkeleton* skeleton, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg supportedCurveType, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, duplicateCurve_)(UAnimationDataController* self, FAnimationCurveIdentifier_& copyCurveId, FAnimationCurveIdentifier_& newCurveId, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, duplicateAttribute_)(UAnimationDataController* self, FAnimationAttributeIdentifier_& attributeIdentifier, FAnimationAttributeIdentifier_& newAttributeIdentifier, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(void, closeBracket_)(UAnimationDataController* self, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addCurve_)(UAnimationDataController* self, FAnimationCurveIdentifier_& curveId, NI32 curveFlags, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NI32, addBoneTrack_)(UAnimationDataController* self, FName boneName, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addBoneCurve_)(UAnimationDataController* self, FName boneName, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addAttribute_)(UAnimationDataController* self, FAnimationAttributeIdentifier_& attributeIdentifier, NIM_BOOL bShouldTransact);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidBoneTrackName_)(UAnimationDataModel_* self, FName& trackName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidBoneTrackIndex_)(UAnimationDataModel_* self, NI32 trackIndex);
N_LIB_PRIVATE N_NIMCALL(NF, getPlayLength_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumBoneTracks_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfTransformCurves_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfKeys_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfFrames_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfFloatCurves_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, getFrameRate_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(void, getBoneTrackNames_)(UAnimationDataModel_* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneTrackIndexByName_)(UAnimationDataModel_* self, FName trackName);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneTrackIndex_)(UAnimationDataModel_* self, FBoneAnimationTrack_& track);
N_LIB_PRIVATE N_NIMCALL(FBoneAnimationTrack_, getBoneTrackByName_)(UAnimationDataModel_* self, FName trackName);
N_LIB_PRIVATE N_NIMCALL(FBoneAnimationTrack_, getBoneTrackByIndex_)(UAnimationDataModel_* self, NI32 trackIndex);
N_LIB_PRIVATE N_NIMCALL(TY__Gur0dFjg9byOJEgqd1KOiLg, getBoneAnimationTracks_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(UAnimSequence_*, getAnimationSequence_)(UAnimationDataModel_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterface_ActorSubobject)(UInterface_ActorSubobject_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBoneReferenceSkeletonProvider)(UBoneReferenceSkeletonProvider_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUISMPartitionInstanceManager)(UISMPartitionInstanceManager_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUISMPartitionInstanceManagerProvider)(UISMPartitionInstanceManagerProvider_* fake);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimTrailing_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimPrecedingAndTrailing_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, textTrimPreceding_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, textToUpper_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, textToLower_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsTransient_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsFromStringTable_)(FText& text);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsEmpty_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, textIsCultureInvariant_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, textFromStringTable_)(FName tableId, FString key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, stringTableIdAndKeyFromText_)(FText text, FName& outTableId, FString& outKey);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_TextText_)(FText& a, FText& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_IgnoreCase_TextText_)(FText& a, FText& b);
N_LIB_PRIVATE N_NIMCALL(FText, getEmptyText_)(void);
N_LIB_PRIVATE N_NIMCALL(FText, format_)(FText inPattern, TY__Hr8ModhbWslsFNX2oLz1GA inArgs);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, findTextInLocalizationTable_)(FString namespace_0, FString key, FText& outText);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_TextText_)(FText& a, FText& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_IgnoreCase_TextText_)(FText& a, FText& b);
N_LIB_PRIVATE N_NIMCALL(FText, conv_VectorToText_)(FVector inVec);
N_LIB_PRIVATE N_NIMCALL(FText, conv_Vector2dToText_)(FVector2D inVec);
N_LIB_PRIVATE N_NIMCALL(FText, conv_TransformToText_)(FTransform& inTrans);
N_LIB_PRIVATE N_NIMCALL(FString, conv_TextToString_)(FText& inText);
N_LIB_PRIVATE N_NIMCALL(FText, conv_StringToText_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(FText, conv_RotatorToText_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ObjectToText_)(UObject* inObj);
N_LIB_PRIVATE N_NIMCALL(FText, conv_NameToText_)(FName inName);
N_LIB_PRIVATE N_NIMCALL(FText, conv_IntToText_)(NI32 value, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits);
N_LIB_PRIVATE N_NIMCALL(FText, conv_Int64ToText_)(NI64 value, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits);
N_LIB_PRIVATE N_NIMCALL(FText, conv_DoubleToText_)(NF value, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits, NI32 minimumFractionalDigits, NI32 maximumFractionalDigits);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ColorToText_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(FText, conv_ByteToText_)(NU8 value);
N_LIB_PRIVATE N_NIMCALL(FText, conv_BoolToText_)(NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneTime_DateTime_)(FDateTime& inDateTime, FString inTimeZone);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneDateTime_DateTime_)(FDateTime& inDateTime, FString inTimeZone);
N_LIB_PRIVATE N_NIMCALL(FText, asTimeZoneDate_DateTime_)(FDateTime& inDateTime, FString inTimeZone);
N_LIB_PRIVATE N_NIMCALL(FText, asTimespan_Timespan_)(FTimespan& inTimespan);
N_LIB_PRIVATE N_NIMCALL(FText, asTime_DateTime_)(FDateTime& in_0);
N_LIB_PRIVATE N_NIMCALL(FText, asPercent_Float_)(NF32 value, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits, NI32 minimumFractionalDigits, NI32 maximumFractionalDigits);
N_LIB_PRIVATE N_NIMCALL(FText, asDateTime_DateTime_)(FDateTime& in_0);
N_LIB_PRIVATE N_NIMCALL(FText, asDate_DateTime_)(FDateTime& inDateTime);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrencyBase_)(NI32 baseValue, FString currencyCode);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrency_Integer_)(NI32 value, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits, NI32 minimumFractionalDigits, NI32 maximumFractionalDigits, FString currencyCode);
N_LIB_PRIVATE N_NIMCALL(FText, asCurrency_Float_)(NF32 value, tyEnum_ERoundingMode__VwD5AqI3C17j16Xi9a9c3JTw roundingMode, NIM_BOOL bAlwaysSign, NIM_BOOL bUseGrouping, NI32 minimumIntegralDigits, NI32 maximumIntegralDigits, NI32 minimumFractionalDigits, NI32 maximumFractionalDigits, FString currencyCode);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetTextLibrary)(UKismetTextLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelInstanceEditorPivotInterface)(ULevelInstanceEditorPivotInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__9cPzWpX39aro9ack5dbCvRImQ, worldAsset)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworldAsset)(ULevelStreaming_* obj, TY__9cPzWpX39aro9ack5dbCvRImQ val);
N_LIB_PRIVATE N_NIMCALL(NI32, streamingPriority)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingPriority)(ULevelStreaming_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FTransform*, levelTransform)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlevelTransform)(ULevelStreaming_* obj, FTransform val);
N_LIB_PRIVATE N_NIMCALL(NI32, levelLODIndex)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlevelLODIndex)(ULevelStreaming_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBeVisible)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBeVisible)(ULevelStreaming_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBeLoaded)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBeLoaded)(ULevelStreaming_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBlockOnLoad)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBlockOnLoad)(ULevelStreaming_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBlockOnUnload)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBlockOnUnload)(ULevelStreaming_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableDistanceStreaming)(ULevelStreaming_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableDistanceStreaming)(ULevelStreaming_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldBeLoaded_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBeVisible_)(ULevelStreaming_* self, NIM_BOOL bInShouldBeVisible);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBeLoaded_)(ULevelStreaming_* self, NIM_BOOL bInShouldBeLoaded);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(ULevelStreaming_* self, NI32 newPriority);
N_LIB_PRIVATE N_NIMCALL(void, setLevelLODIndex_)(ULevelStreaming_* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(void, setIsRequestingUnloadAndRemoval_)(ULevelStreaming_* self, NIM_BOOL bInIsRequestingUnloadAndRemoval);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingStatePending_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLevelVisible_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLevelLoaded_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(FName, getWorldAssetPackageFName_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(ULevel*, getLoadedLevel_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(ALevelScriptActor_*, getLevelScriptActor_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsRequestingUnloadAndRemoval_)(ULevelStreaming_* self);
N_LIB_PRIVATE N_NIMCALL(ULevelStreaming_*, createInstance_)(ULevelStreaming_* self, FString uniqueInstanceName);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelStreaming)(ULevelStreaming_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelStreamingAlwaysLoaded)(ULevelStreamingAlwaysLoaded_* fake);
N_LIB_PRIVATE N_NIMCALL(ULevelStreamingDynamic_*, loadLevelInstanceBySoftObjectPtr_)(UObject* worldContextObject, TY__9cPzWpX39aro9ack5dbCvRImQ level, FVector location, FRotator rotation, NIM_BOOL& bOutSuccess, FString optionalLevelNameOverride, TY__cf9bOIrRZamf1HVVF7c2pXA optionalLevelStreamingClass, NIM_BOOL bLoadAsTempPackage);
N_LIB_PRIVATE N_NIMCALL(ULevelStreamingDynamic_*, loadLevelInstance_)(UObject* worldContextObject, FString levelName, FVector location, FRotator rotation, NIM_BOOL& bOutSuccess, FString optionalLevelNameOverride, TY__cf9bOIrRZamf1HVVF7c2pXA optionalLevelStreamingClass, NIM_BOOL bLoadAsTempPackage);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelStreamingDynamic)(ULevelStreamingDynamic_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, streamingLevelNames)(ALevelStreamingVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingLevelNames)(ALevelStreamingVolume_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEditorPreVisOnly)(ALevelStreamingVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEditorPreVisOnly)(ALevelStreamingVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisabled)(ALevelStreamingVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisabled)(ALevelStreamingVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw, streamingUsage)(ALevelStreamingVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingUsage)(ALevelStreamingVolume_* obj, tyEnum_EStreamingVolumeUsage__Bs5mDIzQ1PHZ8U9c9aCVQvzw val);
N_LIB_PRIVATE N_NIMCALL(void, keepALevelStreamingVolume)(ALevelStreamingVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UTexture2D* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UTexture2D* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UTexture2D* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UTexture2D* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(NI32, blueprint_GetSizeY_)(UTexture2D* self);
N_LIB_PRIVATE N_NIMCALL(NI32, blueprint_GetSizeX_)(UTexture2D* self);
N_LIB_PRIVATE N_NIMCALL(void, keepULightMapTexture2D)(ULightMapTexture2D_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMapBuildDataRegistry)(UMapBuildDataRegistry_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionLess)(UMaterialExpressionLess_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCameraPositionWS)(UMaterialExpressionCameraPositionWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCameraVectorWS)(UMaterialExpressionCameraVectorWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionExecEnd)(UMaterialExpressionExecEnd_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMaterialLayerOutput)(UMaterialExpressionMaterialLayerOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionRerouteBase)(UMaterialExpressionRerouteBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionNamedRerouteBase)(UMaterialExpressionNamedRerouteBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionParticleSubUVProperties)(UMaterialExpressionParticleSubUVProperties_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPixelDepth)(UMaterialExpressionPixelDepth_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPixelNormalWS)(UMaterialExpressionPixelNormalWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPreSkinnedNormal)(UMaterialExpressionPreSkinnedNormal_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPreSkinnedPosition)(UMaterialExpressionPreSkinnedPosition_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureObject)(UMaterialExpressionTextureObject_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureObjectParameter)(UMaterialExpressionTextureObjectParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameter2DArray)(UMaterialExpressionTextureSampleParameter2DArray_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameterCube)(UMaterialExpressionTextureSampleParameterCube_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameterCubeArray)(UMaterialExpressionTextureSampleParameterCubeArray_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameterVolume)(UMaterialExpressionTextureSampleParameterVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTwoSidedSign)(UMaterialExpressionTwoSidedSign_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVertexColor)(UMaterialExpressionVertexColor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVertexNormalWS)(UMaterialExpressionVertexNormalWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVertexTangentWS)(UMaterialExpressionVertexTangentWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionMaterialLayer)(UMaterialFunctionMaterialLayer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionMaterialLayerInstance)(UMaterialFunctionMaterialLayerInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionMaterialLayerBlend)(UMaterialFunctionMaterialLayerBlend_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionMaterialLayerBlendInstance)(UMaterialFunctionMaterialLayerBlendInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshBudgetProjectSettings)(UMeshBudgetProjectSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavEdgeProviderInterface)(UNavEdgeProviderInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavigationDataInterface)(UNavigationDataInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavPathObserverInterface)(UNavPathObserverInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleEventSendToGame)(UParticleModuleEventSendToGame_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleKillBase)(UParticleModuleKillBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLocationBase)(UParticleModuleLocationBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleSpriteEmitter)(UParticleSpriteEmitter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameter_)(UFXSystemComponent* self, FName parameterName, FVector param);
N_LIB_PRIVATE N_NIMCALL(void, setUseAutoManageAttachment_)(UFXSystemComponent* self, NIM_BOOL bAutoManage);
N_LIB_PRIVATE N_NIMCALL(void, setIntParameter_)(UFXSystemComponent* self, FName parameterName, NI32 param);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(UFXSystemComponent* self, FName parameterName, NF32 param);
N_LIB_PRIVATE N_NIMCALL(void, setEmitterEnable_)(UFXSystemComponent* self, FName emitterName, NIM_BOOL bNewEnableState);
N_LIB_PRIVATE N_NIMCALL(void, setColorParameter_)(UFXSystemComponent* self, FName parameterName, FLinearColor param);
N_LIB_PRIVATE N_NIMCALL(void, setBoolParameter_)(UFXSystemComponent* self, FName parameterName, NIM_BOOL param);
N_LIB_PRIVATE N_NIMCALL(void, setAutoAttachmentParameters_)(UFXSystemComponent* self, USceneComponent* parent, FName socketName, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule);
N_LIB_PRIVATE N_NIMCALL(void, setActorParameter_)(UFXSystemComponent* self, FName parameterName, AActor* param);
N_LIB_PRIVATE N_NIMCALL(void, releaseToPool_)(UFXSystemComponent* self);
N_LIB_PRIVATE N_NIMCALL(UFXSystemAsset*, getFXSystemAsset_)(UFXSystemComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPathFollowingAgentInterface)(UPathFollowingAgentInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(FTransform, getPhysicsObjectWorldTransform_)(UPrimitiveComponent* component, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, getClosestPhysicsObjectFromWorldLocation_)(UPrimitiveComponent* component, FVector& worldLocation, FClosestPhysicsObjectResult_* Result);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, extractClosestPhysicsObjectResults_)(FClosestPhysicsObjectResult_& Result, FName& outName);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsObjectBlueprintLibrary)(UPhysicsObjectBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(FBodyInstanceAsyncPhysicsTickHandle handle, FVector force, NIM_BOOL bAccelChange);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsThreadLibrary)(UPhysicsThreadLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, sceneComponent)(ASceneCapture* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsceneComponent)(ASceneCapture* obj, USceneComponent* val);
N_LIB_PRIVATE N_NIMCALL(UPlanarReflectionComponent_*, planarReflectionComponent)(APlanarReflection_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplanarReflectionComponent)(APlanarReflection_* obj, UPlanarReflectionComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(APlanarReflection_* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlanarReflection)(APlanarReflection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlaneReflectionCapture)(APlaneReflectionCapture_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlatformInterfaceWebResponse)(UPlatformInterfaceWebResponse_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPluginMounted_)(FString pluginName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginVersionName_)(FString pluginName, FString& outVersionName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginVersion_)(FString pluginName, NI32& outVersion);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginNameForObjectPath_)(FSoftObjectPath& objectPath, FString& outPluginName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginMountedAssetPath_)(FString pluginName, FString& outAssetPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginEditorCustomVirtualPath_)(FString pluginName, FString& outVirtualPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginDescriptorFilePath_)(FString pluginName, FString& outFilePath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginDescription_)(FString pluginName, FString& outDescription);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginContentDir_)(FString pluginName, FString& outContentDir);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPluginBaseDir_)(FString pluginName, FString& outBaseDir);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEnabledPluginNames_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAdditionalProjectPluginSearchPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAdditionalPluginSearchPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUPluginBlueprintLibrary)(UPluginBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(UPointLightComponent*, pointLightComponent)(APointLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpointLightComponent)(APointLight_* obj, UPointLightComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(APointLight_* self, NF32 newRadius);
N_LIB_PRIVATE N_NIMCALL(void, setLightFalloffExponent_)(APointLight_* self, NF32 newLightFalloffExponent);
N_LIB_PRIVATE N_NIMCALL(void, keepAPointLight)(APointLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPolys)(UPolys_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUReplicationDriver)(UReplicationDriver_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUReplicationConnectionDriver)(UReplicationConnectionDriver_* fake);
N_LIB_PRIVATE N_NIMCALL(USceneCaptureComponent2D_*, captureComponent2D)(ASceneCapture2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponent2D)(ASceneCapture2D_* obj, USceneCaptureComponent2D_* val);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(ASceneCapture2D_* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, keepASceneCapture2D)(ASceneCapture2D_* fake);
N_LIB_PRIVATE N_NIMCALL(USceneCaptureComponentCube_*, captureComponentCube)(ASceneCaptureCube_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureComponentCube)(ASceneCaptureCube_* obj, USceneCaptureComponentCube_* val);
N_LIB_PRIVATE N_NIMCALL(void, onInterpToggle_)(ASceneCaptureCube_* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, keepASceneCaptureCube)(ASceneCaptureCube_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUShadowMapTexture2D)(UShadowMapTexture2D_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, socketName)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsocketName)(USkeletalMeshSocket_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FName*, boneName)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboneName)(USkeletalMeshSocket_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(USkeletalMeshSocket_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(USkeletalMeshSocket_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale)(USkeletalMeshSocket_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceAlwaysAnimated)(USkeletalMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceAlwaysAnimated)(USkeletalMeshSocket_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, initializeSocketFromLocation_)(USkeletalMeshSocket_* self, USkeletalMeshComponent* skelComp, FVector worldLocation, FVector worldNormal);
N_LIB_PRIVATE N_NIMCALL(FVector, getSocketLocation_)(USkeletalMeshSocket_* self, USkeletalMeshComponent* skelComp);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeletalMeshSocket)(USkeletalMeshSocket_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSMInstanceManagerProvider)(USMInstanceManagerProvider_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundEffectPresetWidgetInterface)(USoundEffectPresetWidgetInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundSubmixWidgetInterface)(USoundSubmixWidgetInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepASphereReflectionCapture)(ASphereReflectionCapture_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, socketName)(UStaticMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsocketName)(UStaticMeshSocket_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(UStaticMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(UStaticMeshSocket_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(UStaticMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(UStaticMeshSocket_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale)(UStaticMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale)(UStaticMeshSocket_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FString, tag)(UStaticMeshSocket_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settag)(UStaticMeshSocket_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(void, keepUStaticMeshSocket)(UStaticMeshSocket_* fake);
N_LIB_PRIVATE N_NIMCALL(UTextRenderComponent_*, textRender)(ATextRenderActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextRender)(ATextRenderActor_* obj, UTextRenderComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepATextRenderActor)(ATextRenderActor_* fake);
N_LIB_PRIVATE N_NIMCALL(UShapeComponent*, collisionComponent)(ATriggerBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(ATriggerBase_* obj, UShapeComponent* val);
N_LIB_PRIVATE N_NIMCALL(UBillboardComponent_*, spriteComponent)(ATriggerBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspriteComponent)(ATriggerBase_* obj, UBillboardComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepATriggerBase)(ATriggerBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUVisualLoggerDebugSnapshotInterface)(UVisualLoggerDebugSnapshotInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTexture2DArray)(UTexture2DArray_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNullNavSysConfig)(UNullNavSysConfig_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAimOffsetBlendSpace)(UAimOffsetBlendSpace_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAimOffsetBlendSpace1D)(UAimOffsetBlendSpace1D_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimClassInterface)(UAnimClassInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompress_BitwiseCompressOnly)(UAnimCompress_BitwiseCompressOnly_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCurveCompressionCodec)(UAnimCurveCompressionCodec_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimMetaData)(UAnimMetaData_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notifyStateReachedEnd_)(FAnimNotifyEventReference& eventReference);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyLibrary)(UAnimNotifyLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTriggeredByMirroredAnimation_)(FAnimNotifyEventReference& eventReference);
N_LIB_PRIVATE N_NIMCALL(UMirrorDataTable_*, getMirrorDataTable_)(FAnimNotifyEventReference& eventReference);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyMirrorInspectionLibrary)(UAnimNotifyMirrorInspectionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyStateMachineInspectionLibrary)(UAnimNotifyStateMachineInspectionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyState_DisableRootMotion)(UAnimNotifyState_DisableRootMotion_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAnimationAttributeIdentifier_& identifier);
N_LIB_PRIVATE N_NIMCALL(FAnimationAttributeIdentifier_, createAttributeIdentifier_)(UAnimationAsset* animationAsset, FName attributeName, FName boneName, UScriptStruct* attributeType, NIM_BOOL bValidateExistsOnAsset);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationAttributeIdentifierExtensions)(UAnimationAttributeIdentifierExtensions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCachedAnimDataLibrary)(UCachedAnimDataLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FAnimationCurveIdentifier_& identifier);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg, getType_)(FAnimationCurveIdentifier_& identifier);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformChildCurveIdentifier_)(FAnimationCurveIdentifier_& inOutIdentifier, tyEnum_ETransformCurveChannel__sG9cBroBwptcTasMM12j8Dg channel, tyEnum_EVectorCurveChannel__58B9b1w9bqluWs3jPQdB1c6A axis);
N_LIB_PRIVATE N_NIMCALL(FName, getName_)(FAnimationCurveIdentifier_& identifier);
N_LIB_PRIVATE N_NIMCALL(TY__q0YKngudVysxlVXqMDII4A, getCurveIdentifiers_)(USkeleton* inSkeleton, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveIdentifier_, getCurveIdentifier_)(USkeleton* inSkeleton, FName name, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveIdentifier_, findCurveIdentifier_)(USkeleton* inSkeleton, FName name, tyEnum_ERawCurveTrackTypes__KTfUx5pBh64b9bgTZiRxWLg curveType);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationCurveIdentifierExtensions)(UAnimationCurveIdentifierExtensions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveSourceInterface)(UCurveSourceInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPreviewCollectionInterface)(UPreviewCollectionInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPreviewMeshCollection)(UPreviewMeshCollection_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAsset_*, asyncLoadPrimaryAsset_)(UObject* worldContextObject, FPrimaryAssetId primaryAsset, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionLoadPrimaryAsset)(UAsyncActionLoadPrimaryAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetClass_*, asyncLoadPrimaryAssetClass_)(UObject* worldContextObject, FPrimaryAssetId primaryAsset, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionLoadPrimaryAssetClass)(UAsyncActionLoadPrimaryAssetClass_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetList_*, asyncLoadPrimaryAssetList_)(UObject* worldContextObject, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionLoadPrimaryAssetList)(UAsyncActionLoadPrimaryAssetList_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionLoadPrimaryAssetClassList_*, asyncLoadPrimaryAssetClassList_)(UObject* worldContextObject, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& loadBundles);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionLoadPrimaryAssetClassList)(UAsyncActionLoadPrimaryAssetClassList_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionChangePrimaryAssetBundles_*, asyncChangeBundleStateForPrimaryAssetList_)(UObject* worldContextObject, TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetList, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& addBundles, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& removeBundles);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionChangePrimaryAssetBundles_*, asyncChangeBundleStateForMatchingPrimaryAssets_)(UObject* worldContextObject, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& newBundles, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& oldBundles);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionChangePrimaryAssetBundles)(UAsyncActionChangePrimaryAssetBundles_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setSunMultiplier_)(UAtmosphericFogComponent_* self, NF32 newSunMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setStartDistance_)(UAtmosphericFogComponent_* self, NF32 newStartDistance);
N_LIB_PRIVATE N_NIMCALL(void, setPrecomputeParams_)(UAtmosphericFogComponent_* self, NF32 densityHeight, NI32 maxScatteringOrder, NI32 inscatterAltitudeSampleNum);
N_LIB_PRIVATE N_NIMCALL(void, setFogMultiplier_)(UAtmosphericFogComponent_* self, NF32 newFogMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceScale_)(UAtmosphericFogComponent_* self, NF32 newDistanceScale);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceOffset_)(UAtmosphericFogComponent_* self, NF32 newDistanceOffset);
N_LIB_PRIVATE N_NIMCALL(void, setDensityOffset_)(UAtmosphericFogComponent_* self, NF32 newDensityOffset);
N_LIB_PRIVATE N_NIMCALL(void, setDensityMultiplier_)(UAtmosphericFogComponent_* self, NF32 newDensityMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultLightColor_)(UAtmosphericFogComponent_* self, FLinearColor newLightColor);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultBrightness_)(UAtmosphericFogComponent_* self, NF32 newBrightness);
N_LIB_PRIVATE N_NIMCALL(void, setAltitudeScale_)(UAtmosphericFogComponent_* self, NF32 newAltitudeScale);
N_LIB_PRIVATE N_NIMCALL(void, disableSunDisk_)(UAtmosphericFogComponent_* self, NIM_BOOL newSunDisk);
N_LIB_PRIVATE N_NIMCALL(void, disableGroundScattering_)(UAtmosphericFogComponent_* self, NIM_BOOL newGroundScattering);
N_LIB_PRIVATE N_NIMCALL(void, keepUAtmosphericFogComponent)(UAtmosphericFogComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUActorSoundParameterInterface)(UActorSoundParameterInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAudioParameterConversionStatics)(UAudioParameterConversionStatics* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepABlockingVolume)(ABlockingVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setMapPropertyByName_)(UObject* object_0, FName propertyName, TY__wpSBE9cf2usnCI0KGFU04xQ& value);
N_LIB_PRIVATE N_NIMCALL(void, map_Values_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, TY__TxfK2fhRJXNHttPFRcL6fA& values);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Remove_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, NI32& key);
N_LIB_PRIVATE N_NIMCALL(NI32, map_Length_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap);
N_LIB_PRIVATE N_NIMCALL(void, map_Keys_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, TY__TxfK2fhRJXNHttPFRcL6fA& keys);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_IsNotEmpty_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_IsEmpty_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Find_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, NI32& key, NI32& value);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, map_Contains_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, NI32& key);
N_LIB_PRIVATE N_NIMCALL(void, map_Clear_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap);
N_LIB_PRIVATE N_NIMCALL(void, map_Add_)(TY__wpSBE9cf2usnCI0KGFU04xQ& targetMap, NI32& key, NI32& value);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintMapLibrary)(UBlueprintMapLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setSetPropertyByName_)(UObject* object_0, FName propertyName, TY__bdlO5kVNTRv59cPOoXMIbHw& value);
N_LIB_PRIVATE N_NIMCALL(void, set_Union_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a, TY__bdlO5kVNTRv59cPOoXMIbHw& b, TY__bdlO5kVNTRv59cPOoXMIbHw& Result);
N_LIB_PRIVATE N_NIMCALL(void, set_ToArray_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a, TY__TxfK2fhRJXNHttPFRcL6fA& Result);
N_LIB_PRIVATE N_NIMCALL(void, set_RemoveItems_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet, TY__TxfK2fhRJXNHttPFRcL6fA& items);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_Remove_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet, NI32& item);
N_LIB_PRIVATE N_NIMCALL(NI32, set_Length_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_IsNotEmpty_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_IsEmpty_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet);
N_LIB_PRIVATE N_NIMCALL(void, set_Intersection_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a, TY__bdlO5kVNTRv59cPOoXMIbHw& b, TY__bdlO5kVNTRv59cPOoXMIbHw& Result);
N_LIB_PRIVATE N_NIMCALL(void, set_Difference_)(TY__bdlO5kVNTRv59cPOoXMIbHw& a, TY__bdlO5kVNTRv59cPOoXMIbHw& b, TY__bdlO5kVNTRv59cPOoXMIbHw& Result);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, set_Contains_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet, NI32& itemToFind);
N_LIB_PRIVATE N_NIMCALL(void, set_Clear_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet);
N_LIB_PRIVATE N_NIMCALL(void, set_AddItems_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet, TY__TxfK2fhRJXNHttPFRcL6fA& newItems);
N_LIB_PRIVATE N_NIMCALL(void, set_Add_)(TY__bdlO5kVNTRv59cPOoXMIbHw& targetSet, NI32& newItem);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintSetLibrary)(UBlueprintSetLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBookMark)(UBookMark_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepABrushShape)(ABrushShape_* fake);
N_LIB_PRIVATE N_NIMCALL(UFXSystemComponent*, getPrimaryParticleComponent_)(UCameraLensEffectInterface_* self);
N_LIB_PRIVATE N_NIMCALL(TY__Qu3WcNhn1GZqsD9bMGcV3pQ, getParticleComponents_)(UCameraLensEffectInterface_* self);
N_LIB_PRIVATE N_NIMCALL(void, setInterfaceClass_)(TY__9akcXb9b3ftlkdW8NDwR22Mg class_0, FCameraLensInterfaceClassSupport_& var_0, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result);
N_LIB_PRIVATE N_NIMCALL(void, isInterfaceValid_)(TY__hvmi1aSu7TExY3gfL1PBlA& cameraLens, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result);
N_LIB_PRIVATE N_NIMCALL(void, isInterfaceClassValid_)(FCameraLensInterfaceClassSupport_& cameraLens, tyEnum_EInterfaceValidResult__Od0Ln1hr2zs29c9c1jSl0g9ag& Result);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, getInterfaceClass_)(FCameraLensInterfaceClassSupport_& cameraLens);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraLensEffectInterfaceClassSupportLibrary)(UCameraLensEffectInterfaceClassSupportLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, targetGamma)(UTextureRenderTarget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetGamma)(UTextureRenderTarget_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTarget2D_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTarget2D_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, clearColor)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclearColor)(UTextureRenderTarget2D_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UTextureRenderTarget2D_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UTextureRenderTarget2D_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGPUSharedFlag)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGPUSharedFlag)(UTextureRenderTarget2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w, renderTargetFormat)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderTargetFormat)(UTextureRenderTarget2D_* obj, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoGenerateMips)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoGenerateMips)(UTextureRenderTarget2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag, mipsSamplerFilter)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmipsSamplerFilter)(UTextureRenderTarget2D_* obj, tyEnum_TextureFilter__GYekJb6ahEntgAL1fZTYag val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, mipsAddressU)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmipsAddressU)(UTextureRenderTarget2D_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, mipsAddressV)(UTextureRenderTarget2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmipsAddressV)(UTextureRenderTarget2D_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(void, updateResource_)(UCanvasRenderTarget2D_* self);
N_LIB_PRIVATE N_NIMCALL(void, getSize_)(UCanvasRenderTarget2D_* self, NI32& width, NI32& height);
N_LIB_PRIVATE N_NIMCALL(UCanvasRenderTarget2D_*, createCanvasRenderTarget2D_)(UObject* worldContextObject, TY__cyRmGPtN9aq0VukEVoX3rGg canvasRenderTarget2DClass, NI32 width, NI32 height);
N_LIB_PRIVATE N_NIMCALL(void, keepUCanvasRenderTarget2D)(UCanvasRenderTarget2D_* fake);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UCheatManagerExtension_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUCheatManagerExtension)(UCheatManagerExtension_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCollisionProfile)(UCollisionProfile* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDrawSphereComponent)(UDrawSphereComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULineBatchComponent)(ULineBatchComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setBoneTransformByName_)(UPoseableMeshComponent_* self, FName boneName, FTransform& inTransform, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(void, setBoneScaleByName_)(UPoseableMeshComponent_* self, FName boneName, FVector inScale3D, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(void, setBoneRotationByName_)(UPoseableMeshComponent_* self, FName boneName, FRotator inRotation, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(void, setBoneLocationByName_)(UPoseableMeshComponent_* self, FName boneName, FVector inLocation, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(void, resetBoneTransformByName_)(UPoseableMeshComponent_* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FTransform, getBoneTransformByName_)(UPoseableMeshComponent_* self, FName boneName, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneScaleByName_)(UPoseableMeshComponent_* self, FName boneName, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBoneRotationByName_)(UPoseableMeshComponent_* self, FName boneName, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneLocationByName_)(UPoseableMeshComponent_* self, FName boneName, tyEnum_EBoneSpaces__9cm9c1P1yTXZtw3N9bQvQDsFg boneSpace);
N_LIB_PRIVATE N_NIMCALL(void, copyPoseFromSkeletalComponent_)(UPoseableMeshComponent_* self, USkeletalMeshComponent* inComponentToCopy);
N_LIB_PRIVATE N_NIMCALL(void, keepUPoseableMeshComponent)(UPoseableMeshComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSplineMetadata)(USplineMetadata_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__M4MmxYh2DRWibpvAY9b1bhg*, parentTables)(UCompositeCurveTable_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparentTables)(UCompositeCurveTable_* obj, TY__M4MmxYh2DRWibpvAY9b1bhg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUCompositeCurveTable)(UCompositeCurveTable_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__CsVeHH6fpx8ZgI6qaaSz3A*, parentTables)(UCompositeDataTable_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparentTables)(UCompositeDataTable_* obj, TY__CsVeHH6fpx8ZgI6qaaSz3A val);
N_LIB_PRIVATE N_NIMCALL(void, keepUCompositeDataTable)(UCompositeDataTable_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__IqXdAzIoi9cCuZiE2VD1lMg*, cullDistances)(ACullDistanceVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcullDistances)(ACullDistanceVolume_* obj, TY__IqXdAzIoi9cCuZiE2VD1lMg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(ACullDistanceVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(ACullDistanceVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepACullDistanceVolume)(ACullDistanceVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPrimaryDataAsset)(UPrimaryDataAsset* fake);
N_LIB_PRIVATE N_NIMCALL(void, getDataTableRowNames_)(UDataTable* table, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outRowNames);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDataTableRowFromName_)(UDataTable* table, FName rowName, FTableRowBase& outRow);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getDataTableColumnAsString_)(UDataTable* dataTable, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromJSONString_)(UDataTable* dataTable, FString jSONString);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromJSONFile_)(UDataTable* dataTable, FString jSONFilePath, UScriptStruct* importRowStruct);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromCSVString_)(UDataTable* dataTable, FString cSVString);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fillDataTableFromCSVFile_)(UDataTable* dataTable, FString cSVFilePath);
N_LIB_PRIVATE N_NIMCALL(void, evaluateCurveTableRow_)(UCurveTable_* curveTable, FName rowName, NF32 inXY, tyEnum_EEvaluateCurveTableResult__Cz3R9cE75Z6VtgD7SPlaxXg& outResult, NF32& outXY, FString contextString);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesDataTableRowExist_)(UDataTable* table, FName rowName);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataTableFunctionLibrary)(UDataTableFunctionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, speedScale)(ADebugCameraController_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspeedScale)(ADebugCameraController_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, initialMaxSpeed)(ADebugCameraController_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialMaxSpeed)(ADebugCameraController_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, initialAccel)(ADebugCameraController_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialAccel)(ADebugCameraController_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, initialDecel)(ADebugCameraController_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialDecel)(ADebugCameraController_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, toggleDisplay_)(ADebugCameraController_* self);
N_LIB_PRIVATE N_NIMCALL(void, setPawnMovementSpeedScale_)(ADebugCameraController_* self, NF32 newSpeedScale);
N_LIB_PRIVATE N_NIMCALL(AActor*, getSelectedActor_)(ADebugCameraController_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUReporterBase)(UReporterBase_* fake);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, decal)(ADecalActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdecal)(ADecalActor_* obj, UDecalComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, setDecalMaterial_)(ADecalActor_* self, UMaterialInterface* newDecalMaterial);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getDecalMaterial_)(ADecalActor_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(ADecalActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepADecalActor)(ADecalActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepADefaultPhysicsVolume)(ADefaultPhysicsVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNetDriver)(UNetDriver_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDestructibleInterface)(UDestructibleInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDPICustomScalingRule)(UDPICustomScalingRule_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEngineElementsLibrary)(UEngineElementsLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTypedElementCommonActions)(UTypedElementCommonActions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTypedElementWorldInterface)(UTypedElementWorldInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(UCancellableAsyncAction_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSystemTimeTimecodeProvider)(USystemTimeTimecodeProvider_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removeDisplayDelegate_)(UViewportStatsSubsystem_* self, NI32 indexToRemove);
N_LIB_PRIVATE N_NIMCALL(void, addTimedDisplay_)(UViewportStatsSubsystem_* self, FText text, FLinearColor color, NF32 duration, FVector2D& displayOffset);
N_LIB_PRIVATE N_NIMCALL(void, addTimedDisplay_)(UViewportStatsSubsystem_* self, FText text, FLinearColor color, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(NI32, addDisplayDelegate_)(UViewportStatsSubsystem_* self, FViewportDisplayCallback_& delegate);
N_LIB_PRIVATE N_NIMCALL(void, keepUViewportStatsSubsystem)(UViewportStatsSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(FString, sourceFilename)(UFontFace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceFilename)(UFontFace_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ, hinting)(UFontFace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethinting)(UFontFace_* obj, tyEnum_EFontHinting__Zvi1HF3s4s1JdJaUp0cDOQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ, loadingPolicy)(UFontFace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setloadingPolicy)(UFontFace_* obj, tyEnum_EFontLoadingPolicy__6c9cvcC9cidPVwKnQESBrmnQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w, layoutMethod)(UFontFace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlayoutMethod)(UFontFace_* obj, tyEnum_EFontLayoutMethod__nN9cbAH0Fei47VRyC40C88w val);
N_LIB_PRIVATE N_NIMCALL(void, keepUFontFace)(UFontFace_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlayerStateCountLimiterConfig)(UPlayerStateCountLimiterConfig_* fake);
N_LIB_PRIVATE N_NIMCALL(void, unRetainAllSoundsInSoundClass_)(USoundClass* inSoundClass);
N_LIB_PRIVATE N_NIMCALL(void, unloadStreamLevelBySoftObjectPtr_)(UObject* worldContextObject, TY__9cPzWpX39aro9ack5dbCvRImQ level, FLatentActionInfo latentInfo, NIM_BOOL bShouldBlockOnUnload);
N_LIB_PRIVATE N_NIMCALL(void, unloadStreamLevel_)(UObject* worldContextObject, FName levelName, FLatentActionInfo latentInfo, NIM_BOOL bShouldBlockOnUnload);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, suggestProjectileVelocity_CustomArc_)(UObject* worldContextObject, FVector& outLaunchVelocity, FVector startPos, FVector endPos, NF32 overrideGravityZ, NF32 arcParam);
N_LIB_PRIVATE N_NIMCALL(UObject*, spawnObject_)(TY__Gdb8rCprT6WGagrQes2BIg objectClass, UObject* outer);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackComponent_*, spawnForceFeedbackAttached_)(UForceFeedbackEffect_* forceFeedbackEffect, USceneComponent* attachToComponent, FName attachPointName, FVector location, FRotator rotation, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType, NIM_BOOL bStopWhenAttachedToDestroyed, NIM_BOOL bLooping, NF32 intensityMultiplier, NF32 startTime, UForceFeedbackAttenuation_* attenuationSettings, NIM_BOOL bAutoDestroy);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackComponent_*, spawnForceFeedbackAtLocation_)(UObject* worldContextObject, UForceFeedbackEffect_* forceFeedbackEffect, FVector location, FRotator rotation, NIM_BOOL bLooping, NF32 intensityMultiplier, NF32 startTime, UForceFeedbackAttenuation_* attenuationSettings, NIM_BOOL bAutoDestroy);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, spawnEmitterAttached_)(UParticleSystem* emitterTemplate, USceneComponent* attachToComponent, FName attachPointName, FVector location, FRotator rotation, FVector scale, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType, NIM_BOOL bAutoDestroy, tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw poolingMethod, NIM_BOOL bAutoActivate);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, spawnEmitterAtLocation_)(UObject* worldContextObject, UParticleSystem* emitterTemplate, FVector location, FRotator rotation, FVector scale, NIM_BOOL bAutoDestroy, tyEnum_EPSCPoolMethod__UD8LtH9aqOIOd2h2kDeuKjw poolingMethod, NIM_BOOL bAutoActivateSystem);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogueAttached_)(UDialogueWave_* dialogue, FDialogueContext& context, USceneComponent* attachToComponent, FName attachPointName, FVector location, FRotator rotation, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType, NIM_BOOL bStopWhenAttachedToDestroyed, NF32 volumeMultiplier, NF32 pitchMultiplier, NF32 startTime, USoundAttenuation* attenuationSettings, NIM_BOOL bAutoDestroy);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogueAtLocation_)(UObject* worldContextObject, UDialogueWave_* dialogue, FDialogueContext& context, FVector location, FRotator rotation, NF32 volumeMultiplier, NF32 pitchMultiplier, NF32 startTime, USoundAttenuation* attenuationSettings, NIM_BOOL bAutoDestroy);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, spawnDialogue2D_)(UObject* worldContextObject, UDialogueWave_* dialogue, FDialogueContext& context, NF32 volumeMultiplier, NF32 pitchMultiplier, NF32 startTime, NIM_BOOL bAutoDestroy);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, spawnDecalAttached_)(UMaterialInterface* decalMaterial, FVector decalSize, USceneComponent* attachToComponent, FName attachPointName, FVector location, FRotator rotation, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType, NF32 lifeSpan);
N_LIB_PRIVATE N_NIMCALL(UDecalComponent_*, spawnDecalAtLocation_)(UObject* worldContextObject, UMaterialInterface* decalMaterial, FVector decalSize, FVector location, FRotator rotation, NF32 lifeSpan);
N_LIB_PRIVATE N_NIMCALL(void, setWorldOriginLocation_)(UObject* worldContextObject, FIntVector newLocation);
N_LIB_PRIVATE N_NIMCALL(void, setViewportMouseCaptureMode_)(UObject* worldContextObject, tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g mouseCaptureMode);
N_LIB_PRIVATE N_NIMCALL(void, setSubtitlesEnabled_)(NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setSoundMixClassOverride_)(UObject* worldContextObject, USoundMix_* inSoundMixModifier, USoundClass* inSoundClass, NF32 volume, NF32 pitch, NF32 fadeInTime, NIM_BOOL bApplyToChildren);
N_LIB_PRIVATE N_NIMCALL(void, setSoundClassDistanceScale_)(UObject* worldContextObject, USoundClass* soundClass, NF32 distanceAttenuationScale, NF32 timeSec);
N_LIB_PRIVATE N_NIMCALL(void, setPlayerPlatformUserId_)(APlayerController* playerController, FPlatformUserId userId);
N_LIB_PRIVATE N_NIMCALL(void, setPlayerControllerID_)(APlayerController* player, NI32 controllerId);
N_LIB_PRIVATE N_NIMCALL(void, setMaxAudioChannelsScaled_)(UObject* worldContextObject, NF32 maxChannelCountScale);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalTimeDilation_)(UObject* worldContextObject, NF32 timeDilation);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalPitchModulation_)(UObject* worldContextObject, NF32 pitchModulation, NF32 timeSec);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalListenerFocusParameters_)(UObject* worldContextObject, NF32 focusAzimuthScale, NF32 nonFocusAzimuthScale, NF32 focusDistanceScale, NF32 nonFocusDistanceScale, NF32 focusVolumeScale, NF32 nonFocusVolumeScale, NF32 focusPriorityScale, NF32 nonFocusPriorityScale);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setGamePaused_)(UObject* worldContextObject, NIM_BOOL bPaused);
N_LIB_PRIVATE N_NIMCALL(void, setForceDisableSplitscreen_)(UObject* worldContextObject, NIM_BOOL bDisable);
N_LIB_PRIVATE N_NIMCALL(void, setEnableWorldRendering_)(UObject* worldContextObject, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, setBaseSoundMix_)(UObject* worldContextObject, USoundMix_* inSoundMix);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActiveSpatialPluginByName_)(UObject* worldContextObject, FName inPluginName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, saveGameToSlot_)(USaveGame_* saveGameObject, FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(void, removePlayer_)(APlayerController* player, NIM_BOOL bDestroyPawn);
N_LIB_PRIVATE N_NIMCALL(FVector, rebaseZeroOriginOntoLocal_)(UObject* worldContextObject, FVector worldLocation);
N_LIB_PRIVATE N_NIMCALL(FVector, rebaseLocalOriginOntoZero_)(UObject* worldContextObject, FVector worldLocation);
N_LIB_PRIVATE N_NIMCALL(void, pushSoundMixModifier_)(UObject* worldContextObject, USoundMix_* inSoundMixModifier);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldToScreen_)(APlayerController* player, FVector& worldPosition, FVector2D& screenPosition, NIM_BOOL bPlayerViewportRelative);
N_LIB_PRIVATE N_NIMCALL(void, primeAllSoundsInSoundClass_)(USoundClass* inSoundClass);
N_LIB_PRIVATE N_NIMCALL(void, popSoundMixModifier_)(UObject* worldContextObject, USoundMix_* inSoundMixModifier);
N_LIB_PRIVATE N_NIMCALL(void, playWorldCameraShake_)(UObject* worldContextObject, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, FVector epicenter, NF32 innerRadius, NF32 outerRadius, NF32 falloff, NIM_BOOL bOrientShakeTowardsEpicenter);
N_LIB_PRIVATE N_NIMCALL(void, playDialogueAtLocation_)(UObject* worldContextObject, UDialogueWave_* dialogue, FDialogueContext& context, FVector location, FRotator rotation, NF32 volumeMultiplier, NF32 pitchMultiplier, NF32 startTime, USoundAttenuation* attenuationSettings);
N_LIB_PRIVATE N_NIMCALL(void, playDialogue2D_)(UObject* worldContextObject, UDialogueWave_* dialogue, FDialogueContext& context, NF32 volumeMultiplier, NF32 pitchMultiplier, NF32 startTime);
N_LIB_PRIVATE N_NIMCALL(FString, parseOption_)(FString options, FString key);
N_LIB_PRIVATE N_NIMCALL(void, openLevelBySoftObjectPtr_)(UObject* worldContextObject, TY__9cPzWpX39aro9ack5dbCvRImQ level, NIM_BOOL bAbsolute, FString options);
N_LIB_PRIVATE N_NIMCALL(void, openLevel_)(UObject* worldContextObject, FName levelName, NIM_BOOL bAbsolute, FString options);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, objectIsA_)(UObject* object_0, TY__Gdb8rCprT6WGagrQes2BIg objectClass);
N_LIB_PRIVATE N_NIMCALL(FHitResult, makeHitResult_)(NIM_BOOL bBlockingHit, NIM_BOOL bInitialOverlap, NF32 time, NF32 distance, FVector location, FVector impactPoint, FVector normal, FVector impactNormal, UPhysicalMaterial* physMat, AActor* hitActor, UPrimitiveComponent* hitComponent, FName hitBoneName, FName boneName, NI32 hitItem, NI32 elementIndex, NI32 faceIndex, FVector traceStart, FVector traceEnd);
N_LIB_PRIVATE N_NIMCALL(void, loadStreamLevelBySoftObjectPtr_)(UObject* worldContextObject, TY__9cPzWpX39aro9ack5dbCvRImQ level, NIM_BOOL bMakeVisibleAfterLoad, NIM_BOOL bShouldBlockOnLoad, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(void, loadStreamLevel_)(UObject* worldContextObject, FName levelName, NIM_BOOL bMakeVisibleAfterLoad, NIM_BOOL bShouldBlockOnLoad, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(USaveGame_*, loadGameFromSlot_)(FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSplitscreenForceDisabled_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGamePaused_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasOption_)(FString options, FString inKey);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasLaunchOption_)(FString optionToCheck);
N_LIB_PRIVATE N_NIMCALL(NI32, grassOverlappingSphereCount_)(UObject* worldContextObject, UStaticMesh* staticMesh, FVector centerPosition, NF32 radius);
N_LIB_PRIVATE N_NIMCALL(FIntVector, getWorldOriginLocation_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NF, getWorldDeltaSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, getViewProjectionMatrix_)(FMinimalViewInfo desiredView, FMatrix& viewMatrix, FMatrix& projectionMatrix, FMatrix& viewProjectionMatrix);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCaptureMode__ajsQ7DGYSVFfejbTP9aU55g, getViewportMouseCaptureMode_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NF, getUnpausedTimeSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NF, getTimeSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicalSurface__5g7TGU9c5GxzehLMURCQRgA, getSurfaceType_)(FHitResult& hit);
N_LIB_PRIVATE N_NIMCALL(ULevelStreaming_*, getStreamingLevel_)(UObject* worldContextObject, FName packageName);
N_LIB_PRIVATE N_NIMCALL(NF, getRealTimeSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, getPlayerStateFromUniqueNetId_)(UObject* worldContextObject, FUniqueNetIdRepl& uniqueId);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, getPlayerState_)(UObject* worldContextObject, NI32 playerStateIndex);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPlayerPawn_)(UObject* worldContextObject, NI32 playerIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, getPlayerControllerID_)(APlayerController* player);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromPlatformUser_)(UObject* worldContextObject, FPlatformUserId userId);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromID_)(UObject* worldContextObject, NI32 controllerID);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UObject* worldContextObject, NI32 playerIndex);
N_LIB_PRIVATE N_NIMCALL(ACharacter*, getPlayerCharacter_)(UObject* worldContextObject, NI32 playerIndex);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, getPlayerCameraManager_)(UObject* worldContextObject, NI32 playerIndex);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformName_)(void);
N_LIB_PRIVATE N_NIMCALL(UClass*, getObjectClass_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayerStates_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayerControllers_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLocalPlayerControllers_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaxAudioChannelCount_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, getKeyValue_)(FString pair, FString& key, FString& value);
N_LIB_PRIVATE N_NIMCALL(NI32, getIntOption_)(FString options, FString key, NI32 defaultValue);
N_LIB_PRIVATE N_NIMCALL(NF32, getGlobalTimeDilation_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(AGameStateBase_*, getGameState_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(AGameModeBase*, getGameMode_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(UGameInstance*, getGameInstance_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getEnableWorldRendering_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(UReverbEffect_*, getCurrentReverbEffect_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLevelName_)(UObject* worldContextObject, NIM_BOOL bRemovePrefixString);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getClosestListenerLocation_)(UObject* worldContextObject, FVector& location, NF32 maximumRange, NIM_BOOL bAllowAttenuationOverride, FVector& listenerPosition);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getAvailableSpatialPluginNames_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NF, getAudioTimeSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsWithTag_)(UObject* worldContextObject, FName tag, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsWithInterface_)(UObject* worldContextObject, TY__KI5t49abR3sL6OsGNxWlhiQ interface_0, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsOfClassWithTag_)(UObject* worldContextObject, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass, FName tag, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(void, getAllActorsOfClass_)(UObject* worldContextObject, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(AActor*, getActorOfClass_)(UObject* worldContextObject, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass);
N_LIB_PRIVATE N_NIMCALL(void, getActorArrayBounds_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actors, NIM_BOOL bOnlyCollidingComponents, FVector& center, FVector& boxExtent);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorArrayAverageLocation_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actors);
N_LIB_PRIVATE N_NIMCALL(FName, getActiveSpatialPluginName_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, getAccurateRealTime_)(NI32& seconds, NF& partialSeconds);
N_LIB_PRIVATE N_NIMCALL(void, flushLevelStreaming_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(AActor*, finishSpawningActor_)(AActor* actor, FTransform& spawnTransform, tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg transformScaleMethod);
N_LIB_PRIVATE N_NIMCALL(AActor*, findNearestActor_)(FVector origin, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToCheck, NF32& distance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, findCollisionUV_)(FHitResult& hit, NI32 uVChannel, FVector2D& uV);
N_LIB_PRIVATE N_NIMCALL(void, enableLiveStreaming_)(NIM_BOOL enable);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesSaveGameExist_)(FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectScreenToWorld_)(APlayerController* player, FVector2D& screenPosition, FVector& worldPosition, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectSceneCaptureToWorld_)(ASceneCapture2D_* sceneCapture2D, FVector2D& targetUV, FVector& worldPosition, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deleteGameInSlot_)(FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(void, deactivateReverbEffect_)(UObject* worldContextObject, FName tagName);
N_LIB_PRIVATE N_NIMCALL(USaveGame_*, createSaveGameObject_)(TY__oMknOVX79awua0tCYRTqEkw saveGameClass);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, createPlayerFromPlatformUser_)(UObject* worldContextObject, FPlatformUserId userId, NIM_BOOL bSpawnPlayerController);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, createPlayer_)(UObject* worldContextObject, NI32 controllerId, NIM_BOOL bSpawnPlayerController);
N_LIB_PRIVATE N_NIMCALL(void, clearSoundMixModifiers_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, clearSoundMixClassOverride_)(UObject* worldContextObject, USoundMix_* inSoundMixModifier, USoundClass* inSoundClass, NF32 fadeOutTime);
N_LIB_PRIVATE N_NIMCALL(void, cancelAsyncLoading_)(void);
N_LIB_PRIVATE N_NIMCALL(void, breakHitResult_)(FHitResult& hit, NIM_BOOL& bBlockingHit, NIM_BOOL& bInitialOverlap, NF32& time, NF32& distance, FVector& location, FVector& impactPoint, FVector& normal, FVector& impactNormal, UPhysicalMaterial*& physMat, AActor*& hitActor, UPrimitiveComponent*& hitComponent, FName& hitBoneName, FName& boneName, NI32& hitItem, NI32& elementIndex, NI32& faceIndex, FVector& traceStart, FVector& traceEnd);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprintSuggestProjectileVelocity_)(UObject* worldContextObject, FVector& tossVelocity, FVector startLocation, FVector endLocation, NF32 launchSpeed, NF32 overrideGravityZ, tyEnum_ESuggestProjVelocityTraceOption__KuHBSpJifpeqmLf689cx8uA traceOption, NF32 collisionRadius, NIM_BOOL bFavorHighArc, NIM_BOOL bDrawDebug);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_ByTraceChannel_)(UObject* worldContextObject, FHitResult& outHit, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPathPositions, FVector& outLastTraceDestination, FVector startPos, FVector launchVelocity, NIM_BOOL bTracePath, NF32 projectileRadius, ECollisionChannel traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, NF32 drawDebugTime, NF32 simFrequency, NF32 maxSimTime, NF32 overrideGravityZ);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_ByObjectType_)(UObject* worldContextObject, FHitResult& outHit, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPathPositions, FVector& outLastTraceDestination, FVector startPos, FVector launchVelocity, NIM_BOOL bTracePath, NF32 projectileRadius, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, NF32 drawDebugTime, NF32 simFrequency, NF32 maxSimTime, NF32 overrideGravityZ);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, blueprint_PredictProjectilePath_Advanced_)(UObject* worldContextObject, FPredictProjectilePathParams_& predictParams, FPredictProjectilePathResult_& predictResult);
N_LIB_PRIVATE N_NIMCALL(AActor*, beginSpawningActorFromBlueprint_)(UObject* worldContextObject, UBlueprint* blueprint, FTransform& spawnTransform, NIM_BOOL bNoCollisionFail);
N_LIB_PRIVATE N_NIMCALL(AActor*, beginDeferredActorSpawnFromClass_)(UObject* worldContextObject, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass, FTransform& spawnTransform, tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ collisionHandlingOverride, AActor* owner, tyEnum_ESpawnActorScaleMethod__9bFsrnOuRrvTBcNSsB2fEVg transformScaleMethod);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, areSubtitlesEnabled_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, areAnyListenersWithinRange_)(UObject* worldContextObject, FVector& location, NF32 maximumRange);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, applyRadialDamageWithFalloff_)(UObject* worldContextObject, NF32 baseDamage, NF32 minimumDamage, FVector& origin, NF32 damageInnerRadius, NF32 damageOuterRadius, NF32 damageFalloff, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass, TY__kbK03O9cVTTS0GR9cjPhedTg& ignoreActors, AActor* damageCauser, AController* instigatedByController, ECollisionChannel damagePreventionChannel);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, applyRadialDamage_)(UObject* worldContextObject, NF32 baseDamage, FVector& origin, NF32 damageRadius, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass, TY__kbK03O9cVTTS0GR9cjPhedTg& ignoreActors, AActor* damageCauser, AController* instigatedByController, NIM_BOOL bDoFullDamage, ECollisionChannel damagePreventionChannel);
N_LIB_PRIVATE N_NIMCALL(NF32, applyPointDamage_)(AActor* damagedActor, NF32 baseDamage, FVector& hitFromDirection, FHitResult& hitInfo, AController* eventInstigator, AActor* damageCauser, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass);
N_LIB_PRIVATE N_NIMCALL(NF32, applyDamage_)(AActor* damagedActor, NF32 baseDamage, AController* eventInstigator, AActor* damageCauser, TY__ABzvPARwjWflBz1vDaugrg damageTypeClass);
N_LIB_PRIVATE N_NIMCALL(void, announceAccessibleString_)(FString announcementString);
N_LIB_PRIVATE N_NIMCALL(void, activateReverbEffect_)(UObject* worldContextObject, UReverbEffect_* reverbEffect, FName tagName, NF32 priority, NF32 volume, NF32 fadeTime);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayStatics)(UGameplayStatics* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUImportantToggleSettingInterface)(UImportantToggleSettingInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDelegateBinding)(UInputDelegateBinding_* fake);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, platformUserId_None_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FPlatformUserId a, FPlatformUserId b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FInputDeviceId a, FInputDeviceId b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidPlatformId_)(FPlatformUserId userId);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidInputDevice_)(FInputDeviceId deviceId);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnpairedUserId_)(FPlatformUserId platformId);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInputDeviceMappedToUnpairedUser_)(FInputDeviceId inputDevice);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDevicePropertyHandleValid_)(FInputDevicePropertyHandle_& inHandle);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, inputDeviceId_None_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getUserForUnpairedInputDevices_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getUserForInputDevice_)(FInputDeviceId deviceId);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPrimaryPlatformUser_)(void);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, getPrimaryInputDeviceForUser_)(FPlatformUserId userId);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromPlatformUser_)(FPlatformUserId userId);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerControllerFromInputDevice_)(FInputDeviceId deviceId);
N_LIB_PRIVATE N_NIMCALL(EInputDeviceConnectionState, getInputDeviceConnectionState_)(FInputDeviceId deviceId);
N_LIB_PRIVATE N_NIMCALL(FInputDeviceId, getDefaultInputDevice_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllInputDevicesForUser_)(FPlatformUserId userId, TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllInputDevices_)(TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllConnectedInputDevices_)(TY__8C7BRYyFrahKcz3Rrc7csA& outInputDevices);
N_LIB_PRIVATE N_NIMCALL(NI32, getAllActiveUsers_)(TY__0LGdQsbQ049aRvnlezZzVcQ& outUsers);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FPlatformUserId a, FPlatformUserId b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FInputDeviceId a, FInputDeviceId b);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceLibrary)(UInputDeviceLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterpCurveEdSetup)(UInterpCurveEdSetup_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setArrayPropertyByName_)(UObject* object_0, FName propertyName, TY__TxfK2fhRJXNHttPFRcL6fA& value);
N_LIB_PRIVATE N_NIMCALL(void, filterArray_)(TY__kbK03O9cVTTS0GR9cjPhedTg& targetArray, TY__9akcXb9b3ftlkdW8NDwR22Mg filterClass, TY__kbK03O9cVTTS0GR9cjPhedTg& filteredArray);
N_LIB_PRIVATE N_NIMCALL(void, array_Swap_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 firstIndex, NI32 secondIndex);
N_LIB_PRIVATE N_NIMCALL(void, array_Shuffle_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(void, array_Set_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 index, NI32& item, NIM_BOOL bSizeToFit);
N_LIB_PRIVATE N_NIMCALL(void, array_Reverse_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(void, array_Resize_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 size);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_RemoveItem_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& item);
N_LIB_PRIVATE N_NIMCALL(void, array_Remove_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 indexToRemove);
N_LIB_PRIVATE N_NIMCALL(void, array_RandomFromStream_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, FRandomStream& randomStream, NI32& outItem, NI32& outIndex);
N_LIB_PRIVATE N_NIMCALL(void, array_Random_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& outItem, NI32& outIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Length_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(NI32, array_LastIndex_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsValidIndex_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 indexToTest);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsNotEmpty_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_IsEmpty_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(void, array_Insert_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& newItem, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_Identical_)(TY__TxfK2fhRJXNHttPFRcL6fA& arrayA, TY__TxfK2fhRJXNHttPFRcL6fA& arrayB);
N_LIB_PRIVATE N_NIMCALL(void, array_Get_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32 index, NI32& item);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Find_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& itemToFind);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, array_Contains_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& itemToFind);
N_LIB_PRIVATE N_NIMCALL(void, array_Clear_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray);
N_LIB_PRIVATE N_NIMCALL(void, array_Append_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, TY__TxfK2fhRJXNHttPFRcL6fA& sourceArray);
N_LIB_PRIVATE N_NIMCALL(NI32, array_AddUnique_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& newItem);
N_LIB_PRIVATE N_NIMCALL(NI32, array_Add_)(TY__TxfK2fhRJXNHttPFRcL6fA& targetArray, NI32& newItem);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetArrayLibrary)(UKismetArrayLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, parse_StringToGuid_)(FString guidString, FGuid& outGuid, NIM_BOOL& success);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GuidGuid_)(FGuid& a, FGuid& b);
N_LIB_PRIVATE N_NIMCALL(FGuid, newGuid_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_Guid_)(FGuid& inGuid);
N_LIB_PRIVATE N_NIMCALL(void, invalidate_Guid_)(FGuid& inGuid);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GuidGuid_)(FGuid& a, FGuid& b);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FGuid& inGuid);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetGuidLibrary)(UKismetGuidLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointerEvent_IsTouchEvent_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointerEvent_IsMouseButtonDown_)(FPointerEvent& input, FKey mouseButton);
N_LIB_PRIVATE N_NIMCALL(NF32, pointerEvent_GetWheelDelta_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetUserIndex_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetTouchpadIndex_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetScreenSpacePosition_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerEvent_GetPointerIndex_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetLastScreenSpacePosition_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESlateGesture__Pscv9bCSeopgM2S4iny2Wjw, pointerEvent_GetGestureType_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetGestureDelta_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(FKey, pointerEvent_GetEffectingButton_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(FVector2D, pointerEvent_GetCursorDelta_)(FPointerEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsShiftDown_)(FSlateModifierKeysState_& keysState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsControlDown_)(FSlateModifierKeysState_& keysState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsCommandDown_)(FSlateModifierKeysState_& keysState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, modifierKeysState_IsAltDown_)(FSlateModifierKeysState_& keysState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsVectorAxis_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsValid_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsMouseButton_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsModifierKey_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsKeyboardKey_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsGamepadKey_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsDigital_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsButtonAxis_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis3D_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis2D_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAxis1D_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, key_IsAnalog_)(FKey& key);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ, key_GetNavigationDirectionFromKey_)(FKeyEvent& inKeyEvent);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ, key_GetNavigationDirectionFromAnalog_)(FAnalogInputEvent& inAnalogEvent);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA, key_GetNavigationActionFromKey_)(FKeyEvent& inKeyEvent);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EUINavigationAction__hh15zLHgur84VvhuutPyfA, key_GetNavigationAction_)(FKey& inKey);
N_LIB_PRIVATE N_NIMCALL(FText, key_GetDisplayName_)(FKey& key, NIM_BOOL bLongDisplayName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsShiftDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightShiftDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightControlDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightCommandDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRightAltDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsRepeat_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftShiftDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftControlDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftCommandDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsLeftAltDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsControlDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsCommandDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inputEvent_IsAltDown_)(FInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(FText, inputChord_GetDisplayName_)(FInputChord& key);
N_LIB_PRIVATE N_NIMCALL(NI32, getUserIndex_)(FKeyEvent& input);
N_LIB_PRIVATE N_NIMCALL(FSlateModifierKeysState_, getModifierKeysState_)(void);
N_LIB_PRIVATE N_NIMCALL(FKey, getKey_)(FKeyEvent& input);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnalogValue_)(FAnalogInputEvent& input);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_KeyKey_)(FKey a, FKey b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_InputChordInputChord_)(FInputChord a, FInputChord b);
N_LIB_PRIVATE N_NIMCALL(void, calibrateTilt_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetInputLibrary)(UKismetInputLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLocale_)(FString culture, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLanguageAndLocale_)(FString culture, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentLanguage_)(FString culture, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentCulture_)(FString culture, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCurrentAssetGroupCulture_)(FName assetGroup, FString culture, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(FString, getSuitableCulture_)(TY__myhN0u2pNczwuaOhbdYPXw& availableCultures, FString cultureToMatch, FString fallbackCulture);
N_LIB_PRIVATE N_NIMCALL(FString, getNativeCulture_)(tyEnum_ELocalizedTextSourceCategory__3Ltn8YdL2zodLqTHWaOvUQ textCategory);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getLocalizedCultures_)(NIM_BOOL includeGame, NIM_BOOL includeEngine, NIM_BOOL includeEditor, NIM_BOOL includeAdditional);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLocale_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentLanguage_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentCulture_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCurrentAssetGroupCulture_)(FName assetGroup);
N_LIB_PRIVATE N_NIMCALL(FString, getCultureDisplayName_)(FString culture, NIM_BOOL localized);
N_LIB_PRIVATE N_NIMCALL(void, clearCurrentAssetGroupCulture_)(FName assetGroup, NIM_BOOL saveToConfig);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetInternationalizationLibrary)(UKismetInternationalizationLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValue_)(UObject* worldContextObject, UMaterialParameterCollection_* collection, FName parameterName, FLinearColor& parameterValue);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValue_)(UObject* worldContextObject, UMaterialParameterCollection_* collection, FName parameterName, NF32 parameterValue);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UObject* worldContextObject, UMaterialParameterCollection_* collection, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UObject* worldContextObject, UMaterialParameterCollection_* collection, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UObject* worldContextObject, UMaterialInterface* parent, FName optionalName, tyEnum_EMIDCreationFlags__VI0UMZsMNapQIo2qZneX9bQ creationFlags);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetMaterialLibrary)(UKismetMaterialLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, xor_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, xor_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NI32, wrap_)(NI32 value, NI32 min, NI32 max);
N_LIB_PRIVATE N_NIMCALL(FVector, weightedMovingAverage_FVector_)(FVector currentSample, FVector previousSample, NF32 weight);
N_LIB_PRIVATE N_NIMCALL(FRotator, weightedMovingAverage_FRotator_)(FRotator currentSample, FRotator previousSample, NF32 weight);
N_LIB_PRIVATE N_NIMCALL(NF32, weightedMovingAverage_Float_)(NF32 currentSample, NF32 previousSample, NF32 weight);
N_LIB_PRIVATE N_NIMCALL(NF, length2DSquared_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, length2D_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, lerpTo_)(FVector a, FVector b, NF32 alpha);
N_LIB_PRIVATE N_NIMCALL(FVector, interpToConstant_)(FVector current, FVector target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FVector, interpTo_)(FVector current, FVector target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FVector, interpSpringTo_)(FVector current, FVector target, FVectorSpringState_& springState, NF32 stiffness, NF32 criticalDampingFactor, NF32 deltaTime, NF32 mass, NF32 targetVelocityAmount, NIM_BOOL bClamp, FVector minValue, FVector maxValue, NIM_BOOL bInitializeFromTarget);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Up_)(void);
N_LIB_PRIVATE N_NIMCALL(void, unwindEuler_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, unitCartesianToSpherical_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, toRadians_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, toDegrees_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, snappedToGrid_)(FVector inVect, NF32 inGridSize);
N_LIB_PRIVATE N_NIMCALL(FVector, slerpVectors_)(FVector vector, FVector direction, NF alpha);
N_LIB_PRIVATE N_NIMCALL(FVector, slerpNormals_)(FVector normalA, FVector normalB, NF alpha);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector& a, NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Right_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, reciprocal_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnToNormal_)(FVector v, FVector inNormal);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, normalUnsafe_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FVector& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector, normal2D_)(FVector a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorByPlane_)(FVector a, FPlane& inPlane);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Left_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnit_)(FVector& a, NF32 squaredLenthTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUniform_)(FVector& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormal_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero_)(FVector& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNAN_)(FVector& a);
N_LIB_PRIVATE N_NIMCALL(NF, headingAngle_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, getSignVector_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, getProjection_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMin_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMax_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, getAbs_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Forward_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Down_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, distanceSquared_)(FVector v1, FVector v2);
N_LIB_PRIVATE N_NIMCALL(NF, distance2DSquared_)(FVector v1, FVector v2);
N_LIB_PRIVATE N_NIMCALL(NF, distance2D_)(FVector v1, FVector v2);
N_LIB_PRIVATE N_NIMCALL(NF, distance_)(FVector v1, FVector v2);
N_LIB_PRIVATE N_NIMCALL(NF, cosineAngle2D_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, getMin_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, getMax_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSizeMax2D_)(FVector a, NF max);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSizeMax_)(FVector a, NF max);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSize2D_)(FVector a, NF min, NF max);
N_LIB_PRIVATE N_NIMCALL(FVector, boundedToCube_)(FVector inVect, NF32 inRadius);
N_LIB_PRIVATE N_NIMCALL(FVector, boundedToBox_)(FVector inVect, FVector inBoxMin, FVector inBoxMax);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_Backward_)(void);
N_LIB_PRIVATE N_NIMCALL(void, assign_)(FVector& a, FVector& inVector);
N_LIB_PRIVATE N_NIMCALL(void, addBounded_)(FVector& a, FVector inAddVect, NF32 inRadius);
N_LIB_PRIVATE N_NIMCALL(FVector4, vector4_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared3_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NF, lengthSquared_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NF, length3_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NF, length_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector4& a, NF x, NF y, NF z, NF w);
N_LIB_PRIVATE N_NIMCALL(FVector4, normalUnsafe3_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(void, normalize3_)(FVector4& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector4, normal3_)(FVector4& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector4, negated_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(FVector4, mirrorByVector3_)(FVector4& direction, FVector4& surfaceNormal);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnit3_)(FVector4& a, NF32 squaredLenthTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormal3_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero3_)(FVector4& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNAN_)(FVector4& a);
N_LIB_PRIVATE N_NIMCALL(NF, dot3_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(FVector4, cross3_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(void, assign_)(FVector4& a, FVector4& inVector);
N_LIB_PRIVATE N_NIMCALL(FVector2D, interpToConstant_)(FVector2D current, FVector2D target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FVector2D, interpTo_)(FVector2D current, FVector2D target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_Unit45Deg_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, vEase_)(FVector a, FVector b, NF32 alpha, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc, NF32 blendExp, NI32 steps);
N_LIB_PRIVATE N_NIMCALL(FDateTime, utcNow_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector4_)(FMatrix& matrix, FVector4& vec4);
N_LIB_PRIVATE N_NIMCALL(FRotator, transformRotation_)(FTransform& t, FRotator rotation);
N_LIB_PRIVATE N_NIMCALL(FVector, transformLocation_)(FTransform& t, FVector location);
N_LIB_PRIVATE N_NIMCALL(FVector, transformDirection_)(FTransform& t, FVector direction);
N_LIB_PRIVATE N_NIMCALL(NF32, determinant_)(FTransform& transform);
N_LIB_PRIVATE N_NIMCALL(FVector2D, toSign_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, toRounded_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(void, toDirectionAndLength_)(FVector2D a, FVector2D& outDir, NF& outLength);
N_LIB_PRIVATE N_NIMCALL(FDateTime, today_)(void);
N_LIB_PRIVATE N_NIMCALL(FTransform, lerp_)(FTransform& a, FTransform& b, NF32 alpha, tyEnum_ELerpInterpolationMode__1hcOsNVo9arJEZAb4iAEcLg interpMode);
N_LIB_PRIVATE N_NIMCALL(FTransform, interpTo_)(FTransform& current, FTransform& target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanZeroValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, timespanRatio_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanMinValue_)(void);
N_LIB_PRIVATE N_NIMCALL(FTimespan, timespanMaxValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timespanFromString_)(FString timespanString, FTimespan& Result);
N_LIB_PRIVATE N_NIMCALL(FTransform, ease_)(FTransform& a, FTransform& b, NF32 alpha, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc, NF32 blendExp, NI32 steps);
N_LIB_PRIVATE N_NIMCALL(NF, tan_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FVector, subtract_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, subtractInt_)(FVector a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FVector, subtractFloat_)(FVector a, NF b);
N_LIB_PRIVATE N_NIMCALL(FVector4, subtract_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, subtract_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, subtractFloat_)(FVector2D a, NF b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, subtract_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(FQuat, subtract_)(FQuat& a, FQuat& b);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, subtract_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, subtract_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, subtractInt_)(FIntPoint a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI32, subtract_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, subtract_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NF, subtract_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(FDateTime, subtract_DateTimeTimespan_)(FDateTime a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, subtract_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NU8, subtract_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NF, square_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, sqrt_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FVector, sphericalToUnitCartesian_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NF, sin_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI64, signOfInteger64_)(NI64 a);
N_LIB_PRIVATE N_NIMCALL(NI32, signOfInteger_)(NI32 a);
N_LIB_PRIVATE N_NIMCALL(NF, signOfFloat_)(NF a);
N_LIB_PRIVATE N_NIMCALL(void, setVectorSpringStateVelocity_)(FVectorSpringState_& springState, FVector velocity);
N_LIB_PRIVATE N_NIMCALL(void, setSeed_)(FRandomStream& stream, NI32 newSeed);
N_LIB_PRIVATE N_NIMCALL(void, setQuaternionSpringStateAngularVelocity_)(FQuaternionSpringState_& springState, FVector angularVelocity);
N_LIB_PRIVATE N_NIMCALL(void, setFloatSpringStateVelocity_)(FFloatSpringState_& springState, NF32 velocity);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FVector2D& a, NF x, NF y);
N_LIB_PRIVATE N_NIMCALL(FVector, selectVector_)(FVector a, FVector b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(FTransform, selectTransform_)(FTransform& a, FTransform& b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(FString, selectString_)(FString a, FString b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(FRotator, selectRotator_)(FRotator a, FRotator b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(UObject*, selectObject_)(UObject* a, UObject* b, NIM_BOOL bSelectA);
N_LIB_PRIVATE N_NIMCALL(NI32, selectInt_)(NI32 a, NI32 b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(NF, selectFloat_)(NF a, NF b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, selectColor_)(FLinearColor a, FLinearColor b, NIM_BOOL bPickA);
N_LIB_PRIVATE N_NIMCALL(UClass*, selectClass_)(UClass* a, UClass* b, NIM_BOOL bSelectA);
N_LIB_PRIVATE N_NIMCALL(void, generateNewSeed_)(FRandomStream& stream);
N_LIB_PRIVATE N_NIMCALL(NF, safeDivide_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NI64, round64_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, round_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotatorFromAxisAndAngle_)(FVector axis, NF32 angle);
N_LIB_PRIVATE N_NIMCALL(FVector, rotateAngleAxis_)(FVector inVect, NF32 angleDeg, FVector axis);
N_LIB_PRIVATE N_NIMCALL(FRotator, lerp_)(FRotator a, FRotator b, NF32 alpha, NIM_BOOL bShortestPath);
N_LIB_PRIVATE N_NIMCALL(FRotator, rInterpTo_Constant_)(FRotator current, FRotator target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(FRotator, rInterpTo_)(FRotator current, FRotator target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(void, rGBIntoHSV_)(FLinearColor rGB, FLinearColor& hSV);
N_LIB_PRIVATE N_NIMCALL(void, rGBIntoHSVComponents_)(FLinearColor inColor, NF32& h, NF32& s, NF32& v, NF32& a);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, rGBToHSV_)(FLinearColor rGB);
N_LIB_PRIVATE N_NIMCALL(void, resetVectorSpringState_)(FVectorSpringState_& springState);
N_LIB_PRIVATE N_NIMCALL(void, reset_)(FRandomStream& stream);
N_LIB_PRIVATE N_NIMCALL(void, resetQuaternionSpringState_)(FQuaternionSpringState_& springState);
N_LIB_PRIVATE N_NIMCALL(void, resetFloatSpringState_)(FFloatSpringState_& springState);
N_LIB_PRIVATE N_NIMCALL(FRotator, ease_)(FRotator a, FRotator b, NF32 alpha, NIM_BOOL bShortestPath, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc, NF32 blendExp, NI32 steps);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInRadians_)(FRandomStream& stream, FVector& coneDir, NF32 maxYawInRadians, NF32 maxPitchInRadians);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInRadians_)(FVector coneDir, NF32 maxYawInRadians, NF32 maxPitchInRadians);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInDegrees_)(FRandomStream& stream, FVector& coneDir, NF32 maxYawInDegrees, NF32 maxPitchInDegrees);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInEllipticalConeInDegrees_)(FVector coneDir, NF32 maxYawInDegrees, NF32 maxPitchInDegrees);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInRadians_)(FRandomStream& stream, FVector& coneDir, NF32 coneHalfAngleInRadians);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInRadians_)(FVector coneDir, NF32 coneHalfAngleInRadians);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInDegrees_)(FRandomStream& stream, FVector& coneDir, NF32 coneHalfAngleInDegrees);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVectorInConeInDegrees_)(FVector coneDir, NF32 coneHalfAngleInDegrees);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVector_)(FRandomStream& stream);
N_LIB_PRIVATE N_NIMCALL(FVector, randomUnitVector_)(void);
N_LIB_PRIVATE N_NIMCALL(FRotator, randomRotator_)(FRandomStream& stream, NIM_BOOL bRoll);
N_LIB_PRIVATE N_NIMCALL(FRotator, randomRotator_)(NIM_BOOL bRoll);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBox_)(FRandomStream& stream, FBox box);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoundedBox_)(FRandomStream& stream, FVector center, FVector halfSize);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoxExtents_)(FBox box);
N_LIB_PRIVATE N_NIMCALL(FVector, randomPointInBoxExtents_)(FVector center, FVector halfSize);
N_LIB_PRIVATE N_NIMCALL(NI32, randomIntInRange_)(FRandomStream& stream, NI32 min, NI32 max);
N_LIB_PRIVATE N_NIMCALL(NI32, randomIntegerInRange_)(NI32 min, NI32 max);
N_LIB_PRIVATE N_NIMCALL(NI32, randomInt_)(FRandomStream& stream, NI32 max);
N_LIB_PRIVATE N_NIMCALL(NI64, randomInteger64InRange_)(NI64 min, NI64 max);
N_LIB_PRIVATE N_NIMCALL(NI64, randomInteger64_)(NI64 max);
N_LIB_PRIVATE N_NIMCALL(NI32, randomInteger_)(NI32 max);
N_LIB_PRIVATE N_NIMCALL(NF32, randomFloatInRange_)(FRandomStream& stream, NF32 min, NF32 max);
N_LIB_PRIVATE N_NIMCALL(NF, randomFloatInRange_)(NF min, NF max);
N_LIB_PRIVATE N_NIMCALL(NF32, randomFloat_)(FRandomStream& stream);
N_LIB_PRIVATE N_NIMCALL(NF, randomFloat_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBoolWithWeight_)(FRandomStream& randomStream, NF32 weight);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBoolWithWeight_)(NF32 weight);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBool_)(FRandomStream& stream);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, randomBool_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, radiansToDegrees_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FQuat, interpSpringTo_)(FQuat current, FQuat target, FQuaternionSpringState_& springState, NF32 stiffness, NF32 criticalDampingFactor, NF32 deltaTime, NF32 mass, NF32 targetVelocityAmount, NIM_BOOL bInitializeFromTarget);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorUp_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorRight_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, vectorForward_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, unrotateVector_)(FQuat& q, FVector& v);
N_LIB_PRIVATE N_NIMCALL(FQuat, slerpQuat_)(FQuat& a, FQuat& b, NF alpha);
N_LIB_PRIVATE N_NIMCALL(NF32, sizeSquared_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(NF32, size_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(void, setFromEuler_)(FQuat& q, FVector& euler);
N_LIB_PRIVATE N_NIMCALL(void, setComponents_)(FQuat& q, NF32 x, NF32 y, NF32 z, NF32 w);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, rotateVector_)(FQuat& q, FVector& v);
N_LIB_PRIVATE N_NIMCALL(FQuat, normalized_)(FQuat& q, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FQuat& q, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FQuat, quat_MakeFromEuler_)(FVector& euler);
N_LIB_PRIVATE N_NIMCALL(FQuat, log_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNormalized_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNonFinite_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isIdentity_)(FQuat& q, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFinite_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FQuat, inversed_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FQuat, quat_Identity_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, getRotationAxis_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisZ_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisY_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, getAxisX_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(NF32, getAngle_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FQuat, findQuatBetweenVectors_)(FVector start, FVector end_0);
N_LIB_PRIVATE N_NIMCALL(FQuat, findQuatBetweenNormals_)(FVector startNormal, FVector endNormal);
N_LIB_PRIVATE N_NIMCALL(FQuat, exp_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(FVector, euler_)(FQuat& q);
N_LIB_PRIVATE N_NIMCALL(void, ensureShortestArcTo_)(FQuat& a, FQuat& b);
N_LIB_PRIVATE N_NIMCALL(NF32, angularDistance_)(FQuat& a, FQuat& b);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnTo_)(FVector v, FVector target);
N_LIB_PRIVATE N_NIMCALL(FVector, projectOnToPlane_)(FVector v, FVector planeNormal);
N_LIB_PRIVATE N_NIMCALL(FVector, projectPointOnToPlane_)(FVector point, FVector planeBase, FVector planeNormal);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointsAreCoplanar_)(TY__Bz8EFFwaAOJiUrMHOIgVGw& points, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NF32, perlinNoise1D_)(NF32 value);
N_LIB_PRIVATE N_NIMCALL(NI32, percent_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, percent_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NF, percent_FloatFloat_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NU8, percent_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NI32, or_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, or_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(FDateTime, now_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector a, FVector b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector4& a, FVector4& b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FVector2D a, FVector2D b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNotNearEqual_)(FRotator a, FRotator b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FQuat& a, FQuat& b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ObjectObject_)(UObject* a, UObject* b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_NameName_)(FName a, FName b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FMatrix& a, FMatrix& b, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ClassClass_)(UClass* a, UClass* b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_BoolBool_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, not_PreBool_)(NIM_BOOL a);
N_LIB_PRIVATE N_NIMCALL(NI64, not_Int64_)(NI64 a);
N_LIB_PRIVATE N_NIMCALL(NI32, not_Int_)(NI32 a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, normal_)(FVector2D a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NF, normalizeToRange_)(NF value, NF rangeMin, NF rangeMax);
N_LIB_PRIVATE N_NIMCALL(FRotator, delta_)(FRotator a, FRotator b);
N_LIB_PRIVATE N_NIMCALL(NF32, normalizeAxis_)(NF32 angle);
N_LIB_PRIVATE N_NIMCALL(void, normalize_)(FVector2D& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector2D, normalUnsafe_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(FVector, normal_)(FVector a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector, negated_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(FRotator, inversed_)(FRotator a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, negated_)(FVector2D& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FTransform& a, FTransform& b, NF32 locationTolerance, NF32 rotationTolerance, NF32 scale3DTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, nearlyEqual_FloatFloat_)(NF a, NF b, NF errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NF, multiplyMultiply_FloatFloat_)(NF base, NF exp_0);
N_LIB_PRIVATE N_NIMCALL(NF, multiplyByPi_)(NF value);
N_LIB_PRIVATE N_NIMCALL(FVector, multiply_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, multiplyInt_)(FVector a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FVector, multiplyFloat_)(FVector a, NF b);
N_LIB_PRIVATE N_NIMCALL(FVector4, multiply_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, multiply_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, multiplyFloat_)(FVector2D a, NF b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, multiply_TimespanFloat_)(FTimespan a, NF32 scalar);
N_LIB_PRIVATE N_NIMCALL(FRotator, scaleInteger_)(FRotator a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FRotator, scale_)(FRotator a, NF32 b);
N_LIB_PRIVATE N_NIMCALL(FQuat, multiply_)(FQuat& a, FQuat& b);
N_LIB_PRIVATE N_NIMCALL(FMatrix, multiply_)(FMatrix& a, FMatrix& b);
N_LIB_PRIVATE N_NIMCALL(FMatrix, multiplyFloat_)(FMatrix& a, NF b);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, multiply_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, multiplyFloat_)(FLinearColor a, NF32 b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, multiply_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, multiplyInt_)(FIntPoint a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI32, multiply_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NF, multiply_IntFloat_)(NI32 a, NF b);
N_LIB_PRIVATE N_NIMCALL(NI64, multiply_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NF, multiply_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NU8, multiply_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorVectorByNormal_)(FVector inVect, FVector inNormal);
N_LIB_PRIVATE N_NIMCALL(void, minOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray, NI32& indexOfMinValue, NI32& minValue);
N_LIB_PRIVATE N_NIMCALL(void, minOfFloatArray_)(TY__LZaQ4h2l9bWQPMMIHjA9cwlA& floatArray, NI32& indexOfMinValue, NF32& minValue);
N_LIB_PRIVATE N_NIMCALL(void, minOfByteArray_)(TY__41Mm7Z1nb8xYOi3Vy0ffmA& byteArray, NI32& indexOfMinValue, NU8& minValue);
N_LIB_PRIVATE N_NIMCALL(NI64, minInt64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(void, minimumAreaRectangle_)(UObject* worldContextObject, TY__Bz8EFFwaAOJiUrMHOIgVGw& inVerts, FVector& sampleSurfaceNormal, FVector& outRectCenter, FRotator& outRectRotation, NF32& outSideLengthX, NF32& outSideLengthY, NIM_BOOL bDebugDraw);
N_LIB_PRIVATE N_NIMCALL(void, minAreaRectangle_)(UObject* worldContextObject, TY__Bz8EFFwaAOJiUrMHOIgVGw& inPoints, FVector& sampleSurfaceNormal, FVector& outRectCenter, FRotator& outRectRotation, NF32& outRectLengthX, NF32& outRectLengthY, NIM_BOOL bDebugDraw);
N_LIB_PRIVATE N_NIMCALL(NI32, min_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(void, medianOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA intArray, NF32& medianValue);
N_LIB_PRIVATE N_NIMCALL(void, maxOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray, NI32& indexOfMaxValue, NI32& maxValue);
N_LIB_PRIVATE N_NIMCALL(void, maxOfFloatArray_)(TY__LZaQ4h2l9bWQPMMIHjA9cwlA& floatArray, NI32& indexOfMaxValue, NF32& maxValue);
N_LIB_PRIVATE N_NIMCALL(void, maxOfByteArray_)(TY__41Mm7Z1nb8xYOi3Vy0ffmA& byteArray, NI32& indexOfMaxValue, NU8& maxValue);
N_LIB_PRIVATE N_NIMCALL(NI64, maxInt64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NI32, max_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector4_)(FMatrix& m, FVector4 v);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformVector_)(FMatrix& m, FVector v);
N_LIB_PRIVATE N_NIMCALL(FVector4, transformPosition_)(FMatrix& m, FVector v);
N_LIB_PRIVATE N_NIMCALL(FQuat, toQuat_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(void, setOrigin_)(FMatrix& m, FVector newOrigin);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(FMatrix& m, tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA column, FVector value);
N_LIB_PRIVATE N_NIMCALL(void, setAxis_)(FMatrix& m, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis, FVector axisVector);
N_LIB_PRIVATE N_NIMCALL(FMatrix, scaleTranslation_)(FMatrix& m, FVector scale3D);
N_LIB_PRIVATE N_NIMCALL(FMatrix, removeTranslation_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(void, removeScaling_)(FMatrix& m, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FMatrix, mirror_)(FMatrix& m, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw mirrorAxis, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw flipAxis);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformVector_)(FMatrix& m, FVector v);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformPosition_)(FMatrix& m, FVector v);
N_LIB_PRIVATE N_NIMCALL(FMatrix, matrix_Identity_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnitAxis_)(FMatrix& m, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis);
N_LIB_PRIVATE N_NIMCALL(void, getUnitAxes_)(FMatrix& m, FVector& x, FVector& y, FVector& z);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getTransposed_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getTransposeAdjoint_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleVector_)(FMatrix& m, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaledAxis_)(FMatrix& m, tyEnum_EAxis__bSq1bxc9ah1AP9a6lCadoQXw axis);
N_LIB_PRIVATE N_NIMCALL(void, getScaledAxes_)(FMatrix& m, FVector& x, FVector& y, FVector& z);
N_LIB_PRIVATE N_NIMCALL(NF32, getRotDeterminant_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotator_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FVector, getOrigin_)(FMatrix& inMatrix);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaximumAxisScale_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getMatrixWithoutScale_)(FMatrix& m, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FMatrix, getInverse_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumTopPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumRightPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumNearPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumLeftPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumFarPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFrustumBottomPlane_)(FMatrix& m, FPlane& outPlane);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeterminant_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FVector, getColumn_)(FMatrix& m, tyEnum_EMatrixColumns__LpBOre5nA9aRbWcA0K55EVA column);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, containsNaN_)(FMatrix& m);
N_LIB_PRIVATE N_NIMCALL(FMatrix, concatenateTranslation_)(FMatrix& m, FVector translation);
N_LIB_PRIVATE N_NIMCALL(FMatrix, applyScale_)(FMatrix& m, NF32 scale);
N_LIB_PRIVATE N_NIMCALL(NF, mapRangeUnclamped_)(NF value, NF inRangeA, NF inRangeB, NF outRangeA, NF outRangeB);
N_LIB_PRIVATE N_NIMCALL(NF, mapRangeClamped_)(NF value, NF inRangeA, NF inRangeB, NF outRangeA, NF outRangeB);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantizeNormal, makeVector_NetQuantizeNormal_)(NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize100, makeVector_NetQuantize100_)(NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize10, makeVector_NetQuantize10_)(NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FVector_NetQuantize, makeVector_NetQuantize_)(NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FVector4, makeVector4_)(NF x, NF y, NF z, NF w);
N_LIB_PRIVATE N_NIMCALL(FVector2D, makeVector2D_)(NF x, NF y);
N_LIB_PRIVATE N_NIMCALL(FVector, makeVector_)(NF x, NF y, NF z);
N_LIB_PRIVATE N_NIMCALL(FTransform, makeTransform_)(FVector location, FRotator rotation, FVector scale);
N_LIB_PRIVATE N_NIMCALL(FTimespan, makeTimespan2_)(NI32 days, NI32 hours, NI32 minutes, NI32 seconds, NI32 fractionNano);
N_LIB_PRIVATE N_NIMCALL(FTimespan, makeTimespan_)(NI32 days, NI32 hours, NI32 minutes, NI32 seconds, NI32 milliseconds);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZY_)(FVector& z, FVector& y);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZX_)(FVector& z, FVector& x);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromZ_)(FVector& z);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromYZ_)(FVector& y, FVector& z);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromYX_)(FVector& y, FVector& x);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromY_)(FVector& y);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromXZ_)(FVector& x, FVector& z);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromXY_)(FVector& x, FVector& y);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotFromX_)(FVector& x);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotator_)(NF32 roll, NF32 pitch, NF32 yaw);
N_LIB_PRIVATE N_NIMCALL(FRotator, makeRotationFromAxes_)(FVector forward, FVector right, FVector up);
N_LIB_PRIVATE N_NIMCALL(FTransform, makeRelative_)(FTransform& a, FTransform& relativeTo);
N_LIB_PRIVATE N_NIMCALL(FRandomStream, makeRandomStream_)(NI32 initialSeed);
N_LIB_PRIVATE N_NIMCALL(FQuat, makeQuat_)(NF32 x, NF32 y, NF32 z, NF32 w);
N_LIB_PRIVATE N_NIMCALL(FQualifiedFrameTime, makeQualifiedFrameTime_)(FFrameNumber frame, FFrameRate frameRate, NF32 subFrame);
N_LIB_PRIVATE N_NIMCALL(NF32, makePulsatingValue_)(NF32 inCurrentTime, NF32 inPulsesPerSecond, NF32 inPhase);
N_LIB_PRIVATE N_NIMCALL(FPlane, makePlaneFromPointAndNormal_)(FVector point, FVector normal);
N_LIB_PRIVATE N_NIMCALL(FFrameRate, makeFrameRate_)(NI32 numerator, NI32 denominator);
N_LIB_PRIVATE N_NIMCALL(FDateTime, makeDateTime_)(NI32 year, NI32 month, NI32 day, NI32 hour, NI32 minute, NI32 second, NI32 millisecond);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, makeColor_)(NF32 r, NF32 g, NF32 b, NF32 a);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, makeBoxSphereBounds_)(FVector origin, FVector boxExtent, NF32 sphereRadius);
N_LIB_PRIVATE N_NIMCALL(FBox2D, makeBox2D_)(FVector2D min, FVector2D max);
N_LIB_PRIVATE N_NIMCALL(FBox, makeBox_)(FVector min, FVector max);
N_LIB_PRIVATE N_NIMCALL(NF, loge_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, log_)(NF a, NF base);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, linePlaneIntersection_OriginNormal_)(FVector& lineStart, FVector& lineEnd, FVector planeOrigin, FVector planeNormal, NF32& t, FVector& intersection);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, linePlaneIntersection_)(FVector& lineStart, FVector& lineEnd, FPlane& aPlane, NF32& t, FVector& intersection);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, lerpUsingHSVTo_)(FLinearColor a, FLinearColor b, NF32 alpha);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, lerpTo_)(FLinearColor a, FLinearColor b, NF32 alpha);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Yellow_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_White_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Transparent_)(void);
N_LIB_PRIVATE N_NIMCALL(FColor, toRGBE_)(FLinearColor inLinearColor);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, toNewOpacity_)(FLinearColor inColor, NF32 inOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setTemperature_)(FLinearColor& inOutColor, NF32 inTemperature);
N_LIB_PRIVATE N_NIMCALL(void, setRGBA_)(FLinearColor& inOutColor, NF32 r, NF32 g, NF32 b, NF32 a);
N_LIB_PRIVATE N_NIMCALL(void, setRandomHue_)(FLinearColor& inOutColor);
N_LIB_PRIVATE N_NIMCALL(void, setFromSRGB_)(FLinearColor& inOutColor, FColor& inSRGB);
N_LIB_PRIVATE N_NIMCALL(void, setFromPow22_)(FLinearColor& inOutColor, FColor& inColor);
N_LIB_PRIVATE N_NIMCALL(void, setFromHSV_)(FLinearColor& inOutColor, NF32 h, NF32 s, NF32 v, NF32 a);
N_LIB_PRIVATE N_NIMCALL(void, set_)(FLinearColor& inOutColor, FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Red_)(void);
N_LIB_PRIVATE N_NIMCALL(FColor, quantizeRound_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(FColor, quantize_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FLinearColor a, FLinearColor b, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Green_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Gray_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, getMin_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(NF32, getMax_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(NF32, getLuminance_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(NF32, distance_)(FLinearColor c1, FLinearColor c2);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, desaturated_)(FLinearColor inColor, NF32 inDesaturation);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Blue_)(void);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_Black_)(void);
N_LIB_PRIVATE N_NIMCALL(FVector, unrotate_)(FVector a, FRotator b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lessEqual_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, less_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NF, lerp_)(NF a, NF b, NF alpha);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isZero_)(FVector2D& a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBoxWithTransform_Box_)(FVector point, FTransform& boxWorldTransform, FBox boxExtent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBoxWithTransform_)(FVector point, FTransform& boxWorldTransform, FVector boxExtent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBox_Box_)(FVector point, FBox box);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPointInBox_)(FVector point, FVector boxOrigin, FVector boxExtent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearlyZero_)(FVector2D& a, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMorning_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLeapYear_)(NI32 year);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAfternoon_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(FTransform, inverse_)(FTransform& t);
N_LIB_PRIVATE N_NIMCALL(FRotator, inverseTransformRotation_)(FTransform& t, FRotator rotation);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformLocation_)(FTransform& t, FVector location);
N_LIB_PRIVATE N_NIMCALL(FVector, inverseTransformDirection_)(FTransform& t, FVector direction);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Zero_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Up_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Right_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_One_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Left_)(void);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_Down_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_IntInt_)(NI32 value, NI32 min, NI32 max, NIM_BOOL inclusiveMin, NIM_BOOL inclusiveMax);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_Int64Int64_)(NI64 value, NI64 min, NI64 max, NIM_BOOL inclusiveMin, NIM_BOOL inclusiveMax);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, inRange_FloatFloat_)(NF value, NF min, NF max, NIM_BOOL inclusiveMin, NIM_BOOL inclusiveMax);
N_LIB_PRIVATE N_NIMCALL(NF, hypotenuse_)(NF width, NF height);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, hSVToRGB_)(FLinearColor hSV);
N_LIB_PRIVATE N_NIMCALL(void, hSVIntoRGB_)(FLinearColor hSV, FLinearColor& rGB);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, hSVToRGB_)(NF32 h, NF32 s, NF32 v, NF32 a);
N_LIB_PRIVATE N_NIMCALL(NF, gridSnap_Float_)(NF location, NF gridSize);
N_LIB_PRIVATE N_NIMCALL(FVector, rotate_)(FVector a, FRotator b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greaterEqual_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, greater_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NI32, getYear_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(void, getYawPitch_)(FVector inVec, NF32& yaw, NF32& pitch);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorArrayAverage_)(TY__Bz8EFFwaAOJiUrMHOIgVGw& vectors);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVector_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalSeconds_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalMinutes_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalMilliseconds_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalHours_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NF32, getTotalDays_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(FTimespan, getTimeOfDay_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NF, getTAU_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getSlopeDegreeAngles_)(FVector& myRightYAxis, FVector& floorNormal, FVector& upVector, NF32& outSlopePitchDegreeAngle, NF32& outSlopeRollDegreeAngle);
N_LIB_PRIVATE N_NIMCALL(NI32, getSeconds_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NI32, getSecond_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getRotated_)(FVector2D a, NF32 angleDeg);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVector_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FVector, mirrorByVector_)(FVector direction, FVector surfaceNormal);
N_LIB_PRIVATE N_NIMCALL(NF32, getPointDistanceToSegment_)(FVector point, FVector segmentStart, FVector segmentEnd);
N_LIB_PRIVATE N_NIMCALL(NF32, getPointDistanceToLine_)(FVector point, FVector lineOrigin, FVector lineDirection);
N_LIB_PRIVATE N_NIMCALL(NF, getPI_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getMonth_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinutes_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinute_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NF, getMinElement_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, getMin_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NI32, getMilliseconds_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NI32, getMillisecond_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NF, getMaxElement_)(FVector a);
N_LIB_PRIVATE N_NIMCALL(NF, getMax_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NI32, getHours_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NI32, getHour12_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NI32, getHour_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(FVector, getForwardVector_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FTimespan, getDuration_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(FVector, directionUnitTo_)(FVector from_0, FVector to);
N_LIB_PRIVATE N_NIMCALL(NI32, getDays_)(FTimespan a);
N_LIB_PRIVATE N_NIMCALL(NI32, getDayOfYear_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(NI32, getDay_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(FDateTime, getDate_)(FDateTime a);
N_LIB_PRIVATE N_NIMCALL(void, getAzimuthElevation_)(FVector inDirection, FTransform& referenceFrame, NF32& azimuth, NF32& elevation);
N_LIB_PRIVATE N_NIMCALL(void, getAxes_)(FRotator a, FVector& x, FVector& y, FVector& z);
N_LIB_PRIVATE N_NIMCALL(NF, getAbsMax_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAbs_)(FVector2D a);
N_LIB_PRIVATE N_NIMCALL(NF, fWrap_)(NF value, NF min, NF max);
N_LIB_PRIVATE N_NIMCALL(FIntVector, truncated_)(FVector& inVector);
N_LIB_PRIVATE N_NIMCALL(NI64, fTrunc64_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, fTrunc_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromSeconds_)(NF32 seconds);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromMinutes_)(NF32 minutes);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromMilliseconds_)(NF32 milliseconds);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromHours_)(NF32 hours);
N_LIB_PRIVATE N_NIMCALL(FTimespan, fromDays_)(NF32 days);
N_LIB_PRIVATE N_NIMCALL(NF, fraction_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI64, fMod64_)(NF dividend, NF divisor, NF& remainder);
N_LIB_PRIVATE N_NIMCALL(NI32, fMod_)(NF dividend, NF divisor, NF& remainder);
N_LIB_PRIVATE N_NIMCALL(NF, fMin_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NF, fMax_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NF32, floatSpringInterp_)(NF32 current, NF32 target, FFloatSpringState_& springState, NF32 stiffness, NF32 criticalDampingFactor, NF32 deltaTime, NF32 mass, NF32 targetVelocityAmount, NIM_BOOL bClamp, NF32 minValue, NF32 maxValue, NIM_BOOL bInitializeFromTarget);
N_LIB_PRIVATE N_NIMCALL(NF32, fixedTurn_)(NF32 inCurrent, NF32 inDesired, NF32 inDeltaRate);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpTo_Constant_)(NF current, NF target, NF deltaTime, NF interpSpeed);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpTo_)(NF current, NF target, NF deltaTime, NF interpSpeed);
N_LIB_PRIVATE N_NIMCALL(NF, fInterpEaseInOut_)(NF a, NF b, NF alpha, NF exponent);
N_LIB_PRIVATE N_NIMCALL(FRotator, findRelativeLookAtRotation_)(FTransform& startTransform, FVector& targetLocation);
N_LIB_PRIVATE N_NIMCALL(void, findNearestPointsOnLineSegments_)(FVector segment1Start, FVector segment1End, FVector segment2Start, FVector segment2End, FVector& segment1Point, FVector& segment2Point);
N_LIB_PRIVATE N_NIMCALL(FRotator, findLookAtRotation_)(FVector& start, FVector& target);
N_LIB_PRIVATE N_NIMCALL(FVector, findClosestPointOnSegment_)(FVector point, FVector segmentStart, FVector segmentEnd);
N_LIB_PRIVATE N_NIMCALL(FVector, findClosestPointOnLine_)(FVector point, FVector lineOrigin, FVector lineDirection);
N_LIB_PRIVATE N_NIMCALL(NI64, fFloor64_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, fFloor_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, fClamp_)(NF value, NF min, NF max);
N_LIB_PRIVATE N_NIMCALL(NI64, fCeil64_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, fCeil_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, exp_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector a, FVector b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector4& a, FVector4& b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FVector2D a, FVector2D b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FTransform& a, FTransform& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNearEqual_)(FRotator a, FRotator b, NF32 errorTolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FQuat& a, FQuat& b, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ObjectObject_)(UObject* a, UObject* b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_NameName_)(FName a, FName b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FMatrix& a, FMatrix& b, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ClassClass_)(UClass* a, UClass* b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_BoolBool_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(NF, ease_)(NF a, NF b, NF alpha, tyEnum_EEasingFunc__3L1WX6p7yGicAxsaPJ8kmw easingFunc, NF blendExp, NI32 steps);
N_LIB_PRIVATE N_NIMCALL(FVector, dynamicWeightedMovingAverage_FVector_)(FVector currentSample, FVector previousSample, NF32 maxDistance, NF32 minWeight, NF32 maxWeight);
N_LIB_PRIVATE N_NIMCALL(FRotator, dynamicWeightedMovingAverage_FRotator_)(FRotator currentSample, FRotator previousSample, NF32 maxDistance, NF32 minWeight, NF32 maxWeight);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicWeightedMovingAverage_Float_)(NF32 currentSample, NF32 previousSample, NF32 maxDistance, NF32 minWeight, NF32 maxWeight);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(NF, dot_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, divide_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, divideInt_)(FVector a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FVector, divideFloat_)(FVector a, NF b);
N_LIB_PRIVATE N_NIMCALL(FVector4, divide_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, divide_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, divideFloat_)(FVector2D a, NF b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, divide_TimespanFloat_)(FTimespan a, NF32 scalar);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, divide_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, divide_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, divideInt_)(FIntPoint a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI32, divide_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, divide_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NF, divide_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(NU8, divide_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NF, distanceSquared_)(FVector2D v1, FVector2D v2);
N_LIB_PRIVATE N_NIMCALL(NF, distance_)(FVector2D v1, FVector2D v2);
N_LIB_PRIVATE N_NIMCALL(NF, degTan_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degSin_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degreesToRadians_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degCos_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degAtan2_)(NF y, NF x);
N_LIB_PRIVATE N_NIMCALL(NF, degAtan_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degAsin_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, degAcos_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, daysInYear_)(NI32 year);
N_LIB_PRIVATE N_NIMCALL(NI32, daysInMonth_)(NI32 year, NI32 month);
N_LIB_PRIVATE N_NIMCALL(FDateTime, dateTimeMinValue_)(void);
N_LIB_PRIVATE N_NIMCALL(FDateTime, dateTimeMaxValue_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, dateTimeFromString_)(FString dateTimeString, FDateTime& Result);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, dateTimeFromIsoString_)(FString isoString, FDateTime& Result);
N_LIB_PRIVATE N_NIMCALL(NF, cross_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(FVector, cross_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, createVectorFromYawPitch_)(NF32 yaw, NF32 pitch, NF32 length);
N_LIB_PRIVATE N_NIMCALL(NF, cos_)(NF a);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_)(FVector inVector);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FVector inLocation);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FVector inVec);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FVector inVec);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, linearColor_)(FVector inVec);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_)(FVector4& inVector4);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FVector4& inVec);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FVector4& inVec);
N_LIB_PRIVATE N_NIMCALL(FVector, vector_)(FVector2D inVector2D, NF32 z);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, intPoint_)(FVector2D inVector2D);
N_LIB_PRIVATE N_NIMCALL(FMatrix, toMatrix_)(FTransform& transform);
N_LIB_PRIVATE N_NIMCALL(FVector, toVector_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FRotator& inRotator);
N_LIB_PRIVATE N_NIMCALL(FQuat, quaternion_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FTransform, transform_)(FMatrix& inMatrix);
N_LIB_PRIVATE N_NIMCALL(FRotator, rotator_)(FMatrix& inMatrix);
N_LIB_PRIVATE N_NIMCALL(FVector, toRGBVector_)(FLinearColor inLinearColor);
N_LIB_PRIVATE N_NIMCALL(FColor, toColor_)(FLinearColor inLinearColor, NIM_BOOL inUseSRGB);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_IntVectorToVector_)(FIntVector& inIntVector);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_IntToVector_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(FIntVector, conv_IntToIntVector_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_IntToInt64_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(NF, conv_IntToDouble_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_IntToByte_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, conv_IntToBool_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(FVector2D, vector2D_)(FIntPoint inIntPoint);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_Int64ToInt_)(NI64 inInt);
N_LIB_PRIVATE N_NIMCALL(NF, conv_Int64ToDouble_)(NI64 inInt);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_Int64ToByte_)(NI64 inInt);
N_LIB_PRIVATE N_NIMCALL(NF, conv_FloatToDouble_)(NF32 inFloat);
N_LIB_PRIVATE N_NIMCALL(FVector2D, conv_DoubleToVector2D_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_DoubleToVector_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, conv_DoubleToLinearColor_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_DoubleToInt64_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(NF32, conv_DoubleToFloat_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, conv_ColorToLinearColor_)(FColor inColor);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_ByteToInt64_)(NU8 inByte);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_ByteToInt_)(NU8 inByte);
N_LIB_PRIVATE N_NIMCALL(NF, conv_ByteToDouble_)(NU8 inByte);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_BoolToInt_)(NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(NF, conv_BoolToDouble_)(NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(NU8, conv_BoolToByte_)(NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(FTransform, multiply_)(FTransform& a, FTransform& b);
N_LIB_PRIVATE N_NIMCALL(FRotator, combine_)(FRotator a, FRotator b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, classIsChildOf_)(TY__Gdb8rCprT6WGagrQes2BIg testClass, TY__Gdb8rCprT6WGagrQes2BIg parentClass);
N_LIB_PRIVATE N_NIMCALL(FVector, clampedSize_)(FVector a, NF min, NF max);
N_LIB_PRIVATE N_NIMCALL(NI64, clampInt64_)(NI64 value, NI64 min, NI64 max);
N_LIB_PRIVATE N_NIMCALL(NF32, clampAxis_)(NF32 angle);
N_LIB_PRIVATE N_NIMCALL(FVector2D, clampedAxes_)(FVector2D a, NF minAxisVal, NF maxAxisVal);
N_LIB_PRIVATE N_NIMCALL(NF, clampAngle_)(NF angleDegrees, NF minAngleDegrees, NF maxAngleDegrees);
N_LIB_PRIVATE N_NIMCALL(NI32, clamp_)(NI32 value, NI32 min, NI32 max);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, interpolateTo_)(FLinearColor current, FLinearColor target, NF32 deltaTime, NF32 interpSpeed);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantizeNormal_)(FVector_NetQuantizeNormal* inVec, NF& x, NF& y, NF& z);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize100_)(FVector_NetQuantize100* inVec, NF& x, NF& y, NF& z);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize10_)(FVector_NetQuantize10* inVec, NF& x, NF& y, NF& z);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_NetQuantize_)(FVector_NetQuantize* inVec, NF& x, NF& y, NF& z);
N_LIB_PRIVATE N_NIMCALL(void, breakVector4_)(FVector4& inVec, NF& x, NF& y, NF& z, NF& w);
N_LIB_PRIVATE N_NIMCALL(void, breakVector3f_)(FVector3f* inVec, NF32& x, NF32& y, NF32& z);
N_LIB_PRIVATE N_NIMCALL(void, breakVector2D_)(FVector2D inVec, NF& x, NF& y);
N_LIB_PRIVATE N_NIMCALL(void, breakVector_)(FVector inVec, NF& x, NF& y, NF& z);
N_LIB_PRIVATE N_NIMCALL(void, breakTransform_)(FTransform& inTransform, FVector& location, FRotator& rotation, FVector& scale);
N_LIB_PRIVATE N_NIMCALL(void, breakTimespan2_)(FTimespan inTimespan, NI32& days, NI32& hours, NI32& minutes, NI32& seconds, NI32& fractionNano);
N_LIB_PRIVATE N_NIMCALL(void, breakTimespan_)(FTimespan inTimespan, NI32& days, NI32& hours, NI32& minutes, NI32& seconds, NI32& milliseconds);
N_LIB_PRIVATE N_NIMCALL(void, breakRotIntoAxes_)(FRotator& inRot, FVector& x, FVector& y, FVector& z);
N_LIB_PRIVATE N_NIMCALL(void, breakRotator_)(FRotator inRot, NF32& roll, NF32& pitch, NF32& yaw);
N_LIB_PRIVATE N_NIMCALL(void, breakRandomStream_)(FRandomStream& inRandomStream, NI32& initialSeed);
N_LIB_PRIVATE N_NIMCALL(void, breakQuat_)(FQuat& inQuat, NF32& x, NF32& y, NF32& z, NF32& w);
N_LIB_PRIVATE N_NIMCALL(void, breakQualifiedFrameTime_)(FQualifiedFrameTime& inFrameTime, FFrameNumber& frame, FFrameRate& frameRate, NF32& subFrame);
N_LIB_PRIVATE N_NIMCALL(void, breakFrameRate_)(FFrameRate& inFrameRate, NI32& numerator, NI32& denominator);
N_LIB_PRIVATE N_NIMCALL(void, breakDateTime_)(FDateTime inDateTime, NI32& year, NI32& month, NI32& day, NI32& hour, NI32& minute, NI32& second, NI32& millisecond);
N_LIB_PRIVATE N_NIMCALL(void, breakColor_)(FLinearColor inColor, NF32& r, NF32& g, NF32& b, NF32& a);
N_LIB_PRIVATE N_NIMCALL(void, breakBoxSphereBounds_)(FBoxSphereBounds& inBoxSphereBounds, FVector& origin, FVector& boxExtent, NF32& sphereRadius);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanXOR_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanOR_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanNOR_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanNAND_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, booleanAND_)(NIM_BOOL a, NIM_BOOL b);
N_LIB_PRIVATE N_NIMCALL(NU8, bMin_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NU8, bMax_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(void, averageOfIntArray_)(TY__TxfK2fhRJXNHttPFRcL6fA& intArray, NF32& averageValue);
N_LIB_PRIVATE N_NIMCALL(NF, atan2_)(NF y, NF x);
N_LIB_PRIVATE N_NIMCALL(NF, atan_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NF, asin_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI32, and_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, and_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(FVector, add_)(FVector a, FVector b);
N_LIB_PRIVATE N_NIMCALL(FVector, addInt_)(FVector a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(FVector, addFloat_)(FVector a, NF b);
N_LIB_PRIVATE N_NIMCALL(FVector4, add_)(FVector4& a, FVector4& b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, add_)(FVector2D a, FVector2D b);
N_LIB_PRIVATE N_NIMCALL(FVector2D, addFloat_)(FVector2D a, NF b);
N_LIB_PRIVATE N_NIMCALL(FTimespan, add_TimespanTimespan_)(FTimespan a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(FQuat, add_)(FQuat& a, FQuat& b);
N_LIB_PRIVATE N_NIMCALL(FMatrix, add_)(FMatrix& a, FMatrix& b);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, add_)(FLinearColor a, FLinearColor b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, add_)(FIntPoint a, FIntPoint b);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, addInt_)(FIntPoint a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI32, add_IntInt_)(NI32 a, NI32 b);
N_LIB_PRIVATE N_NIMCALL(NI64, add_Int64Int64_)(NI64 a, NI64 b);
N_LIB_PRIVATE N_NIMCALL(NF, add_DoubleDouble_)(NF a, NF b);
N_LIB_PRIVATE N_NIMCALL(FDateTime, add_DateTimeTimespan_)(FDateTime a, FTimespan b);
N_LIB_PRIVATE N_NIMCALL(FDateTime, add_DateTimeDateTime_)(FDateTime a, FDateTime b);
N_LIB_PRIVATE N_NIMCALL(NU8, add_ByteByte_)(NU8 a, NU8 b);
N_LIB_PRIVATE N_NIMCALL(NF, acos_)(NF a);
N_LIB_PRIVATE N_NIMCALL(NI64, abs_Int64_)(NI64 a);
N_LIB_PRIVATE N_NIMCALL(NI32, abs_Int_)(NI32 a);
N_LIB_PRIVATE N_NIMCALL(NF, abs_)(NF a);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetMathLibrary)(UKismetMathLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, markBit_)(NI32& data, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUnmarkedBit_)(NI32 data, NI32 numBits);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMarkedBit_)(NI32 data, NI32 numBits);
N_LIB_PRIVATE N_NIMCALL(NU8, getValidValue_)(UEnum* Enum, NU8 enumeratorValue);
N_LIB_PRIVATE N_NIMCALL(NI32, getUnmarkedBit_)(NI32 data, NI32 startIdx, NI32 numBits, NIM_BOOL bRandom);
N_LIB_PRIVATE N_NIMCALL(NI32, getRandomUnmarkedBit_)(NI32 data, NI32 startIdx, NI32 numBits);
N_LIB_PRIVATE N_NIMCALL(NI32, getFirstUnmarkedBit_)(NI32 data, NI32 startIdx, NI32 numBits);
N_LIB_PRIVATE N_NIMCALL(NU8, getEnumeratorValueFromIndex_)(UEnum* Enum, NU8 enumeratorIndex);
N_LIB_PRIVATE N_NIMCALL(FString, getEnumeratorUserFriendlyName_)(UEnum* Enum, NU8 enumeratorValue);
N_LIB_PRIVATE N_NIMCALL(FName, getEnumeratorName_)(UEnum* Enum, NU8 enumeratorValue);
N_LIB_PRIVATE N_NIMCALL(void, clearBit_)(NI32& data, NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, clearAllBits_)(NI32& data);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bitIsMarked_)(NI32 data, NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetNodeHelperLibrary)(UKismetNodeHelperLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setCastInsetShadowForAllAttachments_)(UPrimitiveComponent* primitiveComponent, NIM_BOOL bCastInsetShadow, NIM_BOOL bLightAttachmentsAsGroup);
N_LIB_PRIVATE N_NIMCALL(void, resizeRenderTarget2D_)(UTextureRenderTarget2D_* textureRenderTarget, NI32 width, NI32 height);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, renderTargetCreateStaticTexture2DEditorOnly_)(UTextureRenderTarget2D_* renderTarget, FString name, tyEnum_TextureCompressionSettings__PXGqmpWTf56Z7wHkakUBhw compressionSettings, tyEnum_TextureMipGenSettings__RyVOgniV9c9caMbOM8fuVCCQ mipSettings);
N_LIB_PRIVATE N_NIMCALL(void, releaseRenderTarget2D_)(UTextureRenderTarget2D_* textureRenderTarget);
N_LIB_PRIVATE N_NIMCALL(FColor, readRenderTargetUV_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, NF32 u, NF32 v);
N_LIB_PRIVATE N_NIMCALL(TY__LIN349biVKUmlJo9abXyib3Q, readRenderTargetRawUVArea_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, FBox2D area, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, readRenderTargetRawUV_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, NF32 u, NF32 v, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(TY__LIN349biVKUmlJo9abXyib3Q, readRenderTargetRawPixelArea_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, NI32 minX, NI32 minY, NI32 maxX, NI32 maxY, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, readRenderTargetRawPixel_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, NI32 x, NI32 y, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, readRenderTargetRaw_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, TY__LIN349biVKUmlJo9abXyib3Q& outLinearSamples, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(FColor, readRenderTargetPixel_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, NI32 x, NI32 y);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, readRenderTarget_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, TY__nVAGwAmGausuUwwMqG2Chg& outSamples, NIM_BOOL bNormalize);
N_LIB_PRIVATE N_NIMCALL(FSkelMeshSkinWeightInfo, makeSkinWeightInfo_)(NI32 bone0, NU8 weight0, NI32 bone1, NU8 weight1, NI32 bone2, NU8 weight2, NI32 bone3, NU8 weight3);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, importFileAsTexture2D_)(UObject* worldContextObject, FString filename);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, importBufferAsTexture2D_)(UObject* worldContextObject, TY__41Mm7Z1nb8xYOi3Vy0ffmA& buffer);
N_LIB_PRIVATE N_NIMCALL(void, exportTexture2D_)(UObject* worldContextObject, UTexture2D* texture, FString filePath, FString fileName);
N_LIB_PRIVATE N_NIMCALL(void, exportRenderTarget_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, FString filePath, FString fileName);
N_LIB_PRIVATE N_NIMCALL(void, endDrawCanvasToRenderTarget_)(UObject* worldContextObject, FDrawToRenderTargetContext_& context);
N_LIB_PRIVATE N_NIMCALL(void, enablePathTracing_)(NIM_BOOL bEnablePathTracer);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialToRenderTarget_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTargetVolume_*, createRenderTargetVolume_)(UObject* worldContextObject, NI32 width, NI32 height, NI32 depth, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format, FLinearColor clearColor, NIM_BOOL bAutoGenerateMipMaps, NIM_BOOL bSupportUAVs);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2DArray_*, createRenderTarget2DArray_)(UObject* worldContextObject, NI32 width, NI32 height, NI32 slices, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format, FLinearColor clearColor, NIM_BOOL bAutoGenerateMipMaps, NIM_BOOL bSupportUAVs);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, createRenderTarget2D_)(UObject* worldContextObject, NI32 width, NI32 height, tyEnum_ETextureRenderTargetFormat__yy0gnHDdI80ES9bXZFkwk1w format, FLinearColor clearColor, NIM_BOOL bAutoGenerateMipMaps, NIM_BOOL bSupportUAVs);
N_LIB_PRIVATE N_NIMCALL(void, convertRenderTargetToTexture2DEditorOnly_)(UObject* worldContextObject, UTextureRenderTarget2D_* renderTarget, UTexture2D* texture);
N_LIB_PRIVATE N_NIMCALL(void, clearRenderTarget2D_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, FLinearColor clearColor);
N_LIB_PRIVATE N_NIMCALL(FMatrix, calculateProjectionMatrix_)(FMinimalViewInfo& minimalViewInfo);
N_LIB_PRIVATE N_NIMCALL(void, breakSkinWeightInfo_)(FSkelMeshSkinWeightInfo inWeight, NI32& bone0, NU8& weight0, NI32& bone1, NU8& weight1, NI32& bone2, NU8& weight2, NI32& bone3, NU8& weight3);
N_LIB_PRIVATE N_NIMCALL(void, beginDrawCanvasToRenderTarget_)(UObject* worldContextObject, UTextureRenderTarget2D_* textureRenderTarget, UCanvas_*& canvas, FVector2D& size, FDrawToRenderTargetContext_& context);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetRenderingLibrary)(UKismetRenderingLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(FString, trimTrailing_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(FString, trim_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(FString, toUpper_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(FString, toLower_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(FString, timeSecondsToString_)(NF32 inSeconds);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, startsWith_)(FString sourceString, FString inPrefix, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, split_)(FString sourceString, FString inStr, FString& leftS, FString& rightS, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase, tyEnum_ESearchDir__FGgOLWYHHOEEcatZwkhq0Q searchDir);
N_LIB_PRIVATE N_NIMCALL(FString, rightPad_)(FString sourceString, NI32 chCount);
N_LIB_PRIVATE N_NIMCALL(FString, rightChop_)(FString sourceString, NI32 count);
N_LIB_PRIVATE N_NIMCALL(FString, right_)(FString sourceString, NI32 count);
N_LIB_PRIVATE N_NIMCALL(FString, reverse_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(NI32, replaceInline_)(FString& sourceString, FString searchText, FString replacementText, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase);
N_LIB_PRIVATE N_NIMCALL(FString, replace_)(FString sourceString, FString from_0, FString to, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, parseIntoArray_)(FString sourceString, FString delimiter, NIM_BOOL cullEmptyStrings);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_StrStr_)(FString a, FString b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_StriStri_)(FString a, FString b);
N_LIB_PRIVATE N_NIMCALL(FString, mid_)(FString sourceString, NI32 start, NI32 count);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, matchesWildcard_)(FString sourceString, FString wildcard, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase);
N_LIB_PRIVATE N_NIMCALL(NI32, len_)(FString s);
N_LIB_PRIVATE N_NIMCALL(FString, leftPad_)(FString sourceString, NI32 chCount);
N_LIB_PRIVATE N_NIMCALL(FString, leftChop_)(FString sourceString, NI32 count);
N_LIB_PRIVATE N_NIMCALL(FString, left_)(FString sourceString, NI32 count);
N_LIB_PRIVATE N_NIMCALL(FString, joinStringArray_)(TY__myhN0u2pNczwuaOhbdYPXw& sourceArray, FString separator);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isNumeric_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEmpty_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(FString, getSubstring_)(FString sourceString, NI32 startIndex, NI32 length);
N_LIB_PRIVATE N_NIMCALL(NI32, getCharacterAsNumber_)(FString sourceString, NI32 index);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getCharacterArrayFromString_)(FString sourceString);
N_LIB_PRIVATE N_NIMCALL(NI32, findSubstring_)(FString searchIn, FString substring, NIM_BOOL bUseCase, NIM_BOOL bSearchFromEnd, NI32 startPosition);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_StrStr_)(FString a, FString b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_StriStri_)(FString a, FString b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, endsWith_)(FString sourceString, FString inSuffix, tyEnum_ESearchCase__kHj4TDhHa47yMB3hTYvDFQ searchCase);
N_LIB_PRIVATE N_NIMCALL(NI32, cullArray_)(FString sourceString, TY__myhN0u2pNczwuaOhbdYPXw& inArray);
N_LIB_PRIVATE N_NIMCALL(FString, conv_VectorToString_)(FVector inVec);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Vector3fToString_)(FVector3f* inVec);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Vector2dToString_)(FVector2D inVec);
N_LIB_PRIVATE N_NIMCALL(FString, conv_TransformToString_)(FTransform& inTrans);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector3f_)(FString inString, FVector3f& outConvertedVector, NIM_BOOL& outIsValid);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector2D_)(FString inString, FVector2D& outConvertedVector2D, NIM_BOOL& outIsValid);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToVector_)(FString inString, FVector& outConvertedVector, NIM_BOOL& outIsValid);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToRotator_)(FString inString, FRotator& outConvertedRotator, NIM_BOOL& outIsValid);
N_LIB_PRIVATE N_NIMCALL(FName, conv_StringToName_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(NI64, conv_StringToInt64_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(NI32, conv_StringToInt_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(NF, conv_StringToDouble_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(void, conv_StringToColor_)(FString inString, FLinearColor& outConvertedColor, NIM_BOOL& outIsValid);
N_LIB_PRIVATE N_NIMCALL(FString, conv_RotatorToString_)(FRotator inRot);
N_LIB_PRIVATE N_NIMCALL(FString, conv_PlatformUserIdToString_)(FPlatformUserId inPlatformUserId);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ObjectToString_)(UObject* inObj);
N_LIB_PRIVATE N_NIMCALL(FString, conv_NameToString_)(FName inName);
N_LIB_PRIVATE N_NIMCALL(FString, conv_MatrixToString_)(FMatrix& inMatrix);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntVectorToString_)(FIntVector inIntVec);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntToString_)(NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(FString, conv_IntPointToString_)(FIntPoint inIntPoint);
N_LIB_PRIVATE N_NIMCALL(FString, conv_Int64ToString_)(NI64 inInt);
N_LIB_PRIVATE N_NIMCALL(FString, conv_InputDeviceIdToString_)(FInputDeviceId inDeviceId);
N_LIB_PRIVATE N_NIMCALL(FString, conv_DoubleToString_)(NF inDouble);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ColorToString_)(FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(FString, conv_ByteToString_)(NU8 inByte);
N_LIB_PRIVATE N_NIMCALL(FString, conv_BoolToString_)(NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, contains_)(FString searchIn, FString substring, NIM_BOOL bUseCase, NIM_BOOL bSearchFromEnd);
N_LIB_PRIVATE N_NIMCALL(FString, concat_StrStr_)(FString a, FString b);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Vector2d_)(FString appendTo, FString prefix, FVector2D inVector2d, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Vector_)(FString appendTo, FString prefix, FVector inVector, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Rotator_)(FString appendTo, FString prefix, FRotator inRot, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Object_)(FString appendTo, FString prefix, UObject* inObj, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Name_)(FString appendTo, FString prefix, FName inName, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_IntVector_)(FString appendTo, FString prefix, FIntVector inIntVector, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Int_)(FString appendTo, FString prefix, NI32 inInt, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Double_)(FString appendTo, FString prefix, NF inDouble, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Color_)(FString appendTo, FString prefix, FLinearColor inColor, FString suffix);
N_LIB_PRIVATE N_NIMCALL(FString, buildString_Bool_)(FString appendTo, FString prefix, NIM_BOOL inBool, FString suffix);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetStringLibrary)(UKismetStringLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRegisteredTableId_)(FName tableId);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRegisteredTableEntry_)(FName tableId, FString key);
N_LIB_PRIVATE N_NIMCALL(FString, getTableNamespace_)(FName tableId);
N_LIB_PRIVATE N_NIMCALL(FString, getTableEntrySourceString_)(FName tableId, FString key);
N_LIB_PRIVATE N_NIMCALL(FString, getTableEntryMetaData_)(FName tableId, FString key, FName metaDataId);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getRegisteredStringTables_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getMetaDataIdsFromStringTableEntry_)(FName tableId, FString key);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getKeysFromStringTable_)(FName tableId);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetStringTableLibrary)(UKismetStringTableLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, unregisterForRemoteNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, unloadPrimaryAssetList_)(TY__9aw1VaWKZbUTzz1muwIRvsw& primaryAssetIdList);
N_LIB_PRIVATE N_NIMCALL(void, unload_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(void, transactObject_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(void, stackTrace_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingleForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingleByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceSingle_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMultiForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMultiByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceMulti_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapComponents_)(UObject* worldContextObject, FVector spherePos, NF32 sphereRadius, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* componentClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapActors_)(UObject* worldContextObject, FVector spherePos, NF32 sphereRadius, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* actorClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(void, snapshotObject_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(void, showPlatformSpecificLeaderboardScreen_)(FString categoryName);
N_LIB_PRIVATE N_NIMCALL(void, showPlatformSpecificAchievementsScreen_)(APlayerController* specificPlayer);
N_LIB_PRIVATE N_NIMCALL(void, showInterstitialAd_)(void);
N_LIB_PRIVATE N_NIMCALL(void, showAdBanner_)(NI32 adIdIndex, NIM_BOOL bShowOnBottomOfScreen);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitle_)(FText& title);
N_LIB_PRIVATE N_NIMCALL(void, setVolumeButtonsHandledBySystem_)(NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setVectorPropertyByName_)(UObject* object_0, FName propertyName, FVector& value);
N_LIB_PRIVATE N_NIMCALL(void, setVector3fPropertyByName_)(UObject* object_0, FName propertyName, FVector3f& value);
N_LIB_PRIVATE N_NIMCALL(void, setUserActivity_)(FUserActivity& userActivity);
N_LIB_PRIVATE N_NIMCALL(void, setTransformPropertyByName_)(UObject* object_0, FName propertyName, FTransform& value);
N_LIB_PRIVATE N_NIMCALL(void, setTextPropertyByName_)(UObject* object_0, FName propertyName, FText& value);
N_LIB_PRIVATE N_NIMCALL(void, setSuppressViewportTransitionMessage_)(UObject* worldContextObject, NIM_BOOL bState);
N_LIB_PRIVATE N_NIMCALL(void, setStructurePropertyByName_)(UObject* object_0, FName propertyName, FGenericStruct& value);
N_LIB_PRIVATE N_NIMCALL(void, setStringPropertyByName_)(UObject* object_0, FName propertyName, FString value);
N_LIB_PRIVATE N_NIMCALL(void, setSoftObjectPropertyByName_)(UObject* object_0, FName propertyName, TY__9b5kQ3g2w5CXovAbu5D6pTg& value);
N_LIB_PRIVATE N_NIMCALL(void, setSoftClassPropertyByName_)(UObject* object_0, FName propertyName, TY__roSJObD9cij0IKr7nEgF3iw& value);
N_LIB_PRIVATE N_NIMCALL(void, setRotatorPropertyByName_)(UObject* object_0, FName propertyName, FRotator& value);
N_LIB_PRIVATE N_NIMCALL(void, setObjectPropertyByName_)(UObject* object_0, FName propertyName, UObject* value);
N_LIB_PRIVATE N_NIMCALL(void, setNamePropertyByName_)(UObject* object_0, FName propertyName, FName& value);
N_LIB_PRIVATE N_NIMCALL(void, setLinearColorPropertyByName_)(UObject* object_0, FName propertyName, FLinearColor& value);
N_LIB_PRIVATE N_NIMCALL(void, setIntPropertyByName_)(UObject* object_0, FName propertyName, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setInterfacePropertyByName_)(UObject* object_0, FName propertyName, TY__ifXM0HgR32dv0bADb0VXEw& value);
N_LIB_PRIVATE N_NIMCALL(void, setInt64PropertyByName_)(UObject* object_0, FName propertyName, NI64 value);
N_LIB_PRIVATE N_NIMCALL(void, setGamepadsBlockDeviceFeedback_)(NIM_BOOL bBlock);
N_LIB_PRIVATE N_NIMCALL(void, setFieldPathPropertyByName_)(UObject* object_0, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setEditorProperty_)(UObject* object_0, FName propertyName, NI32& propertyValue, tyEnum_EPropertyAccessChangeNotifyMode__tfIyzql3Jp1o4A9aSN3GRWw changeNotifyMode);
N_LIB_PRIVATE N_NIMCALL(void, setDoublePropertyByName_)(UObject* object_0, FName propertyName, NF value);
N_LIB_PRIVATE N_NIMCALL(void, setColorPropertyByName_)(UObject* object_0, FName propertyName, FColor& value);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionProfileNameProperty_)(UObject* object_0, FName propertyName, FCollisionProfileName& value);
N_LIB_PRIVATE N_NIMCALL(void, setClassPropertyByName_)(UObject* object_0, FName propertyName, TY__Gdb8rCprT6WGagrQes2BIg value);
N_LIB_PRIVATE N_NIMCALL(void, setBytePropertyByName_)(UObject* object_0, FName propertyName, NU8 value);
N_LIB_PRIVATE N_NIMCALL(void, setBoolPropertyByName_)(UObject* object_0, FName propertyName, NIM_BOOL value);
N_LIB_PRIVATE N_NIMCALL(void, retriggerableDelay_)(UObject* worldContextObject, NF32 duration, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(void, resetGamepadAssignmentToController_)(NI32 controllerId);
N_LIB_PRIVATE N_NIMCALL(void, resetGamepadAssignments_)(void);
N_LIB_PRIVATE N_NIMCALL(void, registerForRemoteNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, quitGame_)(UObject* worldContextObject, APlayerController* specificPlayer, tyEnum_EQuitPreference__wKF27UdTU9cegJpfafBWsWw quitPreference, NIM_BOOL bIgnorePlatformRestrictions);
N_LIB_PRIVATE N_NIMCALL(void, quitEditor_)(void);
N_LIB_PRIVATE N_NIMCALL(void, printWarning_)(FString inString);
N_LIB_PRIVATE N_NIMCALL(void, printText_)(UObject* worldContextObject, FText inText, NIM_BOOL bPrintToScreen, NIM_BOOL bPrintToLog, FLinearColor textColor, NF32 duration, FName key);
N_LIB_PRIVATE N_NIMCALL(void, printString_)(UObject* worldContextObject, FString inString, NIM_BOOL bPrintToScreen, NIM_BOOL bPrintToLog, FLinearColor textColor, NF32 duration, FName key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, parseParamValue_)(FString inString, FString inParam, FString& outValue);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, parseParam_)(FString inString, FString inParam);
N_LIB_PRIVATE N_NIMCALL(void, parseCommandLine_)(FString inCmdLine, TY__myhN0u2pNczwuaOhbdYPXw& outTokens, TY__myhN0u2pNczwuaOhbdYPXw& outSwitches, TY__c0nBuI9a2FtGpQcNibWH5rw& outParams);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_SoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& a, TY__9b5kQ3g2w5CXovAbu5D6pTg& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_SoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& a, TY__roSJObD9cij0IKr7nEgF3iw& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_PrimaryAssetType_)(FPrimaryAssetType a, FPrimaryAssetType b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_PrimaryAssetId_)(FPrimaryAssetId a, FPrimaryAssetId b);
N_LIB_PRIVATE N_NIMCALL(FString, normalizeFilename_)(FString inFilename);
N_LIB_PRIVATE N_NIMCALL(void, moveComponentTo_)(USceneComponent* component, FVector targetRelativeLocation, FRotator targetRelativeRotation, NIM_BOOL bEaseOut, NIM_BOOL bEaseIn, NF32 overTime, NIM_BOOL bForceShortestRotationPath, tyEnum_EMoveComponentAction__kDaFHmOTku89aVMGXCDq5HA moveAction, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(FTopLevelAssetPath, makeTopLevelAssetPath_)(FString packageName, FString assetName);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, makeSoftObjectPath_)(FString pathString);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, makeSoftClassPath_)(FString pathString);
N_LIB_PRIVATE N_NIMCALL(FText, makeLiteralText_)(FText value);
N_LIB_PRIVATE N_NIMCALL(FString, makeLiteralString_)(FString value);
N_LIB_PRIVATE N_NIMCALL(FName, makeLiteralName_)(FName value);
N_LIB_PRIVATE N_NIMCALL(NI64, makeLiteralInt64_)(NI64 value);
N_LIB_PRIVATE N_NIMCALL(NI32, makeLiteralInt_)(NI32 value);
N_LIB_PRIVATE N_NIMCALL(NF, makeLiteralDouble_)(NF value);
N_LIB_PRIVATE N_NIMCALL(NU8, makeLiteralByte_)(NU8 value);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, makeLiteralBool_)(NIM_BOOL value);
N_LIB_PRIVATE N_NIMCALL(FARFilter, makeARFilter_)(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packageNames, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packagePaths, TY__ENhz1y6sHvLdRa6kOBUI0g& softObjectPaths, TY__PRe8Jrdf8eYAEJilcBMaEQ& classPaths, TY__PRSVFfQEtqNnXT9a7lc0o6A& recursiveClassPathsExclusionSet, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& classNames, TY__RB4z3ofWT3akwp9bOP7PhQA& recursiveClassesExclusionSet, NIM_BOOL bRecursivePaths, NIM_BOOL bRecursiveClasses, NIM_BOOL bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(void, logString_)(FString inString, NIM_BOOL bPrintToLog);
N_LIB_PRIVATE N_NIMCALL(void, loadInterstitialAd_)(NI32 adIdIndex);
N_LIB_PRIVATE N_NIMCALL(UClass*, loadClassAsset_Blocking_)(TY__roSJObD9cij0IKr7nEgF3iw assetClass);
N_LIB_PRIVATE N_NIMCALL(void, loadAssetClass_)(UObject* worldContextObject, TY__roSJObD9cij0IKr7nEgF3iw assetClass, FOnAssetClassLoaded_* onLoaded, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(UObject*, loadAsset_Blocking_)(TY__9b5kQ3g2w5CXovAbu5D6pTg asset);
N_LIB_PRIVATE N_NIMCALL(void, loadAsset_)(UObject* worldContextObject, TY__9b5kQ3g2w5CXovAbu5D6pTg asset, FOnAssetLoaded_* onLoaded, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingleForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingleByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceSingle_)(UObject* worldContextObject, FVector start, FVector end_0, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMultiForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMultiByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceMulti_)(UObject* worldContextObject, FVector start, FVector end_0, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(void, launchURL_)(FString uRL);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimerHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimerDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, unPauseTimer_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExistsHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExistsDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, timerExists_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerForNextTickDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerForNextTick_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimerDelegate_)(FTimerDynamicDelegate_* delegate, NF32 time, NIM_BOOL bLooping, NF32 initialStartDelay, NF32 initialStartDelayVariance);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, setTimer_)(UObject* object_0, FString functionName, NF32 time, NIM_BOOL bLooping, NF32 initialStartDelay, NF32 initialStartDelayVariance);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimerHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimerDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, pauseTimer_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidTimerHandle_)(FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPausedHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPausedDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerPaused_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActiveHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActiveDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTimerActive_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(FTimerHandle, invalidateTimerHandle_)(FTimerHandle& handle);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTimeHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTimeDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerRemainingTime_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTimeHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTimeDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimerElapsedTime_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(void, clearTimerHandle_)(UObject* worldContextObject, FTimerHandle handle);
N_LIB_PRIVATE N_NIMCALL(void, clearTimerDelegate_)(FTimerDynamicDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, clearTimer_)(UObject* object_0, FString functionName);
N_LIB_PRIVATE N_NIMCALL(void, clearAndInvalidateTimerHandle_)(UObject* worldContextObject, FTimerHandle& handle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObjectReference);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& softClassReference);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FPrimaryAssetType primaryAssetType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidClass_)(UClass* class_0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnattended_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStandalone_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSplitScreen_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isServer_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isScreensaverEnabled_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPackagedForDistribution_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoggedIn_)(APlayerController* specificPlayer);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterstitialAdRequested_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterstitialAdAvailable_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDedicatedServer_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControllerAssignedToGamepad_)(NI32 controllerId);
N_LIB_PRIVATE N_NIMCALL(void, hideAdBanner_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMultipleLocalPlayers_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getVolumeButtonsHandledBySystem_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getUniqueDeviceId_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getSystemPath_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getSupportedFullscreenResolutions_)(TY__yD9cabbXKxBhxxk9bEUjuWfQ& resolutions);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getSoftObjectReference_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, getSoftObjectPath_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, getSoftClassReference_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, getSoftClassPath_)(UClass* class_0);
N_LIB_PRIVATE N_NIMCALL(NI32, getRenderingMaterialQualityLevel_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getRenderingDetailMode_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectSavedDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectContentDirectory_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getPrimaryAssetsWithBundleState_)(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& requiredBundles, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& excludedBundles, TY__3W9bSP0TRlRfvoPW2wOyZSg& validTypes, NIM_BOOL bForceCurrentState, TY__9aw1VaWKZbUTzz1muwIRvsw& outPrimaryAssetIdList);
N_LIB_PRIVATE N_NIMCALL(void, getPrimaryAssetIdList_)(FPrimaryAssetType primaryAssetType, TY__9aw1VaWKZbUTzz1muwIRvsw& outPrimaryAssetIdList);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromSoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg softObjectReference);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromSoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw softClassReference);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromObject_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(FPrimaryAssetId, getPrimaryAssetIdFromClass_)(TY__Gdb8rCprT6WGagrQes2BIg class_0);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getPreferredLanguages_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformUserName_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPlatformUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPathName_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getOuterObject_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(FString, getObjectName_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(UObject*, getObject_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinYResolutionForUI_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinYResolutionFor3DView_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getLocalCurrencySymbol_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getLocalCurrencyCode_)(void);
N_LIB_PRIVATE N_NIMCALL(NF, getGameTimeInSeconds_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(FString, getGamepadControllerName_)(NI32 controllerId);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, getGamepadButtonGlyph_)(FString buttonKey, NI32 controllerIndex);
N_LIB_PRIVATE N_NIMCALL(FString, getGameName_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getGameBundleId_)(void);
N_LIB_PRIVATE N_NIMCALL(NI64, getFrameCount_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getEngineVersion_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getEditorProperty_)(UObject* object_0, FName propertyName, NI32& propertyValue);
N_LIB_PRIVATE N_NIMCALL(FString, getDisplayName_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(FString, getDeviceId_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultLocale_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultLanguage_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurrentBundleState_)(FPrimaryAssetId primaryAssetId, NIM_BOOL bForceCurrentState, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outBundles);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getConvenientWindowedResolutions_)(TY__yD9cabbXKxBhxxk9bEUjuWfQ& resolutions);
N_LIB_PRIVATE N_NIMCALL(FString, getConsoleVariableStringValue_)(FString variableName);
N_LIB_PRIVATE N_NIMCALL(NI32, getConsoleVariableIntValue_)(FString variableName);
N_LIB_PRIVATE N_NIMCALL(NF32, getConsoleVariableFloatValue_)(FString variableName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getConsoleVariableBoolValue_)(FString variableName);
N_LIB_PRIVATE N_NIMCALL(void, getComponentBounds_)(USceneComponent* component, FVector& origin, FVector& boxExtent, NF32& sphereRadius);
N_LIB_PRIVATE N_NIMCALL(FString, getCommandLine_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, getClass_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(FString, getClassDisplayName_)(UClass* class_0);
N_LIB_PRIVATE N_NIMCALL(FString, getBuildVersion_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getBuildConfiguration_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getAdIDCount_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getActorListFromComponentList_)(TY__RN0jXIbC9cvfWt68iswDSAw& componentList, UClass* actorClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& outActorList);
N_LIB_PRIVATE N_NIMCALL(void, getActorBounds_)(AActor* actor, FVector& origin, FVector& boxExtent);
N_LIB_PRIVATE N_NIMCALL(void, forceCloseAdBanner_)(void);
N_LIB_PRIVATE N_NIMCALL(void, flushPersistentDebugLines_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, flushDebugStrings_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, executeConsoleCommand_)(UObject* worldContextObject, FString command, APlayerController* specificPlayer);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SoftObjectReference_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& a, TY__9b5kQ3g2w5CXovAbu5D6pTg& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SoftClassReference_)(TY__roSJObD9cij0IKr7nEgF3iw& a, TY__roSJObD9cij0IKr7nEgF3iw& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_PrimaryAssetType_)(FPrimaryAssetType a, FPrimaryAssetType b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_PrimaryAssetId_)(FPrimaryAssetId a, FPrimaryAssetId b);
N_LIB_PRIVATE N_NIMCALL(NI32, endTransaction_)(void);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugString_)(UObject* worldContextObject, FVector textLocation, FString text, AActor* testBaseActor, FLinearColor textColor, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugSphere_)(UObject* worldContextObject, FVector center, NF32 radius, NI32 segments, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugPoint_)(UObject* worldContextObject, FVector position, NF32 size, FLinearColor pointColor, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugPlane_)(UObject* worldContextObject, FPlane& planeCoordinates, FVector location, NF32 size, FLinearColor planeColor, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugLine_)(UObject* worldContextObject, FVector lineStart, FVector lineEnd, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFrustum_)(UObject* worldContextObject, FTransform& frustumTransform, FLinearColor frustumColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFloatHistoryTransform_)(UObject* worldContextObject, FDebugFloatHistory& floatHistory, FTransform& drawTransform, FVector2D drawSize, FLinearColor drawColor, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugFloatHistoryLocation_)(UObject* worldContextObject, FDebugFloatHistory& floatHistory, FVector drawLocation, FVector2D drawSize, FLinearColor drawColor, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCylinder_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NI32 segments, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCoordinateSystem_)(UObject* worldContextObject, FVector axisLoc, FRotator axisRot, NF32 scale, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugConeInDegrees_)(UObject* worldContextObject, FVector origin, FVector direction, NF32 length, NF32 angleWidth, NF32 angleHeight, NI32 numSides, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCone_)(UObject* worldContextObject, FVector origin, FVector direction, NF32 length, NF32 angleWidth, NF32 angleHeight, NI32 numSides, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCircle_)(UObject* worldContextObject, FVector center, NF32 radius, NI32 numSegments, FLinearColor lineColor, NF32 duration, NF32 thickness, FVector yAxis, FVector zAxis, NIM_BOOL bDrawAxis);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugCapsule_)(UObject* worldContextObject, FVector center, NF32 halfHeight, NF32 radius, FRotator rotation, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugBox_)(UObject* worldContextObject, FVector center, FVector extent, FLinearColor lineColor, FRotator rotation, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawDebugArrow_)(UObject* worldContextObject, FVector lineStart, FVector lineEnd, NF32 arrowSize, FLinearColor lineColor, NF32 duration, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesImplementInterface_)(UObject* testObject, TY__KI5t49abR3sL6OsGNxWlhiQ interface_0);
N_LIB_PRIVATE N_NIMCALL(void, delayUntilNextTick_)(UObject* worldContextObject, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(void, delay_)(UObject* worldContextObject, NF32 duration, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(void, createCopyForUndoBuffer_)(UObject* objectToModify);
N_LIB_PRIVATE N_NIMCALL(FString, convertToRelativePath_)(FString filename);
N_LIB_PRIVATE N_NIMCALL(FString, convertToAbsolutePath_)(FString filename);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath, conv_SoftObjRefToSoftObjPath_)(TY__9b5kQ3g2w5CXovAbu5D6pTg softObjectReference);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath, conv_SoftObjRefToSoftClassPath_)(TY__roSJObD9cij0IKr7nEgF3iw softClassReference);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, conv_SoftObjPathToSoftObjRef_)(FSoftObjectPath& softObjectPath);
N_LIB_PRIVATE N_NIMCALL(FString, conv_SoftObjectReferenceToString_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObjectReference);
N_LIB_PRIVATE N_NIMCALL(UObject*, conv_SoftObjectReferenceToObject_)(TY__9b5kQ3g2w5CXovAbu5D6pTg& softObject);
N_LIB_PRIVATE N_NIMCALL(FString, conv_SoftClassReferenceToString_)(TY__roSJObD9cij0IKr7nEgF3iw& softClassReference);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, conv_SoftClassReferenceToClass_)(TY__roSJObD9cij0IKr7nEgF3iw& softClass);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, conv_SoftClassPathToSoftClassRef_)(FSoftClassPath& softClassPath);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FPrimaryAssetType primaryAssetType);
N_LIB_PRIVATE N_NIMCALL(FString, toString_)(FPrimaryAssetId primaryAssetId);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, conv_ObjectToSoftObjectReference_)(UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(UClass*, conv_ObjectToClass_)(UObject* object_0, TY__Gdb8rCprT6WGagrQes2BIg class_0);
N_LIB_PRIVATE N_NIMCALL(UObject*, conv_InterfaceToObject_)(TY__ifXM0HgR32dv0bADb0VXEw& interface_0);
N_LIB_PRIVATE N_NIMCALL(TY__roSJObD9cij0IKr7nEgF3iw, conv_ClassToSoftClassReference_)(TY__Gdb8rCprT6WGagrQes2BIg& class_0);
N_LIB_PRIVATE N_NIMCALL(void, controlScreensaver_)(NIM_BOOL bAllowScreenSaver);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentOverlapComponents_)(UPrimitiveComponent* component, FTransform& componentTransform, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* componentClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentOverlapActors_)(UPrimitiveComponent* component, FTransform& componentTransform, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* actorClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(void, collectGarbage_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingleForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingleByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceSingle_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMultiForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMultiByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleTraceMulti_)(UObject* worldContextObject, FVector start, FVector end_0, NF32 radius, NF32 halfHeight, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleOverlapComponents_)(UObject* worldContextObject, FVector capsulePos, NF32 radius, NF32 halfHeight, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* componentClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, capsuleOverlapActors_)(UObject* worldContextObject, FVector capsulePos, NF32 radius, NF32 halfHeight, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* actorClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canLaunchURL_)(FString uRL);
N_LIB_PRIVATE N_NIMCALL(void, cancelTransaction_)(NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, breakTopLevelAssetPath_)(FTopLevelAssetPath& topLevelAssetPath, FString& pathString);
N_LIB_PRIVATE N_NIMCALL(void, breakSoftObjectPath_)(FSoftObjectPath inSoftObjectPath, FString& pathString);
N_LIB_PRIVATE N_NIMCALL(void, breakSoftClassPath_)(FSoftClassPath inSoftClassPath, FString& pathString);
N_LIB_PRIVATE N_NIMCALL(void, breakARFilter_)(FARFilter inARFilter, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packageNames, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& packagePaths, TY__ENhz1y6sHvLdRa6kOBUI0g& softObjectPaths, TY__PRe8Jrdf8eYAEJilcBMaEQ& classPaths, TY__PRSVFfQEtqNnXT9a7lc0o6A& recursiveClassPathsExclusionSet, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& classNames, TY__RB4z3ofWT3akwp9bOP7PhQA& recursiveClassesExclusionSet, NIM_BOOL& bRecursivePaths, NIM_BOOL& bRecursiveClasses, NIM_BOOL& bIncludeOnlyOnDiskAssets);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingleForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingleByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceSingle_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, FHitResult& outHit, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMultiForObjects_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMultiByProfile_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, FName profileName, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxTraceMulti_)(UObject* worldContextObject, FVector start, FVector end_0, FVector halfSize, FRotator orientation, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, tyEnum_EDrawDebugTrace__GwdwgMMvI9aB9a0MsBI3KoCg drawDebugType, TY__lzHXQP9bZ0fzOEdl9bhUHFMg& outHits, NIM_BOOL bIgnoreSelf, FLinearColor traceColor, FLinearColor traceHitColor, NF32 drawTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapComponents_)(UObject* worldContextObject, FVector boxPos, FVector extent, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* componentClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__RN0jXIbC9cvfWt68iswDSAw& outComponents);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapActors_)(UObject* worldContextObject, FVector boxPos, FVector boxExtent, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, UClass* actorClassFilter, TY__kbK03O9cVTTS0GR9cjPhedTg& actorsToIgnore, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors);
N_LIB_PRIVATE N_NIMCALL(NI32, beginTransaction_)(FString context, FText description, UObject* primaryObject);
N_LIB_PRIVATE N_NIMCALL(FDebugFloatHistory, addFloatHistorySample_)(NF32 value, FDebugFloatHistory& floatHistory);
N_LIB_PRIVATE N_NIMCALL(void, keepUKismetSystemLibrary)(UKismetSystemLibrary* fake);
N_LIB_PRIVATE N_NIMCALL(FString, videoCaptureDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, validatePath_)(FString inPath, NIM_BOOL& bDidSucceed, FText& outReason);
N_LIB_PRIVATE N_NIMCALL(void, split_)(FString inPath, FString& pathPart, FString& filenamePart, FString& extensionPart);
N_LIB_PRIVATE N_NIMCALL(FString, sourceConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldSaveToUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, shaderWorkingDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setProjectFilePath_)(FString newGameProjectFilePath);
N_LIB_PRIVATE N_NIMCALL(FString, setExtension_)(FString inPath, FString inNewExtension);
N_LIB_PRIVATE N_NIMCALL(FString, screenShotDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, sandboxesDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, rootDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, removeDuplicateSlashes_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(FString, projectUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectPluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectPersistentDownloadDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectModsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectLogDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectIntermediateDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectContentDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, projectConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, profilingDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, normalizeFilename_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(void, normalizeDirectoryName_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(FString, makeValidFileName_)(FString inString, FString inReplacementChar);
N_LIB_PRIVATE N_NIMCALL(void, makeStandardFilename_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(void, makePlatformFilename_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, makePathRelativeTo_)(FString inPath, FString inRelativeTo, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(FString, launchDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSamePath_)(FString pathA, FString pathB);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRestrictedPath_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRelative_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isProjectFilePathSet_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDrive_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasProjectPersistentDownloadDir_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getToolTipLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getRestrictedFolderNames_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getRelativePathToRoot_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getPropertyNameLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getProjectFilePath_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getPath_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(FString, getInvalidFileSystemChars_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getGameLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getExtension_)(FString inPath, NIM_BOOL bIncludeDot);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEngineLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getEditorLocalizationPaths_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, getCleanFilename_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(FString, getBaseFilename_)(FString inPath, NIM_BOOL bRemovePath);
N_LIB_PRIVATE N_NIMCALL(FString, generatedConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameUserDeveloperDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameSourceDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameDevelopersDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, gameAgnosticSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, fileExists_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(FString, featurePackDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterprisePluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterpriseFeaturePackDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enterpriseDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineVersionAgnosticUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineUserDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineSourceDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineSavedDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, enginePluginsDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineIntermediateDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineContentDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, engineConfigDir_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, directoryExists_)(FString inPath);
N_LIB_PRIVATE N_NIMCALL(FString, diffDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, createTempFilename_)(FString path, FString prefix, FString extension);
N_LIB_PRIVATE N_NIMCALL(FString, convertToSandboxPath_)(FString inPath, FString inSandboxName);
N_LIB_PRIVATE N_NIMCALL(FString, convertRelativePathToFull_)(FString inPath, FString inBasePath);
N_LIB_PRIVATE N_NIMCALL(FString, convertFromSandboxPath_)(FString inPath, FString inSandboxName);
N_LIB_PRIVATE N_NIMCALL(FString, combine_)(TY__myhN0u2pNczwuaOhbdYPXw& inPaths);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, collapseRelativeDirectories_)(FString inPath, FString& outPath);
N_LIB_PRIVATE N_NIMCALL(FString, cloudDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, changeExtension_)(FString inPath, FString inNewExtension);
N_LIB_PRIVATE N_NIMCALL(FString, bugItDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationTransientDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationLogDir_)(void);
N_LIB_PRIVATE N_NIMCALL(FString, automationDir_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintPathsLibrary)(UBlueprintPathsLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setAllowedDeviceOrientation_)(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q newAllowedDeviceOrientation);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationFromNow_)(NI32 inSecondsFromNow, FText& title, FText& body, FText& action, FString activationEvent);
N_LIB_PRIVATE N_NIMCALL(void, scheduleLocalNotificationBadgeFromNow_)(NI32 inSecondsFromNow, FString activationEvent);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationBadgeAtTime_)(FDateTime& fireDateTime, NIM_BOOL localTime, FString activationEvent);
N_LIB_PRIVATE N_NIMCALL(NI32, scheduleLocalNotificationAtTime_)(FDateTime& fireDateTime, NIM_BOOL localTime, FText& title, FText& body, FText& action, FString activationEvent);
N_LIB_PRIVATE N_NIMCALL(void, getLaunchNotification_)(NIM_BOOL& notificationLaunchedApp, FString& activationEvent, NI32& fireDate);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q, getDeviceOrientation_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScreenOrientation__TyInV53U6gXs0ezX2Zq87Q, getAllowedDeviceOrientation_)(void);
N_LIB_PRIVATE N_NIMCALL(void, clearAllLocalNotifications_)(void);
N_LIB_PRIVATE N_NIMCALL(void, cancelLocalNotificationById_)(NI32 notificationId);
N_LIB_PRIVATE N_NIMCALL(void, cancelLocalNotification_)(FString activationEvent);
N_LIB_PRIVATE N_NIMCALL(void, keepUBlueprintPlatformLibrary)(UBlueprintPlatformLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, randomSobolFloat_)(NI32 index, NI32 dimension, NF32 seed);
N_LIB_PRIVATE N_NIMCALL(FVector, randomSobolCell3D_)(NI32 index, NI32 numCells, FVector cell, FVector seed);
N_LIB_PRIVATE N_NIMCALL(FVector2D, randomSobolCell2D_)(NI32 index, NI32 numCells, FVector2D cell, FVector2D seed);
N_LIB_PRIVATE N_NIMCALL(NF32, nextSobolFloat_)(NI32 index, NI32 dimension, NF32 previousValue);
N_LIB_PRIVATE N_NIMCALL(FVector, nextSobolCell3D_)(NI32 index, NI32 numCells, FVector previousValue);
N_LIB_PRIVATE N_NIMCALL(FVector2D, nextSobolCell2D_)(NI32 index, NI32 numCells, FVector2D previousValue);
N_LIB_PRIVATE N_NIMCALL(void, makeImportanceTexture_)(UTexture2D* texture, tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg weightingFunc, FImportanceTexture_* Result);
N_LIB_PRIVATE N_NIMCALL(void, importanceSample_)(FImportanceTexture_& texture, FVector2D& rand, NI32 samples, NF32 intensity, FVector2D& samplePosition, FLinearColor& sampleColor, NF32& sampleIntensity, NF32& sampleSize);
N_LIB_PRIVATE N_NIMCALL(void, breakImportanceTexture_)(FImportanceTexture_& importanceTexture, UTexture2D*& texture, tyEnum_EImportanceWeight__TIR8XXBKUtwACPzUchmXGg& weightingFunc);
N_LIB_PRIVATE N_NIMCALL(void, keepUImportanceSamplingLibrary)(UImportanceSamplingLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelPartitionInterface)(ULevelPartitionInterface* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelActorContainer)(ULevelActorContainer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelStreamingLevelInstanceEditor)(ULevelStreamingLevelInstanceEditor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelInstanceInterface)(ULevelInstanceInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setCinematicMode_)(ALevelScriptActor_* self, NIM_BOOL bCinematicMode, NIM_BOOL bHidePlayer, NIM_BOOL bAffectsHUD, NIM_BOOL bAffectsMovement, NIM_BOOL bAffectsTurning);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, remoteEvent_)(ALevelScriptActor_* self, FName eventName);
N_LIB_PRIVATE N_NIMCALL(void, keepALevelScriptActor)(ALevelScriptActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelScriptBlueprint)(ULevelScriptBlueprint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepALightmassCharacterIndirectDetailVolume)(ALightmassCharacterIndirectDetailVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepALightmassImportanceVolume)(ALightmassImportanceVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(FActorInstanceHandle, createNewLightWeightInstance_)(UClass* actorClass, FTransform transform, UDataLayerInstance* layer);
N_LIB_PRIVATE N_NIMCALL(FActorInstanceHandle, convertActorToLightWeightInstance_)(AActor* actor);
N_LIB_PRIVATE N_NIMCALL(void, keepULightWeightInstanceBlueprintFunctionLibrary)(ULightWeightInstanceBlueprintFunctionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, unload_)(ALocationVolume_* self);
N_LIB_PRIVATE N_NIMCALL(void, load_)(ALocationVolume_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLoaded_)(ALocationVolume_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepALocationVolume)(ALocationVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo, FLinearColor value);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName, FLinearColor value);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo, UTexture* value);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName, UTexture* value);
N_LIB_PRIVATE N_NIMCALL(void, setSparseVolumeTextureParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName, USparseVolumeTexture_* value);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setScalarParameterByIndex_)(UMaterialInstanceDynamic* self, NI32 parameterIndex, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDoubleVectorParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName, FVector4 value);
N_LIB_PRIVATE N_NIMCALL(void, interpolateMaterialInstanceParams_)(UMaterialInstanceDynamic* self, UMaterialInstance* sourceA, UMaterialInstance* sourceB, NF32 alpha);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValueByInfo_)(UMaterialInstanceDynamic* self, FMaterialParameterInfo& parameterInfo);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UMaterialInstanceDynamic* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(void, copyMaterialInstanceParameters_)(UMaterialInstanceDynamic* self, UMaterialInterface* source, NIM_BOOL bQuickParametersOnly);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, initializeScalarParameterAndGetIndex_)(UMaterialInstanceDynamic* self, FName& parameterName, NF32 value, NI32& outParameterIndex);
N_LIB_PRIVATE N_NIMCALL(void, copyParameterOverrides_)(UMaterialInstanceDynamic* self, UMaterialInstance* materialInstance);
N_LIB_PRIVATE N_NIMCALL(void, keepAMeshMergeCullingVolume)(AMeshMergeCullingVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removePaintedVertices_)(UStaticMeshComponent* staticMeshComponent);
N_LIB_PRIVATE N_NIMCALL(void, paintVerticesSingleColor_)(UStaticMeshComponent* staticMeshComponent, FLinearColor& fillColor, NIM_BOOL bConvertToSRGB);
N_LIB_PRIVATE N_NIMCALL(void, paintVerticesLerpAlongAxis_)(UStaticMeshComponent* staticMeshComponent, FLinearColor& startColor, FLinearColor& endColor, tyEnum_EVertexPaintAxis__xnbGI2wHzvdGeHn8hpYsPw axis, NIM_BOOL bConvertToSRGB);
N_LIB_PRIVATE N_NIMCALL(void, keepUMeshVertexPainterKismetLibrary)(UMeshVertexPainterKismetLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUActorReplicationBridge)(UActorReplicationBridge_* fake);
N_LIB_PRIVATE N_NIMCALL(void, markPropertyDirtyFromRepIndex_)(UObject* object_0, NI32 repIndex, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(void, markPropertyDirty_)(UObject* object_0, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(void, keepUNetPushModelHelpers)(UNetPushModelHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(FString, text)(ANote_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(ANote_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(void, keepANote)(ANote_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUObjectLibrary)(UObjectLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUOnlineBlueprintCallProxyBase)(UOnlineBlueprintCallProxyBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setProjectionParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableProjection, NF32 projectionLinearAlpha, NF32 projectionAngularAlpha);
N_LIB_PRIVATE N_NIMCALL(void, setParentDominates_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bParentDominates);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableTwistDrive, NIM_BOOL bEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveSLERP_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(void, setMassConditioningEnabled_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableMassConditioning);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityTarget_)(FConstraintInstanceAccessor_& accessor, FVector& inVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityDrive_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableDriveX, NIM_BOOL bEnableDriveY, NIM_BOOL bEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, setLinearSoftLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bSoftLinearLimit, NF32 linearLimitStiffness, NF32 linearLimitDamping, NF32 linearLimitRestitution, NF32 linearLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionTarget_)(FConstraintInstanceAccessor_& accessor, FVector& inPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionDrive_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableDriveX, NIM_BOOL bEnableDriveY, NIM_BOOL bEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPlasticity_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bLinearPlasticity, NF32 linearPlasticityThreshold, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA plasticityType);
N_LIB_PRIVATE N_NIMCALL(void, setLinearLimits_)(FConstraintInstanceAccessor_& accessor, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw xMotion, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw yMotion, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw zMotion, NF32 limit);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDriveParams_)(FConstraintInstanceAccessor_& accessor, NF32 positionStrength, NF32 velocityStrength, NF32 inForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, setLinearBreakable_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bLinearBreakable, NF32 linearBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(void, setDisableCollision_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bDisableCollision);
N_LIB_PRIVATE N_NIMCALL(void, setContactTransferScale_)(FConstraintInstanceAccessor_& accessor, NF32 contactTransferScale);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityTarget_)(FConstraintInstanceAccessor_& accessor, FVector& inVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableTwistDrive, NIM_BOOL bEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveSLERP_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSoftTwistLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bSoftTwistLimit, NF32 twistLimitStiffness, NF32 twistLimitDamping, NF32 twistLimitRestitution, NF32 twistLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSoftSwingLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bSoftSwingLimit, NF32 swingLimitStiffness, NF32 swingLimitDamping, NF32 swingLimitRestitution, NF32 swingLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, setAngularPlasticity_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bAngularPlasticity, NF32 angularPlasticityThreshold);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationTarget_)(FConstraintInstanceAccessor_& accessor, FRotator& inPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, setAngularLimits_)(FConstraintInstanceAccessor_& accessor, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg swing1MotionType, NF32 swing1LimitAngle, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg swing2MotionType, NF32 swing2LimitAngle, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg twistMotionType, NF32 twistLimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveParams_)(FConstraintInstanceAccessor_& accessor, NF32 positionStrength, NF32 velocityStrength, NF32 inForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveMode_)(FConstraintInstanceAccessor_& accessor, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ driveMode);
N_LIB_PRIVATE N_NIMCALL(void, setAngularBreakable_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL bAngularBreakable, NF32 angularBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(void, getProjectionParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bEnableProjection, NF32& projectionLinearAlpha, NF32& projectionAngularAlpha);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getParentDominates_)(FConstraintInstanceAccessor_& accessor);
N_LIB_PRIVATE N_NIMCALL(void, getOrientationDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableTwistDrive, NIM_BOOL& bOutEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, getOrientationDriveSLERP_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMassConditioningEnabled_)(FConstraintInstanceAccessor_& accessor);
N_LIB_PRIVATE N_NIMCALL(void, getLinearVelocityTarget_)(FConstraintInstanceAccessor_& accessor, FVector& outVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, getLinearVelocityDrive_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableDriveX, NIM_BOOL& bOutEnableDriveY, NIM_BOOL& bOutEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, getLinearSoftLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bSoftLinearLimit, NF32& linearLimitStiffness, NF32& linearLimitDamping, NF32& linearLimitRestitution, NF32& linearLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPositionTarget_)(FConstraintInstanceAccessor_& accessor, FVector& outPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPositionDrive_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableDriveX, NIM_BOOL& bOutEnableDriveY, NIM_BOOL& bOutEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, getLinearPlasticity_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bLinearPlasticity, NF32& linearPlasticityThreshold, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA& plasticityType);
N_LIB_PRIVATE N_NIMCALL(void, getLinearLimits_)(FConstraintInstanceAccessor_& accessor, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& xMotion, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& yMotion, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw& zMotion, NF32& limit);
N_LIB_PRIVATE N_NIMCALL(void, getLinearDriveParams_)(FConstraintInstanceAccessor_& accessor, NF32& outPositionStrength, NF32& outVelocityStrength, NF32& outForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, getLinearBreakable_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bLinearBreakable, NF32& linearBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisableCollsion_)(FConstraintInstanceAccessor_& accessor);
N_LIB_PRIVATE N_NIMCALL(void, getContactTransferScale_)(FConstraintInstanceAccessor_& accessor, NF32& contactTransferScale);
N_LIB_PRIVATE N_NIMCALL(void, getAttachedBodyNames_)(FConstraintInstanceAccessor_& accessor, FName& parentBody, FName& childBody);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityTarget_)(FConstraintInstanceAccessor_& accessor, FVector& outVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityDriveTwistAndSwing_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableTwistDrive, NIM_BOOL& bOutEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, getAngularVelocityDriveSLERP_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bOutEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(void, getAngularSoftTwistLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bSoftTwistLimit, NF32& twistLimitStiffness, NF32& twistLimitDamping, NF32& twistLimitRestitution, NF32& twistLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, getAngularSoftSwingLimitParams_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bSoftSwingLimit, NF32& swingLimitStiffness, NF32& swingLimitDamping, NF32& swingLimitRestitution, NF32& swingLimitContactDistance);
N_LIB_PRIVATE N_NIMCALL(void, getAngularPlasticity_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bAngularPlasticity, NF32& angularPlasticityThreshold);
N_LIB_PRIVATE N_NIMCALL(void, getAngularOrientationTarget_)(FConstraintInstanceAccessor_& accessor, FRotator& outPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, getAngularLimits_)(FConstraintInstanceAccessor_& accessor, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& swing1MotionType, NF32& swing1LimitAngle, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& swing2MotionType, NF32& swing2LimitAngle, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg& twistMotionType, NF32& twistLimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, getAngularDriveParams_)(FConstraintInstanceAccessor_& accessor, NF32& outPositionStrength, NF32& outVelocityStrength, NF32& outForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, getAngularDriveMode_)(FConstraintInstanceAccessor_& accessor, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ& outDriveMode);
N_LIB_PRIVATE N_NIMCALL(void, getAngularBreakable_)(FConstraintInstanceAccessor_& accessor, NIM_BOOL& bAngularBreakable, NF32& angularBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(void, copyParams_)(FConstraintInstanceAccessor_& accessor, FConstraintInstanceAccessor_& sourceAccessor, NIM_BOOL bKeepPosition, NIM_BOOL bKeepRotation);
N_LIB_PRIVATE N_NIMCALL(void, keepUConstraintInstanceBlueprintLibrary)(UConstraintInstanceBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsFieldComponent)(UPhysicsFieldComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector, evalPhysicsVectorField_)(UObject* worldContextObject, FVector& worldPosition, tyEnum_EFieldVectorType__pGz3AQq9bl4kW1oB5Z5VQoQ vectorType);
N_LIB_PRIVATE N_NIMCALL(NF32, evalPhysicsScalarField_)(UObject* worldContextObject, FVector& worldPosition, tyEnum_EFieldScalarType__qtOF20Dkpb10DEnhLq7Prg scalarType);
N_LIB_PRIVATE N_NIMCALL(NI32, evalPhysicsIntegerField_)(UObject* worldContextObject, FVector& worldPosition, tyEnum_EFieldIntegerType__MD4euztRfjoPbO1X9b32yIQ integerType);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsFieldStatics)(UPhysicsFieldStatics_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPlayerStartPIE)(APlayerStartPIE_* fake);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, settings)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(APostProcessVolume_* obj, FPostProcessSettings val);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(APostProcessVolume_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, blendRadius)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendRadius)(APostProcessVolume_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, blendWeight)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendWeight)(APostProcessVolume_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(APostProcessVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUnbound)(APostProcessVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUnbound)(APostProcessVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(APostProcessVolume_* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject, NF32 inWeight);
N_LIB_PRIVATE N_NIMCALL(void, keepAPostProcessVolume)(APostProcessVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAPrecomputedVisibilityVolume)(APrecomputedVisibilityVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, stopPerformanceSnapshots_)(void);
N_LIB_PRIVATE N_NIMCALL(void, startPerformanceSnapshots_)(void);
N_LIB_PRIVATE N_NIMCALL(void, logPerformanceSnapshot_)(FString snapshotTitle, NIM_BOOL bResetStats);
N_LIB_PRIVATE N_NIMCALL(void, keepUHealthSnapshotBlueprintLibrary)(UHealthSnapshotBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULevelStreamingProfilingSubsystem)(ULevelStreamingProfilingSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(URectLightComponent_*, rectLightComponent)(ARectLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrectLightComponent)(ARectLight_* obj, URectLightComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepARectLight)(ARectLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameInstanceSubsystem)(UGameInstanceSubsystem* fake);
N_LIB_PRIVATE N_NIMCALL(void, requestCheckpoint_)(UReplaySubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRecording_)(UReplaySubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UReplaySubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getReplayCurrentTime_)(UReplaySubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(FString, getActiveReplayName_)(UReplaySubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUReplaySubsystem)(UReplaySubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURuntimeOptionsBase)(URuntimeOptionsBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSCS_Node)(USCS_Node_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSimpleConstructionScript)(USimpleConstructionScript_* fake);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocketInfo_)(USkinnedAsset* self, FName inSocketName, FTransform& outTransform, NI32& outBoneIndex, NI32& outIndex);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocket_)(USkinnedAsset* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, skeleton)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskeleton)(USkeletalMesh* obj, USkeleton* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, positiveBoundsExtension)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpositiveBoundsExtension)(USkeletalMesh* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, negativeBoundsExtension)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnegativeBoundsExtension)(USkeletalMesh* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(TY__J4BsCVazMxnbn2pMa0gmYA*, materials)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterials)(USkeletalMesh* obj, TY__J4BsCVazMxnbn2pMa0gmYA val);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshLODSettings*, lODSettings)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODSettings)(USkeletalMesh* obj, USkeletalMeshLODSettings* val);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, defaultAnimatingRig)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAnimatingRig)(USkeletalMesh* obj, TY__9b5kQ3g2w5CXovAbu5D6pTg val);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, physicsAsset)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsAsset)(USkeletalMesh* obj, UPhysicsAsset* val);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, shadowPhysicsAsset)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowPhysicsAsset)(USkeletalMesh* obj, UPhysicsAsset* val);
N_LIB_PRIVATE N_NIMCALL(TY__aQOYJDTq9cbs3kkjTFzDRtw*, nodeMappingData)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnodeMappingData)(USkeletalMesh* obj, TY__aQOYJDTq9cbs3kkjTFzDRtw val);
N_LIB_PRIVATE N_NIMCALL(TY__BkXM3seddDKCuk9ckyWy0BA*, morphTargets)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmorphTargets)(USkeletalMesh* obj, TY__BkXM3seddDKCuk9ckyWy0BA val);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformer_*, defaultMeshDeformer)(USkeletalMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMeshDeformer)(USkeletalMesh* obj, UMeshDeformer_* val);
N_LIB_PRIVATE N_NIMCALL(void, setSkeleton_)(USkeletalMesh* self, USkeleton* inSkeleton);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTargets_)(USkeletalMesh* self, TY__BkXM3seddDKCuk9ckyWy0BA& inMorphTargets);
N_LIB_PRIVATE N_NIMCALL(void, setMinLODForQualityLevels_)(USkeletalMesh* self, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs, NI32 default_0);
N_LIB_PRIVATE N_NIMCALL(void, setMaterials_)(USkeletalMesh* self, TY__J4BsCVazMxnbn2pMa0gmYA& inMaterials);
N_LIB_PRIVATE N_NIMCALL(void, setLODSettings_)(USkeletalMesh* self, USkeletalMeshLODSettings* inLODSettings);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultAnimatingRig_)(USkeletalMesh* self, TY__9b5kQ3g2w5CXovAbu5D6pTg inAnimatingRig);
N_LIB_PRIVATE N_NIMCALL(NI32, numSockets_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getAllMorphTargetNames_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSectionUsingCloth_)(USkeletalMesh* self, NI32 inSectionIndex, NIM_BOOL bCheckCorrespondingSections);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, getSocketByIndex_)(USkeletalMesh* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(USkeleton*, getSkeleton_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, getShadowPhysicsAsset_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, getPhysicsAsset_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(TY__aQOYJDTq9cbs3kkjTFzDRtw, getNodeMappingData_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(UNodeMappingContainer_*, getNodeMappingContainer_)(USkeletalMesh* self, UBlueprint* sourceAsset);
N_LIB_PRIVATE N_NIMCALL(TY__BkXM3seddDKCuk9ckyWy0BA, getMorphTargetsPtrConv_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(void, getMinLODForQualityLevels_)(USkeletalMesh* self, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs, NI32& default_0);
N_LIB_PRIVATE N_NIMCALL(TY__J4BsCVazMxnbn2pMa0gmYA, getMaterials_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshLODSettings*, getLODSettings_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getImportedBounds_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRig_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getBounds_)(USkeletalMesh* self);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshSocket_*, findSocketAndIndex_)(USkeletalMesh* self, FName inSocketName, NI32& outIndex);
N_LIB_PRIVATE N_NIMCALL(void, addSocket_)(USkeletalMesh* self, USkeletalMeshSocket_* inSocket, NIM_BOOL bAddToSkeleton);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeletalMeshLODSettings)(USkeletalMeshLODSettings* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSlateTextureAtlasInterface)(USlateTextureAtlasInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeMature)(USoundNodeMature_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__DjVkfHFhdnDmatCydN9cEqw*, staticMaterials)(UStaticMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMaterials)(UStaticMesh* obj, TY__DjVkfHFhdnDmatCydN9cEqw val);
N_LIB_PRIVATE N_NIMCALL(NI32, lODForCollision)(UStaticMesh* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODForCollision)(UStaticMesh* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setStaticMaterials_)(UStaticMesh* self, TY__DjVkfHFhdnDmatCydN9cEqw& inStaticMaterials);
N_LIB_PRIVATE N_NIMCALL(void, setNumSourceModels_)(UStaticMesh* self, NI32 num);
N_LIB_PRIVATE N_NIMCALL(void, setMinLODForQualityLevels_)(UStaticMesh* self, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs, NI32 default_0);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumLODForPlatforms_)(UStaticMesh* self, TY__FlT4tcZm1cmdaT89ciajJfA& platformMinimumLODs);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumLODForPlatform_)(UStaticMesh* self, FName& platformName, NI32 inMinLOD);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UStaticMesh* self, NI32 materialIndex, UMaterialInterface* newMaterial);
N_LIB_PRIVATE N_NIMCALL(void, removeSocket_)(UStaticMesh* self, UStaticMeshSocket_* socket_0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLODScreenSizeAutoComputed_)(UStaticMesh* self);
N_LIB_PRIVATE N_NIMCALL(TY__DjVkfHFhdnDmatCydN9cEqw, getStaticMaterials_)(UStaticMesh* self);
N_LIB_PRIVATE N_NIMCALL(TY__Cmu2WMlENYBnJ16EwepnUQ, getSocketsByTag_)(UStaticMesh* self, FString inSocketTag);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumTriangles_)(UStaticMesh* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSections_)(UStaticMesh* self, NI32 inLOD);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLODs_)(UStaticMesh* self);
N_LIB_PRIVATE N_NIMCALL(void, getMinLODForQualityLevels_)(UStaticMesh* self, TY__MWSkMZZhor1rT7RX9cp2Htg& qualityLevelMinimumLODs, NI32& default_0);
N_LIB_PRIVATE N_NIMCALL(void, getMinimumLODForQualityLevels_)(UStaticMesh* self, TY__FlT4tcZm1cmdaT89ciajJfA& qualityLevelMinimumLODs);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinimumLODForQualityLevel_)(UStaticMesh* self, FName& qualityLevel);
N_LIB_PRIVATE N_NIMCALL(void, getMinimumLODForPlatforms_)(UStaticMesh* self, TY__FlT4tcZm1cmdaT89ciajJfA& platformMinimumLODs);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinimumLODForPlatform_)(UStaticMesh* self, FName& platformName);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaterialIndex_)(UStaticMesh* self, FName materialSlotName);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterial_)(UStaticMesh* self, NI32 materialIndex);
N_LIB_PRIVATE N_NIMCALL(FBoxSphereBounds, getBounds_)(UStaticMesh* self);
N_LIB_PRIVATE N_NIMCALL(FBox, getBoundingBox_)(UStaticMesh* self);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshSocket_*, findSocket_)(UStaticMesh* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(void, addSocket_)(UStaticMesh* self, UStaticMeshSocket_* socket_0);
N_LIB_PRIVATE N_NIMCALL(FName, addMaterial_)(UStaticMesh* self, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, showSplashScreen_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setSplashScreen_)(UTexture* texture, FVector2D scale, FVector offset, NIM_BOOL bShowLoadingMovie, NIM_BOOL bShowOnSet);
N_LIB_PRIVATE N_NIMCALL(void, hideSplashScreen_)(void);
N_LIB_PRIVATE N_NIMCALL(void, enableAutoLoadingSplashScreen_)(NIM_BOOL inAutoShowEnabled);
N_LIB_PRIVATE N_NIMCALL(void, keepUStereoLayerFunctionLibrary)(UStereoLayerFunctionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureMipDataProviderFactory)(UTextureMipDataProviderFactory_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULocalPlayerSubsystem)(ULocalPlayerSubsystem* fake);
N_LIB_PRIVATE N_NIMCALL(UWorldSubsystem*, getWorldSubsystem_)(UObject* contextObject, TY__SZrhP2SaWueNLRMyRwUueg class_0);
N_LIB_PRIVATE N_NIMCALL(ULocalPlayerSubsystem*, getLocalPlayerSubSystemFromPlayerController_)(APlayerController* playerController, TY__xoau9aGG9bGInThS5Ff3sLrA class_0);
N_LIB_PRIVATE N_NIMCALL(ULocalPlayerSubsystem*, getLocalPlayerSubsystem_)(UObject* contextObject, TY__xoau9aGG9bGInThS5Ff3sLrA class_0);
N_LIB_PRIVATE N_NIMCALL(UGameInstanceSubsystem*, getGameInstanceSubsystem_)(UObject* contextObject, TY__t7MW8dNaA8xV9aQwPSWKF0w class_0);
N_LIB_PRIVATE N_NIMCALL(UEngineSubsystem*, getEngineSubsystem_)(TY__a9c7M9ap9aHvx2XoTZg2f8G9aA class_0);
N_LIB_PRIVATE N_NIMCALL(UAudioEngineSubsystem_*, getAudioEngineSubsystem_)(UObject* contextObject, TY__lMyEL238B9aDA0twt0Y33xA class_0);
N_LIB_PRIVATE N_NIMCALL(void, keepUSubsystemBlueprintLibrary)(USubsystemBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(UBillboardComponent_*, spriteComponent)(ATargetPoint_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspriteComponent)(ATargetPoint_* obj, UBillboardComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UArrowComponent_*, arrowComponent)(ATargetPoint_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setarrowComponent)(ATargetPoint_* obj, UArrowComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepATargetPoint)(ATargetPoint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTexture2DDynamic)(UTexture2DDynamic_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureCubeArray)(UTextureCubeArray_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTarget2DArray_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTarget2DArray_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTarget2DArray_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTarget2DArray_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, slices)(UTextureRenderTarget2DArray_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setslices)(UTextureRenderTarget2DArray_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTarget2DArray_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTarget2DArray_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureRenderTarget2DArray)(UTextureRenderTarget2DArray_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTargetCube_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTargetCube_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTargetCube_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTargetCube_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeX)(UTextureRenderTargetVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeX)(UTextureRenderTargetVolume_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeY)(UTextureRenderTargetVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeY)(UTextureRenderTargetVolume_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, sizeZ)(UTextureRenderTargetVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsizeZ)(UTextureRenderTargetVolume_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHDR)(UTextureRenderTargetVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHDR)(UTextureRenderTargetVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextureRenderTargetVolume)(UTextureRenderTargetVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicated)(UTimelineTemplate_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicated)(UTimelineTemplate_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUTimelineTemplate)(UTimelineTemplate_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector2D, textSize_)(UCanvas_* self, UFont_* renderFont, FString renderText, FVector2D scale);
N_LIB_PRIVATE N_NIMCALL(FVector2D, strLen_)(UCanvas_* self, UFont_* renderFont, FString renderText);
N_LIB_PRIVATE N_NIMCALL(FVector, project_)(UCanvas_* self, FVector worldLocation);
N_LIB_PRIVATE N_NIMCALL(void, drawTriangle_)(UCanvas_* self, UTexture* renderTexture, TY__BpCzqwI2aoMmhSgofuM38A triangles);
N_LIB_PRIVATE N_NIMCALL(void, drawTexture_)(UCanvas_* self, UTexture* renderTexture, FVector2D screenPosition, FVector2D screenSize, FVector2D coordinatePosition, FVector2D coordinateSize, FLinearColor renderColor, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw blendMode, NF32 rotation, FVector2D pivotPoint);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(UCanvas_* self, UFont_* renderFont, FString renderText, FVector2D screenPosition, FVector2D scale, FLinearColor renderColor, NF32 kerning, FLinearColor shadowColor, FVector2D shadowOffset, NIM_BOOL bCentreX, NIM_BOOL bCentreY, NIM_BOOL bOutlined, FLinearColor outlineColor);
N_LIB_PRIVATE N_NIMCALL(void, drawPolygon_)(UCanvas_* self, UTexture* renderTexture, FVector2D screenPosition, FVector2D radius, NI32 numberOfSides, FLinearColor renderColor);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialTriangle_)(UCanvas_* self, UMaterialInterface* renderMaterial, TY__BpCzqwI2aoMmhSgofuM38A triangles);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterial_)(UCanvas_* self, UMaterialInterface* renderMaterial, FVector2D screenPosition, FVector2D screenSize, FVector2D coordinatePosition, FVector2D coordinateSize, NF32 rotation, FVector2D pivotPoint);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(UCanvas_* self, FVector2D screenPositionA, FVector2D screenPositionB, NF32 thickness, FLinearColor renderColor);
N_LIB_PRIVATE N_NIMCALL(void, drawBox_)(UCanvas_* self, FVector2D screenPosition, FVector2D screenSize, NF32 thickness, FLinearColor renderColor);
N_LIB_PRIVATE N_NIMCALL(void, drawBorder_)(UCanvas_* self, UTexture* borderTexture, UTexture* backgroundTexture, UTexture* leftBorderTexture, UTexture* rightBorderTexture, UTexture* topBorderTexture, UTexture* bottomBorderTexture, FVector2D screenPosition, FVector2D screenSize, FVector2D coordinatePosition, FVector2D coordinateSize, FLinearColor renderColor, FVector2D borderScale, FVector2D backgroundScale, NF32 rotation, FVector2D pivotPoint, FVector2D cornerSize);
N_LIB_PRIVATE N_NIMCALL(void, deproject_)(UCanvas_* self, FVector2D screenPosition, FVector& worldOrigin, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(void, redirectVislog_)(UObject* sourceOwner, UObject* destinationOwner);
N_LIB_PRIVATE N_NIMCALL(void, logText_)(UObject* worldContextObject, FString text, FName logCategory, NIM_BOOL bAddToMessageLog);
N_LIB_PRIVATE N_NIMCALL(void, logSegment_)(UObject* worldContextObject, FVector segmentStart, FVector segmentEnd, FString text, FLinearColor objectColor, NF32 thickness, FName categoryName, NIM_BOOL bAddToMessageLog);
N_LIB_PRIVATE N_NIMCALL(void, logLocation_)(UObject* worldContextObject, FVector location, FString text, FLinearColor objectColor, NF32 radius, FName logCategory, NIM_BOOL bAddToMessageLog);
N_LIB_PRIVATE N_NIMCALL(void, logBox_)(UObject* worldContextObject, FBox boxShape, FString text, FLinearColor objectColor, FName logCategory, NIM_BOOL bAddToMessageLog);
N_LIB_PRIVATE N_NIMCALL(void, enableRecording_)(NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, keepUVisualLoggerKismetLibrary)(UVisualLoggerKismetLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setMicThreshold_)(NF32 inThreshold);
N_LIB_PRIVATE N_NIMCALL(void, keepUVOIPStatics)(UVOIPStatics_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressMode)(UVolumeTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressMode)(UVolumeTexture_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUVolumeTexture)(UVolumeTexture_* fake);
N_LIB_PRIVATE N_NIMCALL(void, unpinActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToUnpin);
N_LIB_PRIVATE N_NIMCALL(void, unloadActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToUnload);
N_LIB_PRIVATE N_NIMCALL(void, pinActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToPin);
N_LIB_PRIVATE N_NIMCALL(void, loadActors_)(TY__QUxJb9b3YwzTBIcUvLm2j6Q& inActorsToLoad);
N_LIB_PRIVATE N_NIMCALL(FBox, getRuntimeWorldBounds_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntersectingActorDescs_)(FBox& inBox, TY__L1uKoYpGltEdX5AMaAZBwA& outActorDescs);
N_LIB_PRIVATE N_NIMCALL(FBox, getEditorWorldBounds_)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getActorDescs_)(TY__L1uKoYpGltEdX5AMaAZBwA& outActorDescs);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionBlueprintLibrary)(UWorldPartitionBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionDestructibleInHLODInterface)(UWorldPartitionDestructibleInHLODInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, destroyInHLOD_)(TY__Z9bblV6ojuGotVTgnCjfC4Q& destructibleInHLOD);
N_LIB_PRIVATE N_NIMCALL(void, damageInHLOD_)(TY__Z9bblV6ojuGotVTgnCjfC4Q& destructibleInHLOD, NF32 damagePercent);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionDestructibleInHLODSupportLibrary)(UWorldPartitionDestructibleInHLODSupportLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionHLODModifier)(UWorldPartitionHLODModifier_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionActorLoaderInterface)(UWorldPartitionActorLoaderInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionEditorHash)(UWorldPartitionEditorHash_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionStreamingPolicy)(UWorldPartitionStreamingPolicy_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionRuntimeHash)(UWorldPartitionRuntimeHash_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingCompleted_)(UWorldPartitionSubsystem_* self, tyEnum_EWorldPartitionRuntimeCellState__vkrpaNcih6ma2naZWG9cYYQ queryState, TY__coX2EsXi9bBqBt2eQJWCxdw& querySources, NIM_BOOL bExactState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAllStreamingCompleted_)(UWorldPartitionSubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionSubsystem)(UWorldPartitionSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFloatRK4SpringInterpolator)(FFloatRK4SpringInterpolator_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVectorRK4SpringInterpolator)(FVectorRK4SpringInterpolator_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDebugFloatHistory)(FDebugFloatHistory fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTimerHandle)(FTimerHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCollisionProfileName)(FCollisionProfileName fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFUserActivity)(FUserActivity fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCollisionResponseContainer)(FCollisionResponseContainer fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCanvasIcon)(FCanvasIcon_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTextureSourceColorSettings)(FTextureSourceColorSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAlphaBlend)(FAlphaBlend fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNodeReference)(FAnimNodeReference_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_AssetPlayerRelevancyBase)(FAnimNode_AssetPlayerRelevancyBase_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEmptyPayload)(FEmptyPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFractureEffect)(FFractureEffect fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBasedPosition)(FBasedPosition fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPOV)(FPOV fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshBuildSettings)(FMeshBuildSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkeletalMeshBuildSettings)(FSkeletalMeshBuildSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshDisplacementMap)(FMeshDisplacementMap fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshNaniteSettings)(FMeshNaniteSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBaseComponentReference)(FBaseComponentReference fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFComponentReference)(FComponentReference fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoftComponentReference)(FSoftComponentReference fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCollectionReference)(FCollectionReference fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDepthFieldGlowInfo)(FDepthFieldGlowInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFontRenderInfo)(FFontRenderInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCanvasUVTri)(FCanvasUVTri fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBaseAttenuationSettings)(FBaseAttenuationSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMaterialProxySettings)(FMaterialProxySettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshUVChannelInfo)(FMeshUVChannelInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFXSystemSpawnParameters)(FFXSystemSpawnParameters fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFColorGradePerRangeSettings)(FColorGradePerRangeSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFColorGradingSettings)(FColorGradingSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFilmStockSettings)(FFilmStockSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGaussianSumBloomSettings)(FGaussianSumBloomSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFConvolutionBloomSettings)(FConvolutionBloomSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLensBloomSettings)(FLensBloomSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLensImperfectionSettings)(FLensImperfectionSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLensSettings)(FLensSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraExposureSettings)(FCameraExposureSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSceneViewExtensionIsActiveFunctor)(FSceneViewExtensionIsActiveFunctor_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshApproximationSettings)(FMeshApproximationSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshMergingSettings)(FMeshMergingSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshProxySettings)(FMeshProxySettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimExecutionContext)(FAnimExecutionContext_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputScaleBiasClampState)(FInputScaleBiasClampState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputClampState)(FInputClampState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAssetCompileData)(FAssetCompileData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAssetManagerSearchRules)(FAssetManagerSearchRules fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeUpdateResult)(FCameraShakeUpdateResult_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCullDistanceSizePair)(FCullDistanceSizePair_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFStaticMaterial)(FStaticMaterial fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDataTableRowHandle)(FDataTableRowHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDataTableCategoryHandle)(FDataTableCategoryHandle fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDamageEvent)(FDamageEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRadialDamageParams)(FRadialDamageParams fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFloatSpringState)(FFloatSpringState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVectorSpringState)(FVectorSpringState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuaternionSpringState)(FQuaternionSpringState_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshReductionSettings)(FMeshReductionSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMeshInstancingSettings)(FMeshInstancingSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPerPlatformFrameRate)(FPerPlatformFrameRate fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSubsurfaceProfileStruct)(FSubsurfaceProfileStruct_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkelMeshMergeSectionMapping)(FSkelMeshMergeSectionMapping_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkelMeshMergeMeshUVTransforms)(FSkelMeshMergeMeshUVTransforms_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkelMeshMergeUVTransformMapping)(FSkelMeshMergeUVTransformMapping_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSkeletalMaterial)(FSkeletalMaterial fake);
N_LIB_PRIVATE N_NIMCALL(TY__thExvANNGNgDH8OkaKuR8A*, inputActionDelegateBindings)(UEnhancedInputActionDelegateBinding_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputActionDelegateBindings)(UEnhancedInputActionDelegateBinding_* obj, TY__thExvANNGNgDH8OkaKuR8A val);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputActionDelegateBinding)(UEnhancedInputActionDelegateBinding_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__thExvANNGNgDH8OkaKuR8A*, inputActionValueBindings)(UEnhancedInputActionValueBinding_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputActionValueBindings)(UEnhancedInputActionValueBinding_* obj, TY__thExvANNGNgDH8OkaKuR8A val);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputActionValueBinding)(UEnhancedInputActionValueBinding_* fake);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, getBoundActionValue_)(UEnhancedInputComponent* self, UInputAction* action);
N_LIB_PRIVATE N_NIMCALL(TY__wjhtp2nTDdhb86xh9cRyNdg*, defaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj, TY__wjhtp2nTDdhb86xh9cRyNdg val);
N_LIB_PRIVATE N_NIMCALL(TY__wjhtp2nTDdhb86xh9cRyNdg*, defaultWorldSubsystemMappingContexts)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWorldSubsystemMappingContexts)(UEnhancedInputDeveloperSettings_* obj, TY__wjhtp2nTDdhb86xh9cRyNdg val);
N_LIB_PRIVATE N_NIMCALL(TY__dPphnKVNcklyqD9cNMYlEAw, defaultWorldInputClass)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWorldInputClass)(UEnhancedInputDeveloperSettings_* obj, TY__dPphnKVNcklyqD9cNMYlEAw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableDefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableDefaultMappingContexts)(UEnhancedInputDeveloperSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldOnlyTriggerLastActionInChord)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldOnlyTriggerLastActionInChord)(UEnhancedInputDeveloperSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableWorldSubsystem)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableWorldSubsystem)(UEnhancedInputDeveloperSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldLogAllWorldSubsystemInputs)(UEnhancedInputDeveloperSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldLogAllWorldSubsystemInputs)(UEnhancedInputDeveloperSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputDeveloperSettings)(UEnhancedInputDeveloperSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappingsUsingContext_)(UInputMappingContext_* context, NIM_BOOL bForceImmediately);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, makeInputActionValueOfType_)(NF x, NF y, NF z, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg valueType);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, makeInputActionValue_)(NF x, NF y, NF z, FInputActionValue& matchValueType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActionKeyMappingPlayerMappable_)(FEnhancedActionKeyMapping& actionKeyMapping);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getThirdPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getSecondPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(UPlayerMappableKeySettings_*, getPlayerMappableKeySettings_)(FEnhancedActionKeyMapping& actionKeyMapping);
N_LIB_PRIVATE N_NIMCALL(FName, getMappingName_)(FEnhancedActionKeyMapping& actionKeyMapping);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getFourthPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FPlayerMappableKeySlot, getFirstPlayerMappableKeySlot_)(void);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, getBoundActionValue_)(AActor* actor, UInputAction* action);
N_LIB_PRIVATE N_NIMCALL(FString, conv_InputActionValueToString_)(FInputActionValue actionValue);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, conv_InputActionValueToBool_)(FInputActionValue inValue);
N_LIB_PRIVATE N_NIMCALL(FVector, conv_InputActionValueToAxis3D_)(FInputActionValue actionValue);
N_LIB_PRIVATE N_NIMCALL(FVector2D, conv_InputActionValueToAxis2D_)(FInputActionValue inValue);
N_LIB_PRIVATE N_NIMCALL(NF, conv_InputActionValueToAxis1D_)(FInputActionValue inValue);
N_LIB_PRIVATE N_NIMCALL(void, breakInputActionValue_)(FInputActionValue inActionValue, NF& x, NF& y, NF& z, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg& type_0);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputLibrary)(UEnhancedInputLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__akGNBG0tR9cxS6jqY9cPjDDg*, mappingContextRedirects)(UEnhancedInputPlatformData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmappingContextRedirects)(UEnhancedInputPlatformData_* obj, TY__akGNBG0tR9cxS6jqY9cPjDDg val);
N_LIB_PRIVATE N_NIMCALL(UInputMappingContext_*, getContextRedirect_)(UEnhancedInputPlatformData_* self, UInputMappingContext_* inContext);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputPlatformData)(UEnhancedInputPlatformData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Vl9a1S9a74enmUSPajJNLzGg*, inputData)(UEnhancedInputPlatformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputData)(UEnhancedInputPlatformSettings_* obj, TY__Vl9a1S9a74enmUSPajJNLzGg val);
N_LIB_PRIVATE N_NIMCALL(TY__5VGVoPDWJG1SfBmRkBTYzg*, inputDataClasses)(UEnhancedInputPlatformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputDataClasses)(UEnhancedInputPlatformSettings_* obj, TY__5VGVoPDWJG1SfBmRkBTYzg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldLogMappingContextRedirects)(UEnhancedInputPlatformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldLogMappingContextRedirects)(UEnhancedInputPlatformSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputPlatformSettings)(UEnhancedInputPlatformSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappings_)(UEnhancedInputSubsystemInterface* self, FModifyContextOptions& options, tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA rebuildType);
N_LIB_PRIVATE N_NIMCALL(void, requestRebuildControlMappings_)(UEnhancedInputSubsystemInterface* self, tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA rebuildType);
N_LIB_PRIVATE N_NIMCALL(void, removePlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self, UPlayerMappableInputConfig_* config, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, removePlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self, UPlayerMappableInputConfig_* config);
N_LIB_PRIVATE N_NIMCALL(void, removeMappingContext_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* mappingContext, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, removeMappingContext_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* mappingContext);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllPlayerMappedKeysForMapping_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(NI32, removeAllPlayerMappedKeysForMapping_)(UEnhancedInputSubsystemInterface* self, FName mappingName);
N_LIB_PRIVATE N_NIMCALL(void, removeAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, removeAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ, queryMapKeyInContextSet_)(UEnhancedInputSubsystemInterface* self, TY__lgKFBDQQJ4HcImBX8b3sLA& prioritizedActiveContexts, UInputMappingContext_* inputContext, UInputAction* action, FKey key, TY__bjKA9cg0NSPZszptILQ9bYXg& outIssues, tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ blockingIssues);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ, queryMapKeyInActiveContextSet_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* inputContext, UInputAction* action, FKey key, TY__bjKA9cg0NSPZszptILQ9bYXg& outIssues, tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ blockingIssues);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA, queryKeysMappedToAction_)(UEnhancedInputSubsystemInterface* self, UInputAction* action);
N_LIB_PRIVATE N_NIMCALL(NI32, removePlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FPlayerMappableKeySlot& keySlot, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(NI32, removePlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(FKey, getPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FPlayerMappableKeySlot& keySlot);
N_LIB_PRIVATE N_NIMCALL(FKey, getPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName);
N_LIB_PRIVATE N_NIMCALL(NI32, addPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FKey newKey, FPlayerMappableKeySlot& keySlot, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(NI32, addPlayerMappedKeyInSlot_)(UEnhancedInputSubsystemInterface* self, FName mappingName, FKey newKey, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, injectInputVectorForAction_)(UEnhancedInputSubsystemInterface* self, UInputAction* action, FVector value, TY__c8nNrl0cjgFNa0Q8UPdEvQ& modifiers, TY__FxqDNnZW9amc7oM6Ecl0Hcg& triggers);
N_LIB_PRIVATE N_NIMCALL(void, injectInputForAction_)(UEnhancedInputSubsystemInterface* self, UInputAction* action, FInputActionValue rawValue, TY__c8nNrl0cjgFNa0Q8UPdEvQ& modifiers, TY__FxqDNnZW9amc7oM6Ecl0Hcg& triggers);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMappingContext_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* mappingContext, NI32& outFoundPriority);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA, getAllPlayerMappedKeys_)(UEnhancedInputSubsystemInterface* self, FName mappingName);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getAllPlayerMappableActionKeyMappings_)(UEnhancedInputSubsystemInterface* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAllMappings_)(UEnhancedInputSubsystemInterface* self);
N_LIB_PRIVATE N_NIMCALL(void, addPlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self, UPlayerMappableInputConfig_* config, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, addPlayerMappableConfig_)(UEnhancedInputSubsystemInterface* self, UPlayerMappableInputConfig_* config);
N_LIB_PRIVATE N_NIMCALL(void, addMappingContext_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* mappingContext, NI32 priority, FModifyContextOptions& options);
N_LIB_PRIVATE N_NIMCALL(void, addMappingContext_)(UEnhancedInputSubsystemInterface* self, UInputMappingContext_* mappingContext, NI32 priority);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputSubsystemInterface)(UEnhancedInputSubsystemInterface* fake);
N_LIB_PRIVATE N_NIMCALL(FOnControlMappingsRebuilt_*, controlMappingsRebuiltDelegate)(UEnhancedInputLocalPlayerSubsystem* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontrolMappingsRebuiltDelegate)(UEnhancedInputLocalPlayerSubsystem* obj, FOnControlMappingsRebuilt_* val);
N_LIB_PRIVATE N_NIMCALL(void, onControlMappingsRebuilt_)(UEnhancedInputLocalPlayerSubsystem* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputLocalPlayerSubsystem)(UEnhancedInputLocalPlayerSubsystem* fake);
N_LIB_PRIVATE N_NIMCALL(UEnhancedPlayerInput*, playerInput)(UEnhancedInputWorldSubsystem* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerInput)(UEnhancedInputWorldSubsystem* obj, UEnhancedPlayerInput* val);
N_LIB_PRIVATE N_NIMCALL(TY__iZLNaT1K9bm5EsgMOTsKjcA*, currentInputStack)(UEnhancedInputWorldSubsystem* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentInputStack)(UEnhancedInputWorldSubsystem* obj, TY__iZLNaT1K9bm5EsgMOTsKjcA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeActorInputComponent_)(UEnhancedInputWorldSubsystem* self, AActor* actor);
N_LIB_PRIVATE N_NIMCALL(void, addActorInputComponent_)(UEnhancedInputWorldSubsystem* self, AActor* actor);
N_LIB_PRIVATE N_NIMCALL(void, keepUEnhancedInputWorldSubsystem)(UEnhancedInputWorldSubsystem* fake);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A*, appliedInputContexts)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setappliedInputContexts)(UEnhancedPlayerInput* obj, TY__sOdDuvKiHtt9cumeGPfHn2A val);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA*, enhancedActionMappings)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenhancedActionMappings)(UEnhancedPlayerInput* obj, TY__Rv7KwgUmzu2nlB7yhoSeJA val);
N_LIB_PRIVATE N_NIMCALL(TY__k9aNq3p033XWsku9bV9cgPW9bQ*, actionInstanceData)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactionInstanceData)(UEnhancedPlayerInput* obj, TY__k9aNq3p033XWsku9bV9cgPW9bQ val);
N_LIB_PRIVATE N_NIMCALL(TY__ycORZrEHfDeQwJCU7d1PHg*, keysPressedThisTick)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setkeysPressedThisTick)(UEnhancedPlayerInput* obj, TY__ycORZrEHfDeQwJCU7d1PHg val);
N_LIB_PRIVATE N_NIMCALL(TY__Ofsfce9bTEY1Wuud9a3bLwFQ*, inputsInjectedThisTick)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputsInjectedThisTick)(UEnhancedPlayerInput* obj, TY__Ofsfce9bTEY1Wuud9a3bLwFQ val);
N_LIB_PRIVATE N_NIMCALL(TY__SVxKloj6zDI4NdPm5EhnqQ, lastInjectedActions)(UEnhancedPlayerInput* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlastInjectedActions)(UEnhancedPlayerInput* obj, TY__SVxKloj6zDI4NdPm5EhnqQ val);
N_LIB_PRIVATE N_NIMCALL(FText*, actionDescription)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactionDescription)(UInputAction* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsumeInput)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbConsumeInput)(UInputAction* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTriggerWhenPaused)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTriggerWhenPaused)(UInputAction* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReserveAllMappings)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReserveAllMappings)(UInputAction* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg, valueType)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvalueType)(UInputAction* obj, tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg val);
N_LIB_PRIVATE N_NIMCALL(TY__FxqDNnZW9amc7oM6Ecl0Hcg*, triggers)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggers)(UInputAction* obj, TY__FxqDNnZW9amc7oM6Ecl0Hcg val);
N_LIB_PRIVATE N_NIMCALL(TY__c8nNrl0cjgFNa0Q8UPdEvQ*, modifiers)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmodifiers)(UInputAction* obj, TY__c8nNrl0cjgFNa0Q8UPdEvQ val);
N_LIB_PRIVATE N_NIMCALL(UPlayerMappableKeySettings_*, playerMappableKeySettings)(UInputAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerMappableKeySettings)(UInputAction* obj, UPlayerMappableKeySettings_* val);
N_LIB_PRIVATE N_NIMCALL(TY__SkUL0XwwFFaUKA6OsdzxzA*, inputDebugKeyDelegateBindings)(UInputDebugKeyDelegateBinding_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputDebugKeyDelegateBindings)(UInputDebugKeyDelegateBinding_* obj, TY__SkUL0XwwFFaUKA6OsdzxzA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDebugKeyDelegateBinding)(UInputDebugKeyDelegateBinding_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA*, mappings)(UInputMappingContext_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmappings)(UInputMappingContext_* obj, TY__Rv7KwgUmzu2nlB7yhoSeJA val);
N_LIB_PRIVATE N_NIMCALL(FText*, contextDescription)(UInputMappingContext_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontextDescription)(UInputMappingContext_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(void, unmapKey_)(UInputMappingContext_* self, UInputAction* action, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, unmapAllKeysFromAction_)(UInputMappingContext_* self, UInputAction* action);
N_LIB_PRIVATE N_NIMCALL(void, unmapAll_)(UInputMappingContext_* self);
N_LIB_PRIVATE N_NIMCALL(void, unmapAction_)(UInputMappingContext_* self, UInputAction* action);
N_LIB_PRIVATE N_NIMCALL(FEnhancedActionKeyMapping, mapKey_)(UInputMappingContext_* self, UInputAction* action, FKey toKey);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputMappingContext)(UInputMappingContext_* fake);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue, modifyRaw_)(UInputModifier* self, UEnhancedPlayerInput* playerInput, FInputActionValue currentValue, NF32 deltaTime);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVisualizationColor_)(UInputModifier* self, FInputActionValue sampleValue, FInputActionValue finalValue);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifier)(UInputModifier* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, lowerThreshold)(UInputModifierDeadZone* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlowerThreshold)(UInputModifierDeadZone* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, upperThreshold)(UInputModifierDeadZone* obj);
N_LIB_PRIVATE N_NIMCALL(void, setupperThreshold)(UInputModifierDeadZone* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ, type)(UInputModifierDeadZone* obj);
N_LIB_PRIVATE N_NIMCALL(void, settype)(UInputModifierDeadZone* obj, tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierDeadZone)(UInputModifierDeadZone* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, scalar)(UInputModifierScalar* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscalar)(UInputModifierScalar* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierScalar)(UInputModifierScalar* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierScaleByDeltaTime)(UInputModifierScaleByDeltaTime* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bX)(UInputModifierNegate* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbX)(UInputModifierNegate* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bY)(UInputModifierNegate* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbY)(UInputModifierNegate* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bZ)(UInputModifierNegate* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbZ)(UInputModifierNegate* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierNegate)(UInputModifierNegate* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierSmooth)(UInputModifierSmooth* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, curveExponent)(UInputModifierResponseCurveExponential* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurveExponent)(UInputModifierResponseCurveExponential* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierResponseCurveExponential)(UInputModifierResponseCurveExponential* fake);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseX)(UInputModifierResponseCurveUser* obj);
N_LIB_PRIVATE N_NIMCALL(void, setresponseX)(UInputModifierResponseCurveUser* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseY)(UInputModifierResponseCurveUser* obj);
N_LIB_PRIVATE N_NIMCALL(void, setresponseY)(UInputModifierResponseCurveUser* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, responseZ)(UInputModifierResponseCurveUser* obj);
N_LIB_PRIVATE N_NIMCALL(void, setresponseZ)(UInputModifierResponseCurveUser* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierResponseCurveUser)(UInputModifierResponseCurveUser* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, fOVScale)(UInputModifierFOVScaling* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfOVScale)(UInputModifierFOVScaling* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA, fOVScalingType)(UInputModifierFOVScaling* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfOVScalingType)(UInputModifierFOVScaling* obj, tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierFOVScaling)(UInputModifierFOVScaling* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierToWorldSpace)(UInputModifierToWorldSpace* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g, order)(UInputModifierSwizzleAxis* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorder)(UInputModifierSwizzleAxis* obj, tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputModifierSwizzleAxis)(UInputModifierSwizzleAxis* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, actuationThreshold)(UInputTrigger* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactuationThreshold)(UInputTrigger* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldAlwaysTick)(UInputTrigger* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldAlwaysTick)(UInputTrigger* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FInputActionValue*, lastValue)(UInputTrigger* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlastValue)(UInputTrigger* obj, FInputActionValue val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETriggerState__QCHs7MNqpyKxgNRnJWNtLg, updateState_)(UInputTrigger* self, UEnhancedPlayerInput* playerInput, FInputActionValue modifiedValue, NF32 deltaTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActuated_)(UInputTrigger* self, FInputActionValue& forValue);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETriggerType__Ck7FJArFtrL50IHyr5xiCA, getTriggerType_)(UInputTrigger* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTrigger)(UInputTrigger* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, heldDuration)(UInputTriggerTimedBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheldDuration)(UInputTriggerTimedBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectedByTimeDilation)(UInputTriggerTimedBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectedByTimeDilation)(UInputTriggerTimedBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerTimedBase)(UInputTriggerTimedBase* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerDown)(UInputTriggerDown* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerPressed)(UInputTriggerPressed* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerReleased)(UInputTriggerReleased* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, holdTimeThreshold)(UInputTriggerHold* obj);
N_LIB_PRIVATE N_NIMCALL(void, setholdTimeThreshold)(UInputTriggerHold* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsOneShot)(UInputTriggerHold* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsOneShot)(UInputTriggerHold* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerHold)(UInputTriggerHold* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, holdTimeThreshold)(UInputTriggerHoldAndRelease* obj);
N_LIB_PRIVATE N_NIMCALL(void, setholdTimeThreshold)(UInputTriggerHoldAndRelease* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerHoldAndRelease)(UInputTriggerHoldAndRelease* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, tapReleaseTimeThreshold)(UInputTriggerTap* obj);
N_LIB_PRIVATE N_NIMCALL(void, settapReleaseTimeThreshold)(UInputTriggerTap* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerTap)(UInputTriggerTap* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTriggerOnStart)(UInputTriggerPulse* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTriggerOnStart)(UInputTriggerPulse* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, interval)(UInputTriggerPulse* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterval)(UInputTriggerPulse* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, triggerLimit)(UInputTriggerPulse* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggerLimit)(UInputTriggerPulse* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerPulse)(UInputTriggerPulse* fake);
N_LIB_PRIVATE N_NIMCALL(UInputAction*, chordAction)(UInputTriggerChordAction* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchordAction)(UInputTriggerChordAction* obj, UInputAction* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerChordAction)(UInputTriggerChordAction* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerChordBlocker)(UInputTriggerChordBlocker* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, currentComboStepIndex)(UInputTriggerCombo* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentComboStepIndex)(UInputTriggerCombo* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, currentTimeBetweenComboSteps)(UInputTriggerCombo* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentTimeBetweenComboSteps)(UInputTriggerCombo* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__G0jxsrnIhOE5QUYUpdavEQ*, comboActions)(UInputTriggerCombo* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcomboActions)(UInputTriggerCombo* obj, TY__G0jxsrnIhOE5QUYUpdavEQ val);
N_LIB_PRIVATE N_NIMCALL(TY__6u4iFJ3xvKthNkXqw0X5Hw*, inputCancelActions)(UInputTriggerCombo* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputCancelActions)(UInputTriggerCombo* obj, TY__6u4iFJ3xvKthNkXqw0X5Hw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputTriggerCombo)(UInputTriggerCombo* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, configName)(UPlayerMappableInputConfig_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconfigName)(UPlayerMappableInputConfig_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FText*, configDisplayName)(UPlayerMappableInputConfig_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconfigDisplayName)(UPlayerMappableInputConfig_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsDeprecated)(UPlayerMappableInputConfig_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsDeprecated)(UPlayerMappableInputConfig_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UObject*, metadata)(UPlayerMappableInputConfig_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPlayerMappableInputConfig_* obj, UObject* val);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A*, contexts)(UPlayerMappableInputConfig_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontexts)(UPlayerMappableInputConfig_* obj, TY__sOdDuvKiHtt9cumeGPfHn2A val);
N_LIB_PRIVATE N_NIMCALL(void, resetToDefault_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDeprecated_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getPlayerMappableKeys_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(UObject*, getMetadata_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(TY__sOdDuvKiHtt9cumeGPfHn2A, getMappingContexts_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(FEnhancedActionKeyMapping, getMappingByName_)(UPlayerMappableInputConfig_* self, FName mappingName);
N_LIB_PRIVATE N_NIMCALL(TY__Rv7KwgUmzu2nlB7yhoSeJA, getKeysBoundToAction_)(UPlayerMappableInputConfig_* self, UInputAction* inAction);
N_LIB_PRIVATE N_NIMCALL(FText, getDisplayName_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(FName, getConfigName_)(UPlayerMappableInputConfig_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlayerMappableInputConfig)(UPlayerMappableInputConfig_* fake);
N_LIB_PRIVATE N_NIMCALL(UObject*, metadata)(UPlayerMappableKeySettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPlayerMappableKeySettings_* obj, UObject* val);
N_LIB_PRIVATE N_NIMCALL(FName*, name)(UPlayerMappableKeySettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setname)(UPlayerMappableKeySettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FText*, displayName)(UPlayerMappableKeySettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdisplayName)(UPlayerMappableKeySettings_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, displayCategory)(UPlayerMappableKeySettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdisplayCategory)(UPlayerMappableKeySettings_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlayerMappableKeySettings)(UPlayerMappableKeySettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInputActionValueType)(tyEnum_EInputActionValueType__qmCHf9bZZO7xBJXYMcww9clg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMappingQueryResult)(tyEnum_EMappingQueryResult__SuXFtO6WJMZopuJv1d78NQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMappingQueryIssue)(tyEnum_EMappingQueryIssue__MiFe6z6rfAQIVgY6HJDCpQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPlayerMappableKeySettingBehaviors)(tyEnum_EPlayerMappableKeySettingBehaviors__nt9aQL7DGExZMy0JBJqZ6jw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInputMappingRebuildType)(tyEnum_EInputMappingRebuildType__1IqAPw63ex7sZ0cxVuELBA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDeadZoneType)(tyEnum_EDeadZoneType__H4yVn9chsHw46O4KmbhTskQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEFOVScalingType)(tyEnum_EFOVScalingType__bnmXaZ9bQwuVbgg4nSsKlTA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEInputAxisSwizzle)(tyEnum_EInputAxisSwizzle__dhW9cQnLdogQ8hTsLCFCu3g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETriggerState)(tyEnum_ETriggerState__QCHs7MNqpyKxgNRnJWNtLg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETriggerType)(tyEnum_ETriggerType__Ck7FJArFtrL50IHyr5xiCA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETriggerEventsSupported)(tyEnum_ETriggerEventsSupported__GEMvWt5q7YEiN12UVWvhiQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMappingQueryIssue)(FMappingQueryIssue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPlayerMappableKeySlot)(FPlayerMappableKeySlot fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPlayerMappableKeyOptions)(FPlayerMappableKeyOptions fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEnhancedActionKeyMapping)(FEnhancedActionKeyMapping fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBlueprintEnhancedInputActionBinding)(FBlueprintEnhancedInputActionBinding_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDefaultContextSetting)(FDefaultContextSetting_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFModifyContextOptions)(FModifyContextOptions fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInjectedInputArray)(FInjectedInputArray fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputActionInstance)(FInputActionInstance fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBlueprintInputDebugKeyDelegateBinding)(FBlueprintInputDebugKeyDelegateBinding_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputComboStepData)(FInputComboStepData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputCancelAction)(FInputCancelAction fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepModelingToolsEditorMode)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepEModelingSelectionInteraction_DragMode)(tyEnum_EModelingSelectionInteraction_DragMode__ZjkB3T89aJhVMRBhhJGR64A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModelingModeDefaultMeshObjectType)(tyEnum_EModelingModeDefaultMeshObjectType__E9bdusL461LbQTx6ukyq8iA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModelingModeAssetGenerationBehavior)(tyEnum_EModelingModeAssetGenerationBehavior__nOP7xYo9baHepmKolJAUVEg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEModelingModeAssetGenerationLocation)(tyEnum_EModelingModeAssetGenerationLocation__1Efrkx4hZY9cgxJOVBAzxSw fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUE)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUMyTestActorComponent)(UMyTestActorComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__QJ877IzPgLt9brLepAnlabA*, regularMap)(ATestActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setregularMap)(ATestActor_* obj, TY__QJ877IzPgLt9brLepAnlabA val);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA*, regularArray)(ATestActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setregularArray)(ATestActor_* obj, TY__TxfK2fhRJXNHttPFRcL6fA val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, strArray)(ATestActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrArray)(ATestActor_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA*, objArray)(ATestActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setobjArray)(ATestActor_* obj, TY__meGclu4l9cwnqbgiIjRtfhA val);
N_LIB_PRIVATE N_NIMCALL(TY__gVNwDuZPrClicoyBZbjZRQ*, objMap)(ATestActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setobjMap)(ATestActor_* obj, TY__gVNwDuZPrClicoyBZbjZRQ val);
N_LIB_PRIVATE N_NIMCALL(void, setTestActorLocation_)(ATestActor_* self, FVector newLocation);
N_LIB_PRIVATE N_NIMCALL(void, reproduceStringIssue_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepATestActor)(ATestActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMyTestRegularEnum)(tyEnum_EMyTestRegularEnum__z6lWgQvc4ZfzYzy9aat9c6Lw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMyTestEnumClass)(tyEnum_EMyTestEnumClass__ap2Iap79bGAsbaNaGs9bW08g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMyStructTableRow)(FMyStructTableRow_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUEBindings)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUMyClassToDeriveToTestUFunctions)(UMyClassToDeriveToTestUFunctions_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAUseClassToDeriveToTestFunction)(AUseClassToDeriveToTestFunction_* fake);
N_LIB_PRIVATE N_NIMCALL(FDynamicMulticastDelegateOneParamTest_*, del)(UClassToUseAsVar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdel)(UClassToUseAsVar_* obj, FDynamicMulticastDelegateOneParamTest_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUClassToUseAsVar)(UClassToUseAsVar_* fake);
N_LIB_PRIVATE N_NIMCALL(FDynamicDelegateOneParamTest_*, dynamicDelegateOneParamProperty)(UMyClassToTest_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicDelegateOneParamProperty)(UMyClassToTest_* obj, FDynamicDelegateOneParamTest_* val);
N_LIB_PRIVATE N_NIMCALL(FDynamicMulticastDelegateOneParamTest_*, multicastDynamicDelegateOneParamProperty)(UMyClassToTest_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmulticastDynamicDelegateOneParamProperty)(UMyClassToTest_* obj, FDynamicMulticastDelegateOneParamTest_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMyClassToTest)(UMyClassToTest_* fake);
N_LIB_PRIVATE N_NIMCALL(UClass*, testComp_)(UReflectionHelpers* self);
N_LIB_PRIVATE N_NIMCALL(UStruct*, getUStructByName_)(FString structName);
N_LIB_PRIVATE N_NIMCALL(UScriptStruct*, getScriptStructByName_)(FString structName);
N_LIB_PRIVATE N_NIMCALL(void, keepEMyTestEnum)(tyEnum_EMyTestEnum__ez400sk88IahMAGJcgRJ6Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEMyTestEnum2)(tyEnum_EMyTestEnum2__wQyKoDr32hbGH9b9bGZQHhew fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFStructToUseAsVar)(FStructToUseAsVar_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFStructToUseAsVarDelTest)(FStructToUseAsVarDelTest_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUEEditor)(void);
N_LIB_PRIVATE N_NIMCALL(void, addReloadScriptButtom_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUEditorExtensions)(UEditorExtensions_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUEGame)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimForUETest)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepANimForUETestTestActor)(ANimForUETestTestActor_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepNimTemplate)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepPCG)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineComponents)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, componentTags)(UActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcomponentTags)(UActorComponent* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateUsingRegisteredSubObjectList)(UActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateUsingRegisteredSubObjectList)(UActorComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicates)(UActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicates)(UActorComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoActivate)(UActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoActivate)(UActorComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsEditorOnly)(UActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsEditorOnly)(UActorComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, toggleActive_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, setTickGroup_)(UActorComponent* self, tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw newTickGroup);
N_LIB_PRIVATE N_NIMCALL(void, setTickableWhenPaused_)(UActorComponent* self, NIM_BOOL bTickableWhenPaused);
N_LIB_PRIVATE N_NIMCALL(void, setIsReplicated_)(UActorComponent* self, NIM_BOOL shouldReplicate);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickIntervalAndCooldown_)(UActorComponent* self, NF32 tickInterval);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickInterval_)(UActorComponent* self, NF32 tickInterval);
N_LIB_PRIVATE N_NIMCALL(void, setComponentTickEnabled_)(UActorComponent* self, NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setAutoActivate_)(UActorComponent* self, NIM_BOOL bNewAutoActivate);
N_LIB_PRIVATE N_NIMCALL(void, setActive_)(UActorComponent* self, NIM_BOOL bNewActive, NIM_BOOL bReset);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteComponent_)(UActorComponent* self, UActorComponent* prerequisiteComponent);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteActor_)(UActorComponent* self, AActor* prerequisiteActor);
N_LIB_PRIVATE N_NIMCALL(void, destroyComponent_)(UActorComponent* self, UObject* object_0);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isComponentTickEnabled_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBeingDestroyed_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwner_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getComponentTickInterval_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, deactivate_)(UActorComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, componentHasTag_)(UActorComponent* self, FName tag);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteComponent_)(UActorComponent* self, UActorComponent* prerequisiteComponent);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteActor_)(UActorComponent* self, AActor* prerequisiteActor);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(UActorComponent* self, NIM_BOOL bReset);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeLocation)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeLocation)(USceneComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, relativeRotation)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeRotation)(USceneComponent* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(FVector*, relativeScale3D)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelativeScale3D)(USceneComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteLocation)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteLocation)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteRotation)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteRotation)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteScale)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteScale)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisible)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbVisible)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldUpdatePhysicsVolume)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldUpdatePhysicsVolume)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHiddenInGame)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHiddenInGame)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAttachParentBound)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAttachParentBound)(USceneComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg, mobility)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmobility)(USceneComponent* obj, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g, detailMode)(USceneComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdetailMode)(USceneComponent* obj, tyEnum_EDetailMode__mNuj0CR9ccekVdjUDhkDg8g val);
N_LIB_PRIVATE N_NIMCALL(void, toggleVisibility_)(USceneComponent* self, NIM_BOOL bPropagateToChildren);
N_LIB_PRIVATE N_NIMCALL(void, setWorldScale3D_)(USceneComponent* self, FVector newScale);
N_LIB_PRIVATE N_NIMCALL(void, setVisibility_)(USceneComponent* self, NIM_BOOL bNewVisibility, NIM_BOOL bPropagateToChildren);
N_LIB_PRIVATE N_NIMCALL(void, setShouldUpdatePhysicsVolume_)(USceneComponent* self, NIM_BOOL bInShouldUpdatePhysicsVolume);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeScale3D_)(USceneComponent* self, FVector newScale3D);
N_LIB_PRIVATE N_NIMCALL(void, setMobility_)(USceneComponent* self, tyEnum_EComponentMobility__PMkuWRUkJQ21whE7h2ugGg newMobility);
N_LIB_PRIVATE N_NIMCALL(void, setHiddenInGame_)(USceneComponent* self, NIM_BOOL newHidden, NIM_BOOL bPropagateToChildren);
N_LIB_PRIVATE N_NIMCALL(void, setAbsolute_)(USceneComponent* self, NIM_BOOL bNewAbsoluteLocation, NIM_BOOL bNewAbsoluteRotation, NIM_BOOL bNewAbsoluteScale);
N_LIB_PRIVATE N_NIMCALL(void, resetRelativeTransform_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, setWorldTransform_)(USceneComponent* self, FTransform& newTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setWorldRotation_)(USceneComponent* self, FRotator newRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocationAndRotation_)(USceneComponent* self, FVector newLocation, FRotator newRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocation_)(USceneComponent* self, FVector newLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeTransform_)(USceneComponent* self, FTransform& newTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeRotation_)(USceneComponent* self, FRotator newRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeLocationAndRotation_)(USceneComponent* self, FVector newLocation, FRotator newRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setRelativeLocation_)(USceneComponent* self, FVector newLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(FTransform, getComponentToWorld_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentScale_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getComponentRotation_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentLocation_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, detachFromComponent_)(USceneComponent* self, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg locationRule, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg rotationRule, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg scaleRule, NIM_BOOL bCallModify);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToComponent_)(USceneComponent* self, USceneComponent* parent, FName socketName, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachTo_)(USceneComponent* self, USceneComponent* inParent, FName inSocketName, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachType, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(void, addWorldTransformKeepScale_)(USceneComponent* self, FTransform& deltaTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addWorldTransform_)(USceneComponent* self, FTransform& deltaTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addWorldRotation_)(USceneComponent* self, FRotator deltaRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addWorldOffset_)(USceneComponent* self, FVector deltaLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addRelativeRotation_)(USceneComponent* self, FRotator deltaRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addRelativeLocation_)(USceneComponent* self, FVector deltaLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addLocalTransform_)(USceneComponent* self, FTransform& deltaTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addLocalRotation_)(USceneComponent* self, FRotator deltaRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addLocalOffset_)(USceneComponent* self, FVector deltaLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSimulatingPhysics_)(USceneComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnySimulatingPhysics_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVector_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getSocketTransform_)(USceneComponent* self, FName inSocketName, tyEnum_ERelativeTransformSpace__SP35ggqlhgdAFoiyxcw8gg transformSpace);
N_LIB_PRIVATE N_NIMCALL(FRotator, getSocketRotation_)(USceneComponent* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(FQuat, getSocketQuaternion_)(USceneComponent* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(FVector, getSocketLocation_)(USceneComponent* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getShouldUpdatePhysicsVolume_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVector_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getRelativeTransform_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, getParentComponents_)(USceneComponent* self, TY__7Q1qw9bMtL8Ptbe5C3movyA& parents);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumChildrenComponents_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getForwardVector_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getComponentVelocity_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, getChildrenComponents_)(USceneComponent* self, NIM_BOOL bIncludeAllDescendants, TY__7Q1qw9bMtL8Ptbe5C3movyA& children);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, getChildComponent_)(USceneComponent* self, NI32 childIndex);
N_LIB_PRIVATE N_NIMCALL(FName, getAttachSocketName_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, getAttachParent_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getAllSocketNames_)(USceneComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesSocketExist_)(USceneComponent* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(void, detachFromParent_)(USceneComponent* self, NIM_BOOL bMaintainWorldPosition, NIM_BOOL bCallModify);
N_LIB_PRIVATE N_NIMCALL(NF32, minDrawDistance)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDrawDistance)(UPrimitiveComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lDMaxDrawDistance)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlDMaxDrawDistance)(UPrimitiveComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cachedMaxDrawDistance)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedMaxDrawDistance)(UPrimitiveComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ, indirectLightingCacheQuality)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setindirectLightingCacheQuality)(UPrimitiveComponent* obj, tyEnum_EIndirectLightingCacheQuality__JFaXAhYnVqMvm7Dwb4Y2xQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ, lightmapType)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightmapType)(UPrimitiveComponent* obj, tyEnum_ELightmapType__QFK7aleBNAt39aZUBxclfyQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw, hLODBatchingPolicy)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethLODBatchingPolicy)(UPrimitiveComponent* obj, tyEnum_EHLODBatchingPolicy__XfpT9c9c1ZrbWPM49ciYbL9cPw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableAutoLODGeneration)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableAutoLODGeneration)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNeverDistanceCull)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNeverDistanceCull)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysCreatePhysicsState)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysCreatePhysicsState)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGenerateOverlapEvents)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerateOverlapEvents)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMultiBodyOverlap)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMultiBodyOverlap)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTraceComplexOnMove)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTraceComplexOnMove)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReturnMaterialOnMove)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReturnMaterialOnMove)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowCullDistanceVolume)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowCullDistanceVolume)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInReflectionCaptures)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInReflectionCaptures)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInRealTimeSkyCaptures)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInRealTimeSkyCaptures)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInRayTracing)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInRayTracing)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderInMainPass)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderInMainPass)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderInDepthPass)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderInDepthPass)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReceivesDecals)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReceivesDecals)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHoldout)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHoldout)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOwnerNoSee)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOwnerNoSee)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOnlyOwnerSee)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOnlyOwnerSee)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTreatAsBackgroundForOcclusion)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTreatAsBackgroundForOcclusion)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAsOccluder)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAsOccluder)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceMipStreaming)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceMipStreaming)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NU8, castShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastShadow)(UPrimitiveComponent* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEmissiveLightSource)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEmissiveLightSource)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDynamicIndirectLighting)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDynamicIndirectLighting)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectIndirectLightingWhileHidden)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectIndirectLightingWhileHidden)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDistanceFieldLighting)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDistanceFieldLighting)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDynamicShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDynamicShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastStaticShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastStaticShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastVolumetricTranslucentShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastVolumetricTranslucentShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastContactShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastContactShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSelfShadowOnly)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSelfShadowOnly)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastFarShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastFarShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastInsetShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastInsetShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCinematicShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCinematicShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastHiddenShadow)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastHiddenShadow)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowAsTwoSided)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowAsTwoSided)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLightAttachmentsAsGroup)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLightAttachmentsAsGroup)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExcludeFromLightAttachmentGroup)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExcludeFromLightAttachmentGroup)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReceiveMobileCSMShadows)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReceiveMobileCSMShadows)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSingleSampleShadowFromStationaryLights)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSingleSampleShadowFromStationaryLights)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreRadialImpulse)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreRadialImpulse)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreRadialForce)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreRadialForce)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyImpulseOnDamage)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyImpulseOnDamage)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicatePhysicsToAutonomousProxy)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicatePhysicsToAutonomousProxy)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderCustomDepth)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderCustomDepth)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bVisibleInSceneCaptureOnly)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbVisibleInSceneCaptureOnly)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHiddenInSceneCapture)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHiddenInSceneCapture)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStaticWhenNotMoveable)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStaticWhenNotMoveable)(UPrimitiveComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ, canCharacterStepUpOn)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcanCharacterStepUpOn)(UPrimitiveComponent* obj, tyEnum_ECanBeCharacterBase__xKBKnbvgvudShL5sifKepQ val);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(UPrimitiveComponent* obj, FLightingChannels val);
N_LIB_PRIVATE N_NIMCALL(NI32, rayTracingGroupId)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayTracingGroupId)(UPrimitiveComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, customDepthStencilValue)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomDepthStencilValue)(UPrimitiveComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, translucencySortPriority)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settranslucencySortPriority)(UPrimitiveComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, translucencySortDistanceOffset)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settranslucencySortDistanceOffset)(UPrimitiveComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw, virtualTextureRenderPassType)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureRenderPassType)(UPrimitiveComponent* obj, tyEnum_ERuntimeVirtualTextureMainPassType__gIPsfMOGgn2Q0NOaATVPRw val);
N_LIB_PRIVATE N_NIMCALL(FBodyInstance*, bodyInstance)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbodyInstance)(UPrimitiveComponent* obj, FBodyInstance val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA, rayTracingGroupCullingPriority)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayTracingGroupCullingPriority)(UPrimitiveComponent* obj, tyEnum_ERayTracingGroupCullingPriority__S13TUf8Bm4RLaxCnc4tKwA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A, customDepthStencilWriteMask)(UPrimitiveComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomDepthStencilWriteMask)(UPrimitiveComponent* obj, tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasRecentlyRendered_)(UPrimitiveComponent* self, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(void, wakeRigidBody_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, wakeAllRigidBodies_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableSlopeOverride_)(UPrimitiveComponent* self, FWalkableSlopeOverride& newOverride);
N_LIB_PRIVATE N_NIMCALL(void, setVisibleInSceneCaptureOnly_)(UPrimitiveComponent* self, NIM_BOOL bValue);
N_LIB_PRIVATE N_NIMCALL(void, setVisibleInRayTracing_)(UPrimitiveComponent* self, NIM_BOOL bNewVisibleInRayTracing);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterForDefaultCustomPrimitiveData_)(UPrimitiveComponent* self, FName parameterName, FVector4 value);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterForCustomPrimitiveData_)(UPrimitiveComponent* self, FName parameterName, FVector4 value);
N_LIB_PRIVATE N_NIMCALL(void, setUseCCD_)(UPrimitiveComponent* self, NIM_BOOL inUseCCD, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setTranslucentSortPriority_)(UPrimitiveComponent* self, NI32 newTranslucentSortPriority);
N_LIB_PRIVATE N_NIMCALL(void, setTranslucencySortDistanceOffset_)(UPrimitiveComponent* self, NF32 newTranslucencySortDistanceOffset);
N_LIB_PRIVATE N_NIMCALL(void, setStaticWhenNotMoveable_)(UPrimitiveComponent* self, NIM_BOOL bInStaticWhenNotMoveable);
N_LIB_PRIVATE N_NIMCALL(void, setSingleSampleShadowFromStationaryLights_)(UPrimitiveComponent* self, NIM_BOOL bNewSingleSampleShadowFromStationaryLights);
N_LIB_PRIVATE N_NIMCALL(void, setSimulatePhysics_)(UPrimitiveComponent* self, NIM_BOOL bSimulate);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterForDefaultCustomPrimitiveData_)(UPrimitiveComponent* self, FName parameterName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterForCustomPrimitiveData_)(UPrimitiveComponent* self, FName parameterName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setRenderInMainPass_)(UPrimitiveComponent* self, NIM_BOOL bValue);
N_LIB_PRIVATE N_NIMCALL(void, setRenderInDepthPass_)(UPrimitiveComponent* self, NIM_BOOL bValue);
N_LIB_PRIVATE N_NIMCALL(void, setRenderCustomDepth_)(UPrimitiveComponent* self, NIM_BOOL bValue);
N_LIB_PRIVATE N_NIMCALL(void, setReceivesDecals_)(UPrimitiveComponent* self, NIM_BOOL bNewReceivesDecals);
N_LIB_PRIVATE N_NIMCALL(void, setPhysMaterialOverride_)(UPrimitiveComponent* self, UPhysicalMaterial* newPhysMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsMaxAngularVelocityInRadians_)(UPrimitiveComponent* self, NF32 newMaxAngVel, NIM_BOOL bAddToCurrent, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsMaxAngularVelocityInDegrees_)(UPrimitiveComponent* self, NF32 newMaxAngVel, NIM_BOOL bAddToCurrent, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsLinearVelocity_)(UPrimitiveComponent* self, FVector newVel, NIM_BOOL bAddToCurrent, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self, FVector newAngVel, NIM_BOOL bAddToCurrent, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self, FVector newAngVel, NIM_BOOL bAddToCurrent, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setOwnerNoSee_)(UPrimitiveComponent* self, NIM_BOOL bNewOwnerNoSee);
N_LIB_PRIVATE N_NIMCALL(void, setOnlyOwnerSee_)(UPrimitiveComponent* self, NIM_BOOL bNewOnlyOwnerSee);
N_LIB_PRIVATE N_NIMCALL(void, setNotifyRigidBodyCollision_)(UPrimitiveComponent* self, NIM_BOOL bNewNotifyRigidBodyCollision);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialByName_)(UPrimitiveComponent* self, FName materialSlotName, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UPrimitiveComponent* self, NI32 elementIndex, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, setMassScale_)(UPrimitiveComponent* self, FName boneName, NF32 inMassScale);
N_LIB_PRIVATE N_NIMCALL(void, setMassOverrideInKg_)(UPrimitiveComponent* self, FName boneName, NF32 massInKg, NIM_BOOL bOverrideMass);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDamping_)(UPrimitiveComponent* self, NF32 inDamping);
N_LIB_PRIVATE N_NIMCALL(void, setLightingChannels_)(UPrimitiveComponent* self, NIM_BOOL bChannel0, NIM_BOOL bChannel1, NIM_BOOL bChannel2);
N_LIB_PRIVATE N_NIMCALL(void, setLightAttachmentsAsGroup_)(UPrimitiveComponent* self, NIM_BOOL bInLightAttachmentsAsGroup);
N_LIB_PRIVATE N_NIMCALL(void, setHoldout_)(UPrimitiveComponent* self, NIM_BOOL bNewHoldout);
N_LIB_PRIVATE N_NIMCALL(void, setHiddenInSceneCapture_)(UPrimitiveComponent* self, NIM_BOOL bValue);
N_LIB_PRIVATE N_NIMCALL(void, setGenerateOverlapEvents_)(UPrimitiveComponent* self, NIM_BOOL bInGenerateOverlapEvents);
N_LIB_PRIVATE N_NIMCALL(void, setExcludeFromLightAttachmentGroup_)(UPrimitiveComponent* self, NIM_BOOL bInExcludeFromLightAttachmentGroup);
N_LIB_PRIVATE N_NIMCALL(void, setExcludeForSpecificHLODLevels_)(UPrimitiveComponent* self, TY__TxfK2fhRJXNHttPFRcL6fA& inExcludeForSpecificHLODLevels);
N_LIB_PRIVATE N_NIMCALL(void, setExcludedFromHLODLevel_)(UPrimitiveComponent* self, tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ hLODLevel, NIM_BOOL bExcluded);
N_LIB_PRIVATE N_NIMCALL(void, setEnableGravity_)(UPrimitiveComponent* self, NIM_BOOL bGravityEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setEmissiveLightSource_)(UPrimitiveComponent* self, NIM_BOOL newEmissiveLightSource);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector4_)(UPrimitiveComponent* self, NI32 dataIndex, FVector4 value);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector3_)(UPrimitiveComponent* self, NI32 dataIndex, FVector value);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataVector2_)(UPrimitiveComponent* self, NI32 dataIndex, FVector2D value);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultCustomPrimitiveDataFloat_)(UPrimitiveComponent* self, NI32 dataIndex, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector4_)(UPrimitiveComponent* self, NI32 dataIndex, FVector4 value);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector3_)(UPrimitiveComponent* self, NI32 dataIndex, FVector value);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataVector2_)(UPrimitiveComponent* self, NI32 dataIndex, FVector2D value);
N_LIB_PRIVATE N_NIMCALL(void, setCustomPrimitiveDataFloat_)(UPrimitiveComponent* self, NI32 dataIndex, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setCustomDepthStencilWriteMask_)(UPrimitiveComponent* self, tyEnum_ERendererStencilMask__w59aef9cblrPtbZ1hKkQOM1A writeMaskBit);
N_LIB_PRIVATE N_NIMCALL(void, setCustomDepthStencilValue_)(UPrimitiveComponent* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setCullDistance_)(UPrimitiveComponent* self, NF32 newCullDistance);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintMode_)(UPrimitiveComponent* self, tyEnum_EDOFMode__Ae5jNwUvq1zlHN6TSX1GFA constraintMode);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionResponseToChannel_)(UPrimitiveComponent* self, ECollisionChannel channel, tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA newResponse);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionResponseToAllChannels_)(UPrimitiveComponent* self, tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA newResponse);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionProfileName_)(UPrimitiveComponent* self, FName inCollisionProfileName, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionObjectType_)(UPrimitiveComponent* self, ECollisionChannel channel);
N_LIB_PRIVATE N_NIMCALL(void, setCollisionEnabled_)(UPrimitiveComponent* self, tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q newType);
N_LIB_PRIVATE N_NIMCALL(void, setCenterOfMass_)(UPrimitiveComponent* self, FVector centerOfMassOffset, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadow_)(UPrimitiveComponent* self, NIM_BOOL newCastShadow);
N_LIB_PRIVATE N_NIMCALL(void, setCastInsetShadow_)(UPrimitiveComponent* self, NIM_BOOL bInCastInsetShadow);
N_LIB_PRIVATE N_NIMCALL(void, setCastHiddenShadow_)(UPrimitiveComponent* self, NIM_BOOL newCastHiddenShadow);
N_LIB_PRIVATE N_NIMCALL(void, setCastContactShadow_)(UPrimitiveComponent* self, NIM_BOOL bInCastContactShadow);
N_LIB_PRIVATE N_NIMCALL(void, setBoundsScale_)(UPrimitiveComponent* self, NF32 newBoundsScale);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDamping_)(UPrimitiveComponent* self, NF32 inDamping);
N_LIB_PRIVATE N_NIMCALL(void, setAllUseCCD_)(UPrimitiveComponent* self, NIM_BOOL inUseCCD);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsLinearVelocity_)(UPrimitiveComponent* self, FVector newVel, NIM_BOOL bAddToCurrent);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self, FVector& newAngVel, NIM_BOOL bAddToCurrent);
N_LIB_PRIVATE N_NIMCALL(void, setAllPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self, FVector& newAngVel, NIM_BOOL bAddToCurrent);
N_LIB_PRIVATE N_NIMCALL(void, setAllMassScale_)(UPrimitiveComponent* self, NF32 inMassScale);
N_LIB_PRIVATE N_NIMCALL(void, setAffectIndirectLightingWhileHidden_)(UPrimitiveComponent* self, NIM_BOOL bNewAffectIndirectLightingWhileHidden);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDynamicIndirectLighting_)(UPrimitiveComponent* self, NIM_BOOL bNewAffectDynamicIndirectLighting);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDistanceFieldLighting_)(UPrimitiveComponent* self, NIM_BOOL newAffectDistanceFieldLighting);
N_LIB_PRIVATE N_NIMCALL(FVector, scaleByMomentOfInertia_)(UPrimitiveComponent* self, FVector inputVector, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, putRigidBodyToSleep_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereTraceComponent_)(UPrimitiveComponent* self, FVector traceStart, FVector traceEnd, NF32 sphereRadius, NIM_BOOL bTraceComplex, NIM_BOOL bShowTrace, NIM_BOOL bPersistentShowTrace, FVector& hitLocation, FVector& hitNormal, FName& boneName, FHitResult& outHit);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sphereOverlapComponent_)(UPrimitiveComponent* self, FVector inSphereCentre, NF32 inSphereRadius, NIM_BOOL bTraceComplex, NIM_BOOL bShowTrace, NIM_BOOL bPersistentShowTrace, FVector& hitLocation, FVector& hitNormal, FName& boneName, FHitResult& outHit);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineTraceComponent_)(UPrimitiveComponent* self, FVector traceStart, FVector traceEnd, NIM_BOOL bTraceComplex, NIM_BOOL bShowTrace, NIM_BOOL bPersistentShowTrace, FVector& hitLocation, FVector& hitNormal, FName& boneName, FHitResult& outHit);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isQueryCollisionEnabled_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPhysicsCollisionEnabled_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCollisionEnabled_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boxOverlapComponent_)(UPrimitiveComponent* self, FVector inBoxCentre, FBox inBox, NIM_BOOL bTraceComplex, NIM_BOOL bShowTrace, NIM_BOOL bPersistentShowTrace, FVector& hitLocation, FVector& hitNormal, FName& boneName, FHitResult& outHit);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingComponent_)(UPrimitiveComponent* self, UPrimitiveComponent* otherComp);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingActor_)(UPrimitiveComponent* self, AActor* other);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGravityEnabled_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isExcludedFromHLODLevel_)(UPrimitiveComponent* self, tyEnum_EHLODLevelExclusion__9apH2qTs9aGOkeEcUfS5ycIQ hLODLevel);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyRigidBodyAwake_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, invalidateLumenSurfaceCache_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, ignoreComponentWhenMoving_)(UPrimitiveComponent* self, UPrimitiveComponent* component, NIM_BOOL bShouldIgnore);
N_LIB_PRIVATE N_NIMCALL(void, ignoreActorWhenMoving_)(UPrimitiveComponent* self, AActor* actor, NIM_BOOL bShouldIgnore);
N_LIB_PRIVATE N_NIMCALL(FWalkableSlopeOverride, getWalkableSlopeOverride_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStaticWhenNotMoveable_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsLinearVelocityAtPoint_)(UPrimitiveComponent* self, FVector point, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsLinearVelocity_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsAngularVelocityInRadians_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FVector, getPhysicsAngularVelocityInDegrees_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingComponents_)(UPrimitiveComponent* self, TY__RN0jXIbC9cvfWt68iswDSAw& outOverlappingComponents);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingActors_)(UPrimitiveComponent* self, TY__kbK03O9cVTTS0GR9cjPhedTg& overlappingActors, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumMaterials_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterialFromCollisionFaceIndex_)(UPrimitiveComponent* self, NI32 faceIndex, NI32& sectionIndex);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getMaterial_)(UPrimitiveComponent* self, NI32 elementIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getMassScale_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NF32, getMass_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getLinearDamping_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getInertiaTensor_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGenerateOverlapEvents_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getExcludeForSpecificHLODLevels_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getCustomPrimitiveDataIndexForVectorParameter_)(UPrimitiveComponent* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(NI32, getCustomPrimitiveDataIndexForScalarParameter_)(UPrimitiveComponent* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECollisionResponse__MTs1yq0ZAW5w9bcxHRDdT9aA, getCollisionResponseToChannel_)(UPrimitiveComponent* self, ECollisionChannel channel);
N_LIB_PRIVATE N_NIMCALL(FName, getCollisionProfileName_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, getCollisionObjectType_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECollisionEnabled__z4whbh5RBhNwMFAleJ0t8Q, getCollisionEnabled_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getClosestPointOnCollision_)(UPrimitiveComponent* self, FVector& point, FVector& outPointOnBody, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FVector, getCenterOfMass_)(UPrimitiveComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FBodyInstanceAsyncPhysicsTickHandle, getBodyInstanceAsyncPhysicsTickHandle_)(UPrimitiveComponent* self, FName boneName, NIM_BOOL bGetWelded, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NF32, getAngularDamping_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UPrimitiveComponent* self, NI32 elementIndex, UMaterialInterface* sourceMaterial, FName optionalName);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createAndSetMaterialInstanceDynamicFromMaterial_)(UPrimitiveComponent* self, NI32 elementIndex, UMaterialInterface* parent);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createAndSetMaterialInstanceDynamic_)(UPrimitiveComponent* self, NI32 elementIndex);
N_LIB_PRIVATE N_NIMCALL(TY__RN0jXIbC9cvfWt68iswDSAw, copyArrayOfMoveIgnoreComponents_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, copyArrayOfMoveIgnoreActors_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMoveIgnoreComponents_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMoveIgnoreActors_)(UPrimitiveComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canCharacterStepUp_)(UPrimitiveComponent* self, APawn* pawn);
N_LIB_PRIVATE N_NIMCALL(void, addVelocityChangeImpulseAtLocation_)(UPrimitiveComponent* self, FVector impulse, FVector location, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, addTorqueInRadians_)(UPrimitiveComponent* self, FVector torque, FName boneName, NIM_BOOL bAccelChange);
N_LIB_PRIVATE N_NIMCALL(void, addTorqueInDegrees_)(UPrimitiveComponent* self, FVector torque, FName boneName, NIM_BOOL bAccelChange);
N_LIB_PRIVATE N_NIMCALL(void, addRadialImpulse_)(UPrimitiveComponent* self, FVector origin, NF32 radius, NF32 strength, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg falloff, NIM_BOOL bVelChange);
N_LIB_PRIVATE N_NIMCALL(void, addRadialForce_)(UPrimitiveComponent* self, FVector origin, NF32 radius, NF32 strength, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg falloff, NIM_BOOL bAccelChange);
N_LIB_PRIVATE N_NIMCALL(void, addImpulseAtLocation_)(UPrimitiveComponent* self, FVector impulse, FVector location, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, addImpulse_)(UPrimitiveComponent* self, FVector impulse, FName boneName, NIM_BOOL bVelChange);
N_LIB_PRIVATE N_NIMCALL(void, addForceAtLocationLocal_)(UPrimitiveComponent* self, FVector force, FVector location, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, addForceAtLocation_)(UPrimitiveComponent* self, FVector force, FVector location, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(UPrimitiveComponent* self, FVector force, FName boneName, NIM_BOOL bAccelChange);
N_LIB_PRIVATE N_NIMCALL(void, addAngularImpulseInRadians_)(UPrimitiveComponent* self, FVector impulse, FName boneName, NIM_BOOL bVelChange);
N_LIB_PRIVATE N_NIMCALL(void, addAngularImpulseInDegrees_)(UPrimitiveComponent* self, FVector impulse, FName boneName, NIM_BOOL bVelChange);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, overlayMaterial)(UMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayMaterial)(UMeshComponent* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(NF32, overlayMaterialMaxDrawDistance)(UMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayMaterialMaxDrawDistance)(UMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMaterialParameterCaching)(UMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMaterialParameterCaching)(UMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameterValueOnMaterials_)(UMeshComponent* self, FName parameterName, FVector parameterValue);
N_LIB_PRIVATE N_NIMCALL(void, setScalarParameterValueOnMaterials_)(UMeshComponent* self, FName parameterName, NF32 parameterValue);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayMaterialMaxDrawDistance_)(UMeshComponent* self, NF32 inMaxDrawDistance);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayMaterial_)(UMeshComponent* self, UMaterialInterface* newOverlayMaterial);
N_LIB_PRIVATE N_NIMCALL(void, prestreamTextures_)(UMeshComponent* self, NF32 seconds, NIM_BOOL bPrioritizeCharacterTextures, NI32 cinematicTextureGroups);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMaterialSlotNameValid_)(UMeshComponent* self, FName materialSlotName);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getOverlayMaterial_)(UMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getMaterialSlotNames_)(UMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__UxQQNE4PCeF9btDY9avFuEmA, getMaterials_)(UMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaterialIndex_)(UMeshComponent* self, FName materialSlotName);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLodModel)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLodModel)(UStaticMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, minLOD)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminLOD)(UStaticMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(UStaticMesh*, staticMesh)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMesh)(UStaticMeshComponent* obj, UStaticMesh* val);
N_LIB_PRIVATE N_NIMCALL(FColor*, wireframeColorOverride)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwireframeColorOverride)(UStaticMeshComponent* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisallowNanite)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisallowNanite)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEvaluateWorldPositionOffset)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEvaluateWorldPositionOffset)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEvaluateWorldPositionOffsetInRayTracing)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEvaluateWorldPositionOffsetInRayTracing)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, worldPositionOffsetDisableDistance)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworldPositionOffsetDisableDistance)(UStaticMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideWireframeColor)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideWireframeColor)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideMinLOD)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideMinLOD)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisallowMeshPaintPerInstance)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisallowMeshPaintPerInstance)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreInstanceForTextureStreaming)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreInstanceForTextureStreaming)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLightMapRes)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLightMapRes)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDistanceFieldIndirectShadow)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDistanceFieldIndirectShadow)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideDistanceFieldSelfShadowBias)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideDistanceFieldSelfShadowBias)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSortTriangles)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSortTriangles)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReverseCulling)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReverseCulling)(UStaticMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, overriddenLightMapRes)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverriddenLightMapRes)(UStaticMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldIndirectShadowMinVisibility)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldIndirectShadowMinVisibility)(UStaticMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldSelfShadowBias)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldSelfShadowBias)(UStaticMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, streamingDistanceMultiplier)(UStaticMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingDistanceMultiplier)(UStaticMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setStaticMesh_)(UStaticMeshComponent* self, UStaticMesh* newMesh);
N_LIB_PRIVATE N_NIMCALL(void, setReverseCulling_)(UStaticMeshComponent* self, NIM_BOOL reverseCulling);
N_LIB_PRIVATE N_NIMCALL(void, setForcedLodModel_)(UStaticMeshComponent* self, NI32 newForcedLodModel);
N_LIB_PRIVATE N_NIMCALL(void, setForceDisableNanite_)(UStaticMeshComponent* self, NIM_BOOL bInForceDisableNanite);
N_LIB_PRIVATE N_NIMCALL(void, setEvaluateWorldPositionOffsetInRayTracing_)(UStaticMeshComponent* self, NIM_BOOL newValue);
N_LIB_PRIVATE N_NIMCALL(void, setEvaluateWorldPositionOffset_)(UStaticMeshComponent* self, NIM_BOOL newValue);
N_LIB_PRIVATE N_NIMCALL(void, setDistanceFieldSelfShadowBias_)(UStaticMeshComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, getLocalBounds_)(UStaticMeshComponent* self, FVector& min, FVector& max);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getInitialEvaluateWorldPositionOffset_)(UStaticMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, skeletalMesh)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMesh)(USkinnedMeshComponent* obj, USkeletalMesh* val);
N_LIB_PRIVATE N_NIMCALL(USkinnedAsset*, skinnedAsset)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskinnedAsset)(USkinnedMeshComponent* obj, USkinnedAsset* val);
N_LIB_PRIVATE N_NIMCALL(TY__TroUwqr83BUH9a7zjBn89bmg, leaderPoseComponent)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setleaderPoseComponent)(USkinnedMeshComponent* obj, TY__TroUwqr83BUH9a7zjBn89bmg val);
N_LIB_PRIVATE N_NIMCALL(TY__wYMJCrtNG2j9b9bmJG11m7FA*, skinCacheUsage)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskinCacheUsage)(USkinnedMeshComponent* obj, TY__wYMJCrtNG2j9b9bmJG11m7FA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetMeshDeformer)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSetMeshDeformer)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformer_*, meshDeformer)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformer)(USkinnedMeshComponent* obj, UMeshDeformer_* val);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstanceSettings_*, meshDeformerInstanceSettings)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformerInstanceSettings)(USkinnedMeshComponent* obj, UMeshDeformerInstanceSettings_* val);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstance_*, meshDeformerInstance)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshDeformerInstance)(USkinnedMeshComponent* obj, UMeshDeformerInstance_* val);
N_LIB_PRIVATE N_NIMCALL(UPhysicsAsset*, physicsAssetOverride)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsAssetOverride)(USkinnedMeshComponent* obj, UPhysicsAsset* val);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLodModel)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLodModel)(USkinnedMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, minLodModel)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminLodModel)(USkinnedMeshComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, streamingDistanceMultiplier)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingDistanceMultiplier)(USkinnedMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog, visibilityBasedAnimTickOption)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvisibilityBasedAnimTickOption)(USkinnedMeshComponent* obj, tyEnum_EVisibilityBasedAnimTickOption__8VrvnYwzIDdZJWi309bpqog val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideMinLod)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideMinLod)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseBoundsFromLeaderPoseComponent)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseBoundsFromLeaderPoseComponent)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableMorphTarget)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableMorphTarget)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPerBoneMotionBlur)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPerBoneMotionBlur)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bComponentUseFixedSkelBounds)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbComponentUseFixedSkelBounds)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsiderAllBodiesForBounds)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbConsiderAllBodiesForBounds)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSyncAttachParentLOD)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSyncAttachParentLOD)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCapsuleDirectShadow)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCapsuleDirectShadow)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCapsuleIndirectShadow)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCapsuleIndirectShadow)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableUpdateRateOptimizations)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableUpdateRateOptimizations)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisplayDebugUpdateRateOptimizations)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisplayDebugUpdateRateOptimizations)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRenderStatic)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRenderStatic)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreLeaderPoseComponentLOD)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreLeaderPoseComponentLOD)(USkinnedMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleIndirectShadowMinVisibility)(USkinnedMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleIndirectShadowMinVisibility)(USkinnedMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, unsetMeshDeformer_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, unloadSkinWeightProfile_)(USkinnedMeshComponent* self, FName inProfileName);
N_LIB_PRIVATE N_NIMCALL(void, unHideBoneByName_)(USkinnedMeshComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, transformToBoneSpace_)(USkinnedMeshComponent* self, FName boneName, FVector inPosition, FRotator inRotation, FVector& outPosition, FRotator& outRotation);
N_LIB_PRIVATE N_NIMCALL(void, transformFromBoneSpace_)(USkinnedMeshComponent* self, FName boneName, FVector inPosition, FRotator inRotation, FVector& outPosition, FRotator& outRotation);
N_LIB_PRIVATE N_NIMCALL(void, showMaterialSection_)(USkinnedMeshComponent* self, NI32 materialID, NI32 sectionIndex, NIM_BOOL bShow, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(void, showAllMaterialSections_)(USkinnedMeshComponent* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(void, setVertexOffsetUsage_)(USkinnedMeshComponent* self, NI32 lODIndex, NI32 usage);
N_LIB_PRIVATE N_NIMCALL(void, setVertexColorOverride_LinearColor_)(USkinnedMeshComponent* self, NI32 lODIndex, TY__LIN349biVKUmlJo9abXyib3Q& vertexColors);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setSkinWeightProfile_)(USkinnedMeshComponent* self, FName inProfileName);
N_LIB_PRIVATE N_NIMCALL(void, setSkinWeightOverride_)(USkinnedMeshComponent* self, NI32 lODIndex, TY__PF9cKY57TwRad2X4MD2NIXg& skinWeights);
N_LIB_PRIVATE N_NIMCALL(void, setSkinnedAssetAndUpdate_)(USkinnedMeshComponent* self, USkinnedAsset* newMesh, NIM_BOOL bReinitPose);
N_LIB_PRIVATE N_NIMCALL(void, setRenderStatic_)(USkinnedMeshComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setPreSkinningOffsets_)(USkinnedMeshComponent* self, NI32 lODIndex, TY__Bz8EFFwaAOJiUrMHOIgVGw offsets);
N_LIB_PRIVATE N_NIMCALL(void, setPostSkinningOffsets_)(USkinnedMeshComponent* self, NI32 lODIndex, TY__Bz8EFFwaAOJiUrMHOIgVGw offsets);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsAsset_)(USkinnedMeshComponent* self, UPhysicsAsset* newPhysicsAsset, NIM_BOOL bForceReInit);
N_LIB_PRIVATE N_NIMCALL(void, setMinLOD_)(USkinnedMeshComponent* self, NI32 inNewMinLOD);
N_LIB_PRIVATE N_NIMCALL(void, setMeshDeformer_)(USkinnedMeshComponent* self, UMeshDeformer_* inMeshDeformer);
N_LIB_PRIVATE N_NIMCALL(void, setLeaderPoseComponent_)(USkinnedMeshComponent* self, USkinnedMeshComponent* newLeaderBoneComponent, NIM_BOOL bForceUpdate, NIM_BOOL bInFollowerShouldTickPose);
N_LIB_PRIVATE N_NIMCALL(void, setForcedLOD_)(USkinnedMeshComponent* self, NI32 inNewForcedLOD);
N_LIB_PRIVATE N_NIMCALL(void, setCastCapsuleIndirectShadow_)(USkinnedMeshComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastCapsuleDirectShadow_)(USkinnedMeshComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleIndirectShadowMinVisibility_)(USkinnedMeshComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUsingSkinWeightProfile_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMaterialSectionShown_)(USkinnedMeshComponent* self, NI32 materialID, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBoneHiddenByName_)(USkinnedMeshComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, hideBoneByName_)(USkinnedMeshComponent* self, FName boneName, tyEnum_EPhysBodyOp__ZRipZLaIbTXziX2enGnveA physBodyOption);
N_LIB_PRIVATE N_NIMCALL(NI32, getVertexOffsetUsage_)(USkinnedMeshComponent* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTwistAndSwingAngleOfDeltaRotationFromRefPose_)(USkinnedMeshComponent* self, FName boneName, NF32& outTwistAngle, NF32& outSwingAngle);
N_LIB_PRIVATE N_NIMCALL(FName, getSocketBoneName_)(USkinnedMeshComponent* self, FName inSocketName);
N_LIB_PRIVATE N_NIMCALL(USkinnedAsset*, getSkinnedAsset_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, getSkeletalMesh_DEPRECATED_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getRefPoseTransform_)(USkinnedMeshComponent* self, NI32 boneIndex);
N_LIB_PRIVATE N_NIMCALL(FVector, getRefPosePosition_)(USkinnedMeshComponent* self, NI32 boneIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, getPredictedLODLevel_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FName, getParentBone_)(USkinnedMeshComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumLODs_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumBones_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(UMeshDeformerInstance_*, getMeshDeformerInstance_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getForcedLOD_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getDeltaTransformFromRefPose_)(USkinnedMeshComponent* self, FName boneName, FName baseName);
N_LIB_PRIVATE N_NIMCALL(FName, getCurrentSkinWeightProfileName_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FName, getBoneName_)(USkinnedMeshComponent* self, NI32 boneIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, getBoneIndex_)(USkinnedMeshComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(FName, findClosestBone_K2_)(USkinnedMeshComponent* self, FVector testLocation, FVector& boneLocation, NF32 ignoreScale, NIM_BOOL bRequirePhysicsAsset);
N_LIB_PRIVATE N_NIMCALL(void, clearVertexColorOverride_)(USkinnedMeshComponent* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(void, clearSkinWeightProfile_)(USkinnedMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, clearSkinWeightOverride_)(USkinnedMeshComponent* self, NI32 lODIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, boneIsChildOf_)(USkinnedMeshComponent* self, FName boneName, FName parentBoneName);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, skeletalMeshAsset)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMeshAsset)(USkeletalMeshComponent* obj, USkeletalMesh* val);
N_LIB_PRIVATE N_NIMCALL(FSingleAnimationPlayData*, animationData)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setanimationData)(USkeletalMeshComponent* obj, FSingleAnimationPlayData val);
N_LIB_PRIVATE N_NIMCALL(NF32, globalAnimRateScale)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAnimRateScale)(USkeletalMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg, kinematicBonesUpdateType)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setkinematicBonesUpdateType)(USkeletalMeshComponent* obj, tyEnum_EKinematicBonesUpdateToPhysics__XcNWU7IVxKyj79b8Gpz0vmg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ, physicsTransformUpdateMode)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphysicsTransformUpdateMode)(USkeletalMeshComponent* obj, tyEnum_EPhysicsTransformUpdateMode__QH5Jj60f3HDpLduPoGYrVQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA, animationMode)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setanimationMode)(USkeletalMeshComponent* obj, tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisablePostProcessBlueprint)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisablePostProcessBlueprint)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePhysicsOnDedicatedServer)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePhysicsOnDedicatedServer)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateMeshWhenKinematic)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateMeshWhenKinematic)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateJointsFromAnimation)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateJointsFromAnimation)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowClothActors)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowClothActors)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableClothSimulation)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableClothSimulation)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCollideWithEnvironment)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCollideWithEnvironment)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCollideWithAttachedChildren)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCollideWithAttachedChildren)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceCollisionUpdate)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceCollisionUpdate)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLocalSpaceSimulation)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLocalSpaceSimulation)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bResetAfterTeleport)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbResetAfterTeleport)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDeferKinematicBoneUpdate)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDeferKinematicBoneUpdate)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoSkeletonUpdate)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNoSkeletonUpdate)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseAnims)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseAnims)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePerPolyCollision)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePerPolyCollision)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIncludeComponentLocationIntoBounds)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIncludeComponentLocationIntoBounds)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPropagateCurvesToFollowers)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPropagateCurvesToFollowers)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSkipKinematicUpdateWhenInterpolating)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSkipKinematicUpdateWhenInterpolating)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSkipBoundsUpdateWhenInterpolating)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSkipBoundsUpdateWhenInterpolating)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, clothBlendWeight)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclothBlendWeight)(USkeletalMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWaitForParallelClothTask)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWaitForParallelClothTask)(USkeletalMeshComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, clothMaxDistanceScale)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclothMaxDistanceScale)(USkeletalMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, teleportDistanceThreshold)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setteleportDistanceThreshold)(USkeletalMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, teleportRotationThreshold)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setteleportRotationThreshold)(USkeletalMeshComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, defaultAnimatingRigOverride)(USkeletalMeshComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAnimatingRigOverride)(USkeletalMeshComponent* obj, TY__9b5kQ3g2w5CXovAbu5D6pTg val);
N_LIB_PRIVATE N_NIMCALL(void, unbindClothFromLeaderPoseComponent_)(USkeletalMeshComponent* self, NIM_BOOL bRestoreSimulationSpace);
N_LIB_PRIVATE N_NIMCALL(void, toggleDisablePostProcessBlueprint_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, termBodiesBelow_)(USkeletalMeshComponent* self, FName parentBoneName);
N_LIB_PRIVATE N_NIMCALL(void, suspendClothingSimulation_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, snapshotPose_)(USkeletalMeshComponent* self, FPoseSnapshot& snapshot);
N_LIB_PRIVATE N_NIMCALL(void, setUpdateClothInEditor_)(USkeletalMeshComponent* self, NIM_BOOL newUpdateState);
N_LIB_PRIVATE N_NIMCALL(void, setUpdateAnimationInEditor_)(USkeletalMeshComponent* self, NIM_BOOL newUpdateState);
N_LIB_PRIVATE N_NIMCALL(void, setTeleportRotationThreshold_)(USkeletalMeshComponent* self, NF32 threshold);
N_LIB_PRIVATE N_NIMCALL(void, setTeleportDistanceThreshold_)(USkeletalMeshComponent* self, NF32 threshold);
N_LIB_PRIVATE N_NIMCALL(void, setSkeletalMeshAsset_)(USkeletalMeshComponent* self, USkeletalMesh* newMesh);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(USkeletalMeshComponent* self, NF32 inPos, NIM_BOOL bFireNotifies);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(USkeletalMeshComponent* self, NF32 rate);
N_LIB_PRIVATE N_NIMCALL(void, setPhysicsBlendWeight_)(USkeletalMeshComponent* self, NF32 physicsBlendWeight);
N_LIB_PRIVATE N_NIMCALL(void, setNotifyRigidBodyCollisionBelow_)(USkeletalMeshComponent* self, NIM_BOOL bNewNotifyRigidBodyCollision, FName boneName, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTarget_)(USkeletalMeshComponent* self, FName morphTargetName, NF32 value, NIM_BOOL bRemoveZeroWeight);
N_LIB_PRIVATE N_NIMCALL(void, setEnablePhysicsBlending_)(USkeletalMeshComponent* self, NIM_BOOL bNewBlendPhysics);
N_LIB_PRIVATE N_NIMCALL(void, setEnableGravityOnAllBodiesBelow_)(USkeletalMeshComponent* self, NIM_BOOL bEnableGravity, FName boneName, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, setEnableBodyGravity_)(USkeletalMeshComponent* self, NIM_BOOL bEnableGravity, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setDisablePostProcessBlueprint_)(USkeletalMeshComponent* self, NIM_BOOL bInDisablePostProcess);
N_LIB_PRIVATE N_NIMCALL(void, setDisableAnimCurves_)(USkeletalMeshComponent* self, NIM_BOOL bInDisableAnimCurves);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultAnimatingRigOverride_)(USkeletalMeshComponent* self, TY__9b5kQ3g2w5CXovAbu5D6pTg inAnimatingRig);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintProfileForAll_)(USkeletalMeshComponent* self, FName profileName, NIM_BOOL bDefaultIfNotFound);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintProfile_)(USkeletalMeshComponent* self, FName jointName, FName profileName, NIM_BOOL bDefaultIfNotFound);
N_LIB_PRIVATE N_NIMCALL(void, setClothMaxDistanceScale_)(USkeletalMeshComponent* self, NF32 scale);
N_LIB_PRIVATE N_NIMCALL(void, setBodyNotifyRigidBodyCollision_)(USkeletalMeshComponent* self, NIM_BOOL bNewNotifyRigidBodyCollision, FName boneName);
N_LIB_PRIVATE N_NIMCALL(void, setAnimClass_)(USkeletalMeshComponent* self, UClass* newClass);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationMode_)(USkeletalMeshComponent* self, tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA inAnimationMode);
N_LIB_PRIVATE N_NIMCALL(void, setAnimation_)(USkeletalMeshComponent* self, UAnimationAsset* newAnimToPlay);
N_LIB_PRIVATE N_NIMCALL(void, setAngularLimits_)(USkeletalMeshComponent* self, FName inBoneName, NF32 swing1LimitAngle, NF32 twistLimitAngle, NF32 swing2LimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, setAllowRigidBodyAnimNode_)(USkeletalMeshComponent* self, NIM_BOOL bInAllow, NIM_BOOL bReinitAnim);
N_LIB_PRIVATE N_NIMCALL(void, setAllowedAnimCurvesEvaluation_)(USkeletalMeshComponent* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& list, NIM_BOOL bAllow);
N_LIB_PRIVATE N_NIMCALL(void, setAllowClothActors_)(USkeletalMeshComponent* self, NIM_BOOL bInAllow);
N_LIB_PRIVATE N_NIMCALL(void, setAllowAnimCurveEvaluation_)(USkeletalMeshComponent* self, NIM_BOOL bInAllow);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularVelocityDrive_)(USkeletalMeshComponent* self, NIM_BOOL bEnableSwingDrive, NIM_BOOL bEnableTwistDrive, NIM_BOOL bSkipCustomPhysicsType);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularPositionDrive_)(USkeletalMeshComponent* self, NIM_BOOL bEnableSwingDrive, NIM_BOOL bEnableTwistDrive, NIM_BOOL bSkipCustomPhysicsType);
N_LIB_PRIVATE N_NIMCALL(void, setAllMotorsAngularDriveParams_)(USkeletalMeshComponent* self, NF32 inSpring, NF32 inDamping, NF32 inForceLimit, NIM_BOOL bSkipCustomPhysicsType);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesSimulatePhysics_)(USkeletalMeshComponent* self, NIM_BOOL bNewSimulate);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesPhysicsBlendWeight_)(USkeletalMeshComponent* self, NF32 physicsBlendWeight, NIM_BOOL bSkipCustomPhysicsType);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowSimulatePhysics_)(USkeletalMeshComponent* self, FName& inBoneName, NIM_BOOL bNewSimulate, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowPhysicsDisabled_)(USkeletalMeshComponent* self, FName& inBoneName, NIM_BOOL bDisabled, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowPhysicsBlendWeight_)(USkeletalMeshComponent* self, FName& inBoneName, NF32 physicsBlendWeight, NIM_BOOL bSkipCustomPhysicsType, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, setAllBodiesBelowLinearVelocity_)(USkeletalMeshComponent* self, FName& inBoneName, FVector& linearVelocity, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, resumeClothingSimulation_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, resetClothTeleportMode_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, resetAnimInstanceDynamics_)(USkeletalMeshComponent* self, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw inTeleportType);
N_LIB_PRIVATE N_NIMCALL(void, resetAllowedAnimCurveEvaluation_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, resetAllBodiesSimulatePhysics_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, playAnimation_)(USkeletalMeshComponent* self, UAnimationAsset* newAnimToPlay, NIM_BOOL bLooping);
N_LIB_PRIVATE N_NIMCALL(void, play_)(USkeletalMeshComponent* self, NIM_BOOL bLooping);
N_LIB_PRIVATE N_NIMCALL(void, overrideAnimationData_)(USkeletalMeshComponent* self, UAnimationAsset* inAnimToPlay, NIM_BOOL bIsLooping, NIM_BOOL bIsPlaying, NF32 position, NF32 playRate);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getClosestPointOnPhysicsAsset_)(USkeletalMeshComponent* self, FVector& worldPosition, FVector& closestWorldPosition, FVector& normal, FName& boneName, NF32& distance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isClothingSimulationSuspended_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBodyGravityEnabled_)(USkeletalMeshComponent* self, FName boneName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasValidAnimationInstance_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformAttribute_Ref_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, FTransform& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTransformAttribute_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, FTransform defaultValue, FTransform& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NF32, getTeleportRotationThreshold_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getTeleportDistanceThreshold_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStringAttribute_Ref_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, FString& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getStringAttribute_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, FString defaultValue, FString& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(USkeletalMesh*, getSkeletalMeshAsset_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getSkeletalCenterOfMass_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPosition_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayRate_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMorphTarget_)(USkeletalMeshComponent* self, FName morphTargetName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntegerAttribute_Ref_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, NI32& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIntegerAttribute_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, NI32 defaultValue, NI32& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFloatAttribute_Ref_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, NF32& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getFloatAttribute_)(USkeletalMeshComponent* self, FName& boneName, FName& attributeName, NF32 defaultValue, NF32& outValue, tyEnum_ECustomBoneAttributeLookup__8vo50ffKmCrVo9cp9acr4sRg lookupType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisablePostProcessBlueprint_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDisableAnimCurves_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRigOverride_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__9b5kQ3g2w5CXovAbu5D6pTg, getDefaultAnimatingRig_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, getCurrentJointAngles_)(USkeletalMeshComponent* self, FName inBoneName, NF32& swing1Angle, NF32& twistAngle, NF32& swing2Angle);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintsFromBody_)(USkeletalMeshComponent* self, FName bodyName, NIM_BOOL bParentConstraints, NIM_BOOL bChildConstraints, NIM_BOOL bIncludesTerminated, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints);
N_LIB_PRIVATE N_NIMCALL(void, getConstraints_)(USkeletalMeshComponent* self, NIM_BOOL bIncludesTerminated, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByName_)(USkeletalMeshComponent* self, FName constraintName, NIM_BOOL bIncludesTerminated, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(NF32, getClothMaxDistanceScale_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoneMass_)(USkeletalMeshComponent* self, FName boneName, NIM_BOOL bScaleMass);
N_LIB_PRIVATE N_NIMCALL(FVector, getBoneLinearVelocity_)(USkeletalMeshComponent* self, FName& inBoneName);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAnimationMode__sHefRVNLP7eTD8ODDj9b3yA, getAnimationMode_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowRigidBodyAnimNode_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowedAnimCurveEvaluate_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAllowClothActors_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, forceClothNextUpdateTeleportAndReset_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, forceClothNextUpdateTeleport_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(FName, findConstraintBoneName_)(USkeletalMeshComponent* self, NI32 constraintIndex);
N_LIB_PRIVATE N_NIMCALL(void, clearMorphTargets_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, breakConstraint_)(USkeletalMeshComponent* self, FVector impulse, FVector hitLocation, FName inBoneName);
N_LIB_PRIVATE N_NIMCALL(void, bindClothToLeaderPoseComponent_)(USkeletalMeshComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, allowAnimCurveEvaluation_)(USkeletalMeshComponent* self, FName nameOfCurve, NIM_BOOL bAllow);
N_LIB_PRIVATE N_NIMCALL(void, addImpulseToAllBodiesBelow_)(USkeletalMeshComponent* self, FVector impulse, FName boneName, NIM_BOOL bVelChange, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, addForceToAllBodiesBelow_)(USkeletalMeshComponent* self, FVector force, FName boneName, NIM_BOOL bAccelChange, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, accumulateAllBodiesBelowPhysicsBlendWeight_)(USkeletalMeshComponent* self, FName& inBoneName, NF32 addPhysicsBlendWeight, NIM_BOOL bSkipCustomPhysicsType);
N_LIB_PRIVATE N_NIMCALL(NI32, instancingRandomSeed)(UInstancedStaticMeshComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstancingRandomSeed)(UInstancedStaticMeshComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, instanceStartCullDistance)(UInstancedStaticMeshComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceStartCullDistance)(UInstancedStaticMeshComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, instanceEndCullDistance)(UInstancedStaticMeshComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceEndCullDistance)(UInstancedStaticMeshComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, updateInstanceTransform_)(UInstancedStaticMeshComponent_* self, NI32 instanceIndex, FTransform& newInstanceTransform, NIM_BOOL bWorldSpace, NIM_BOOL bMarkRenderStateDirty, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setCustomDataValue_)(UInstancedStaticMeshComponent_* self, NI32 instanceIndex, NI32 customDataIndex, NF32 customDataValue, NIM_BOOL bMarkRenderStateDirty);
N_LIB_PRIVATE N_NIMCALL(void, setCullDistances_)(UInstancedStaticMeshComponent_* self, NI32 startCullDistance, NI32 endCullDistance);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeInstances_)(UInstancedStaticMeshComponent_* self, TY__TxfK2fhRJXNHttPFRcL6fA& instancesToRemove);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeInstance_)(UInstancedStaticMeshComponent_* self, NI32 instanceIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidInstance_)(UInstancedStaticMeshComponent_* self, NI32 instanceIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getInstanceTransform_)(UInstancedStaticMeshComponent_* self, NI32 instanceIndex, FTransform& outInstanceTransform, NIM_BOOL bWorldSpace);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getInstancesOverlappingSphere_)(UInstancedStaticMeshComponent_* self, FVector& center, NF32 radius, NIM_BOOL bSphereInWorldSpace);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, getInstancesOverlappingBox_)(UInstancedStaticMeshComponent_* self, FBox& box, NIM_BOOL bBoxInWorldSpace);
N_LIB_PRIVATE N_NIMCALL(NI32, getInstanceCount_)(UInstancedStaticMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearInstances_)(UInstancedStaticMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, batchUpdateInstancesTransforms_)(UInstancedStaticMeshComponent_* self, NI32 startInstanceIndex, TY__ZRKjvD0LxpBKI8XAOc3PKg& newInstancesTransforms, NIM_BOOL bWorldSpace, NIM_BOOL bMarkRenderStateDirty, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, batchUpdateInstancesTransform_)(UInstancedStaticMeshComponent_* self, NI32 startInstanceIndex, NI32 numInstances, FTransform& newInstancesTransform, NIM_BOOL bWorldSpace, NIM_BOOL bMarkRenderStateDirty, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NI32, addInstanceWorldSpace_)(UInstancedStaticMeshComponent_* self, FTransform& worldTransform);
N_LIB_PRIVATE N_NIMCALL(TY__TxfK2fhRJXNHttPFRcL6fA, addInstances_)(UInstancedStaticMeshComponent_* self, TY__ZRKjvD0LxpBKI8XAOc3PKg& instanceTransforms, NIM_BOOL bShouldReturnIndices, NIM_BOOL bWorldSpace);
N_LIB_PRIVATE N_NIMCALL(NI32, addInstance_)(UInstancedStaticMeshComponent_* self, FTransform& instanceTransform, NIM_BOOL bWorldSpace);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg, reflectionSourceType)(UReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreflectionSourceType)(UReflectionCaptureComponent_* obj, tyEnum_EReflectionSourceType__zeNlT7RVc0xsy6R6Epc9cSg val);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, cubemap)(UReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcubemap)(UReflectionCaptureComponent_* obj, UTextureCube_* val);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceCubemapAngle)(UReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceCubemapAngle)(UReflectionCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brightness)(UReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrightness)(UReflectionCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, captureOffset)(UReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureOffset)(UReflectionCaptureComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, boxTransitionDistance)(UBoxReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboxTransitionDistance)(UBoxReflectionCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUBoxReflectionCaptureComponent)(UBoxReflectionCaptureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, fogDensity)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfogDensity)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fogHeightFalloff)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfogHeightFalloff)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FExponentialHeightFogData_*, secondFogData)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsecondFogData)(UExponentialHeightFogComponent_* obj, FExponentialHeightFogData_ val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, fogInscatteringLuminance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfogInscatteringLuminance)(UExponentialHeightFogComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, skyAtmosphereAmbientContributionColorScale)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskyAtmosphereAmbientContributionColorScale)(UExponentialHeightFogComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, inscatteringColorCubemap)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringColorCubemap)(UExponentialHeightFogComponent_* obj, UTextureCube_* val);
N_LIB_PRIVATE N_NIMCALL(NF32, inscatteringColorCubemapAngle)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringColorCubemapAngle)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, inscatteringTextureTint)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinscatteringTextureTint)(UExponentialHeightFogComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, fullyDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfullyDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, nonDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnonDirectionalInscatteringColorDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, directionalInscatteringExponent)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringExponent)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, directionalInscatteringStartDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringStartDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, directionalInscatteringLuminance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdirectionalInscatteringLuminance)(UExponentialHeightFogComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, fogMaxOpacity)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfogMaxOpacity)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, startDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fogCutoffDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfogCutoffDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableVolumetricFog)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableVolumetricFog)(UExponentialHeightFogComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogScatteringDistribution)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogScatteringDistribution)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, volumetricFogAlbedo)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogAlbedo)(UExponentialHeightFogComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, volumetricFogEmissive)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogEmissive)(UExponentialHeightFogComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogExtinctionScale)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogExtinctionScale)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogStartDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogStartDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogNearFadeInDistance)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogNearFadeInDistance)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricFogStaticLightingScatteringIntensity)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricFogStaticLightingScatteringIntensity)(UExponentialHeightFogComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLightColorsWithFogInscatteringColors)(UExponentialHeightFogComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLightColorsWithFogInscatteringColors)(UExponentialHeightFogComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogScatteringDistribution_)(UExponentialHeightFogComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogExtinctionScale_)(UExponentialHeightFogComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogEmissive_)(UExponentialHeightFogComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogDistance_)(UExponentialHeightFogComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFogAlbedo_)(UExponentialHeightFogComponent_* self, FColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricFog_)(UExponentialHeightFogComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setStartDistance_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogHeightOffset_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogHeightFalloff_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogDensity_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setSecondFogData_)(UExponentialHeightFogComponent_* self, FExponentialHeightFogData_ newValue);
N_LIB_PRIVATE N_NIMCALL(void, setNonDirectionalInscatteringColorDistance_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringTextureTint_)(UExponentialHeightFogComponent_* self, FLinearColor value);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringColorCubemapAngle_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setInscatteringColorCubemap_)(UExponentialHeightFogComponent_* self, UTextureCube_* value);
N_LIB_PRIVATE N_NIMCALL(void, setFullyDirectionalInscatteringColorDistance_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFogMaxOpacity_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFogInscatteringColor_)(UExponentialHeightFogComponent_* self, FLinearColor value);
N_LIB_PRIVATE N_NIMCALL(void, setFogHeightFalloff_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFogDensity_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFogCutoffDistance_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringStartDistance_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringExponent_)(UExponentialHeightFogComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDirectionalInscatteringColor_)(UExponentialHeightFogComponent_* self, FLinearColor value);
N_LIB_PRIVATE N_NIMCALL(NF32, intensity)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setintensity)(ULightComponentBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, lightColor)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightColor)(ULightComponentBase* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectsWorld)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectsWorld)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NU8, castShadows)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastShadows)(ULightComponentBase* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NU8, castStaticShadows)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastStaticShadows)(ULightComponentBase* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NU8, castDynamicShadows)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastDynamicShadows)(ULightComponentBase* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectTranslucentLighting)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectTranslucentLighting)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTransmission)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTransmission)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastVolumetricShadow)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastVolumetricShadow)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastDeepShadow)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastDeepShadow)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg, castRaytracedShadow)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastRaytracedShadow)(ULightComponentBase* obj, tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectReflection)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectReflection)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectGlobalIllumination)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectGlobalIllumination)(ULightComponentBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, deepShadowLayerDistribution)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeepShadowLayerDistribution)(ULightComponentBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, indirectLightingIntensity)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setindirectLightingIntensity)(ULightComponentBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricScatteringIntensity)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricScatteringIntensity)(ULightComponentBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, samplesPerPixel)(ULightComponentBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsamplesPerPixel)(ULightComponentBase* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setSamplesPerPixel_)(ULightComponentBase* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastVolumetricShadow_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastShadows_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastRaytracedShadows_)(ULightComponentBase* self, tyEnum_ECastRayTracedShadow__iIKk9cdO2jJOuYu1j5EDXJg bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastRaytracedShadow_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setCastDeepShadow_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setAffectReflection_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setAffectGlobalIllumination_)(ULightComponentBase* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLightColor_)(ULightComponentBase* self);
N_LIB_PRIVATE N_NIMCALL(void, keepULightmassPortalComponent)(ULightmassPortalComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA, primitiveRenderMode)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprimitiveRenderMode)(USceneCaptureComponent_* obj, tyEnum_ESceneCapturePrimitiveRenderMode__xFe7PGm6IfuezuM8FDO6aA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw, captureSource)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureSource)(USceneCaptureComponent_* obj, tyEnum_ESceneCaptureSource__4KnF9a47YhUiDCb6NN2ujpw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureEveryFrame)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureEveryFrame)(USceneCaptureComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureOnMovement)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureOnMovement)(USceneCaptureComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysPersistRenderingState)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysPersistRenderingState)(USceneCaptureComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, hiddenActors)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethiddenActors)(USceneCaptureComponent_* obj, TY__kbK03O9cVTTS0GR9cjPhedTg val);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, showOnlyActors)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshowOnlyActors)(USceneCaptureComponent_* obj, TY__kbK03O9cVTTS0GR9cjPhedTg val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxViewDistanceOverride)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxViewDistanceOverride)(USceneCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, captureSortPriority)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcaptureSortPriority)(USceneCaptureComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRayTracingIfEnabled)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRayTracingIfEnabled)(USceneCaptureComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__AJALGMHKFGHcjpT3h8NRJw*, showFlagSettings)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshowFlagSettings)(USceneCaptureComponent_* obj, TY__AJALGMHKFGHcjpT3h8NRJw val);
N_LIB_PRIVATE N_NIMCALL(FString, profilingEventName)(USceneCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprofilingEventName)(USceneCaptureComponent_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(void, showOnlyComponent_)(USceneCaptureComponent_* self, UPrimitiveComponent* inComponent);
N_LIB_PRIVATE N_NIMCALL(void, showOnlyActorComponents_)(USceneCaptureComponent_* self, AActor* inActor, NIM_BOOL bIncludeFromChildActors);
N_LIB_PRIVATE N_NIMCALL(void, setCaptureSortPriority_)(USceneCaptureComponent_* self, NI32 newCaptureSortPriority);
N_LIB_PRIVATE N_NIMCALL(void, removeShowOnlyComponent_)(USceneCaptureComponent_* self, UPrimitiveComponent* inComponent);
N_LIB_PRIVATE N_NIMCALL(void, removeShowOnlyActorComponents_)(USceneCaptureComponent_* self, AActor* inActor, NIM_BOOL bIncludeFromChildActors);
N_LIB_PRIVATE N_NIMCALL(void, hideComponent_)(USceneCaptureComponent_* self, UPrimitiveComponent* inComponent);
N_LIB_PRIVATE N_NIMCALL(void, hideActorComponents_)(USceneCaptureComponent_* self, AActor* inActor, NIM_BOOL bIncludeFromChildActors);
N_LIB_PRIVATE N_NIMCALL(void, clearShowOnlyComponents_)(USceneCaptureComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearHiddenComponents_)(USceneCaptureComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, influenceRadiusScale)(UPlaneReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinfluenceRadiusScale)(UPlaneReflectionCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlaneReflectionCaptureComponent)(UPlaneReflectionCaptureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw, projectionType)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionType)(USceneCaptureComponent2D_* obj, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw val);
N_LIB_PRIVATE N_NIMCALL(NF32, fOVAngle)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfOVAngle)(USceneCaptureComponent2D_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoWidth)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorthoWidth)(USceneCaptureComponent2D_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, textureTarget)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextureTarget)(USceneCaptureComponent2D_* obj, UTextureRenderTarget2D_* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg, compositeMode)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompositeMode)(USceneCaptureComponent2D_* obj, tyEnum_ESceneCaptureCompositeMode__p02ZaR6S9ck7mVLDSmZjXfg val);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, postProcessSettings)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessSettings)(USceneCaptureComponent2D_* obj, FPostProcessSettings val);
N_LIB_PRIVATE N_NIMCALL(NF32, postProcessBlendWeight)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessBlendWeight)(USceneCaptureComponent2D_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, customNearClippingPlane)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomNearClippingPlane)(USceneCaptureComponent2D_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseCustomProjectionMatrix)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseCustomProjectionMatrix)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FMatrix*, customProjectionMatrix)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomProjectionMatrix)(USceneCaptureComponent2D_* obj, FMatrix val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFauxOrthoViewPos)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFauxOrthoViewPos)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableOrthographicTiling)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableOrthographicTiling)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, numXTiles)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumXTiles)(USceneCaptureComponent2D_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, numYTiles)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumYTiles)(USceneCaptureComponent2D_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableClipPlane)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableClipPlane)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector*, clipPlaneBase)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclipPlaneBase)(USceneCaptureComponent2D_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, clipPlaneNormal)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclipPlaneNormal)(USceneCaptureComponent2D_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCameraCutThisFrame)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCameraCutThisFrame)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConsiderUnrenderedOpaquePixelAsFullyTranslucent)(USceneCaptureComponent2D_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbConsiderUnrenderedOpaquePixelAsFullyTranslucent)(USceneCaptureComponent2D_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, removeBlendable_)(USceneCaptureComponent2D_* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject);
N_LIB_PRIVATE N_NIMCALL(void, captureScene_)(USceneCaptureComponent2D_* self);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(USceneCaptureComponent2D_* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject, NF32 inWeight);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTargetCube_*, textureTarget)(USceneCaptureComponentCube_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextureTarget)(USceneCaptureComponentCube_* obj, UTextureRenderTargetCube_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureRotation)(USceneCaptureComponentCube_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureRotation)(USceneCaptureComponentCube_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, captureScene_)(USceneCaptureComponentCube_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRealTimeCapture)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRealTimeCapture)(USkyLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A, sourceType)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceType)(USkyLightComponent_* obj, tyEnum_ESkyLightSourceType__BPkJlajdvpfUDv5nKpiq6A val);
N_LIB_PRIVATE N_NIMCALL(UTextureCube_*, cubemap)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcubemap)(USkyLightComponent_* obj, UTextureCube_* val);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceCubemapAngle)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceCubemapAngle)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, cubemapResolution)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcubemapResolution)(USkyLightComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, skyDistanceThreshold)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskyDistanceThreshold)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCaptureEmissiveOnly)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCaptureEmissiveOnly)(USkyLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLowerHemisphereIsBlack)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLowerHemisphereIsBlack)(USkyLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, lowerHemisphereColor)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlowerHemisphereColor)(USkyLightComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionMaxDistance)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionMaxDistance)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, contrast)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontrast)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionExponent)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionExponent)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minOcclusion)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminOcclusion)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, occlusionTint)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionTint)(USkyLightComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCloudAmbientOcclusion)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCloudAmbientOcclusion)(USkyLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionStrength)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionStrength)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionExtent)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionExtent)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionMapResolutionScale)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionMapResolutionScale)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudAmbientOcclusionApertureScale)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudAmbientOcclusionApertureScale)(USkyLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg, occlusionCombineMode)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionCombineMode)(USkyLightComponent_* obj, tyEnum_EOcclusionCombineMode__1206KYGFHWiw29b589b6F9axg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowIlluminanceMeter)(USkyLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowIlluminanceMeter)(USkyLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricScatteringIntensity_)(USkyLightComponent_* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setSourceCubemapAngle_)(USkyLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionTint_)(USkyLightComponent_* self, FColor& inTint);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionExponent_)(USkyLightComponent_* self, NF32 inOcclusionExponent);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionContrast_)(USkyLightComponent_* self, NF32 inOcclusionContrast);
N_LIB_PRIVATE N_NIMCALL(void, setMinOcclusion_)(USkyLightComponent_* self, NF32 inMinOcclusion);
N_LIB_PRIVATE N_NIMCALL(void, setLowerHemisphereColor_)(USkyLightComponent_* self, FLinearColor& inLowerHemisphereColor);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(USkyLightComponent_* self, FLinearColor newLightColor);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(USkyLightComponent_* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setIndirectLightingIntensity_)(USkyLightComponent_* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setCubemapBlend_)(USkyLightComponent_* self, UTextureCube_* sourceCubemap, UTextureCube_* destinationCubemap, NF32 inBlendFraction);
N_LIB_PRIVATE N_NIMCALL(void, setCubemap_)(USkyLightComponent_* self, UTextureCube_* newCubemap);
N_LIB_PRIVATE N_NIMCALL(void, recaptureSky_)(USkyLightComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, influenceRadius)(USphereReflectionCaptureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinfluenceRadius)(USphereReflectionCaptureComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSphereReflectionCaptureComponent)(USphereReflectionCaptureComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UStereoLayerShapeCylinder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UStereoLayerShapeCylinder_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, overlayArc)(UStereoLayerShapeCylinder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverlayArc)(UStereoLayerShapeCylinder_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, height)(UStereoLayerShapeCylinder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheight)(UStereoLayerShapeCylinder_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UStereoLayerShapeCylinder_* self, NF32 inRadius);
N_LIB_PRIVATE N_NIMCALL(void, setOverlayArc_)(UStereoLayerShapeCylinder_* self, NF32 inOverlayArc);
N_LIB_PRIVATE N_NIMCALL(void, setHeight_)(UStereoLayerShapeCylinder_* self, NI32 inHeight);
N_LIB_PRIVATE N_NIMCALL(void, keepUStereoLayerShapeCylinder)(UStereoLayerShapeCylinder_* fake);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, leftUVRect)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setleftUVRect)(UStereoLayerShapeEquirect_* obj, FBox2D val);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, rightUVRect)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrightUVRect)(UStereoLayerShapeEquirect_* obj, FBox2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, leftScale)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setleftScale)(UStereoLayerShapeEquirect_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, rightScale)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrightScale)(UStereoLayerShapeEquirect_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, leftBias)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setleftBias)(UStereoLayerShapeEquirect_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, rightBias)(UStereoLayerShapeEquirect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrightBias)(UStereoLayerShapeEquirect_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, setEquirectProps_)(UStereoLayerShapeEquirect_* self, FEquirectProps_ inScaleBiases);
N_LIB_PRIVATE N_NIMCALL(void, keepUStereoLayerShapeEquirect)(UStereoLayerShapeEquirect_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLiveTexture)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLiveTexture)(UStereoLayerComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSupportsDepth)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSupportsDepth)(UStereoLayerComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoAlphaChannel)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNoAlphaChannel)(UStereoLayerComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UStereoLayerComponent_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(UTexture*, leftTexture)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setleftTexture)(UStereoLayerComponent_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bQuadPreserveTextureRatio)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbQuadPreserveTextureRatio)(UStereoLayerComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, quadSize)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setquadSize)(UStereoLayerComponent_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, uVRect)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuVRect)(UStereoLayerComponent_* obj, FBox2D val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA, stereoLayerType)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstereoLayerType)(UStereoLayerComponent_* obj, tyEnum_EStereoLayerType__66j9cF9c1XueIxc1J1nmbdnA val);
N_LIB_PRIVATE N_NIMCALL(UStereoLayerShape_*, shape)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshape)(UStereoLayerComponent_* obj, UStereoLayerShape_* val);
N_LIB_PRIVATE N_NIMCALL(NI32, priority)(UStereoLayerComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UStereoLayerComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setUVRect_)(UStereoLayerComponent_* self, FBox2D inUVRect);
N_LIB_PRIVATE N_NIMCALL(void, setTexture_)(UStereoLayerComponent_* self, UTexture* inTexture);
N_LIB_PRIVATE N_NIMCALL(void, setQuadSize_)(UStereoLayerComponent_* self, FVector2D inQuadSize);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(UStereoLayerComponent_* self, NI32 inPriority);
N_LIB_PRIVATE N_NIMCALL(void, setLeftTexture_)(UStereoLayerComponent_* self, UTexture* inTexture);
N_LIB_PRIVATE N_NIMCALL(void, setEquirectProps_)(UStereoLayerComponent_* self, FEquirectProps_ inScaleBiases);
N_LIB_PRIVATE N_NIMCALL(void, markTextureForUpdate_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FBox2D, getUVRect_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTexture_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getQuadSize_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getPriority_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getLeftTexture_)(UStereoLayerComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUStereoLayerComponent)(UStereoLayerComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UTextRenderComponent_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, textMaterial)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextMaterial)(UTextRenderComponent_* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(UFont_*, font)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UTextRenderComponent_* obj, UFont_* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg, horizontalAlignment)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UTextRenderComponent_* obj, tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw, verticalAlignment)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UTextRenderComponent_* obj, tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw val);
N_LIB_PRIVATE N_NIMCALL(FColor*, textRenderColor)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextRenderColor)(UTextRenderComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, xScale)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setxScale)(UTextRenderComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, yScale)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setyScale)(UTextRenderComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, worldSize)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworldSize)(UTextRenderComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, horizSpacingAdjust)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizSpacingAdjust)(UTextRenderComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, vertSpacingAdjust)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvertSpacingAdjust)(UTextRenderComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysRenderAsText)(UTextRenderComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysRenderAsText)(UTextRenderComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setYScale_)(UTextRenderComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setXScale_)(UTextRenderComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setWorldSize_)(UTextRenderComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setVertSpacingAdjust_)(UTextRenderComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UTextRenderComponent_* self, tyEnum_EVerticalTextAligment__V5leov9cJd10SC9a5asCACFw value);
N_LIB_PRIVATE N_NIMCALL(void, setTextRenderColor_)(UTextRenderComponent_* self, FColor value);
N_LIB_PRIVATE N_NIMCALL(void, setTextMaterial_)(UTextRenderComponent_* self, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, setHorizSpacingAdjust_)(UTextRenderComponent_* self, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UTextRenderComponent_* self, tyEnum_EHorizTextAligment__quWcNiAfDq80pcrT3O9apkg value);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UTextRenderComponent_* self, UFont_* value);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UTextRenderComponent_* self, FText& value);
N_LIB_PRIVATE N_NIMCALL(FVector, getTextWorldSize_)(UTextRenderComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getTextLocalSize_)(UTextRenderComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setVectorCurve_)(UTimelineComponent_* self, UCurveVector_* newVectorCurve, FName vectorTrackName);
N_LIB_PRIVATE N_NIMCALL(void, setTimelineLengthMode_)(UTimelineComponent_* self, tyEnum_ETimelineLengthMode__UwOSsi5M2vIG2zFofBn0NQ newLengthMode);
N_LIB_PRIVATE N_NIMCALL(void, setTimelineLength_)(UTimelineComponent_* self, NF32 newLength);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(UTimelineComponent_* self, NF32 newRate);
N_LIB_PRIVATE N_NIMCALL(void, setPlaybackPosition_)(UTimelineComponent_* self, NF32 newPosition, NIM_BOOL bFireEvents, NIM_BOOL bFireUpdate);
N_LIB_PRIVATE N_NIMCALL(void, setNewTime_)(UTimelineComponent_* self, NF32 newTime);
N_LIB_PRIVATE N_NIMCALL(void, setLooping_)(UTimelineComponent_* self, NIM_BOOL bNewLooping);
N_LIB_PRIVATE N_NIMCALL(void, setLinearColorCurve_)(UTimelineComponent_* self, UCurveLinearColor_* newLinearColorCurve, FName linearColorTrackName);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreTimeDilation_)(UTimelineComponent_* self, NIM_BOOL bNewIgnoreTimeDilation);
N_LIB_PRIVATE N_NIMCALL(void, setFloatCurve_)(UTimelineComponent_* self, UCurveFloat* newFloatCurve, FName floatTrackName);
N_LIB_PRIVATE N_NIMCALL(void, reverseFromEnd_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, reverse_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, playFromStart_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReversing_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLooping_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimelineLength_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledTimelineLength_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayRate_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlaybackPosition_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIgnoreTimeDilation_)(UTimelineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUTimelineComponent)(UTimelineComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, intensity)(UVectorFieldComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setintensity)(UVectorFieldComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, tightness)(UVectorFieldComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settightness)(UVectorFieldComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(UVectorFieldComponent_* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, keepUVectorFieldComponent)(UVectorFieldComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UWindDirectionalSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, speed)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspeed)(UWindDirectionalSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minGustAmount)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminGustAmount)(UWindDirectionalSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxGustAmount)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxGustAmount)(UWindDirectionalSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UWindDirectionalSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPointWind)(UWindDirectionalSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPointWind)(UWindDirectionalSourceComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setWindType_)(UWindDirectionalSourceComponent_* self, tyEnum_EWindSourceType__tgASMiEzikMy2tfW9aLcEXw inNewType);
N_LIB_PRIVATE N_NIMCALL(void, setStrength_)(UWindDirectionalSourceComponent_* self, NF32 inNewStrength);
N_LIB_PRIVATE N_NIMCALL(void, setSpeed_)(UWindDirectionalSourceComponent_* self, NF32 inNewSpeed);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UWindDirectionalSourceComponent_* self, NF32 inNewRadius);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumGustAmount_)(UWindDirectionalSourceComponent_* self, NF32 inNewMinGust);
N_LIB_PRIVATE N_NIMCALL(void, setMaximumGustAmount_)(UWindDirectionalSourceComponent_* self, NF32 inNewMaxGust);
N_LIB_PRIVATE N_NIMCALL(void, keepUWindDirectionalSourceComponent)(UWindDirectionalSourceComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw, transformMode)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransformMode)(USkyAtmosphereComponent_* obj, tyEnum_ESkyAtmosphereTransformMode__0CNcxCm7CLRT1vc7vj39aMw val);
N_LIB_PRIVATE N_NIMCALL(NF32, bottomRadius)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbottomRadius)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, groundAlbedo)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgroundAlbedo)(USkyAtmosphereComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, atmosphereHeight)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereHeight)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, multiScatteringFactor)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmultiScatteringFactor)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, traceSampleCountScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settraceSampleCountScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, rayleighScatteringScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighScatteringScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, rayleighScattering)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighScattering)(USkyAtmosphereComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, rayleighExponentialDistribution)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayleighExponentialDistribution)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, mieScatteringScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieScatteringScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, mieScattering)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieScattering)(USkyAtmosphereComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, mieAbsorptionScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieAbsorptionScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, mieAbsorption)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieAbsorption)(USkyAtmosphereComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, mieAnisotropy)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieAnisotropy)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, mieExponentialDistribution)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmieExponentialDistribution)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, otherAbsorptionScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setotherAbsorptionScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, otherAbsorption)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setotherAbsorption)(USkyAtmosphereComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FTentDistribution_*, otherTentDistribution)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setotherTentDistribution)(USkyAtmosphereComponent_* obj, FTentDistribution_ val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, skyLuminanceFactor)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskyLuminanceFactor)(USkyAtmosphereComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveViewDistanceScale)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveViewDistanceScale)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, heightFogContribution)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheightFogContribution)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, transmittanceMinLightElevationAngle)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransmittanceMinLightElevationAngle)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPerspectiveStartDepth)(USkyAtmosphereComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPerspectiveStartDepth)(USkyAtmosphereComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setSkyLuminanceFactor_)(USkyAtmosphereComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighScatteringScale_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighScattering_)(USkyAtmosphereComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setRayleighExponentialDistribution_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setOtherAbsorptionScale_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setOtherAbsorption_)(USkyAtmosphereComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMultiScatteringFactor_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieScatteringScale_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieScattering_)(USkyAtmosphereComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieExponentialDistribution_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieAnisotropy_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieAbsorptionScale_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMieAbsorption_)(USkyAtmosphereComponent_* self, FLinearColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setHeightFogContribution_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereHeight_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAerialPespectiveViewDistanceScale_)(USkyAtmosphereComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, resetAtmosphereLightDirectionOverride_)(USkyAtmosphereComponent_* self, NI32 atmosphereLightIndex);
N_LIB_PRIVATE N_NIMCALL(void, overrideAtmosphereLightDirection_)(USkyAtmosphereComponent_* self, NI32 atmosphereLightIndex, FVector& lightDirection);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAtmosphereLightDirectionOverriden_)(USkyAtmosphereComponent_* self, NI32 atmosphereLightIndex);
N_LIB_PRIVATE N_NIMCALL(FVector, getOverridenAtmosphereLightDirection_)(USkyAtmosphereComponent_* self, NI32 atmosphereLightIndex);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getAtmosphereTransmitanceOnGroundAtPlanetTop_)(USkyAtmosphereComponent_* self, UDirectionalLightComponent_* directionalLight);
N_LIB_PRIVATE N_NIMCALL(void, keepUApplicationLifecycleComponent)(UApplicationLifecycleComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(FColor*, arrowColor)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setarrowColor)(UArrowComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, arrowSize)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setarrowSize)(UArrowComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, arrowLength)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setarrowLength)(UArrowComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, screenSize)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscreenSize)(UArrowComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsScreenSizeScaled)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsScreenSizeScaled)(UArrowComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTreatAsASprite)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTreatAsASprite)(UArrowComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInEditorScaling)(UArrowComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInEditorScaling)(UArrowComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setUseInEditorScaling_)(UArrowComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setTreatAsASprite_)(UArrowComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setScreenSize_)(UArrowComponent_* self, NF32 newScreenSize);
N_LIB_PRIVATE N_NIMCALL(void, setIsScreenSizeScaled_)(UArrowComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setArrowSize_)(UArrowComponent_* self, NF32 newSize);
N_LIB_PRIVATE N_NIMCALL(void, setArrowLength_)(UArrowComponent_* self, NF32 newLength);
N_LIB_PRIVATE N_NIMCALL(void, setArrowFColor_)(UArrowComponent_* self, FColor newColor);
N_LIB_PRIVATE N_NIMCALL(void, setArrowColor_)(UArrowComponent_* self, FLinearColor newColor);
N_LIB_PRIVATE N_NIMCALL(void, keepUInitialActiveSoundParams)(UInitialActiveSoundParams* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowSpatialization)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowSpatialization)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideAttenuation)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideAttenuation)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideSubtitlePriority)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideSubtitlePriority)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsUISound)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsUISound)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLowPassFilter)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLowPassFilter)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverridePriority)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverridePriority)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressSubtitles)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressSubtitles)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanPlayMultipleInstances)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanPlayMultipleInstances)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableParameterUpdatesWhilePlaying)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableParameterUpdatesWhilePlaying)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoManageAttachment)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoManageAttachment)(UAudioComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchModulationMin)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpitchModulationMin)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchModulationMax)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpitchModulationMax)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeModulationMin)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeModulationMin)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeModulationMax)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeModulationMax)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeMultiplier)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeMultiplier)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerAttackTime)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerAttackTime)(UAudioComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerReleaseTime)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerReleaseTime)(UAudioComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, subtitlePriority)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitlePriority)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(USoundEffectSourcePresetChain*, sourceEffectChain)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceEffectChain)(UAudioComponent* obj, USoundEffectSourcePresetChain* val);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchMultiplier)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpitchMultiplier)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lowPassFilterFrequency)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlowPassFilterFrequency)(UAudioComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(USoundAttenuation*, attenuationSettings)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationSettings)(UAudioComponent* obj, USoundAttenuation* val);
N_LIB_PRIVATE N_NIMCALL(FSoundAttenuationSettings*, attenuationOverrides)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationOverrides)(UAudioComponent* obj, FSoundAttenuationSettings val);
N_LIB_PRIVATE N_NIMCALL(TY__NR5I3JrURnzfmlYGr3FAVw, concurrencySet)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencySet)(UAudioComponent* obj, TY__NR5I3JrURnzfmlYGr3FAVw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachLocationRule)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachLocationRule)(UAudioComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachRotationRule)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachRotationRule)(UAudioComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachScaleRule)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachScaleRule)(UAudioComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDefaultRoutingSettings*, modulationRouting)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmodulationRouting)(UAudioComponent* obj, FSoundModulationDefaultRoutingSettings val);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, autoAttachParent)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachParent)(UAudioComponent* obj, TY__9b9c0qopUCzSW4js0BJumMlQ val);
N_LIB_PRIVATE N_NIMCALL(FName*, autoAttachSocketName)(UAudioComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachSocketName)(UAudioComponent* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, stopDelayed_)(UAudioComponent* self, NF32 delayTime);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, setWaveParameter_)(UAudioComponent* self, FName inName, USoundWave* inWave);
N_LIB_PRIVATE N_NIMCALL(void, setVolumeMultiplier_)(UAudioComponent* self, NF32 newVolumeMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setUISound_)(UAudioComponent* self, NIM_BOOL bInUISound);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixSend_)(UAudioComponent* self, USoundSubmixBase_* submix, NF32 sendLevel);
N_LIB_PRIVATE N_NIMCALL(void, setSourceBusSendPreEffect_)(UAudioComponent* self, USoundSourceBus_* soundSourceBus, NF32 sourceBusSendLevel);
N_LIB_PRIVATE N_NIMCALL(void, setSourceBusSendPostEffect_)(UAudioComponent* self, USoundSourceBus_* soundSourceBus, NF32 sourceBusSendLevel);
N_LIB_PRIVATE N_NIMCALL(void, setPitchMultiplier_)(UAudioComponent* self, NF32 newPitchMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setPaused_)(UAudioComponent* self, NIM_BOOL bPause);
N_LIB_PRIVATE N_NIMCALL(void, setOutputToBusOnly_)(UAudioComponent* self, NIM_BOOL bInOutputToBusOnly);
N_LIB_PRIVATE N_NIMCALL(void, setLowPassFilterFrequency_)(UAudioComponent* self, NF32 inLowPassFilterFrequency);
N_LIB_PRIVATE N_NIMCALL(void, setLowPassFilterEnabled_)(UAudioComponent* self, NIM_BOOL inLowPassFilterEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setIntParameter_)(UAudioComponent* self, FName inName, NI32 inInt);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(UAudioComponent* self, FName inName, NF32 inFloat);
N_LIB_PRIVATE N_NIMCALL(void, setBoolParameter_)(UAudioComponent* self, FName inName, NIM_BOOL inBool);
N_LIB_PRIVATE N_NIMCALL(void, setAudioBusSendPreEffect_)(UAudioComponent* self, UAudioBus_* audioBus, NF32 audioBusSendLevel);
N_LIB_PRIVATE N_NIMCALL(void, setAudioBusSendPostEffect_)(UAudioComponent* self, UAudioBus_* audioBus, NF32 audioBusSendLevel);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UAudioComponent* self, NF32 startTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVirtualized_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlaying_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasCookedFFTData_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasCookedAmplitudeEnvelopeData_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAudioComponentPlayState__LNX4VedOxTvvUBfe9bW2uOQ, getPlayState_)(UAudioComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedFFTDataForAllPlayingSounds_)(UAudioComponent* self, TY__c2I8cKDyC9czaUeSu84CUcg& outSoundWaveSpectralData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedFFTData_)(UAudioComponent* self, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& frequenciesToGet, TY__7eS59amp9czNtrtz8r0Xjpgw& outSoundWaveSpectralData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedEnvelopeDataForAllPlayingSounds_)(UAudioComponent* self, TY__VJ3WomG9bWfW9bg7f8TWiOgQ& outEnvelopeData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCookedEnvelopeData_)(UAudioComponent* self, NF32& outEnvelopeData);
N_LIB_PRIVATE N_NIMCALL(void, fadeOut_)(UAudioComponent* self, NF32 fadeOutDuration, NF32 fadeVolumeLevel, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve);
N_LIB_PRIVATE N_NIMCALL(void, fadeIn_)(UAudioComponent* self, NF32 fadeInDuration, NF32 fadeVolumeLevel, NF32 startTime, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAttenuationSettingsToApply_)(UAudioComponent* self, FSoundAttenuationSettings& outAttenuationSettings);
N_LIB_PRIVATE N_NIMCALL(void, adjustVolume_)(UAudioComponent* self, NF32 adjustVolumeDuration, NF32 adjustVolumeLevel, tyEnum_EAudioFaderCurve__NPSTeyC9cdgtiobDUSD4d4Q fadeCurve);
N_LIB_PRIVATE N_NIMCALL(void, adjustAttenuation_)(UAudioComponent* self, FSoundAttenuationSettings& inAttenuationSettings);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, sprite)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsprite)(UBillboardComponent_* obj, UTexture2D* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsScreenSizeScaled)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsScreenSizeScaled)(UBillboardComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, screenSize)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscreenSize)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, u)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setu)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, uL)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuL)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, v)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setv)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, vL)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvL)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, opacityMaskRefVal)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setopacityMaskRefVal)(UBillboardComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInEditorScaling)(UBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInEditorScaling)(UBillboardComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setUV_)(UBillboardComponent_* self, NI32 newU, NI32 newUL, NI32 newV, NI32 newVL);
N_LIB_PRIVATE N_NIMCALL(void, setSpriteAndUV_)(UBillboardComponent_* self, UTexture2D* newSprite, NI32 newU, NI32 newUL, NI32 newV, NI32 newVL);
N_LIB_PRIVATE N_NIMCALL(void, setSprite_)(UBillboardComponent_* self, UTexture2D* newSprite);
N_LIB_PRIVATE N_NIMCALL(void, setOpacityMaskRefVal_)(UBillboardComponent_* self, NF32 refVal);
N_LIB_PRIVATE N_NIMCALL(void, setTransformToBounds_)(UBoundsCopyComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setRotation_)(UBoundsCopyComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUBoundsCopyComponent)(UBoundsCopyComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(FColor*, shapeColor)(UShapeComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshapeColor)(UShapeComponent* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(FVector*, boxExtent)(UBoxComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboxExtent)(UBoxComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, lineThickness)(UBoxComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlineThickness)(UBoxComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setLineThickness_)(UBoxComponent* self, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, setBoxExtent_)(UBoxComponent* self, FVector inBoxExtent, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnscaledBoxExtent_)(UBoxComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaledBoxExtent_)(UBoxComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUBoxComponent)(UBoxComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBrushComponent)(UBrushComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleHalfHeight)(UCapsuleComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleHalfHeight)(UCapsuleComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, capsuleRadius)(UCapsuleComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleRadius)(UCapsuleComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleSize_)(UCapsuleComponent* self, NF32 inRadius, NF32 inHalfHeight, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleRadius_)(UCapsuleComponent* self, NF32 radius, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(void, setCapsuleHalfHeight_)(UCapsuleComponent* self, NF32 halfHeight, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(void, getUnscaledCapsuleSize_WithoutHemisphere_)(UCapsuleComponent* self, NF32& outRadius, NF32& outHalfHeightWithoutHemisphere);
N_LIB_PRIVATE N_NIMCALL(void, getUnscaledCapsuleSize_)(UCapsuleComponent* self, NF32& outRadius, NF32& outHalfHeight);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleRadius_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleHalfHeight_WithoutHemisphere_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledCapsuleHalfHeight_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getShapeScale_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, getScaledCapsuleSize_WithoutHemisphere_)(UCapsuleComponent* self, NF32& outRadius, NF32& outHalfHeightWithoutHemisphere);
N_LIB_PRIVATE N_NIMCALL(void, getScaledCapsuleSize_)(UCapsuleComponent* self, NF32& outRadius, NF32& outHalfHeight);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleRadius_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleHalfHeight_WithoutHemisphere_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledCapsuleHalfHeight_)(UCapsuleComponent* self);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, childActorClass)(UChildActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchildActorClass)(UChildActorComponent* obj, TY__9akcXb9b3ftlkdW8NDwR22Mg val);
N_LIB_PRIVATE N_NIMCALL(AActor*, childActor)(UChildActorComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchildActor)(UChildActorComponent* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(void, setChildActorClass_)(UChildActorComponent* self, TY__9akcXb9b3ftlkdW8NDwR22Mg inClass);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, decalMaterial)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdecalMaterial)(UDecalComponent_* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(NI32, sortOrder)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsortOrder)(UDecalComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeScreenSize)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfadeScreenSize)(UDecalComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeStartDelay)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfadeStartDelay)(UDecalComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeDuration)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfadeDuration)(UDecalComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeInDuration)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfadeInDuration)(UDecalComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fadeInStartDelay)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfadeInStartDelay)(UDecalComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDestroyOwnerAfterFade)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDestroyOwnerAfterFade)(UDecalComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector*, decalSize)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdecalSize)(UDecalComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, decalColor)(UDecalComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdecalColor)(UDecalComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(void, setSortOrder_)(UDecalComponent_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFadeScreenSize_)(UDecalComponent_* self, NF32 newFadeScreenSize);
N_LIB_PRIVATE N_NIMCALL(void, setFadeOut_)(UDecalComponent_* self, NF32 startDelay, NF32 duration, NIM_BOOL destroyOwnerAfterFade);
N_LIB_PRIVATE N_NIMCALL(void, setFadeIn_)(UDecalComponent_* self, NF32 startDelay, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, setDecalMaterial_)(UDecalComponent_* self, UMaterialInterface* newDecalMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setDecalColor_)(UDecalComponent_* self, FLinearColor& color);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeStartDelay_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeInStartDelay_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeInDuration_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getFadeDuration_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getDecalMaterial_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createDynamicMaterialInstance_)(UDecalComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, temperature)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settemperature)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseTemperature)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseTemperature)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, specularScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspecularScale)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowResolutionScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowResolutionScale)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowBias)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowBias)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSlopeBias)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSlopeBias)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSharpen)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSharpen)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowLength)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowLength)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NU8, contactShadowLengthInWS)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowLengthInWS)(ULightComponent* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowCastingIntensity)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowCastingIntensity)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, contactShadowNonCastingIntensity)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontactShadowNonCastingIntensity)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NU8, castTranslucentShadows)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcastTranslucentShadows)(ULightComponent* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsFromCinematicObjectsOnly)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsFromCinematicObjectsOnly)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectDynamicIndirectLighting)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectDynamicIndirectLighting)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceCachedShadowsForMovablePrimitives)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceCachedShadowsForMovablePrimitives)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(ULightComponent* obj, FLightingChannels val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, lightFunctionMaterial)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionMaterial)(ULightComponent* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, lightFunctionScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionScale)(ULightComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(UTextureLightProfile*, iESTexture)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setiESTexture)(ULightComponent* obj, UTextureLightProfile* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseIESBrightness)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseIESBrightness)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, iESBrightnessScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setiESBrightnessScale)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lightFunctionFadeDistance)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightFunctionFadeDistance)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, disabledBrightness)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdisabledBrightness)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLightShaftBloom)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLightShaftBloom)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbloomScale)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomThreshold)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbloomThreshold)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, bloomMaxBrightness)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbloomMaxBrightness)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, bloomTint)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbloomTint)(ULightComponent* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRayTracedDistanceFieldShadows)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRayTracedDistanceFieldShadows)(ULightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, rayStartOffsetDepthScale)(ULightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrayStartOffsetDepthScale)(ULightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setVolumetricScatteringIntensity_)(ULightComponent* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setUseTemperature_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setUseIESBrightness_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setTransmission_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setTemperature_)(ULightComponent* self, NF32 newTemperature);
N_LIB_PRIVATE N_NIMCALL(void, setSpecularScale_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowSlopeBias_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowBias_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightingChannels_)(ULightComponent* self, NIM_BOOL bChannel0, NIM_BOOL bChannel1, NIM_BOOL bChannel2);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionScale_)(ULightComponent* self, FVector newLightFunctionScale);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionMaterial_)(ULightComponent* self, UMaterialInterface* newLightFunctionMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionFadeDistance_)(ULightComponent* self, NF32 newLightFunctionFadeDistance);
N_LIB_PRIVATE N_NIMCALL(void, setLightFunctionDisabledBrightness_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightColor_)(ULightComponent* self, FLinearColor newLightColor, NIM_BOOL bSRGB);
N_LIB_PRIVATE N_NIMCALL(void, setIntensity_)(ULightComponent* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setIndirectLightingIntensity_)(ULightComponent* self, NF32 newIntensity);
N_LIB_PRIVATE N_NIMCALL(void, setIESTexture_)(ULightComponent* self, UTextureLightProfile* newValue);
N_LIB_PRIVATE N_NIMCALL(void, setIESBrightnessScale_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setForceCachedShadowsForMovablePrimitives_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setEnableLightShaftBloom_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setBloomTint_)(ULightComponent* self, FColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setBloomThreshold_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setBloomScale_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setBloomMaxBrightness_)(ULightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAffectTranslucentLighting_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setAffectDynamicIndirectLighting_)(ULightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowCascadeBiasDistribution)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowCascadeBiasDistribution)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableLightShaftOcclusion)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableLightShaftOcclusion)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionMaskDarkness)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionMaskDarkness)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, occlusionDepthRange)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setocclusionDepthRange)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, lightShaftOverrideDirection)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightShaftOverrideDirection)(UDirectionalLightComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicShadowDistanceMovableLight)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowDistanceMovableLight)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, dynamicShadowDistanceStationaryLight)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowDistanceStationaryLight)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, dynamicShadowCascades)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdynamicShadowCascades)(UDirectionalLightComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cascadeDistributionExponent)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcascadeDistributionExponent)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cascadeTransitionFraction)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcascadeTransitionFraction)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowDistanceFadeoutFraction)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowDistanceFadeoutFraction)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInsetShadowsForMovableObjects)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInsetShadowsForMovableObjects)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, farShadowCascadeCount)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfarShadowCascadeCount)(UDirectionalLightComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, farShadowDistance)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfarShadowDistance)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, distanceFieldShadowDistance)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdistanceFieldShadowDistance)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, forwardShadingPriority)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforwardShadingPriority)(UDirectionalLightComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lightSourceAngle)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightSourceAngle)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lightSourceSoftAngle)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightSourceSoftAngle)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowSourceAngleFactor)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowSourceAngleFactor)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, traceDistance)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settraceDistance)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAtmosphereSunLight)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAtmosphereSunLight)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, atmosphereSunLightIndex)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereSunLightIndex)(UDirectionalLightComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, atmosphereSunDiskColorScale)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphereSunDiskColorScale)(UDirectionalLightComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPerPixelAtmosphereTransmittance)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPerPixelAtmosphereTransmittance)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsOnClouds)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsOnClouds)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastShadowsOnAtmosphere)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastShadowsOnAtmosphere)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastCloudShadows)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastCloudShadows)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowStrength)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowStrength)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowOnAtmosphereStrength)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowOnAtmosphereStrength)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowOnSurfaceStrength)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowOnSurfaceStrength)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowDepthBias)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowDepthBias)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowExtent)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowExtent)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowMapResolutionScale)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowMapResolutionScale)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cloudShadowRaySampleCountScale)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudShadowRaySampleCountScale)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, cloudScatteredLuminanceScale)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcloudScatteredLuminanceScale)(UDirectionalLightComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCastModulatedShadows)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCastModulatedShadows)(UDirectionalLightComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FColor*, modulatedShadowColor)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmodulatedShadowColor)(UDirectionalLightComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowAmount)(UDirectionalLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowAmount)(UDirectionalLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setShadowSourceAngleFactor_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowDistanceFadeoutFraction_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowCascadeBiasDistribution_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowAmount_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionMaskDarkness_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setOcclusionDepthRange_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightSourceSoftAngle_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightSourceAngle_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightShaftOverrideDirection_)(UDirectionalLightComponent_* self, FVector newValue);
N_LIB_PRIVATE N_NIMCALL(void, setForwardShadingPriority_)(UDirectionalLightComponent_* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setEnableLightShaftOcclusion_)(UDirectionalLightComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowDistanceStationaryLight_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowDistanceMovableLight_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicShadowCascades_)(UDirectionalLightComponent_* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setCascadeTransitionFraction_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setCascadeDistributionExponent_)(UDirectionalLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereSunLightIndex_)(UDirectionalLightComponent_* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAtmosphereSunLight_)(UDirectionalLightComponent_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, keepUDirectionalLightComponent)(UDirectionalLightComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFrustumEnabled)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFrustumEnabled)(UDrawFrustumComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FColor*, frustumColor)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumColor)(UDrawFrustumComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumAngle)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumAngle)(UDrawFrustumComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumAspectRatio)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumAspectRatio)(UDrawFrustumComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumStartDist)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumStartDist)(UDrawFrustumComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, frustumEndDist)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrustumEndDist)(UDrawFrustumComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UDrawFrustumComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UDrawFrustumComponent_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUDrawFrustumComponent)(UDrawFrustumComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, sphereRadius)(USphereComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsphereRadius)(USphereComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setSphereRadius_)(USphereComponent* self, NF32 inSphereRadius, NIM_BOOL bUpdateOverlaps);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnscaledSphereRadius_)(USphereComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getShapeScale_)(USphereComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScaledSphereRadius_)(USphereComponent* self);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackEffect_*, forceFeedbackEffect)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforceFeedbackEffect)(UForceFeedbackComponent_* obj, UForceFeedbackEffect_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLooping)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLooping)(UForceFeedbackComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreTimeDilation)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreTimeDilation)(UForceFeedbackComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideAttenuation)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideAttenuation)(UForceFeedbackComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, intensityMultiplier)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setintensityMultiplier)(UForceFeedbackComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UForceFeedbackAttenuation_*, attenuationSettings)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationSettings)(UForceFeedbackComponent_* obj, UForceFeedbackAttenuation_* val);
N_LIB_PRIVATE N_NIMCALL(FForceFeedbackAttenuationSettings_*, attenuationOverrides)(UForceFeedbackComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationOverrides)(UForceFeedbackComponent_* obj, FForceFeedbackAttenuationSettings_ val);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(UForceFeedbackComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setIntensityMultiplier_)(UForceFeedbackComponent_* self, NF32 newIntensityMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setForceFeedbackEffect_)(UForceFeedbackComponent_* self, UForceFeedbackEffect_* newForceFeedbackEffect);
N_LIB_PRIVATE N_NIMCALL(void, play_)(UForceFeedbackComponent_* self, NF32 startTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAttenuationSettingsToApply_)(UForceFeedbackComponent_* self, FForceFeedbackAttenuationSettings_& outAttenuationSettings);
N_LIB_PRIVATE N_NIMCALL(void, adjustAttenuation_)(UForceFeedbackComponent_* self, FForceFeedbackAttenuationSettings_& inAttenuationSettings);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasControllerKeyJustReleased_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasControllerKeyJustPressed_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControllerKeyDown_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getTouchState_)(UInputComponent* self, NI32 fingerIndex, NF32& locationX, NF32& locationY, NIM_BOOL& bIsCurrentlyPressed);
N_LIB_PRIVATE N_NIMCALL(FVector, getControllerVectorKeyState_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getControllerMouseDelta_)(UInputComponent* self, NF32& deltaX, NF32& deltaY);
N_LIB_PRIVATE N_NIMCALL(NF32, getControllerKeyTimeDown_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getControllerAnalogStickState_)(UInputComponent* self, tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw whichStick, NF32& stickX, NF32& stickY);
N_LIB_PRIVATE N_NIMCALL(NF32, getControllerAnalogKeyState_)(UInputComponent* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UInterpToMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseOnImpact)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseOnImpact)(UInterpToMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweep)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSweep)(UInterpToMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw, teleportType)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setteleportType)(UInterpToMovementComponent_* obj, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw, behaviourType)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbehaviourType)(UInterpToMovementComponent_* obj, tyEnum_EInterpToBehaviourType__vW2ZKxQsMHnAcJZoVG0VLw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCheckIfStillInWorld)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCheckIfStillInWorld)(UInterpToMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceSubStepping)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceSubStepping)(UInterpToMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UInterpToMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UInterpToMovementComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(TY__LjHVX64yOnazUBJDmecIJA*, controlPoints)(UInterpToMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontrolPoints)(UInterpToMovementComponent_* obj, TY__LjHVX64yOnazUBJDmecIJA val);
N_LIB_PRIVATE N_NIMCALL(void, stopSimulating_)(UInterpToMovementComponent_* self, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(void, restartMovement_)(UInterpToMovementComponent_* self, NF32 initialDirection);
N_LIB_PRIVATE N_NIMCALL(void, resetControlPoints_)(UInterpToMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, finaliseControlPoints_)(UInterpToMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, addControlPointPosition_)(UInterpToMovementComponent_* self, FVector pos, NIM_BOOL bPositionIsRelative);
N_LIB_PRIVATE N_NIMCALL(void, keepUInterpToMovementComponent)(UInterpToMovementComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ, intensityUnits)(ULocalLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setintensityUnits)(ULocalLightComponent* obj, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, inverseExposureBlend)(ULocalLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinverseExposureBlend)(ULocalLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, attenuationRadius)(ULocalLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuationRadius)(ULocalLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setIntensityUnits_)(ULocalLightComponent* self, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ newIntensityUnits);
N_LIB_PRIVATE N_NIMCALL(void, setAttenuationRadius_)(ULocalLightComponent* self, NF32 newRadius);
N_LIB_PRIVATE N_NIMCALL(NF32, getUnitsConversionFactor_)(tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ srcUnits, tyEnum_ELightUnits__EN3SBpfr4utJ20zpfqAsrQ targetUnits, NF32 cosHalfConeAngle);
N_LIB_PRIVATE N_NIMCALL(NI32, numLODs)(ULODSyncComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumLODs)(ULODSyncComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, forcedLOD)(ULODSyncComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforcedLOD)(ULODSyncComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, minLOD)(ULODSyncComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminLOD)(ULODSyncComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(TY__gZurzBmXXyKQxXQIP32pOw*, componentsToSync)(ULODSyncComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcomponentsToSync)(ULODSyncComponent_* obj, TY__gZurzBmXXyKQxXQIP32pOw val);
N_LIB_PRIVATE N_NIMCALL(TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ*, customLODMapping)(ULODSyncComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomLODMapping)(ULODSyncComponent_* obj, TY__Kd9c9cAMNU9cwle9bA9ctAouPyQ val);
N_LIB_PRIVATE N_NIMCALL(FString, getLODSyncDebugText_)(ULODSyncComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepULODSyncComponent)(ULODSyncComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Fu7t4gHlDqCFA1dFtsYkog*, elements)(UMaterialBillboardComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setelements)(UMaterialBillboardComponent_* obj, TY__Fu7t4gHlDqCFA1dFtsYkog val);
N_LIB_PRIVATE N_NIMCALL(void, setElements_)(UMaterialBillboardComponent_* self, TY__Fu7t4gHlDqCFA1dFtsYkog& newElements);
N_LIB_PRIVATE N_NIMCALL(void, addElement_)(UMaterialBillboardComponent_* self, UMaterialInterface* material, UCurveFloat* distanceToOpacityCurve, NIM_BOOL bSizeIsInScreenSpace, NF32 baseSizeX, NF32 baseSizeY, UCurveFloat* distanceToSizeCurve);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialBillboardComponent)(UMaterialBillboardComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUModelComponent)(UModelComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, noiseLifetime)(UPawnNoiseEmitterComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnoiseLifetime)(UPawnNoiseEmitterComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, makeNoise_)(UPawnNoiseEmitterComponent_* self, AActor* noiseMaker, NF32 loudness, FVector& noiseLocation);
N_LIB_PRIVATE N_NIMCALL(void, keepUPawnNoiseEmitterComponent)(UPawnNoiseEmitterComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, supportsConvertibleLaptops_)(UPlatformEventsComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInTabletMode_)(UPlatformEventsComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInLaptopMode_)(UPlatformEventsComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlatformEventsComponent)(UPlatformEventsComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseInverseSquaredFalloff)(UPointLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseInverseSquaredFalloff)(UPointLightComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, lightFalloffExponent)(UPointLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightFalloffExponent)(UPointLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceRadius)(UPointLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceRadius)(UPointLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, softSourceRadius)(UPointLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsoftSourceRadius)(UPointLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceLength)(UPointLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceLength)(UPointLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setUseInverseSquaredFalloff_)(UPointLightComponent* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setSourceRadius_)(UPointLightComponent* self, NF32 bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setSourceLength_)(UPointLightComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setSoftSourceRadius_)(UPointLightComponent* self, NF32 bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, setLightFalloffExponent_)(UPointLightComponent* self, NF32 newLightFalloffExponent);
N_LIB_PRIVATE N_NIMCALL(void, setInverseExposureBlend_)(UPointLightComponent* self, NF32 newInverseExposureBlend);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, settings)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(UPostProcessComponent_* obj, FPostProcessSettings val);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UPostProcessComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, blendRadius)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendRadius)(UPostProcessComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, blendWeight)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendWeight)(UPostProcessComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(UPostProcessComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUnbound)(UPostProcessComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUnbound)(UPostProcessComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(UPostProcessComponent_* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject, NF32 inWeight);
N_LIB_PRIVATE N_NIMCALL(void, keepUPostProcessComponent)(UPostProcessComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceWidth)(URectLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceWidth)(URectLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sourceHeight)(URectLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceHeight)(URectLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, barnDoorAngle)(URectLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbarnDoorAngle)(URectLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, barnDoorLength)(URectLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbarnDoorLength)(URectLightComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UTexture*, sourceTexture)(URectLightComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceTexture)(URectLightComponent_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(void, setSourceWidth_)(URectLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setSourceTexture_)(URectLightComponent_* self, UTexture* newValue);
N_LIB_PRIVATE N_NIMCALL(void, setSourceHeight_)(URectLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setBarnDoorLength_)(URectLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setBarnDoorAngle_)(URectLightComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(UVirtualTextureBuilder_*, streamingTexture)(URuntimeVirtualTextureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingTexture)(URuntimeVirtualTextureComponent_* obj, UVirtualTextureBuilder_* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ, lossyCompressionAmount)(URuntimeVirtualTextureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlossyCompressionAmount)(URuntimeVirtualTextureComponent_* obj, tyEnum_ETextureLossyCompressionAmount__bVSIGtbxzRN9bOzAByUPDmQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBuildDebugStreamingMips)(URuntimeVirtualTextureComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbBuildDebugStreamingMips)(URuntimeVirtualTextureComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, invalidate_)(URuntimeVirtualTextureComponent_* self, FBoxSphereBounds& worldBounds);
N_LIB_PRIVATE N_NIMCALL(USkyAtmosphereComponent_*, skyAtmosphereComponent)(ASkyAtmosphere_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskyAtmosphereComponent)(ASkyAtmosphere_* obj, USkyAtmosphereComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepASkyAtmosphere)(ASkyAtmosphere_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(USplineComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(USplineComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStationaryEndpoints)(USplineComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStationaryEndpoints)(USplineComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInputSplinePointsToConstructionScript)(USplineComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInputSplinePointsToConstructionScript)(USplineComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawDebug)(USplineComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawDebug)(USplineComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector*, defaultUpVector)(USplineComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultUpVector)(USplineComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(void, updateSpline_)(USplineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setWorldLocationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inLocation);
N_LIB_PRIVATE N_NIMCALL(void, setUpVectorAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inUpVector, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setUnselectedSplineSegmentColor_)(USplineComponent_* self, FLinearColor& segmentColor);
N_LIB_PRIVATE N_NIMCALL(void, setTangentsAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inArriveTangent, FVector& inLeaveTangent, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setTangentColor_)(USplineComponent_* self, FLinearColor& tangentColor);
N_LIB_PRIVATE N_NIMCALL(void, setTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inTangent, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setSplineWorldPoints_)(USplineComponent_* self, TY__Bz8EFFwaAOJiUrMHOIgVGw& points);
N_LIB_PRIVATE N_NIMCALL(void, setSplinePointType_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw type_0, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setSplinePoints_)(USplineComponent_* self, TY__Bz8EFFwaAOJiUrMHOIgVGw& points, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setSplineLocalPoints_)(USplineComponent_* self, TY__Bz8EFFwaAOJiUrMHOIgVGw& points);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedSplineSegmentColor_)(USplineComponent_* self, FLinearColor& segmentColor);
N_LIB_PRIVATE N_NIMCALL(void, setScaleAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inScaleVector, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setRotationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FRotator& inRotation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setLocationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& inLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setDrawDebug_)(USplineComponent_* self, NIM_BOOL bShow);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultUpVector_)(USplineComponent_* self, FVector& upVector, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(void, setClosedLoopAtPosition_)(USplineComponent_* self, NIM_BOOL bInClosedLoop, NF32 key, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, setClosedLoop_)(USplineComponent_* self, NIM_BOOL bInClosedLoop, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, removeSplinePoint_)(USplineComponent_* self, NI32 index, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isClosedLoop_)(USplineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldTangentAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FRotator, getWorldRotationAtTime_)(USplineComponent_* self, NF32 time, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FRotator, getWorldRotationAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtTime_)(USplineComponent_* self, NF32 time, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldLocationAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldDirectionAtTime_)(USplineComponent_* self, NF32 time, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getWorldDirectionAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorPropertyAtSplinePoint_)(USplineComponent_* self, NI32 index, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorPropertyAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getUpVectorAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity, NIM_BOOL bUseScale);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseScale);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseScale);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseScale);
N_LIB_PRIVATE N_NIMCALL(NF32, getTimeAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getTangentAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESplinePointType__iK8MPj7g5RGXkIWjF4tMTw, getSplinePointType_)(USplineComponent_* self, NI32 pointIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getSplineLength_)(USplineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtTime_)(USplineComponent_* self, NF32 time, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtSplineInputKey_)(USplineComponent_* self, NF32 inKey);
N_LIB_PRIVATE N_NIMCALL(FVector, getScaleAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotationAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, getRollAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getRightVectorAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfSplineSegments_)(USplineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumberOfSplinePoints_)(USplineComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocationAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(void, getLocationAndTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& location, FVector& tangent, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(void, getLocalLocationAndTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, FVector& localLocation, FVector& localTangent);
N_LIB_PRIVATE N_NIMCALL(FVector, getLeaveTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyValueAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatPropertyAtSplinePoint_)(USplineComponent_* self, NI32 index, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatPropertyAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceAlongSplineAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceAlongSplineAtSplineInputKey_)(USplineComponent_* self, NF32 inKey);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtTime_)(USplineComponent_* self, NF32 time, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseConstantVelocity);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtSplineInputKey_)(USplineComponent_* self, NF32 inKey, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getDirectionAtDistanceAlongSpline_)(USplineComponent_* self, NF32 distance, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getDefaultUpVector_)(USplineComponent_* self, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, getArriveTangentAtSplinePoint_)(USplineComponent_* self, NI32 pointIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, findUpVectorClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FTransform, findTransformClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUseScale);
N_LIB_PRIVATE N_NIMCALL(FVector, findTangentClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, findScaleClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation);
N_LIB_PRIVATE N_NIMCALL(FRotator, findRotationClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, findRollClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, findRightVectorClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(FVector, findLocationClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NF32, findInputKeyClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation);
N_LIB_PRIVATE N_NIMCALL(FVector, findDirectionClosestToWorldLocation_)(USplineComponent_* self, FVector& worldLocation, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, divideSplineIntoPolylineRecursiveWithDistances_)(USplineComponent_* self, NF32 startDistanceAlongSpline, NF32 endDistanceAlongSpline, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NF32 maxSquareDistanceFromSpline, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints, TY__cXi18VefLjgCunTrTLkfGw& outDistancesAlongSpline);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, divideSplineIntoPolylineRecursive_)(USplineComponent_* self, NF32 startDistanceAlongSpline, NF32 endDistanceAlongSpline, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NF32 maxSquareDistanceFromSpline, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, convertSplineToPolyLine_)(USplineComponent_* self, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NF32 maxSquareDistanceFromSpline, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, convertSplineSegmentToPolyLine_)(USplineComponent_* self, NI32 splinePointStartIndex, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NF32 maxSquareDistanceFromSpline, TY__Bz8EFFwaAOJiUrMHOIgVGw& outPoints);
N_LIB_PRIVATE N_NIMCALL(void, clearSplinePoints_)(USplineComponent_* self, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, addSplineWorldPoint_)(USplineComponent_* self, FVector& position);
N_LIB_PRIVATE N_NIMCALL(void, addSplinePointAtIndex_)(USplineComponent_* self, FVector& position, NI32 index, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, addSplinePoint_)(USplineComponent_* self, FVector& position, tyEnum_ESplineCoordinateSpace__IvmP9cjqkaRRBpRZedMpatw coordinateSpace, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, addSplineLocalPoint_)(USplineComponent_* self, FVector& position);
N_LIB_PRIVATE N_NIMCALL(void, addPoints_)(USplineComponent_* self, TY__mBZUVg11b9ab5AFrh8yZkWw& points, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, addPoint_)(USplineComponent_* self, FSplinePoint_& point, NIM_BOOL bUpdateSpline);
N_LIB_PRIVATE N_NIMCALL(void, keepUSplineComponent)(USplineComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, updateMesh_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setStartTangent_)(USplineMeshComponent_* self, FVector startTangent, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setStartScale_)(USplineMeshComponent_* self, FVector2D startScale, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setStartRoll_)(USplineMeshComponent_* self, NF32 startRoll, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setStartPosition_)(USplineMeshComponent_* self, FVector startPos, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setStartOffset_)(USplineMeshComponent_* self, FVector2D startOffset, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setStartAndEnd_)(USplineMeshComponent_* self, FVector startPos, FVector startTangent, FVector endPos, FVector endTangent, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setSplineUpDir_)(USplineMeshComponent_* self, FVector& inSplineUpDir, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setForwardAxis_)(USplineMeshComponent_* self, tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA inForwardAxis, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setEndTangent_)(USplineMeshComponent_* self, FVector endTangent, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setEndScale_)(USplineMeshComponent_* self, FVector2D endScale, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setEndRoll_)(USplineMeshComponent_* self, NF32 endRoll, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setEndPosition_)(USplineMeshComponent_* self, FVector endPos, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setEndOffset_)(USplineMeshComponent_* self, FVector2D endOffset, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setBoundaryMin_)(USplineMeshComponent_* self, NF32 inBoundaryMin, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(void, setBoundaryMax_)(USplineMeshComponent_* self, NF32 inBoundaryMax, NIM_BOOL bUpdateMesh);
N_LIB_PRIVATE N_NIMCALL(FVector, getStartTangent_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getStartScale_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getStartRoll_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getStartPosition_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getStartOffset_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getSplineUpDir_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESplineMeshAxis__rquHx5i9buQzjRKf2BNCOSA, getForwardAxis_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getEndTangent_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getEndScale_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getEndRoll_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getEndPosition_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getEndOffset_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoundaryMin_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getBoundaryMax_)(USplineMeshComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSplineMeshComponent)(USplineMeshComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, innerConeAngle)(USpotLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinnerConeAngle)(USpotLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, outerConeAngle)(USpotLightComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setouterConeAngle)(USpotLightComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setOuterConeAngle_)(USpotLightComponent* self, NF32 newOuterConeAngle);
N_LIB_PRIVATE N_NIMCALL(void, setInnerConeAngle_)(USpotLightComponent* self, NF32 newInnerConeAngle);
N_LIB_PRIVATE N_NIMCALL(NF32, layerBottomAltitude)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlayerBottomAltitude)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, layerHeight)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlayerHeight)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, tracingStartMaxDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settracingStartMaxDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow, tracingMaxDistanceMode)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settracingMaxDistanceMode)(UVolumetricCloudComponent_* obj, tyEnum_EVolumetricCloudTracingMaxDistanceMode__tK9c3yJ9btvny0Td0VZdOtow val);
N_LIB_PRIVATE N_NIMCALL(NF32, tracingMaxDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settracingMaxDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, planetRadius)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplanetRadius)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FColor*, groundAlbedo)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgroundAlbedo)(UVolumetricCloudComponent_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, material)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterial)(UVolumetricCloudComponent_* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePerSampleAtmosphericLightTransmittance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePerSampleAtmosphericLightTransmittance)(UVolumetricCloudComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, skyLightCloudBottomOcclusion)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskyLightCloudBottomOcclusion)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewSampleCountScale)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewSampleCountScale)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, reflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowViewSampleCountScale)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowViewSampleCountScale)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowReflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowReflectionViewSampleCountScaleValue)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, shadowTracingDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowTracingDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, stopTracingTransmittanceThreshold)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstopTracingTransmittanceThreshold)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveRayleighScatteringStartDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveRayleighScatteringStartDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveRayleighScatteringFadeDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveRayleighScatteringFadeDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveMieScatteringStartDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveMieScatteringStartDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aerialPespectiveMieScatteringFadeDistance)(UVolumetricCloudComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaerialPespectiveMieScatteringFadeDistance)(UVolumetricCloudComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setViewSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setTracingStartMaxDistance_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setTracingMaxDistance_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setStopTracingTransmittanceThreshold_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setSkyLightCloudBottomOcclusion_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowViewSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowTracingDistance_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowReflectionViewSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setShadowReflectionSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionViewSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionSampleCountScale_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setPlanetRadius_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMaterial_)(UVolumetricCloudComponent_* self, UMaterialInterface* newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLayerHeight_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setLayerBottomAltitude_)(UVolumetricCloudComponent_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setGroundAlbedo_)(UVolumetricCloudComponent_* self, FColor newValue);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePerSampleAtmosphericLightTransmittance_)(UVolumetricCloudComponent_* self, NIM_BOOL newValue);
N_LIB_PRIVATE N_NIMCALL(void, keepUVolumetricCloudComponent)(UVolumetricCloudComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(UVolumetricCloudComponent_*, volumetricCloudComponent)(AVolumetricCloud_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricCloudComponent)(AVolumetricCloud_* obj, UVolumetricCloudComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAVolumetricCloud)(AVolumetricCloud_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA, targetBehavior)(UWorldPartitionStreamingSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetBehavior)(UWorldPartitionStreamingSourceComponent_* obj, tyEnum_EStreamingSourceTargetBehavior__S7PvYAUkpNsuTBkr9cNuqxA val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, targetGrids)(UWorldPartitionStreamingSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetGrids)(UWorldPartitionStreamingSourceComponent_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(TY__hE3Vl7BBAFmzClPscSpXag*, targetHLODLayers)(UWorldPartitionStreamingSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetHLODLayers)(UWorldPartitionStreamingSourceComponent_* obj, TY__hE3Vl7BBAFmzClPscSpXag val);
N_LIB_PRIVATE N_NIMCALL(TY__nOrP80JBRl6rmLy4ACFykA*, shapes)(UWorldPartitionStreamingSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshapes)(UWorldPartitionStreamingSourceComponent_* obj, TY__nOrP80JBRl6rmLy4ACFykA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, priority)(UWorldPartitionStreamingSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UWorldPartitionStreamingSourceComponent_* obj, tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingSourceEnabled_)(UWorldPartitionStreamingSourceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingCompleted_)(UWorldPartitionStreamingSourceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, enableStreamingSource_)(UWorldPartitionStreamingSourceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, disableStreamingSource_)(UWorldPartitionStreamingSourceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionStreamingSourceComponent)(UWorldPartitionStreamingSourceComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInterpControlPoint)(FInterpControlPoint_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFExponentialHeightFogData)(FExponentialHeightFogData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVertexOffsetUsage)(FVertexOffsetUsage fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEquirectProps)(FEquirectProps_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLODMappingData)(FLODMappingData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFComponentSync)(FComponentSync_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMaterialSpriteElement)(FMaterialSpriteElement_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEngineShowFlagsSetting)(FEngineShowFlagsSetting_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTentDistribution)(FTentDistribution_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSplinePoint)(FSplinePoint_ fake);
N_LIB_PRIVATE N_NIMCALL(NF, doubleValue)(UPCGAttributeExtractorTestObject_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdoubleValue)(UPCGAttributeExtractorTestObject_* obj, NF val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeExtractorTestObject)(UPCGAttributeExtractorTestObject_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setPointProperty_)(FPCGAttributePropertySelector_& selector, tyEnum_EPCGPointProperties__rw7rzqyph3uFoGwyrqU9csg inPointProperty);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setAttributeName_)(FPCGAttributePropertySelector_& selector, FName inAttributeName);
N_LIB_PRIVATE N_NIMCALL(FName, getName_)(FPCGAttributePropertySelector_& selector);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributePropertySelectorBlueprintHelpers)(UPCGAttributePropertySelectorBlueprintHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(NU64, uID)(UPCGData* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuID)(UPCGData* obj, NU64 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGData)(UPCGData* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(UPCGSettingsInterface* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(UPCGSettingsInterface* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDebug)(UPCGSettingsInterface* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDebug)(UPCGSettingsInterface* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FPCGDebugVisualizationSettings*, debugSettings)(UPCGSettingsInterface* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdebugSettings)(UPCGSettingsInterface* obj, FPCGDebugVisualizationSettings val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSettingsInterface)(UPCGSettingsInterface* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, seed)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setseed)(UPCGSettings* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(TY__9aCX9aZpnTKyovkIUe9cAFdbw, filterOnTags)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfilterOnTags)(UPCGSettings* obj, TY__9aCX9aZpnTKyovkIUe9cAFdbw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPassThroughFilteredOutInputs)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPassThroughFilteredOutInputs)(UPCGSettings* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__9aCX9aZpnTKyovkIUe9cAFdbw, tagsAppliedOnOutput)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, settagsAppliedOnOutput)(UPCGSettings* obj, TY__9aCX9aZpnTKyovkIUe9cAFdbw val);
N_LIB_PRIVATE N_NIMCALL(FPCGDeterminismSettings*, determinismSettings)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeterminismSettings)(UPCGSettings* obj, FPCGDeterminismSettings val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExposeToLibrary)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExposeToLibrary)(UPCGSettings* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FText*, category)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategory)(UPCGSettings* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, description)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdescription)(UPCGSettings* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSeed)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSeed)(UPCGSettings* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Yo1Yjd7i2DutCIeMMgxJhw*, cachedOverridableParams)(UPCGSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedOverridableParams)(UPCGSettings* obj, TY__Yo1Yjd7i2DutCIeMMgxJhw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSettings)(UPCGSettings* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, attributeName)(UPCGDistanceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeName)(UPCGDistanceSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetDensity)(UPCGDistanceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSetDensity)(UPCGDistanceSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF, maximumDistance)(UPCGDistanceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaximumDistance)(UPCGDistanceSettings_* obj, NF val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ, sourceShape)(UPCGDistanceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceShape)(UPCGDistanceSettings_* obj, tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ, targetShape)(UPCGDistanceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetShape)(UPCGDistanceSettings_* obj, tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDistanceSettings)(UPCGDistanceSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGatherSettings)(UPCGGatherSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGRerouteSettings)(UPCGRerouteSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__TE7SDEvuZgkTXbEmJ3FW6g, targetActor)(UPCGSpatialData* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetActor)(UPCGSpatialData* obj, TY__TE7SDEvuZgkTXbEmJ3FW6g val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGSpatialData* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGSpatialData* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, metadata)(UPCGSpatialData* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPCGSpatialData* obj, UPCGMetadata* val);
N_LIB_PRIVATE N_NIMCALL(UPCGUnionData_*, unionWith_)(UPCGSpatialData* self, UPCGSpatialData* inOther);
N_LIB_PRIVATE N_NIMCALL(UPCGPointData*, toPointDataWithContext_)(UPCGSpatialData* self, FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(UPCGPointData*, toPointData_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(UPCGDifferenceData_*, subtract_)(UPCGSpatialData* self, UPCGSpatialData* inOther);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, samplePoint_)(UPCGSpatialData* self, FTransform& transform, FBox& bounds, FPCGPoint& outPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectPoint_)(UPCGSpatialData* self, FTransform& inTransform, FBox& inBounds, FPCGProjectionParams& inParams, FPCGPoint& outPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, projectOn_)(UPCGSpatialData* self, UPCGSpatialData* inOther, FPCGProjectionParams& inParams);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, projectOn_)(UPCGSpatialData* self, UPCGSpatialData* inOther);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, mutableMetadata_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(UPCGIntersectionData_*, intersectWith_)(UPCGSpatialData* self, UPCGSpatialData* inOther);
N_LIB_PRIVATE N_NIMCALL(void, initializeFromData_)(UPCGSpatialData* self, UPCGSpatialData* inSource, UPCGMetadata* inMetadataParentOverride, NIM_BOOL bInheritMetadata, NIM_BOOL bInheritAttributes);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasNonTrivialTransform_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(FBox, getStrictBounds_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getNormal_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getDimension_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDensityAtPosition_)(UPCGSpatialData* self, FVector& inPosition);
N_LIB_PRIVATE N_NIMCALL(FBox, getBounds_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, createEmptyMetadata_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, constMetadata_)(UPCGSpatialData* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSpatialData)(UPCGSpatialData* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGPointData*, cachedPointData)(UPCGSpatialDataWithPointCache* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedPointData)(UPCGSpatialDataWithPointCache* obj, UPCGPointData* val);
N_LIB_PRIVATE N_NIMCALL(TY__9cjnl1CNmBfIpqRIgveS25A*, cachedBoundedPointDataBoxes)(UPCGSpatialDataWithPointCache* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBoundedPointDataBoxes)(UPCGSpatialDataWithPointCache* obj, TY__9cjnl1CNmBfIpqRIgveS25A val);
N_LIB_PRIVATE N_NIMCALL(TY__nxdMDYrUQ4bAku2UsCNbSg*, cachedBoundedPointData)(UPCGSpatialDataWithPointCache* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBoundedPointData)(UPCGSpatialDataWithPointCache* obj, TY__nxdMDYrUQ4bAku2UsCNbSg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSpatialDataWithPointCache)(UPCGSpatialDataWithPointCache* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDiffMetadata)(UPCGDifferenceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDiffMetadata)(UPCGDifferenceData_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, source)(UPCGDifferenceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsource)(UPCGDifferenceData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, difference)(UPCGDifferenceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdifference)(UPCGDifferenceData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGUnionData_*, differencesUnion)(UPCGDifferenceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdifferencesUnion)(UPCGDifferenceData_* obj, UPCGUnionData_* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg, densityFunction)(UPCGDifferenceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGDifferenceData_* obj, tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg val);
N_LIB_PRIVATE N_NIMCALL(void, setDensityFunction_)(UPCGDifferenceData_* self, tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg inDensityFunction);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGDifferenceData_* self, UPCGSpatialData* inData);
N_LIB_PRIVATE N_NIMCALL(void, addDifference_)(UPCGDifferenceData_* self, UPCGSpatialData* inDifference);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDifferenceData)(UPCGDifferenceData_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA, densityFunction)(UPCGIntersectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGIntersectionData_* obj, tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, a)(UPCGIntersectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seta)(UPCGIntersectionData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, b)(UPCGIntersectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setb)(UPCGIntersectionData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedBounds)(UPCGIntersectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBounds)(UPCGIntersectionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedStrictBounds)(UPCGIntersectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedStrictBounds)(UPCGIntersectionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGIntersectionData_* self, UPCGSpatialData* inA, UPCGSpatialData* inB);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGIntersectionData)(UPCGIntersectionData_* fake);
N_LIB_PRIVATE N_NIMCALL(FTransform*, transform)(UPCGSurfaceData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransform)(UPCGSurfaceData_* obj, FTransform val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSurfaceData)(UPCGSurfaceData_* fake);
N_LIB_PRIVATE N_NIMCALL(FBox*, bounds)(UPCGLandscapeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounds)(UPCGLandscapeData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHeightOnly)(UPCGLandscapeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHeightOnly)(UPCGLandscapeData_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseMetadata)(UPCGLandscapeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseMetadata)(UPCGLandscapeData_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGLandscapeData)(UPCGLandscapeData_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPolyLineData)(UPCGPolyLineData_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGLandscapeSplineData)(UPCGLandscapeSplineData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__WAW1niCvvRSIrb9cTV52p1w*, points)(UPCGPointData* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpoints)(UPCGPointData* obj, TY__WAW1niCvvRSIrb9cTV52p1w val);
N_LIB_PRIVATE N_NIMCALL(void, setPoints_)(UPCGPointData* self, TY__WAW1niCvvRSIrb9cTV52p1w& inPoints);
N_LIB_PRIVATE N_NIMCALL(TY__WAW1niCvvRSIrb9cTV52p1w, getPoints_)(UPCGPointData* self);
N_LIB_PRIVATE N_NIMCALL(FPCGPoint, getPoint_)(UPCGPointData* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, copyPointsFrom_)(UPCGPointData* self, UPCGPointData* inData, TY__TxfK2fhRJXNHttPFRcL6fA& inDataIndices);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPointData)(UPCGPointData* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, voxelSize)(UPCGPrimitiveData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvoxelSize)(UPCGPrimitiveData_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(TY__YVH2XmMPmrhAfzjN9awnywA, primitive)(UPCGPrimitiveData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprimitive)(UPCGPrimitiveData_* obj, TY__YVH2XmMPmrhAfzjN9awnywA val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedBounds)(UPCGPrimitiveData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBounds)(UPCGPrimitiveData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedStrictBounds)(UPCGPrimitiveData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedStrictBounds)(UPCGPrimitiveData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPrimitiveData)(UPCGPrimitiveData_* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, source)(UPCGProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsource)(UPCGProjectionData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, target)(UPCGProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settarget)(UPCGProjectionData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedBounds)(UPCGProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBounds)(UPCGProjectionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedStrictBounds)(UPCGProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedStrictBounds)(UPCGProjectionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FPCGProjectionParams*, projectionParams)(UPCGProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionParams)(UPCGProjectionData_* obj, FPCGProjectionParams val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGProjectionData)(UPCGProjectionData_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg, densityFunction)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGBaseTextureData_* obj, tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A, colorChannel)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorChannel)(UPCGBaseTextureData_* obj, tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A val);
N_LIB_PRIVATE N_NIMCALL(NF32, texelSize)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexelSize)(UPCGBaseTextureData_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAdvancedTiling)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAdvancedTiling)(UPCGBaseTextureData_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, tiling)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settiling)(UPCGBaseTextureData_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, centerOffset)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcenterOffset)(UPCGBaseTextureData_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(NF32, rotation)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotation)(UPCGBaseTextureData_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseTileBounds)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseTileBounds)(UPCGBaseTextureData_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FBox2D*, tileBounds)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileBounds)(UPCGBaseTextureData_* obj, FBox2D val);
N_LIB_PRIVATE N_NIMCALL(TY__LIN349biVKUmlJo9abXyib3Q*, colorData)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorData)(UPCGBaseTextureData_* obj, TY__LIN349biVKUmlJo9abXyib3Q val);
N_LIB_PRIVATE N_NIMCALL(FBox*, bounds)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounds)(UPCGBaseTextureData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(NI32, height)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheight)(UPCGBaseTextureData_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, width)(UPCGBaseTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidth)(UPCGBaseTextureData_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBaseTextureData)(UPCGBaseTextureData_* fake);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, renderTarget)(UPCGRenderTargetData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderTarget)(UPCGRenderTargetData_* obj, UTextureRenderTarget2D_* val);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGRenderTargetData_* self, UTextureRenderTarget2D_* inRenderTarget, FTransform& inTransform);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGRenderTargetData)(UPCGRenderTargetData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__PWP0I58i3Y9a8vOEBvaexPQ, spline)(UPCGSplineData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspline)(UPCGSplineData_* obj, TY__PWP0I58i3Y9a8vOEBvaexPQ val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedBounds)(UPCGSplineData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBounds)(UPCGSplineData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSplineData)(UPCGSplineData_* fake);
N_LIB_PRIVATE N_NIMCALL(FInterpCurveVector2D*, projectedPosition)(UPCGSplineProjectionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectedPosition)(UPCGSplineProjectionData_* obj, FInterpCurveVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSplineProjectionData)(UPCGSplineProjectionData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__TJsOsj3giRybq8BLPALfug, texture)(UPCGTextureData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UPCGTextureData_* obj, TY__TJsOsj3giRybq8BLPALfug val);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGTextureData_* self, UTexture2D* inTexture, FTransform& inTransform);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGTextureData)(UPCGTextureData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__GV9bgTRIC3LTNTm8aIOqkIA*, data)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdata)(UPCGUnionData_* obj, TY__GV9bgTRIC3LTNTm8aIOqkIA val);
N_LIB_PRIVATE N_NIMCALL(UPCGSpatialData*, firstNonTrivialTransformData)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfirstNonTrivialTransformData)(UPCGUnionData_* obj, UPCGSpatialData* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg, unionType)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setunionType)(UPCGUnionData_* obj, tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ, densityFunction)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGUnionData_* obj, tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedBounds)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedBounds)(UPCGUnionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FBox*, cachedStrictBounds)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedStrictBounds)(UPCGUnionData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(NI32, cachedDimension)(UPCGUnionData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedDimension)(UPCGUnionData_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGUnionData_* self, UPCGSpatialData* inA, UPCGSpatialData* inB);
N_LIB_PRIVATE N_NIMCALL(void, addData_)(UPCGUnionData_* self, UPCGSpatialData* inData);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGUnionData)(UPCGUnionData_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, voxelSize)(UPCGVolumeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvoxelSize)(UPCGVolumeData_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(TY__C5WBk6ZJB2jIMppRl9a5zkw, volume)(UPCGVolumeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolume)(UPCGVolumeData_* obj, TY__C5WBk6ZJB2jIMppRl9a5zkw val);
N_LIB_PRIVATE N_NIMCALL(FBox*, bounds)(UPCGVolumeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounds)(UPCGVolumeData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FBox*, strictBounds)(UPCGVolumeData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrictBounds)(UPCGVolumeData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGVolumeData)(UPCGVolumeData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__9aywsppiUJ9atOSncC9bVP09ag, world)(UPCGWorldVolumetricData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworld)(UPCGWorldVolumetricData_* obj, TY__9aywsppiUJ9atOSncC9bVP09ag val);
N_LIB_PRIVATE N_NIMCALL(TY__PbI9bnM9aNXYPU9amBlqzxcDQ, originatingComponent)(UPCGWorldVolumetricData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoriginatingComponent)(UPCGWorldVolumetricData_* obj, TY__PbI9bnM9aNXYPU9amBlqzxcDQ val);
N_LIB_PRIVATE N_NIMCALL(FPCGWorldVolumetricQueryParams_*, queryParams)(UPCGWorldVolumetricData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setqueryParams)(UPCGWorldVolumetricData_* obj, FPCGWorldVolumetricQueryParams_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGWorldVolumetricData)(UPCGWorldVolumetricData_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__9aywsppiUJ9atOSncC9bVP09ag, world)(UPCGWorldRayHitData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworld)(UPCGWorldRayHitData_* obj, TY__9aywsppiUJ9atOSncC9bVP09ag val);
N_LIB_PRIVATE N_NIMCALL(TY__PbI9bnM9aNXYPU9amBlqzxcDQ, originatingComponent)(UPCGWorldRayHitData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoriginatingComponent)(UPCGWorldRayHitData_* obj, TY__PbI9bnM9aNXYPU9amBlqzxcDQ val);
N_LIB_PRIVATE N_NIMCALL(FBox*, bounds)(UPCGWorldRayHitData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounds)(UPCGWorldRayHitData_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FPCGWorldRayHitQueryParams_*, queryParams)(UPCGWorldRayHitData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setqueryParams)(UPCGWorldRayHitData_* obj, FPCGWorldRayHitQueryParams_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGWorldRayHitData)(UPCGWorldRayHitData_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, outputTarget)(UPCGMetadataSettingsBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputTarget)(UPCGMetadataSettingsBase_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataSettingsBase)(UPCGMetadataSettingsBase_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataBitwiseOperation__ADpdVAzFzpPEt9bVM5tXlCw, operation)(UPCGMetadataBitwiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataBitwiseSettings_* obj, tyEnum_EPCGMedadataBitwiseOperation__ADpdVAzFzpPEt9bVM5tXlCw val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataBitwiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataBitwiseSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataBitwiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataBitwiseSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataBitwiseSettings)(UPCGMetadataBitwiseSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataBooleanOperation__yU5n45qHYIMGVNiiwnDJqA, operation)(UPCGMetadataBooleanSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataBooleanSettings_* obj, tyEnum_EPCGMedadataBooleanOperation__yU5n45qHYIMGVNiiwnDJqA val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataBooleanSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataBooleanSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataBooleanSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataBooleanSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataBooleanSettings)(UPCGMetadataBooleanSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGMetadataBreakTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGMetadataBreakTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataBreakTransformSettings)(UPCGMetadataBreakTransformSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGMetadataBreakVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGMetadataBreakVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataBreakVectorSettings)(UPCGMetadataBreakVectorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataCompareOperation__9czpO1jGxXkwz3vTi9cfw0pw, operation)(UPCGMetadataCompareSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataCompareSettings_* obj, tyEnum_EPCGMedadataCompareOperation__9czpO1jGxXkwz3vTi9cfw0pw val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataCompareSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataCompareSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataCompareSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataCompareSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(NF, tolerance)(UPCGMetadataCompareSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settolerance)(UPCGMetadataCompareSettings_* obj, NF val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataCompareSettings)(UPCGMetadataCompareSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGMetadataOperationSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGMetadataOperationSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, outputTarget)(UPCGMetadataOperationSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputTarget)(UPCGMetadataOperationSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataOperationSettings)(UPCGMetadataOperationSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataMakeTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataMakeTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataMakeTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataMakeTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataMakeTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataMakeTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataMakeTransformSettings)(UPCGMetadataMakeTransformSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataMakeVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataMakeVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataMakeVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource4)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource4)(UPCGMetadataMakeVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg, outputType)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputType)(UPCGMetadataMakeVectorSettings_* obj, tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataMakeVector3__IgZkeqBaiPjzOH9brtqe30A, makeVector3Op)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmakeVector3Op)(UPCGMetadataMakeVectorSettings_* obj, tyEnum_EPCGMetadataMakeVector3__IgZkeqBaiPjzOH9brtqe30A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataMakeVector4__Wa2okPGqlQ4kb5cRAkhtvw, makeVector4Op)(UPCGMetadataMakeVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmakeVector4Op)(UPCGMetadataMakeVectorSettings_* obj, tyEnum_EPCGMetadataMakeVector4__Wa2okPGqlQ4kb5cRAkhtvw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataMakeVectorSettings)(UPCGMetadataMakeVectorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataMathsOperation__sAq9cHT4FTrT5pZRayVIhcg, operation)(UPCGMetadataMathsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataMathsSettings_* obj, tyEnum_EPCGMedadataMathsOperation__sAq9cHT4FTrT5pZRayVIhcg val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataMathsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataMathsSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataMathsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataMathsSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataMathsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataMathsSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataMathsSettings)(UPCGMetadataMathsSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, partitionAttribute)(UPCGMetadataPartitionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpartitionAttribute)(UPCGMetadataPartitionSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataPartitionSettings)(UPCGMetadataPartitionSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, attributeToRename)(UPCGMetadataRenameSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeToRename)(UPCGMetadataRenameSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FName*, newAttributeName)(UPCGMetadataRenameSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnewAttributeName)(UPCGMetadataRenameSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataRenameSettings)(UPCGMetadataRenameSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataRotatorOperation__oB9avmFJHHWzrCTE2HhRNgg, operation)(UPCGMetadataRotatorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataRotatorSettings_* obj, tyEnum_EPCGMedadataRotatorOperation__oB9avmFJHHWzrCTE2HhRNgg val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataRotatorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataRotatorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataRotatorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataRotatorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataRotatorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataRotatorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataRotatorSettings)(UPCGMetadataRotatorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataTransformOperation__3XDJ3FzE0zDv1B8HLFx1Yw, operation)(UPCGMetadataTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataTransformSettings_* obj, tyEnum_EPCGMedadataTransformOperation__3XDJ3FzE0zDv1B8HLFx1Yw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGTransformLerpMode__iMBMX3id6u2K48FH2JEbEw, transformLerpMode)(UPCGMetadataTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransformLerpMode)(UPCGMetadataTransformSettings_* obj, tyEnum_EPCGTransformLerpMode__iMBMX3id6u2K48FH2JEbEw val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataTransformSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataTransformSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataTransformSettings)(UPCGMetadataTransformSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataTrigOperation__lSdWiP2T3hpnvY9bKeMF9cnA, operation)(UPCGMetadataTrigSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataTrigSettings_* obj, tyEnum_EPCGMedadataTrigOperation__lSdWiP2T3hpnvY9bKeMF9cnA val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataTrigSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataTrigSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataTrigSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataTrigSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataTrigSettings)(UPCGMetadataTrigSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMedadataVectorOperation__ZFtca5ZQfvHWYc9a83sq6sA, operation)(UPCGMetadataVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGMetadataVectorSettings_* obj, tyEnum_EPCGMedadataVectorOperation__ZFtca5ZQfvHWYc9a83sq6sA val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource1)(UPCGMetadataVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource1)(UPCGMetadataVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource2)(UPCGMetadataVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource2)(UPCGMetadataVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource3)(UPCGMetadataVectorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource3)(UPCGMetadataVectorSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataVectorSettings)(UPCGMetadataVectorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGAttributeFilterOperation__yXS49bhn7oL9cVG9c7LN5O9apA, operation)(UPCGAttributeFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGAttributeFilterSettings_* obj, tyEnum_EPCGAttributeFilterOperation__yXS49bhn7oL9cVG9c7LN5O9apA val);
N_LIB_PRIVATE N_NIMCALL(FString, selectedAttributes)(UPCGAttributeFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectedAttributes)(UPCGAttributeFilterSettings_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeFilterSettings)(UPCGAttributeFilterSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGAttributeGetFromPointIndexSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGAttributeGetFromPointIndexSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(NI32, index)(UPCGAttributeGetFromPointIndexSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setindex)(UPCGAttributeGetFromPointIndexSettings_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FName*, outputAttributeName)(UPCGAttributeGetFromPointIndexSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputAttributeName)(UPCGAttributeGetFromPointIndexSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeGetFromPointIndexSettings)(UPCGAttributeGetFromPointIndexSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGAttributeReduceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGAttributeReduceSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FName*, outputAttributeName)(UPCGAttributeReduceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputAttributeName)(UPCGAttributeReduceSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGAttributeReduceOperation__5ib0IoARKp2ZNusyr0HUJg, operation)(UPCGAttributeReduceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGAttributeReduceSettings_* obj, tyEnum_EPCGAttributeReduceOperation__5ib0IoARKp2ZNusyr0HUJg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeReduceSettings)(UPCGAttributeReduceSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, inputSource)(UPCGAttributeSelectSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputSource)(UPCGAttributeSelectSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(FName*, outputAttributeName)(UPCGAttributeSelectSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputAttributeName)(UPCGAttributeSelectSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGAttributeSelectOperation__25QXLzVuNnUQyh0sfrPHqQ, operation)(UPCGAttributeSelectSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGAttributeSelectSettings_* obj, tyEnum_EPCGAttributeSelectOperation__25QXLzVuNnUQyh0sfrPHqQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGAttributeSelectAxis__5mkieF6V6F9bwj4OA42jsow, axis)(UPCGAttributeSelectSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaxis)(UPCGAttributeSelectSettings_* obj, tyEnum_EPCGAttributeSelectAxis__5mkieF6V6F9bwj4OA42jsow val);
N_LIB_PRIVATE N_NIMCALL(FVector4*, customAxis)(UPCGAttributeSelectSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomAxis)(UPCGAttributeSelectSettings_* obj, FVector4 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeSelectSettings)(UPCGAttributeSelectSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, sourceAttributeName)(UPCGAttributeTransferSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceAttributeName)(UPCGAttributeTransferSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FName*, targetAttributeName)(UPCGAttributeTransferSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetAttributeName)(UPCGAttributeTransferSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGAttributeTransferSettings)(UPCGAttributeTransferSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGBoundsModifierMode__GVOSg4JrpzkuFeiw5iHT2A, mode)(UPCGBoundsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmode)(UPCGBoundsModifierSettings_* obj, tyEnum_EPCGBoundsModifierMode__GVOSg4JrpzkuFeiw5iHT2A val);
N_LIB_PRIVATE N_NIMCALL(FVector*, boundsMin)(UPCGBoundsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboundsMin)(UPCGBoundsModifierSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, boundsMax)(UPCGBoundsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboundsMax)(UPCGBoundsModifierSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAffectSteepness)(UPCGBoundsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAffectSteepness)(UPCGBoundsModifierSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, steepness)(UPCGBoundsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsteepness)(UPCGBoundsModifierSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBoundsModifierSettings)(UPCGBoundsModifierSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGCollapseSettings)(UPCGCollapseSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw, rotationInheritance)(UPCGCopyPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotationInheritance)(UPCGCopyPointsSettings_* obj, tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw, scaleInheritance)(UPCGCopyPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscaleInheritance)(UPCGCopyPointsSettings_* obj, tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw, colorInheritance)(UPCGCopyPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorInheritance)(UPCGCopyPointsSettings_* obj, tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw, seedInheritance)(UPCGCopyPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setseedInheritance)(UPCGCopyPointsSettings_* obj, tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGCopyPointsMetadataInheritanceMode__hjw8Kcu9cmq9btRyVLnDTdTg, attributeInheritance)(UPCGCopyPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeInheritance)(UPCGCopyPointsSettings_* obj, tyEnum_EPCGCopyPointsMetadataInheritanceMode__hjw8Kcu9cmq9btRyVLnDTdTg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGCopyPointsSettings)(UPCGCopyPointsSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, outputAttributeName)(UPCGCreateAttributeSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputAttributeName)(UPCGCreateAttributeSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFromSourceParam)(UPCGCreateAttributeSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFromSourceParam)(UPCGCreateAttributeSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FName*, sourceParamAttributeName)(UPCGCreateAttributeSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceParamAttributeName)(UPCGCreateAttributeSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FPCGMetadataTypesConstantStruct_*, attributeTypes)(UPCGCreateAttributeSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeTypes)(UPCGCreateAttributeSettings_* obj, FPCGMetadataTypesConstantStruct_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGCreateAttributeSettings)(UPCGCreateAttributeSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGActorSelectorSettings_*, actorSelector)(UPCGDataFromActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactorSelector)(UPCGDataFromActorSettings_* obj, FPCGActorSelectorSettings_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGGetDataFromActorMode__mH6PPaKeTPC9azIoWuHx85g, mode)(UPCGDataFromActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmode)(UPCGDataFromActorSettings_* obj, tyEnum_EPCGGetDataFromActorMode__mH6PPaKeTPC9azIoWuHx85g val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisplayModeSettings)(UPCGDataFromActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisplayModeSettings)(UPCGDataFromActorSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, expectedPins)(UPCGDataFromActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexpectedPins)(UPCGDataFromActorSettings_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(FName*, propertyName)(UPCGDataFromActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpropertyName)(UPCGDataFromActorSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDataFromActorSettings)(UPCGDataFromActorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, rowName)(UPCGDataTableRowToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrowName)(UPCGDataTableRowToParamDataSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FString, pathOverride)(UPCGDataTableRowToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpathOverride)(UPCGDataTableRowToParamDataSettings_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(TY__mobDcUdFBbH5oSUq9bhIcYQ, dataTable)(UPCGDataTableRowToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdataTable)(UPCGDataTableRowToParamDataSettings_* obj, TY__mobDcUdFBbH5oSUq9bhIcYQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDataTableRowToParamDataSettings)(UPCGDataTableRowToParamDataSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDebugSettings)(UPCGDebugSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, lowerBound)(UPCGDensityFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlowerBound)(UPCGDensityFilterSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, upperBound)(UPCGDensityFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setupperBound)(UPCGDensityFilterSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInvertFilter)(UPCGDensityFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInvertFilter)(UPCGDensityFilterSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGDensityFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGDensityFilterSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDensityFilterSettings)(UPCGDensityFilterSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGDensityNoiseMode__srW8K9aBWT9bnQc3FJFy1qBg, densityMode)(UPCGDensityNoiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityMode)(UPCGDensityNoiseSettings_* obj, tyEnum_EPCGDensityNoiseMode__srW8K9aBWT9bnQc3FJFy1qBg val);
N_LIB_PRIVATE N_NIMCALL(NF32, densityNoiseMin)(UPCGDensityNoiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityNoiseMin)(UPCGDensityNoiseSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, densityNoiseMax)(UPCGDensityNoiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityNoiseMax)(UPCGDensityNoiseSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInvertSourceDensity)(UPCGDensityNoiseSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInvertSourceDensity)(UPCGDensityNoiseSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDensityNoiseSettings)(UPCGDensityNoiseSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, remapMin)(UPCGLinearDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremapMin)(UPCGLinearDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, remapMax)(UPCGLinearDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremapMax)(UPCGLinearDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMultiplyDensity)(UPCGLinearDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMultiplyDensity)(UPCGLinearDensityRemapSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGLinearDensityRemapSettings)(UPCGLinearDensityRemapSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, inRangeMin)(UPCGDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinRangeMin)(UPCGDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, inRangeMax)(UPCGDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinRangeMax)(UPCGDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, outRangeMin)(UPCGDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutRangeMin)(UPCGDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, outRangeMax)(UPCGDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutRangeMax)(UPCGDensityRemapSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExcludeValuesOutsideInputRange)(UPCGDensityRemapSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExcludeValuesOutsideInputRange)(UPCGDensityRemapSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDensityRemapSettings)(UPCGDensityRemapSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg, densityFunction)(UPCGDifferenceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGDifferenceSettings_* obj, tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGDifferenceMode__CzPAakEbQBuTqovbywDp6g, mode)(UPCGDifferenceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmode)(UPCGDifferenceSettings_* obj, tyEnum_EPCGDifferenceMode__CzPAakEbQBuTqovbywDp6g val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDiffMetadata)(UPCGDifferenceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDiffMetadata)(UPCGDifferenceSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGDifferenceSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGDifferenceSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDifferenceSettings)(UPCGDifferenceSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCreatesArtifacts)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCreatesArtifacts)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCacheable)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCacheable)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanBeMultithreaded)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanBeMultithreaded)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__qUrNne0wu4kCq2fgTGFcwQ*, customInputPins)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomInputPins)(UPCGBlueprintElement* obj, TY__qUrNne0wu4kCq2fgTGFcwQ val);
N_LIB_PRIVATE N_NIMCALL(TY__qUrNne0wu4kCq2fgTGFcwQ*, customOutputPins)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomOutputPins)(UPCGBlueprintElement* obj, TY__qUrNne0wu4kCq2fgTGFcwQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHasDefaultInPin)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHasDefaultInPin)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHasDefaultOutPin)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHasDefaultOutPin)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExposeToLibrary)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExposeToLibrary)(UPCGBlueprintElement* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FText*, category)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategory)(UPCGBlueprintElement* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, description)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdescription)(UPCGBlueprintElement* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NI32, dependencyParsingDepth)(UPCGBlueprintElement* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdependencyParsingDepth)(UPCGBlueprintElement* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointPairLoopBody_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inA, UPCGPointData* inB, FPCGPoint& inPointA, FPCGPoint& inPointB, FPCGPoint& outPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pointLoopBody_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inData, FPCGPoint& inPoint, FPCGPoint& outPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, outputLabels_)(UPCGBlueprintElement* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGSettingsType__cSTBn3GvXArMlLGuDLmozA, nodeTypeOverride_)(UPCGBlueprintElement* self);
N_LIB_PRIVATE N_NIMCALL(FName, nodeTitleOverride_)(UPCGBlueprintElement* self);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, nodeColorOverride_)(UPCGBlueprintElement* self);
N_LIB_PRIVATE N_NIMCALL(TY__WAW1niCvvRSIrb9cTV52p1w, multiPointLoopBody_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inData, FPCGPoint& inPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(void, multiLoopOnPoints_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inData, UPCGPointData*& outData, UPCGPointData* optionalOutData);
N_LIB_PRIVATE N_NIMCALL(void, loopOnPoints_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inData, UPCGPointData*& outData, UPCGPointData* optionalOutData);
N_LIB_PRIVATE N_NIMCALL(void, loopOnPointPairs_)(UPCGBlueprintElement* self, FPCGContext& inContext, UPCGPointData* inA, UPCGPointData* inB, UPCGPointData*& outData, UPCGPointData* optionalOutData);
N_LIB_PRIVATE N_NIMCALL(void, loopNTimes_)(UPCGBlueprintElement* self, FPCGContext& inContext, NI64 numIterations, UPCGPointData*& outData, UPCGSpatialData* inA, UPCGSpatialData* inB, UPCGPointData* optionalOutData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, iterationLoopBody_)(UPCGBlueprintElement* self, FPCGContext& inContext, NI64 iteration, UPCGSpatialData* inA, UPCGSpatialData* inB, FPCGPoint& outPoint, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, inputLabels_)(UPCGBlueprintElement* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getSeed_)(UPCGBlueprintElement* self, FPCGContext& inContext);
N_LIB_PRIVATE N_NIMCALL(FRandomStream, getRandomStream_)(UPCGBlueprintElement* self, FPCGContext& inContext);
N_LIB_PRIVATE N_NIMCALL(void, executeWithContext_)(UPCGBlueprintElement* self, FPCGContext& inContext, FPCGDataCollection& input, FPCGDataCollection& output);
N_LIB_PRIVATE N_NIMCALL(void, execute_)(UPCGBlueprintElement* self, FPCGDataCollection& input, FPCGDataCollection& output);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBlueprintElement)(UPCGBlueprintElement* fake);
N_LIB_PRIVATE N_NIMCALL(TY__dhnvFye89crSEkh8OFZUroQ, blueprintElementType)(UPCGBlueprintSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblueprintElementType)(UPCGBlueprintSettings* obj, TY__dhnvFye89crSEkh8OFZUroQ val);
N_LIB_PRIVATE N_NIMCALL(UPCGBlueprintElement*, blueprintElementInstance)(UPCGBlueprintSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblueprintElementInstance)(UPCGBlueprintSettings* obj, UPCGBlueprintElement* val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, trackedActorTags)(UPCGBlueprintSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, settrackedActorTags)(UPCGBlueprintSettings* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(void, setElementType_)(UPCGBlueprintSettings* self, TY__dhnvFye89crSEkh8OFZUroQ inElementType, UPCGBlueprintElement*& elementInstance);
N_LIB_PRIVATE N_NIMCALL(TY__dhnvFye89crSEkh8OFZUroQ, getElementType_)(UPCGBlueprintSettings* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBlueprintSettings)(UPCGBlueprintSettings* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGFilterByTagOperation__aMnr1uvYzJvUeKa1OiIlXQ, operation)(UPCGFilterByTagSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoperation)(UPCGFilterByTagSettings_* obj, tyEnum_EPCGFilterByTagOperation__aMnr1uvYzJvUeKa1OiIlXQ val);
N_LIB_PRIVATE N_NIMCALL(FString, selectedTags)(UPCGFilterByTagSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectedTags)(UPCGFilterByTagSettings_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGFilterByTagSettings)(UPCGFilterByTagSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA, densityFunction)(UPCGIntersectionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGIntersectionSettings_* obj, tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGIntersectionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGIntersectionSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGIntersectionSettings)(UPCGIntersectionSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMergeMetadata)(UPCGMergeSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMergeMetadata)(UPCGMergeSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMergeSettings)(UPCGMergeSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, extents)(UPCGPointExtentsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setextents)(UPCGPointExtentsModifierSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGPointExtentsModifierMode__3W4BB249cxezywbCsDc26WQ, mode)(UPCGPointExtentsModifierSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmode)(UPCGPointExtentsModifierSettings_* obj, tyEnum_EPCGPointExtentsModifierMode__3W4BB249cxezywbCsDc26WQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPointExtentsModifierSettings)(UPCGPointExtentsModifierSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGPointFilterOperator__k9bc10IrnW6KAOhNr9bjCCRw, Operator)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setOperator)(UPCGPointFilterSettings_* obj, tyEnum_EPCGPointFilterOperator__k9bc10IrnW6KAOhNr9bjCCRw val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, targetAttribute)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetAttribute)(UPCGPointFilterSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseConstantThreshold)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseConstantThreshold)(UPCGPointFilterSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, thresholdAttribute)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setthresholdAttribute)(UPCGPointFilterSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSpatialQuery)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSpatialQuery)(UPCGPointFilterSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FPCGMetadataTypesConstantStruct_*, attributeTypes)(UPCGPointFilterSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeTypes)(UPCGPointFilterSettings_* obj, FPCGMetadataTypesConstantStruct_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPointFilterSettings)(UPCGPointFilterSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__HsruxL9cSZAsQtAYkILObJw, matchAndSetType)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmatchAndSetType)(UPCGPointMatchAndSetSettings_* obj, TY__HsruxL9cSZAsQtAYkILObJw val);
N_LIB_PRIVATE N_NIMCALL(UPCGMatchAndSetBase_*, matchAndSetInstance)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmatchAndSetInstance)(UPCGPointMatchAndSetSettings_* obj, UPCGMatchAndSetBase_* val);
N_LIB_PRIVATE N_NIMCALL(FPCGAttributePropertySelector_*, setTarget)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsetTarget)(UPCGPointMatchAndSetSettings_* obj, FPCGAttributePropertySelector_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg, setTargetType)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsetTargetType)(UPCGPointMatchAndSetSettings_* obj, tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ, setTargetStringMode)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsetTargetStringMode)(UPCGPointMatchAndSetSettings_* obj, tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetTargetIsAttribute)(UPCGPointMatchAndSetSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSetTargetIsAttribute)(UPCGPointMatchAndSetSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setMatchAndSetType_)(UPCGPointMatchAndSetSettings_* self, TY__HsruxL9cSZAsQtAYkILObJw inMatchAndSetType);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPointMatchAndSetSettings)(UPCGPointMatchAndSetSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, ratio)(UPCGPointSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setratio)(UPCGPointSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGPointSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGPointSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPointSamplerSettings)(UPCGPointSamplerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGProjectionParams*, projectionParams)(UPCGProjectionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionParams)(UPCGProjectionSettings_* obj, FPCGProjectionParams val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGProjectionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGProjectionSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGProjectionSettings)(UPCGProjectionSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGActorSelectorSettings_*, actorSelector)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactorSelector)(UPCGPropertyToParamDataSettings_* obj, FPCGActorSelectorSettings_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSelectComponent)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSelectComponent)(UPCGPropertyToParamDataSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__EMMPexIt2htv9ac7xWWGtbw, componentClass)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcomponentClass)(UPCGPropertyToParamDataSettings_* obj, TY__EMMPexIt2htv9ac7xWWGtbw val);
N_LIB_PRIVATE N_NIMCALL(FName*, propertyName)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpropertyName)(UPCGPropertyToParamDataSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExtractObjectAndStruct)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExtractObjectAndStruct)(UPCGPropertyToParamDataSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FName*, outputAttributeName)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputAttributeName)(UPCGPropertyToParamDataSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysRequeryActors)(UPCGPropertyToParamDataSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysRequeryActors)(UPCGPropertyToParamDataSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPropertyToParamDataSettings)(UPCGPropertyToParamDataSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGSelfPruningType__Rs3msIwbIBK4GyC39bc1Hjw, pruningType)(UPCGSelfPruningSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpruningType)(UPCGSelfPruningSettings_* obj, tyEnum_EPCGSelfPruningType__Rs3msIwbIBK4GyC39bc1Hjw val);
N_LIB_PRIVATE N_NIMCALL(NF32, radiusSimilarityFactor)(UPCGSelfPruningSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradiusSimilarityFactor)(UPCGSelfPruningSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRandomizedPruning)(UPCGSelfPruningSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRandomizedPruning)(UPCGSelfPruningSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSelfPruningSettings)(UPCGSelfPruningSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBaseSubgraphSettings)(UPCGBaseSubgraphSettings* fake);
N_LIB_PRIVATE N_NIMCALL(TY__9akcXb9b3ftlkdW8NDwR22Mg, templateActorClass)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settemplateActorClass)(UPCGSpawnActorSettings_* obj, TY__9akcXb9b3ftlkdW8NDwR22Mg val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, postSpawnFunctionNames)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostSpawnFunctionNames)(UPCGSpawnActorSettings_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGSpawnActorOption__Nzg19cZ3Ruaf9cb85pvVjQjA, option)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoption)(UPCGSpawnActorSettings_* obj, tyEnum_EPCGSpawnActorOption__Nzg19cZ3Ruaf9cb85pvVjQjA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceDisableActorParsing)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceDisableActorParsing)(UPCGSpawnActorSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGSpawnActorGenerationTrigger__fG4cucW1s4fHQD1ktbsvQQ, bGenerationTrigger)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerationTrigger)(UPCGSpawnActorSettings_* obj, tyEnum_EPCGSpawnActorGenerationTrigger__fG4cucW1s4fHQD1ktbsvQQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritActorTags)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritActorTags)(UPCGSpawnActorSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, tagsToAddOnActors)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settagsToAddOnActors)(UPCGSpawnActorSettings_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(AActor*, templateActor)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settemplateActor)(UPCGSpawnActorSettings_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(TY__xKLBeTWDyMlF04su9aoMraA*, actorOverrides)(UPCGSpawnActorSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactorOverrides)(UPCGSpawnActorSettings_* obj, TY__xKLBeTWDyMlF04su9aoMraA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSpawnActorSettings)(UPCGSpawnActorSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, nodeTitle)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnodeTitle)(UPCGNode* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, nodeTitleColor)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnodeTitleColor)(UPCGNode* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NI32, positionX)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpositionX)(UPCGNode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, positionY)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpositionY)(UPCGNode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FString, nodeComment)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnodeComment)(UPCGNode* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCommentBubblePinned)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCommentBubblePinned)(UPCGNode* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCommentBubbleVisible)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCommentBubbleVisible)(UPCGNode* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UPCGSettingsInterface*, settingsInterface)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettingsInterface)(UPCGNode* obj, UPCGSettingsInterface* val);
N_LIB_PRIVATE N_NIMCALL(TY__cjm3znKcOU1b9cTi62gkADA*, inputPins)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputPins)(UPCGNode* obj, TY__cjm3znKcOU1b9cTi62gkADA val);
N_LIB_PRIVATE N_NIMCALL(TY__cjm3znKcOU1b9cTi62gkADA*, outputPins)(UPCGNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputPins)(UPCGNode* obj, TY__cjm3znKcOU1b9cTi62gkADA val);
N_LIB_PRIVATE N_NIMCALL(void, setNodePosition_)(UPCGNode* self, NI32 inPositionX, NI32 inPositionY);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeEdgeTo_)(UPCGNode* self, FName fromPinLable, UPCGNode* to, FName toPinLabel);
N_LIB_PRIVATE N_NIMCALL(UPCGSettings*, getSettings_)(UPCGNode* self);
N_LIB_PRIVATE N_NIMCALL(void, getNodePosition_)(UPCGNode* self, NI32& outPositionX, NI32& outPositionY);
N_LIB_PRIVATE N_NIMCALL(UPCGGraph*, getGraph_)(UPCGNode* self);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, addEdgeTo_)(UPCGNode* self, FName fromPinLabel, UPCGNode* to, FName toPinLabel);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGNode)(UPCGNode* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDynamicGraph)(UPCGBaseSubgraphNode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDynamicGraph)(UPCGBaseSubgraphNode* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBaseSubgraphNode)(UPCGBaseSubgraphNode* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSpawnActorNode)(UPCGSpawnActorNode_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGSplineSamplerParams_*, samplerParams)(UPCGSplineSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsamplerParams)(UPCGSplineSamplerSettings_* obj, FPCGSplineSamplerParams_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSplineSamplerSettings)(UPCGSplineSamplerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__z28N9aglbyH7XZ0vyLS2Tvg, meshSelectorType)(UPCGStaticMeshSpawnerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshSelectorType)(UPCGStaticMeshSpawnerSettings_* obj, TY__z28N9aglbyH7XZ0vyLS2Tvg val);
N_LIB_PRIVATE N_NIMCALL(UPCGMeshSelectorBase_*, meshSelectorInstance)(UPCGStaticMeshSpawnerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshSelectorInstance)(UPCGStaticMeshSpawnerSettings_* obj, UPCGMeshSelectorBase_* val);
N_LIB_PRIVATE N_NIMCALL(TY__pnkhlx5XNLEapSerF7hq7A, instancePackerType)(UPCGStaticMeshSpawnerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstancePackerType)(UPCGStaticMeshSpawnerSettings_* obj, TY__pnkhlx5XNLEapSerF7hq7A val);
N_LIB_PRIVATE N_NIMCALL(UPCGInstancePackerBase_*, instancePackerInstance)(UPCGStaticMeshSpawnerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstancePackerInstance)(UPCGStaticMeshSpawnerSettings_* obj, UPCGInstancePackerBase_* val);
N_LIB_PRIVATE N_NIMCALL(FName*, outAttributeName)(UPCGStaticMeshSpawnerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutAttributeName)(UPCGStaticMeshSpawnerSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, setMeshSelectorType_)(UPCGStaticMeshSpawnerSettings_* self, TY__z28N9aglbyH7XZ0vyLS2Tvg inMeshSelectorType);
N_LIB_PRIVATE N_NIMCALL(void, setInstancePackerType_)(UPCGStaticMeshSpawnerSettings_* self, TY__pnkhlx5XNLEapSerF7hq7A inInstancePackerType);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGStaticMeshSpawnerSettings)(UPCGStaticMeshSpawnerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, pointsPerSquaredMeter)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpointsPerSquaredMeter)(UPCGSurfaceSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, pointExtents)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpointExtents)(UPCGSurfaceSamplerSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, looseness)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlooseness)(UPCGSurfaceSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUnbounded)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUnbounded)(UPCGSurfaceSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyDensityToPoints)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyDensityToPoints)(UPCGSurfaceSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, pointSteepness)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpointSteepness)(UPCGSurfaceSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bKeepZeroDensityPoints)(UPCGSurfaceSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbKeepZeroDensityPoints)(UPCGSurfaceSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSurfaceSamplerSettings)(UPCGSurfaceSamplerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FTransform*, transform)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransform)(UPCGTextureSamplerSettings_* obj, FTransform val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAbsoluteTransform)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAbsoluteTransform)(UPCGTextureSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, texture)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UPCGTextureSamplerSettings_* obj, UTexture2D* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg, densityFunction)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGTextureSamplerSettings_* obj, tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A, colorChannel)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorChannel)(UPCGTextureSamplerSettings_* obj, tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A val);
N_LIB_PRIVATE N_NIMCALL(NF32, texelSize)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexelSize)(UPCGTextureSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAdvancedTiling)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAdvancedTiling)(UPCGTextureSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, tiling)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settiling)(UPCGTextureSamplerSettings_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, centerOffset)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcenterOffset)(UPCGTextureSamplerSettings_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(NF32, rotation)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotation)(UPCGTextureSamplerSettings_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseTileBounds)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseTileBounds)(UPCGTextureSamplerSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, tileBoundsMin)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileBoundsMin)(UPCGTextureSamplerSettings_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, tileBoundsMax)(UPCGTextureSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileBoundsMax)(UPCGTextureSamplerSettings_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGTextureSamplerSettings)(UPCGTextureSamplerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyToAttribute)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyToAttribute)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FName*, attributeName)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeName)(UPCGTransformPointsSettings_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FVector*, offsetMin)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoffsetMin)(UPCGTransformPointsSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, offsetMax)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoffsetMax)(UPCGTransformPointsSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteOffset)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteOffset)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationMin)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotationMin)(UPCGTransformPointsSettings_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationMax)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotationMax)(UPCGTransformPointsSettings_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteRotation)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteRotation)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector*, scaleMin)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscaleMin)(UPCGTransformPointsSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, scaleMax)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscaleMax)(UPCGTransformPointsSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAbsoluteScale)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAbsoluteScale)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUniformScale)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUniformScale)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRecomputeSeed)(UPCGTransformPointsSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRecomputeSeed)(UPCGTransformPointsSettings_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGTransformPointsSettings)(UPCGTransformPointsSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGetLandscapeSettings)(UPCGGetLandscapeSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGetSplineSettings)(UPCGGetSplineSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGetVolumeSettings)(UPCGGetVolumeSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg, type)(UPCGUnionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settype)(UPCGUnionSettings_* obj, tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ, densityFunction)(UPCGUnionSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdensityFunction)(UPCGUnionSettings_* obj, tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGUnionSettings)(UPCGUnionSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector*, voxelSize)(UPCGVolumeSamplerSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvoxelSize)(UPCGVolumeSamplerSettings_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGVolumeSamplerSettings)(UPCGVolumeSamplerSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGWorldVolumetricQueryParams_*, queryParams)(UPCGWorldQuerySettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setqueryParams)(UPCGWorldQuerySettings_* obj, FPCGWorldVolumetricQueryParams_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGWorldQuerySettings)(UPCGWorldQuerySettings_* fake);
N_LIB_PRIVATE N_NIMCALL(FPCGWorldRayHitQueryParams_*, queryParams)(UPCGWorldRayHitSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setqueryParams)(UPCGWorldRayHitSettings_* obj, FPCGWorldRayHitQueryParams_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGWorldRayHitSettings)(UPCGWorldRayHitSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, cachedLayerNames)(UPCGLandscapeCache_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedLayerNames)(UPCGLandscapeCache_* obj, TY__RB4z3ofWT3akwp9bOP7PhQA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGLandscapeCache)(UPCGLandscapeCache_* fake);
N_LIB_PRIVATE N_NIMCALL(FGuid*, pCGGuid)(APCGPartitionActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpCGGuid)(APCGPartitionActor_* obj, FGuid val);
N_LIB_PRIVATE N_NIMCALL(TY__1ARzpSrn9ajz2xuiHZvZ6SA*, localToOriginal)(APCGPartitionActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlocalToOriginal)(APCGPartitionActor_* obj, TY__1ARzpSrn9ajz2xuiHZvZ6SA val);
N_LIB_PRIVATE N_NIMCALL(NU32, pCGGridSize)(APCGPartitionActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpCGGridSize)(APCGPartitionActor_* obj, NU32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUse2DGrid)(APCGPartitionActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUse2DGrid)(APCGPartitionActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UBoxComponent*, boundsComponent)(APCGPartitionActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboundsComponent)(APCGPartitionActor_* obj, UBoxComponent* val);
N_LIB_PRIVATE N_NIMCALL(UPCGComponent_*, getOriginalComponent_)(APCGPartitionActor_* self, UPCGComponent_* localComponent);
N_LIB_PRIVATE N_NIMCALL(UPCGComponent_*, getLocalComponent_)(APCGPartitionActor_* self, UPCGComponent_* originalComponent);
N_LIB_PRIVATE N_NIMCALL(void, keepAPCGPartitionActor)(APCGPartitionActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGActorHelpers)(UPCGActorHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setSeedFromPosition_)(FPCGPoint& inPoint);
N_LIB_PRIVATE N_NIMCALL(void, setLocalCenter_)(FPCGPoint& inPoint, FVector& inLocalCenter);
N_LIB_PRIVATE N_NIMCALL(void, setExtents_)(FPCGPoint& inPoint, FVector& inExtents);
N_LIB_PRIVATE N_NIMCALL(FBox, getTransformedBounds_)(FPCGPoint& inPoint);
N_LIB_PRIVATE N_NIMCALL(NI64, getTaskId_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(UPCGSettings*, getSettings_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(FRandomStream, getRandomStream_)(FPCGPoint& inPoint, UPCGSettings* optionalSettings, UPCGComponent_* optionalComponent);
N_LIB_PRIVATE N_NIMCALL(UPCGComponent_*, getOriginalComponent_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(FVector, getLocalCenter_)(FPCGPoint& inPoint);
N_LIB_PRIVATE N_NIMCALL(TY__3C1oGjx6xhSmdT0iGLlwqg, getInterpolatedPCGLandscapeLayerWeights_)(UObject* worldContextObject, FVector& location);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, getInputData_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(FVector, getExtents_)(FPCGPoint& inPoint);
N_LIB_PRIVATE N_NIMCALL(TY__ik2mkdGmfvKDkWVA6Ejc7w, getExclusionData_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(UPCGComponent_*, getComponent_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(FBox, getActorLocalBoundsPCG_)(AActor* inActor, NIM_BOOL bIgnorePCGCreatedComponents);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, getActorData_)(FPCGContext& context);
N_LIB_PRIVATE N_NIMCALL(FBox, getActorBoundsPCG_)(AActor* inActor, NIM_BOOL bIgnorePCGCreatedComponents);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, createPCGDataFromActor_)(AActor* inActor, NIM_BOOL bParseActor);
N_LIB_PRIVATE N_NIMCALL(NI32, computeSeedFromPosition_)(FVector& inPosition);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGBlueprintHelpers)(UPCGBlueprintHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(void, packInstances_)(UPCGInstancePackerBase_* self, FPCGContext& context, UPCGSpatialData* inSpatialData, FPCGMeshInstanceList_& instanceList, FPCGPackedCustomData_& outPackedCustomData);
N_LIB_PRIVATE N_NIMCALL(void, packCustomDataFromAttributes_)(UPCGInstancePackerBase_* self, FPCGMeshInstanceList_& instanceList, UPCGMetadata* metadata, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& attributeNames, FPCGPackedCustomData_& outPackedCustomData);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addTypeToPacking_)(UPCGInstancePackerBase_* self, NI32 typeId_0, FPCGPackedCustomData_& outPackedCustomData);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGInstancePackerBase)(UPCGInstancePackerBase_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, attributeNames)(UPCGInstancePackerByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeNames)(UPCGInstancePackerByAttribute_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGInstancePackerByAttribute)(UPCGInstancePackerByAttribute_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, regexPatterns)(UPCGInstancePackerByRegex_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setregexPatterns)(UPCGInstancePackerByRegex_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGInstancePackerByRegex)(UPCGInstancePackerByRegex_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg, type)(UPCGMatchAndSetBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settype)(UPCGMatchAndSetBase_* obj, tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ, stringMode)(UPCGMatchAndSetBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstringMode)(UPCGMatchAndSetBase_* obj, tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, validatePreconditions_)(UPCGMatchAndSetBase_* self, UPCGPointData* inPointData);
N_LIB_PRIVATE N_NIMCALL(void, matchAndSet_)(UPCGMatchAndSetBase_* self, FPCGContext& context, UPCGPointMatchAndSetSettings_* inSettings, UPCGPointData* inPointData, UPCGPointData* outPointData);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMatchAndSetBase)(UPCGMatchAndSetBase_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, matchSourceAttribute)(UPCGMatchAndSetByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmatchSourceAttribute)(UPCGMatchAndSetByAttribute_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg, matchSourceType)(UPCGMatchAndSetByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmatchSourceType)(UPCGMatchAndSetByAttribute_* obj, tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ, matchSourceStringMode)(UPCGMatchAndSetByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmatchSourceStringMode)(UPCGMatchAndSetByAttribute_* obj, tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ val);
N_LIB_PRIVATE N_NIMCALL(TY__dO8cRGajPOVm9bZeP5qtCMQ*, entries)(UPCGMatchAndSetByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentries)(UPCGMatchAndSetByAttribute_* obj, TY__dO8cRGajPOVm9bZeP5qtCMQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMatchAndSetByAttribute)(UPCGMatchAndSetByAttribute_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__w1hH69aY8Vs2nUQhenyepew*, entries)(UPCGMatchAndSetWeighted_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentries)(UPCGMatchAndSetWeighted_* obj, TY__w1hH69aY8Vs2nUQhenyepew val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldMutateSeed)(UPCGMatchAndSetWeighted_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldMutateSeed)(UPCGMatchAndSetWeighted_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMatchAndSetWeighted)(UPCGMatchAndSetWeighted_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, categoryAttribute)(UPCGMatchAndSetWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategoryAttribute)(UPCGMatchAndSetWeightedByCategory_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg, categoryType)(UPCGMatchAndSetWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategoryType)(UPCGMatchAndSetWeightedByCategory_* obj, tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ, categoryStringMode)(UPCGMatchAndSetWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategoryStringMode)(UPCGMatchAndSetWeightedByCategory_* obj, tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ val);
N_LIB_PRIVATE N_NIMCALL(TY__ZJxv4TPNxMQz2U7iXbSWtw*, categories)(UPCGMatchAndSetWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategories)(UPCGMatchAndSetWeightedByCategory_* obj, TY__ZJxv4TPNxMQz2U7iXbSWtw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldMutateSeed)(UPCGMatchAndSetWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldMutateSeed)(UPCGMatchAndSetWeightedByCategory_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMatchAndSetWeightedByCategory)(UPCGMatchAndSetWeightedByCategory_* fake);
N_LIB_PRIVATE N_NIMCALL(void, selectInstances_)(UPCGMeshSelectorBase_* self, FPCGContext& context, UPCGStaticMeshSpawnerSettings_* settings, UPCGPointData* inPointData, TY__chrcws6Xncp9byajS1AkSSw& outMeshInstances, UPCGPointData* outPointData);
N_LIB_PRIVATE N_NIMCALL(NI32, findOrAddInstanceList_)(TY__chrcws6Xncp9byajS1AkSSw& outInstanceLists, TY__cgfzaLYkvR8gASam8GmF9aQ& mesh, NIM_BOOL bOverrideCollisionProfile, FCollisionProfileName& collisionProfile, NIM_BOOL bOverrideMaterials, TY__Zcyk57qkIPgK6SupYoPdQA& materialOverrides, NF32 inCullStartDistance, NF32 inCullEndDistance, NI32 inWorldPositionOffsetDisableDistance, NIM_BOOL bInIsLocalToWorldDeterminantNegative);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMeshSelectorBase)(UPCGMeshSelectorBase_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, attributeName)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattributeName)(UPCGMeshSelectorByAttribute_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideCollisionProfile)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideCollisionProfile)(UPCGMeshSelectorByAttribute_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FCollisionProfileName*, collisionProfile)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionProfile)(UPCGMeshSelectorByAttribute_* obj, FCollisionProfileName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGMeshSelectorMaterialOverrideMode__XVonjagNBrqQZ7lGt2kMtg, materialOverrideMode)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialOverrideMode)(UPCGMeshSelectorByAttribute_* obj, tyEnum_EPCGMeshSelectorMaterialOverrideMode__XVonjagNBrqQZ7lGt2kMtg val);
N_LIB_PRIVATE N_NIMCALL(TY__Zcyk57qkIPgK6SupYoPdQA*, materialOverrides)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialOverrides)(UPCGMeshSelectorByAttribute_* obj, TY__Zcyk57qkIPgK6SupYoPdQA val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, materialOverrideAttributes)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialOverrideAttributes)(UPCGMeshSelectorByAttribute_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, cullStartDistance)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcullStartDistance)(UPCGMeshSelectorByAttribute_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cullEndDistance)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcullEndDistance)(UPCGMeshSelectorByAttribute_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, worldPositionOffsetDisableDistance)(UPCGMeshSelectorByAttribute_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworldPositionOffsetDisableDistance)(UPCGMeshSelectorByAttribute_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMeshSelectorByAttribute)(UPCGMeshSelectorByAttribute_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Q7m2Srck8lLPPdo3FLWSmQ*, meshEntries)(UPCGMeshSelectorWeighted_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshEntries)(UPCGMeshSelectorWeighted_* obj, TY__Q7m2Srck8lLPPdo3FLWSmQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAttributeMaterialOverrides)(UPCGMeshSelectorWeighted_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAttributeMaterialOverrides)(UPCGMeshSelectorWeighted_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, materialOverrideAttributes)(UPCGMeshSelectorWeighted_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialOverrideAttributes)(UPCGMeshSelectorWeighted_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMeshSelectorWeighted)(UPCGMeshSelectorWeighted_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, categoryAttribute)(UPCGMeshSelectorWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategoryAttribute)(UPCGMeshSelectorWeightedByCategory_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(TY__2u5KFbn3jssxMaqMpUBOfQ*, entries)(UPCGMeshSelectorWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentries)(UPCGMeshSelectorWeightedByCategory_* obj, TY__2u5KFbn3jssxMaqMpUBOfQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAttributeMaterialOverrides)(UPCGMeshSelectorWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAttributeMaterialOverrides)(UPCGMeshSelectorWeightedByCategory_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, materialOverrideAttributes)(UPCGMeshSelectorWeightedByCategory_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialOverrideAttributes)(UPCGMeshSelectorWeightedByCategory_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMeshSelectorWeightedByCategory)(UPCGMeshSelectorWeightedByCategory_* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, parent)(UPCGMetadata* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparent)(UPCGMetadata* obj, UPCGMetadata* val);
N_LIB_PRIVATE N_NIMCALL(TY__0X3wlb5Am7uYoMWU7otqVA, otherParents)(UPCGMetadata* obj);
N_LIB_PRIVATE N_NIMCALL(void, setotherParents)(UPCGMetadata* obj, TY__0X3wlb5Am7uYoMWU7otqVA val);
N_LIB_PRIVATE N_NIMCALL(void, setPointAttributes_)(UPCGMetadata* self, FPCGPoint& point, UPCGMetadata* metadata, FPCGPoint& outPoint);
N_LIB_PRIVATE N_NIMCALL(void, setAttributesByKey_)(UPCGMetadata* self, NI64 key, UPCGMetadata* inMetadata, NI64 targetKey, NI64& outKey);
N_LIB_PRIVATE N_NIMCALL(void, resetWeightedAttributesByKey_)(UPCGMetadata* self, NI64 targetKey, NI64& outKey);
N_LIB_PRIVATE N_NIMCALL(void, resetPointWeightedAttributes_)(UPCGMetadata* self, FPCGPoint& outPoint);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renameAttribute_)(UPCGMetadata* self, FName attributeToRename, FName newAttributeName);
N_LIB_PRIVATE N_NIMCALL(void, mergePointAttributes_)(UPCGMetadata* self, FPCGPoint& pointA, UPCGMetadata* metadataA, FPCGPoint& pointB, UPCGMetadata* metadataB, FPCGPoint& targetPoint, tyEnum_EPCGMetadataOp__5fYhITzgXjwEfE3AAJRWow op);
N_LIB_PRIVATE N_NIMCALL(void, mergeAttributesByKey_)(UPCGMetadata* self, NI64 keyA, UPCGMetadata* metadataA, NI64 keyB, UPCGMetadata* metadataB, NI64 targetKey, tyEnum_EPCGMetadataOp__5fYhITzgXjwEfE3AAJRWow op, NI64& outKey);
N_LIB_PRIVATE N_NIMCALL(void, initializeWithAttributeFilter_)(UPCGMetadata* self, UPCGMetadata* inParent, TY__RB4z3ofWT3akwp9bOP7PhQA& inFilteredAttributes, tyEnum_EPCGMetadataFilterMode__M9ccjw9bqAK1lTC3vHyDWj3Q inFilterMode);
N_LIB_PRIVATE N_NIMCALL(void, initializeAsCopy_)(UPCGMetadata* self, UPCGMetadata* inMetadataToCopy);
N_LIB_PRIVATE N_NIMCALL(void, initialize_)(UPCGMetadata* self, UPCGMetadata* inParent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasCommonAttributes_)(UPCGMetadata* self, UPCGMetadata* inMetadata);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAttribute_)(UPCGMetadata* self, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(void, getAttributes_)(UPCGMetadata* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& attributeNames, TY__vMhGRq9bJyL9cC1ZhezH79cEw& attributeTypes);
N_LIB_PRIVATE N_NIMCALL(void, deleteAttribute_)(UPCGMetadata* self, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(void, createVectorAttribute_)(UPCGMetadata* self, FName attributeName, FVector defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createVector4Attribute_)(UPCGMetadata* self, FName attributeName, FVector4 defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createVector2Attribute_)(UPCGMetadata* self, FName attributeName, FVector2D defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createTransformAttribute_)(UPCGMetadata* self, FName attributeName, FTransform defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createStringAttribute_)(UPCGMetadata* self, FName attributeName, FString defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createRotatorAttribute_)(UPCGMetadata* self, FName attributeName, FRotator defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createQuatAttribute_)(UPCGMetadata* self, FName attributeName, FQuat defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createInteger64Attribute_)(UPCGMetadata* self, FName attributeName, NI64 defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createInteger32Attribute_)(UPCGMetadata* self, FName attributeName, NI32 defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createFloatAttribute_)(UPCGMetadata* self, FName attributeName, NF32 defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createDoubleAttribute_)(UPCGMetadata* self, FName attributeName, NF defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(void, createBoolAttribute_)(UPCGMetadata* self, FName attributeName, NIM_BOOL defaultValue, NIM_BOOL bAllowsInterpolation, NIM_BOOL bOverrideParent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, copyExistingAttribute_)(UPCGMetadata* self, FName attributeToCopy, FName newAttributeName, NIM_BOOL bKeepParent);
N_LIB_PRIVATE N_NIMCALL(void, copyAttributes_)(UPCGMetadata* self, UPCGMetadata* inOther);
N_LIB_PRIVATE N_NIMCALL(void, copyAttribute_)(UPCGMetadata* self, UPCGMetadata* inOther, FName attributeToCopy, FName newAttributeName);
N_LIB_PRIVATE N_NIMCALL(void, clearAttribute_)(UPCGMetadata* self, FName attributeToClear);
N_LIB_PRIVATE N_NIMCALL(NI64, addEntry_)(UPCGMetadata* self, NI64 parentEntryKey);
N_LIB_PRIVATE N_NIMCALL(void, addAttributesFiltered_)(UPCGMetadata* self, UPCGMetadata* inOther, TY__RB4z3ofWT3akwp9bOP7PhQA& inFilteredAttributes, tyEnum_EPCGMetadataFilterMode__M9ccjw9bqAK1lTC3vHyDWj3Q inFilterMode);
N_LIB_PRIVATE N_NIMCALL(void, addAttributes_)(UPCGMetadata* self, UPCGMetadata* inOther);
N_LIB_PRIVATE N_NIMCALL(void, addAttribute_)(UPCGMetadata* self, UPCGMetadata* inOther, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(void, accumulateWeightedAttributesByKey_)(UPCGMetadata* self, NI64 key, UPCGMetadata* metadata, NF32 weight, NIM_BOOL bSetNonInterpolableAttributes, NI64 targetKey, NI64& outKey);
N_LIB_PRIVATE N_NIMCALL(void, accumulatePointWeightedAttributes_)(UPCGMetadata* self, FPCGPoint& inPoint, UPCGMetadata* inMetadata, NF32 weight, NIM_BOOL bSetNonInterpolableAttributes, FPCGPoint& outPoint);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadata)(UPCGMetadata* fake);
N_LIB_PRIVATE N_NIMCALL(void, setVectorAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FVector& value);
N_LIB_PRIVATE N_NIMCALL(void, setVectorAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FVector& value);
N_LIB_PRIVATE N_NIMCALL(void, setVector4AttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FVector4& value);
N_LIB_PRIVATE N_NIMCALL(void, setVector4Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FVector4& value);
N_LIB_PRIVATE N_NIMCALL(void, setVector2AttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FVector2D& value);
N_LIB_PRIVATE N_NIMCALL(void, setVector2Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FVector2D& value);
N_LIB_PRIVATE N_NIMCALL(void, setTransformAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FTransform& value);
N_LIB_PRIVATE N_NIMCALL(void, setTransformAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FTransform& value);
N_LIB_PRIVATE N_NIMCALL(void, setStringAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FString value);
N_LIB_PRIVATE N_NIMCALL(void, setStringAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FString value);
N_LIB_PRIVATE N_NIMCALL(void, setRotatorAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FRotator& value);
N_LIB_PRIVATE N_NIMCALL(void, setRotatorAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FRotator& value);
N_LIB_PRIVATE N_NIMCALL(void, setQuatAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, FQuat& value);
N_LIB_PRIVATE N_NIMCALL(void, setQuatAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, FQuat& value);
N_LIB_PRIVATE N_NIMCALL(void, setInteger64AttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, NI64 value);
N_LIB_PRIVATE N_NIMCALL(void, setInteger64Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, NI64 value);
N_LIB_PRIVATE N_NIMCALL(void, setInteger32AttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setInteger32Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFloatAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFloatAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDoubleAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, NF value);
N_LIB_PRIVATE N_NIMCALL(void, setDoubleAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, NF value);
N_LIB_PRIVATE N_NIMCALL(void, setBoolAttributeByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, NIM_BOOL value);
N_LIB_PRIVATE N_NIMCALL(void, setBoolAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName, NIM_BOOL value);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setAttributeFromPropertyByMetadataKey_)(NI64& key, UPCGMetadata* metadata, FName attributeName, UObject* object_0, FName propertyName);
N_LIB_PRIVATE N_NIMCALL(void, initializeMetadata_)(FPCGPoint& point, UPCGMetadata* metadata, FPCGPoint& parentPoint, UPCGMetadata* parentMetadata);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAttributeSetByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAttributeSet_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector4, getVector4AttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector4, getVector4Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getVector2AttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getVector2Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransformAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FString, getStringAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FString, getStringAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotatorAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FRotator, getRotatorAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FQuat, getQuatAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(FQuat, getQuatAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NI64, getInteger64AttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NI64, getInteger64Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NI32, getInteger32AttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NI32, getInteger32Attribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NF, getDoubleAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NF, getDoubleAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBoolAttributeByMetadataKey_)(NI64 key, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBoolAttribute_)(FPCGPoint& point, UPCGMetadata* metadata, FName attributeName);
N_LIB_PRIVATE N_NIMCALL(void, copyPoint_)(FPCGPoint& inPoint, FPCGPoint& outPoint, NIM_BOOL bCopyMetadata, UPCGMetadata* inMetadata, UPCGMetadata* outMetadata);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGMetadataAccessorHelpers)(UPCGMetadataAccessorHelpers_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGComponentInput__rFf5aGBy1cCO9cB3AapGLpA, inputType)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputType)(UPCGComponent_* obj, tyEnum_EPCGComponentInput__rFf5aGBy1cCO9cB3AapGLpA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bParseActorComponents)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbParseActorComponents)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, seed)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setseed)(UPCGComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, excludedTags)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexcludedTags)(UPCGComponent_* obj, TY__RB4z3ofWT3akwp9bOP7PhQA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bActivated)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbActivated)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsComponentPartitioned)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsComponentPartitioned)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPCGComponentGenerationTrigger__aYbGhTP7Ot1Iv59awCf9ab0w, generationTrigger)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgenerationTrigger)(UPCGComponent_* obj, tyEnum_EPCGComponentGenerationTrigger__aYbGhTP7Ot1Iv59awCf9ab0w val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGenerated)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerated)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRuntimeGenerated)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRuntimeGenerated)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRegenerateInEditor)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRegenerateInEditor)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDirtyGenerated)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDirtyGenerated)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, postGenerateFunctionNames)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostGenerateFunctionNames)(UPCGComponent_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(UPCGGraphInstance*, graphInstance)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgraphInstance)(UPCGComponent_* obj, UPCGGraphInstance* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsPartitioned)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsPartitioned)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, cachedPCGData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedPCGData)(UPCGComponent_* obj, UPCGData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, cachedInputData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedInputData)(UPCGComponent_* obj, UPCGData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, cachedActorData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedActorData)(UPCGComponent_* obj, UPCGData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, cachedLandscapeData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedLandscapeData)(UPCGComponent_* obj, UPCGData* val);
N_LIB_PRIVATE N_NIMCALL(UPCGData*, cachedLandscapeHeightData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedLandscapeHeightData)(UPCGComponent_* obj, UPCGData* val);
N_LIB_PRIVATE N_NIMCALL(TY__ulkyY621Pa6neqvmqfzomw*, cachedExclusionData)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedExclusionData)(UPCGComponent_* obj, TY__ulkyY621Pa6neqvmqfzomw val);
N_LIB_PRIVATE N_NIMCALL(TY__qRCVTZ39bcyDpq9brptOSklg, cachedExcludedActors)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedExcludedActors)(UPCGComponent_* obj, TY__qRCVTZ39bcyDpq9brptOSklg val);
N_LIB_PRIVATE N_NIMCALL(TY__Ob2KLzao5wgNmhmsqpXl9bQ*, generatedResources)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgeneratedResources)(UPCGComponent_* obj, TY__Ob2KLzao5wgNmhmsqpXl9bQ val);
N_LIB_PRIVATE N_NIMCALL(FBox*, lastGeneratedBounds)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlastGeneratedBounds)(UPCGComponent_* obj, FBox val);
N_LIB_PRIVATE N_NIMCALL(FPCGDataCollection*, generatedGraphOutput)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgeneratedGraphOutput)(UPCGComponent_* obj, FPCGDataCollection val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsComponentLocal)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsComponentLocal)(UPCGComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__qRCVTZ39bcyDpq9brptOSklg, cachedTrackedActors)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedTrackedActors)(UPCGComponent_* obj, TY__qRCVTZ39bcyDpq9brptOSklg val);
N_LIB_PRIVATE N_NIMCALL(TY__2mwCJl4UU9cnqJim1sPVm7Q*, inspectionCache)(UPCGComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinspectionCache)(UPCGComponent_* obj, TY__2mwCJl4UU9cnqJim1sPVm7Q val);
N_LIB_PRIVATE N_NIMCALL(void, setGraph_)(UPCGComponent_* self, UPCGGraph* inGraph);
N_LIB_PRIVATE N_NIMCALL(void, notifyPropertiesChangedFromBlueprint_)(UPCGComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FPCGDataCollection, getGeneratedGraphOutput_)(UPCGComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, generateLocal_)(UPCGComponent_* self, NIM_BOOL bForce);
N_LIB_PRIVATE N_NIMCALL(void, generate_)(UPCGComponent_* self, NIM_BOOL bForce);
N_LIB_PRIVATE N_NIMCALL(AActor*, clearPCGLink_)(UPCGComponent_* self, UClass* templateActor);
N_LIB_PRIVATE N_NIMCALL(void, cleanupLocal_)(UPCGComponent_* self, NIM_BOOL bRemoveComponents, NIM_BOOL bSave);
N_LIB_PRIVATE N_NIMCALL(void, cleanup_)(UPCGComponent_* self, NIM_BOOL bRemoveComponents, NIM_BOOL bSave);
N_LIB_PRIVATE N_NIMCALL(void, addToManagedResources_)(UPCGComponent_* self, UPCGManagedResource_* inResource);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGComponent)(UPCGComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getTaggedParams_)(FPCGDataCollection& inCollection, FString inTag);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getTaggedInputs_)(FPCGDataCollection& inCollection, FString inTag);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getParamsByPin_)(FPCGDataCollection& inCollection, FName& inPinLabel);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getParams_)(FPCGDataCollection& inCollection);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getInputsByPin_)(FPCGDataCollection& inCollection, FName& inPinLabel);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getInputs_)(FPCGDataCollection& inCollection);
N_LIB_PRIVATE N_NIMCALL(TY__pH7dUNsozwGkUZcCXvEg4Q, getAllSettings_)(FPCGDataCollection& inCollection);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDataFunctionLibrary)(UPCGDataFunctionLibrary* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGPin*, inputPin)(UPCGEdge_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputPin)(UPCGEdge_* obj, UPCGPin* val);
N_LIB_PRIVATE N_NIMCALL(UPCGPin*, outputPin)(UPCGEdge_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputPin)(UPCGEdge_* obj, UPCGPin* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGEdge)(UPCGEdge_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGraphInterface)(UPCGGraphInterface* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExposeToLibrary)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExposeToLibrary)(UPCGGraph* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FText*, category)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcategory)(UPCGGraph* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, description)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdescription)(UPCGGraph* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLandscapeUsesMetadata)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLandscapeUsesMetadata)(UPCGGraph* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__KI01TIoxPyYoQFcJxyVlNg*, nodes)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnodes)(UPCGGraph* obj, TY__KI01TIoxPyYoQFcJxyVlNg val);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, inputNode)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputNode)(UPCGGraph* obj, UPCGNode* val);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, outputNode)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputNode)(UPCGGraph* obj, UPCGNode* val);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA*, extraEditorNodes)(UPCGGraph* obj);
N_LIB_PRIVATE N_NIMCALL(void, setextraEditorNodes)(UPCGGraph* obj, TY__meGclu4l9cwnqbgiIjRtfhA val);
N_LIB_PRIVATE N_NIMCALL(void, removeNode_)(UPCGGraph* self, UPCGNode* inNode);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeEdge_)(UPCGGraph* self, UPCGNode* from_0, FName& fromLabel, UPCGNode* to, FName& toLabel);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, getOutputNode_)(UPCGGraph* self);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, getInputNode_)(UPCGGraph* self);
N_LIB_PRIVATE N_NIMCALL(void, forceNotificationForEditor_)(UPCGGraph* self);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, addNodeOfType_)(UPCGGraph* self, TY__OiWUVGkvRw3pRmhJnTvVKQ inSettingsClass, UPCGSettings*& defaultNodeSettings);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, addNodeInstance_)(UPCGGraph* self, UPCGSettings* inSettings);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, addNodeCopy_)(UPCGGraph* self, UPCGSettings* inSettings, UPCGSettings*& defaultNodeSettings);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, addEdge_)(UPCGGraph* self, UPCGNode* from_0, FName& fromPinLabel, UPCGNode* to, FName& toPinLabel);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGraph)(UPCGGraph* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGGraphInterface*, graph)(UPCGGraphInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgraph)(UPCGGraphInstance* obj, UPCGGraphInterface* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGraphInstance)(UPCGGraphInstance* fake);
N_LIB_PRIVATE N_NIMCALL(TY__qUrNne0wu4kCq2fgTGFcwQ*, customPins)(UPCGGraphInputOutputSettings_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomPins)(UPCGGraphInputOutputSettings_* obj, TY__qUrNne0wu4kCq2fgTGFcwQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGGraphInputOutputSettings)(UPCGGraphInputOutputSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsMarkedUnused)(UPCGManagedResource_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsMarkedUnused)(UPCGManagedResource_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGManagedResource)(UPCGManagedResource_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__eJlYjkPa6UOLys7xswOIXQ, generatedActors)(UPCGManagedActors_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgeneratedActors)(UPCGManagedActors_* obj, TY__eJlYjkPa6UOLys7xswOIXQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGManagedActors)(UPCGManagedActors_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__zWLvg1dgOERNf5T5tyQxZg, generatedComponent)(UPCGManagedComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgeneratedComponent)(UPCGManagedComponent_* obj, TY__zWLvg1dgOERNf5T5tyQxZg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGManagedComponent)(UPCGManagedComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGManagedISMComponent)(UPCGManagedISMComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, metadata)(UPCGParamData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmetadata)(UPCGParamData_* obj, UPCGMetadata* val);
N_LIB_PRIVATE N_NIMCALL(TY__StISvkbgZNFWoWFGmFzG6g*, nameMap)(UPCGParamData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnameMap)(UPCGParamData_* obj, TY__StISvkbgZNFWoWFGmFzG6g val);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, mutableMetadata_)(UPCGParamData_* self);
N_LIB_PRIVATE N_NIMCALL(NI64, findOrAddMetadataKey_)(UPCGParamData_* self, FName& inName);
N_LIB_PRIVATE N_NIMCALL(NI64, findMetadataKey_)(UPCGParamData_* self, FName& inName);
N_LIB_PRIVATE N_NIMCALL(UPCGParamData_*, filterParamsByName_)(UPCGParamData_* self, FName& inName);
N_LIB_PRIVATE N_NIMCALL(UPCGParamData_*, filterParamsByKey_)(UPCGParamData_* self, NI64 inKey);
N_LIB_PRIVATE N_NIMCALL(UPCGMetadata*, constMetadata_)(UPCGParamData_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGParamData)(UPCGParamData_* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGNode*, node)(UPCGPin* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnode)(UPCGPin* obj, UPCGNode* val);
N_LIB_PRIVATE N_NIMCALL(TY__Coaz0mpT9a13rSXri4j9chZg*, edges)(UPCGPin* obj);
N_LIB_PRIVATE N_NIMCALL(void, setedges)(UPCGPin* obj, TY__Coaz0mpT9a13rSXri4j9chZg val);
N_LIB_PRIVATE N_NIMCALL(FPCGPinProperties*, properties)(UPCGPin* obj);
N_LIB_PRIVATE N_NIMCALL(void, setproperties)(UPCGPin* obj, FPCGPinProperties val);
N_LIB_PRIVATE N_NIMCALL(void, setTooltip_)(UPCGPin* self, FText& inTooltip);
N_LIB_PRIVATE N_NIMCALL(FText, getTooltip_)(UPCGPin* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGPin)(UPCGPin* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGSettings*, originalSettings)(UPCGSettingsInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoriginalSettings)(UPCGSettingsInstance* obj, UPCGSettings* val);
N_LIB_PRIVATE N_NIMCALL(UPCGSettings*, settings)(UPCGSettingsInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(UPCGSettingsInstance* obj, UPCGSettings* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSettingsInstance)(UPCGSettingsInstance* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGTrivialSettings)(UPCGTrivialSettings* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGGraphInstance*, subgraphInstance)(UPCGSubgraphSettings* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubgraphInstance)(UPCGSubgraphSettings* obj, UPCGGraphInstance* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSubgraphSettings)(UPCGSubgraphSettings* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSubgraphNode)(UPCGSubgraphNode* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGSubsystem)(UPCGSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(UPCGComponent_*, pCGComponent)(APCGVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpCGComponent)(APCGVolume_* obj, UPCGComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAPCGVolume)(APCGVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(NU32, partitionGridSize)(APCGWorldActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpartitionGridSize)(APCGWorldActor_* obj, NU32 val);
N_LIB_PRIVATE N_NIMCALL(UPCGLandscapeCache_*, landscapeCacheObject)(APCGWorldActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlandscapeCacheObject)(APCGWorldActor_* obj, UPCGLandscapeCache_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUse2DGrid)(APCGWorldActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUse2DGrid)(APCGWorldActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepAPCGWorldActor)(APCGWorldActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, executeTest_)(UPCGDeterminismTestBlueprintBase_* self, UPCGNode* inPCGNode, FDeterminismTestResult_& inOutTestResult);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGDeterminismTestBlueprintBase)(UPCGDeterminismTestBlueprintBase_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, intProperty)(UPCGUnitTestDummyComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setintProperty)(UPCGUnitTestDummyComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGUnitTestDummyComponent)(UPCGUnitTestDummyComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributeAccessorFlags)(tyEnum_EPCGAttributeAccessorFlags__e6DOhTV78hZxxr1G5Y8npg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributePropertySelection)(tyEnum_EPCGAttributePropertySelection__mxMbik0yEVcbD9c9bv9a8owwA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGChangeType)(tyEnum_EPCGChangeType__9cfGQf5bSbNzTfJ4657brIQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGDataType)(tyEnum_EPCGDataType__p9cVLVSP9a3h039bCibj7DQ8A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepPCGDistanceShape)(tyEnum_PCGDistanceShape__NIX9ampmcBfVbWMd9aCFFqJQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataTypes)(tyEnum_EPCGMetadataTypes__g9bJkXDwk66Ch8POOsJBSEg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataOp)(tyEnum_EPCGMetadataOp__5fYhITzgXjwEfE3AAJRWow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataFilterMode)(tyEnum_EPCGMetadataFilterMode__M9ccjw9bqAK1lTC3vHyDWj3Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataTypesConstantStructStringMode)(tyEnum_EPCGMetadataTypesConstantStructStringMode__Sy9awaf9bHt9cqwEEorTdZ4yQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGDifferenceDensityFunction)(tyEnum_EPCGDifferenceDensityFunction__B9anRprwCeOY5BO0brakzXg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGDifferenceMode)(tyEnum_EPCGDifferenceMode__CzPAakEbQBuTqovbywDp6g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGIntersectionDensityFunction)(tyEnum_EPCGIntersectionDensityFunction__XIRclTNyoWxaSb7WubbQEA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGTextureColorChannel)(tyEnum_EPCGTextureColorChannel__N0uWpeNW6lq2ePG11ISa0A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGTextureDensityFunction)(tyEnum_EPCGTextureDensityFunction__3XTfn9aJBP7YpxRBY4kSWqg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGUnionType)(tyEnum_EPCGUnionType__0sg8618JPVL0h3bYSIffMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGUnionDensityFunction)(tyEnum_EPCGUnionDensityFunction__fC33AAzYfW2IRAFukcoVRQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataBitwiseOperation)(tyEnum_EPCGMedadataBitwiseOperation__ADpdVAzFzpPEt9bVM5tXlCw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataBooleanOperation)(tyEnum_EPCGMedadataBooleanOperation__yU5n45qHYIMGVNiiwnDJqA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataCompareOperation)(tyEnum_EPCGMedadataCompareOperation__9czpO1jGxXkwz3vTi9cfw0pw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataOperationTarget)(tyEnum_EPCGMetadataOperationTarget__mJOQ9ccnEjwxMLu9aEZWquhQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataMakeVector3)(tyEnum_EPCGMetadataMakeVector3__IgZkeqBaiPjzOH9brtqe30A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataMakeVector4)(tyEnum_EPCGMetadataMakeVector4__Wa2okPGqlQ4kb5cRAkhtvw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataMathsOperation)(tyEnum_EPCGMedadataMathsOperation__sAq9cHT4FTrT5pZRayVIhcg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataSettingsBaseMode)(tyEnum_EPCGMetadataSettingsBaseMode__Derk4U9bLwX7jqIlLMwDaIQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMetadataSettingsBaseTypes)(tyEnum_EPCGMetadataSettingsBaseTypes__OsZlJeK9avyPHjEfs0hfzhg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataRotatorOperation)(tyEnum_EPCGMedadataRotatorOperation__oB9avmFJHHWzrCTE2HhRNgg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataTransformOperation)(tyEnum_EPCGMedadataTransformOperation__3XDJ3FzE0zDv1B8HLFx1Yw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGTransformLerpMode)(tyEnum_EPCGTransformLerpMode__iMBMX3id6u2K48FH2JEbEw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataTrigOperation)(tyEnum_EPCGMedadataTrigOperation__lSdWiP2T3hpnvY9bKeMF9cnA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMedadataVectorOperation)(tyEnum_EPCGMedadataVectorOperation__ZFtca5ZQfvHWYc9a83sq6sA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGActorSelection)(tyEnum_EPCGActorSelection__A19aK9b9bIyF2Pyi09bvlM2SLw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGActorFilter)(tyEnum_EPCGActorFilter__xd6p9a16K19cu0P3uD9aZyLnw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributeFilterOperation)(tyEnum_EPCGAttributeFilterOperation__yXS49bhn7oL9cVG9c7LN5O9apA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributeReduceOperation)(tyEnum_EPCGAttributeReduceOperation__5ib0IoARKp2ZNusyr0HUJg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributeSelectOperation)(tyEnum_EPCGAttributeSelectOperation__25QXLzVuNnUQyh0sfrPHqQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGAttributeSelectAxis)(tyEnum_EPCGAttributeSelectAxis__5mkieF6V6F9bwj4OA42jsow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGBoundsModifierMode)(tyEnum_EPCGBoundsModifierMode__GVOSg4JrpzkuFeiw5iHT2A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGCopyPointsInheritanceMode)(tyEnum_EPCGCopyPointsInheritanceMode__u3QY9avsBwuynBLl9a6P6kgw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGCopyPointsMetadataInheritanceMode)(tyEnum_EPCGCopyPointsMetadataInheritanceMode__hjw8Kcu9cmq9btRyVLnDTdTg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGGetDataFromActorMode)(tyEnum_EPCGGetDataFromActorMode__mH6PPaKeTPC9azIoWuHx85g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGDensityNoiseMode)(tyEnum_EPCGDensityNoiseMode__srW8K9aBWT9bnQc3FJFy1qBg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGFilterByTagOperation)(tyEnum_EPCGFilterByTagOperation__aMnr1uvYzJvUeKa1OiIlXQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointExtentsModifierMode)(tyEnum_EPCGPointExtentsModifierMode__3W4BB249cxezywbCsDc26WQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointTargetFilterType)(tyEnum_EPCGPointTargetFilterType__M5UDq6XARgcBBgYPJU4VrA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointThresholdType)(tyEnum_EPCGPointThresholdType__9aRW5kOZiSWZeu5ZxCW9aUCA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointFilterConstantType)(tyEnum_EPCGPointFilterConstantType__cYxVsgm0b9c7bMHeEqpG2ow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointFilterOperator)(tyEnum_EPCGPointFilterOperator__k9bc10IrnW6KAOhNr9bjCCRw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSelfPruningType)(tyEnum_EPCGSelfPruningType__Rs3msIwbIBK4GyC39bc1Hjw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSpawnActorOption)(tyEnum_EPCGSpawnActorOption__Nzg19cZ3Ruaf9cb85pvVjQjA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSpawnActorGenerationTrigger)(tyEnum_EPCGSpawnActorGenerationTrigger__fG4cucW1s4fHQD1ktbsvQQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSplineSamplingMode)(tyEnum_EPCGSplineSamplingMode__8vzW49bKgXl4GQZE3e72Dtg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSplineSamplingDimension)(tyEnum_EPCGSplineSamplingDimension__hbAj0W8w9bu7rlsf9byJ9aYgg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSplineSamplingFill)(tyEnum_EPCGSplineSamplingFill__NXBWXV6W5Jo8xwqiwt4O0A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSplineSamplingInteriorOrientation)(tyEnum_EPCGSplineSamplingInteriorOrientation__LfiQO00Vtl1hESyCaPUWxQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGMeshSelectorMaterialOverrideMode)(tyEnum_EPCGMeshSelectorMaterialOverrideMode__XVonjagNBrqQZ7lGt2kMtg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGComponentInput)(tyEnum_EPCGComponentInput__rFf5aGBy1cCO9cB3AapGLpA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGComponentGenerationTrigger)(tyEnum_EPCGComponentGenerationTrigger__aYbGhTP7Ot1Iv59awCf9ab0w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGComponentDirtyFlag)(tyEnum_EPCGComponentDirtyFlag__3W9acPZCqd4K2PUKmU7RsLw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGExecutionPhase)(tyEnum_EPCGExecutionPhase__9arNc9a3Q4sTqzcil2bPofYw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGDebugVisScaleMethod)(tyEnum_EPCGDebugVisScaleMethod__Pnm3Oz2h4odcSwAt7YGWPw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGPointProperties)(tyEnum_EPCGPointProperties__rw7rzqyph3uFoGwyrqU9csg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSettingsExecutionMode)(tyEnum_EPCGSettingsExecutionMode__Chrw4e7Ai81vHxT7oLJwng fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGSettingsType)(tyEnum_EPCGSettingsType__cSTBn3GvXArMlLGuDLmozA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDeterminismLevel)(tyEnum_EDeterminismLevel__g6mjxt7Vfb56aSJvNGkX9cw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGUnitTestDummyEnum)(tyEnum_EPCGUnitTestDummyEnum__6pFN9aDzKSCpq1XvvE07MdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGAttributeExtractorTestStructDepth2)(FPCGAttributeExtractorTestStructDepth2_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGAttributeExtractorTestStructDepth1)(FPCGAttributeExtractorTestStructDepth1_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGAttributeExtractorTestStruct)(FPCGAttributeExtractorTestStruct_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGAttributePropertySelector)(FPCGAttributePropertySelector_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGDataTableRowToParamDataTestStruct)(FPCGDataTableRowToParamDataTestStruct_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGDeterminismSettings)(FPCGDeterminismSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMetadataTypesConstantStruct)(FPCGMetadataTypesConstantStruct_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGProjectionParams)(FPCGProjectionParams fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGWorldVolumetricQueryParams)(FPCGWorldVolumetricQueryParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGWorldRayHitQueryParams)(FPCGWorldRayHitQueryParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGActorSelectorSettings)(FPCGActorSelectorSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGActorPropertyOverride)(FPCGActorPropertyOverride_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGSplineSamplerParams)(FPCGSplineSamplerParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGStaticMeshSpawnerEntry)(FPCGStaticMeshSpawnerEntry_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGContext)(FPCGContext fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGStaticMeshSpawnerContext)(FPCGStaticMeshSpawnerContext_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGLandscapeLayerWeight)(FPCGLandscapeLayerWeight_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGPackedCustomData)(FPCGPackedCustomData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMatchAndSetByAttributeEntry)(FPCGMatchAndSetByAttributeEntry_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMatchAndSetWeightedEntry)(FPCGMatchAndSetWeightedEntry_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMatchAndSetWeightedByCategoryEntryList)(FPCGMatchAndSetWeightedByCategoryEntryList_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMeshInstanceList)(FPCGMeshInstanceList_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGPoint)(FPCGPoint fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGMeshSelectorWeightedEntry)(FPCGMeshSelectorWeightedEntry_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGWeightedByCategoryEntryList)(FPCGWeightedByCategoryEntryList_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGComponentInstanceData)(FPCGComponentInstanceData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGTaggedData)(FPCGTaggedData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGDataCollection)(FPCGDataCollection fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGDebugVisualizationSettings)(FPCGDebugVisualizationSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGPinProperties)(FPCGPinProperties fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPCGSettingsOverridableParam)(FPCGSettingsOverridableParam fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeterminismTestResult)(FDeterminismTestResult_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepPCGEditor)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUPCGVolumeFactory)(UPCGVolumeFactory_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGElementType)(tyEnum_EPCGElementType__UwshTmT5GgRTPISkyjFisw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEPCGEditorNewSettingsBehavior)(tyEnum_EPCGEditorNewSettingsBehavior__eltpO0FmTG0iakZo6xqxaQ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepScriptableToolsEditorMode)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGAnimation)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieScene2DTransformSection)(UMovieScene2DTransformSection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieSceneMarginSection)(UMovieSceneMarginSection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setUserTag_)(UUMGSequencePlayer_* self, FName inUserTag);
N_LIB_PRIVATE N_NIMCALL(FName, getUserTag_)(UUMGSequencePlayer_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUUMGSequencePlayer)(UUMGSequencePlayer_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, getStartTime_)(UWidgetAnimation_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getEndTime_)(UWidgetAnimation_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetAnimation)(UWidgetAnimation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetAnimationPlayCallbackProxy)(UWidgetAnimationPlayCallbackProxy_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGBlueprint)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGComponents)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGEnums)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateVisibility)(tyEnum_ESlateVisibility__wmqFvYTZe5cX56vce2POXg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateAccessibleBehavior)(tyEnum_ESlateAccessibleBehavior__d9a6bnYFuDPVpJbB1QB17mg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEVirtualKeyboardType)(tyEnum_EVirtualKeyboardType__rrKnI7b9ccRFKrHvxADPq9bA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepESlateSizeRule)(tyEnum_ESlateSizeRule__1MvHQwW2720UN9cA69alaKWg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDynamicBoxType)(tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetDesignFlags)(tyEnum_EWidgetDesignFlags__L8u9cWwY9cBph5FDiD7pHAfQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetSpace)(tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetTimingPolicy)(tyEnum_EWidgetTimingPolicy__GBR2weYA6gtS3fpUb5ouVg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetBlendMode)(tyEnum_EWidgetBlendMode__ujc9c7kzGBUoFoBDfAdNDvg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetGeometryMode)(tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWindowVisibility)(tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepETickMode)(tyEnum_ETickMode__rpxnv5vHIZR9bdO1o6wQZXw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetInteractionSource)(tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDragPivot)(tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetTickFrequency)(tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWidgetAnimationEvent)(tyEnum_EWidgetAnimationEvent__9aZSQO2S3MK3lhbZMiPssPA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEUMGSequencePlayMode)(tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEDesignPreviewSizeMode)(tyEnum_EDesignPreviewSizeMode__FsmMFGO6pksT9cx9c66XO3CQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEBindingKind)(tyEnum_EBindingKind__69bj9cjlS9bRECMNejM5dz06g fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSlate)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUButtonStyleAsset)(UButtonStyleAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUCheckBoxStyleAsset)(UCheckBoxStyleAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSlateBrushAsset)(USlateBrushAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(UPanelSlot_*, slot)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setslot)(UWidget_* obj, UPanelSlot_* val);
N_LIB_PRIVATE N_NIMCALL(FText*, toolTipText)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settoolTipText)(UWidget_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, renderTransformPivot)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderTransformPivot)(UWidget_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw, flowDirectionPreference)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setflowDirectionPreference)(UWidget_* obj, tyEnum_EFlowDirectionPreference__R9aer4LZEJKn5G07a7E0Wkw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsEnabled)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsEnabled)(UWidget_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsVolatile)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsVolatile)(UWidget_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, cursor)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcursor)(UWidget_* obj, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw, clipping)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclipping)(UWidget_* obj, tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw val);
N_LIB_PRIVATE N_NIMCALL(NF32, renderOpacity)(UWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOpacity)(UWidget_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setUserFocus_)(UWidget_* self, APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(void, setToolTipText_)(UWidget_* self, FText& inToolTipText);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTranslation_)(UWidget_* self, FVector2D translation);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTransformPivot_)(UWidget_* self, FVector2D pivot);
N_LIB_PRIVATE N_NIMCALL(void, setRenderTransformAngle_)(UWidget_* self, NF32 angle);
N_LIB_PRIVATE N_NIMCALL(void, setRenderShear_)(UWidget_* self, FVector2D shear);
N_LIB_PRIVATE N_NIMCALL(void, setRenderScale_)(UWidget_* self, FVector2D scale);
N_LIB_PRIVATE N_NIMCALL(void, setRenderOpacity_)(UWidget_* self, NF32 inOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationRuleBase_)(UWidget_* self, tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ direction, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationRule_)(UWidget_* self, tyEnum_EUINavigation__LeRgjRTFASV7juz7C78yLQ direction, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule, FName widgetToFocus);
N_LIB_PRIVATE N_NIMCALL(void, setKeyboardFocus_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, setIsEnabled_)(UWidget_* self, NIM_BOOL bInIsEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setFocus_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, setCursor_)(UWidget_* self, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g inCursor);
N_LIB_PRIVATE N_NIMCALL(void, setClipping_)(UWidget_* self, tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw inClipping);
N_LIB_PRIVATE N_NIMCALL(void, setAllNavigationRules_)(UWidget_* self, tyEnum_EUINavigationRule__Iz1Wt59cTOUGx3CXCKEd9aLQ rule, FName widgetToFocus);
N_LIB_PRIVATE N_NIMCALL(void, resetCursor_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, removeFromParent_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRendered_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInViewport_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHovered_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, invalidateLayoutAndVolatility_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUserFocusedDescendants_)(UWidget_* self, APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasUserFocus_)(UWidget_* self, APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMouseCaptureByUser_)(UWidget_* self, NI32 userIndex, NI32 pointerIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMouseCapture_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasKeyboardFocus_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasFocusedDescendants_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyUserFocus_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getTickSpaceGeometry_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getRenderTransformAngle_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getRenderOpacity_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(UPanelWidget_*, getParent_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getPaintSpaceGeometry_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayer_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsEnabled_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(UGameInstance*, getGameInstance_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getDesiredSize_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetClipping__LizDGh8dxqN4JUsCZHfs9bw, getClipping_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getCachedGeometry_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getAccessibleText_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getAccessibleSummaryText_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, forceVolatile_)(UWidget_* self, NIM_BOOL bForce);
N_LIB_PRIVATE N_NIMCALL(void, forceLayoutPrepass_)(UWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidget)(UWidget_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setWindowVisibility_)(UWidgetComponent_* self, tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw inVisibility);
N_LIB_PRIVATE N_NIMCALL(void, setWindowFocusable_)(UWidgetComponent_* self, NIM_BOOL bInWindowFocusable);
N_LIB_PRIVATE N_NIMCALL(void, setWidgetSpace_)(UWidgetComponent_* self, tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw newSpace);
N_LIB_PRIVATE N_NIMCALL(void, setTwoSided_)(UWidgetComponent_* self, NIM_BOOL bWantTwoSided);
N_LIB_PRIVATE N_NIMCALL(void, setTintColorAndOpacity_)(UWidgetComponent_* self, FLinearColor newTintColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setTickWhenOffscreen_)(UWidgetComponent_* self, NIM_BOOL bWantTickWhenOffscreen);
N_LIB_PRIVATE N_NIMCALL(void, setTickMode_)(UWidgetComponent_* self, tyEnum_ETickMode__rpxnv5vHIZR9bdO1o6wQZXw inTickMode);
N_LIB_PRIVATE N_NIMCALL(void, setRedrawTime_)(UWidgetComponent_* self, NF32 inRedrawTime);
N_LIB_PRIVATE N_NIMCALL(void, setPivot_)(UWidgetComponent_* self, FVector2D& inPivot);
N_LIB_PRIVATE N_NIMCALL(void, setManuallyRedraw_)(UWidgetComponent_* self, NIM_BOOL bUseManualRedraw);
N_LIB_PRIVATE N_NIMCALL(void, setGeometryMode_)(UWidgetComponent_* self, tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog inGeometryMode);
N_LIB_PRIVATE N_NIMCALL(void, setDrawSize_)(UWidgetComponent_* self, FVector2D size);
N_LIB_PRIVATE N_NIMCALL(void, setDrawAtDesiredSize_)(UWidgetComponent_* self, NIM_BOOL bInDrawAtDesiredSize);
N_LIB_PRIVATE N_NIMCALL(void, setCylinderArcAngle_)(UWidgetComponent_* self, NF32 inCylinderArcAngle);
N_LIB_PRIVATE N_NIMCALL(void, setBackgroundColor_)(UWidgetComponent_* self, FLinearColor newBackgroundColor);
N_LIB_PRIVATE N_NIMCALL(void, requestRenderUpdate_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, requestRedraw_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWidgetVisible_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowVisibility__sshBfwnqULLJKBkRKHU9adw, getWindowVisiblility_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getWindowFocusable_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetSpace__Um9aDoon89cOQ9b4p3y4WHYSw, getWidgetSpace_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTwoSided_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTickWhenOffscreen_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UTextureRenderTarget2D_*, getRenderTarget_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getRedrawTime_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getPivot_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getMaterialInstance_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getManuallyRedraw_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetGeometryMode__Ha6KVPlSBlZf69c4AN1Zrog, getGeometryMode_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getDrawSize_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getDrawAtDesiredSize_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCylinderArcAngle_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getCurrentDrawSize_)(UWidgetComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetComponent)(UWidgetComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, wheelScrollMultiplier)(UListViewBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwheelScrollMultiplier)(UListViewBase_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableScrollAnimation)(UListViewBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableScrollAnimation)(UListViewBase_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowDragging)(UListViewBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowDragging)(UListViewBase_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setWheelScrollMultiplier_)(UListViewBase_* self, NF32 newWheelScrollMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setScrollOffset_)(UListViewBase_* self, NF32 inScrollOffset);
N_LIB_PRIVATE N_NIMCALL(void, scrollToTop_)(UListViewBase_* self);
N_LIB_PRIVATE N_NIMCALL(void, scrollToBottom_)(UListViewBase_* self);
N_LIB_PRIVATE N_NIMCALL(void, requestRefresh_)(UListViewBase_* self);
N_LIB_PRIVATE N_NIMCALL(void, regenerateAllEntries_)(UListViewBase_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffset_)(UListViewBase_* self);
N_LIB_PRIVATE N_NIMCALL(FTableViewStyle*, widgetStyle)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UListView_* obj, FTableViewStyle val);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UListView_* obj, FScrollBarStyle val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UListView_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A, selectionMode)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectionMode)(UListView_* obj, tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg, consumeMouseWheel)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconsumeMouseWheel)(UListView_* obj, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClearSelectionOnClick)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbClearSelectionOnClick)(UListView_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UListView_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, entrySpacing)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentrySpacing)(UListView_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReturnFocusToSelection)(UListView_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReturnFocusToSelection)(UListView_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setSelectionMode_)(UListView_* self, tyEnum_ESelectionMode__8WAROb2DUVxBBxnlj5R37A selectionMode);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedIndex_)(UListView_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, scrollIndexIntoView_)(UListView_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(void, removeItem_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(void, navigateToIndex_)(UListView_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRefreshPending_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumItems_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(TY__meGclu4l9cwnqbgiIjRtfhA, getListItems_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(UObject*, getItemAt_)(UListView_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NI32, getIndexForItem_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(void, clearListItems_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedItem_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(void, setListItems_)(UListView_* self, TY__meGclu4l9cwnqbgiIjRtfhA& inListItems);
N_LIB_PRIVATE N_NIMCALL(void, setItemSelection_)(UListView_* self, UObject* item, NIM_BOOL bSelected);
N_LIB_PRIVATE N_NIMCALL(void, scrollItemIntoView_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(void, navigateToItem_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isItemVisible_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getSelectedItems_)(UListView_* self, TY__meGclu4l9cwnqbgiIjRtfhA& items);
N_LIB_PRIVATE N_NIMCALL(UObject*, getSelectedItem_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumItemsSelected_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(void, cancelScrollIntoView_)(UListView_* self);
N_LIB_PRIVATE N_NIMCALL(void, addItem_)(UListView_* self, UObject* item);
N_LIB_PRIVATE N_NIMCALL(void, keepUListView)(UListView_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeChildAt_)(UPanelWidget_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyChildren_)(UPanelWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getChildrenCount_)(UPanelWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearChildren_)(UPanelWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBackgroundBlur_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBackgroundBlur_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBackgroundBlur_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyAlphaToBlur)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyAlphaToBlur)(UBackgroundBlur_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, blurStrength)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblurStrength)(UBackgroundBlur_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, blurRadius)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblurRadius)(UBackgroundBlur_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FVector4*, cornerRadius)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcornerRadius)(UBackgroundBlur_* obj, FVector4 val);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, lowQualityFallbackBrush)(UBackgroundBlur_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlowQualityFallbackBrush)(UBackgroundBlur_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBackgroundBlur_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBackgroundBlur_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setLowQualityFallbackBrush_)(UBackgroundBlur_* self, FSlateBrush& inBrush);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBackgroundBlur_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setCornerRadius_)(UBackgroundBlur_* self, FVector4 inCornerRadius);
N_LIB_PRIVATE N_NIMCALL(void, setBlurStrength_)(UBackgroundBlur_* self, NF32 inStrength);
N_LIB_PRIVATE N_NIMCALL(void, setBlurRadius_)(UBackgroundBlur_* self, NI32 inBlurRadius);
N_LIB_PRIVATE N_NIMCALL(void, setApplyAlphaToBlur_)(UBackgroundBlur_* self, NIM_BOOL bInApplyAlphaToBlur);
N_LIB_PRIVATE N_NIMCALL(void, keepUBackgroundBlur)(UBackgroundBlur_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBackgroundBlurSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBackgroundBlurSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBackgroundBlurSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBackgroundBlurSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBackgroundBlurSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBackgroundBlurSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBackgroundBlurSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBackgroundBlurSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBackgroundBlurSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUBackgroundBlurSlot)(UBackgroundBlurSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBorder_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBorder_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowEffectWhenDisabled)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowEffectWhenDisabled)(UBorder_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, contentColorAndOpacity)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontentColorAndOpacity)(UBorder_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBorder_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, background)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbackground)(UBorder_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, brushColor)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrushColor)(UBorder_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, desiredSizeScale)(UBorder_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdesiredSizeScale)(UBorder_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBorder_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setShowEffectWhenDisabled_)(UBorder_* self, NIM_BOOL bInShowEffectWhenDisabled);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBorder_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBorder_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeScale_)(UBorder_* self, FVector2D inScale);
N_LIB_PRIVATE N_NIMCALL(void, setContentColorAndOpacity_)(UBorder_* self, FLinearColor inContentColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTexture_)(UBorder_* self, UTexture2D* texture);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromMaterial_)(UBorder_* self, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAsset_)(UBorder_* self, USlateBrushAsset_* asset);
N_LIB_PRIVATE N_NIMCALL(void, setBrushColor_)(UBorder_* self, FLinearColor inBrushColor);
N_LIB_PRIVATE N_NIMCALL(void, setBrush_)(UBorder_* self, FSlateBrush& inBrush);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(UBorder_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUBorder)(UBorder_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UBorderSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UBorderSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UBorderSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UBorderSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UBorderSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UBorderSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UBorderSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UBorderSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UBorderSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUBorderSlot)(UBorderSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, widgetStyle)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UButton_* obj, FButtonStyle val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UButton_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, backgroundColor)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbackgroundColor)(UButton_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw, clickMethod)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclickMethod)(UButton_* obj, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA, touchMethod)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settouchMethod)(UButton_* obj, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg, pressMethod)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpressMethod)(UButton_* obj, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(UButton_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(UButton_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setTouchMethod_)(UButton_* self, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA inTouchMethod);
N_LIB_PRIVATE N_NIMCALL(void, setStyle_)(UButton_* self, FButtonStyle& inStyle);
N_LIB_PRIVATE N_NIMCALL(void, setPressMethod_)(UButton_* self, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg inPressMethod);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UButton_* self, FLinearColor inColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setClickMethod_)(UButton_* self, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw inClickMethod);
N_LIB_PRIVATE N_NIMCALL(void, setBackgroundColor_)(UButton_* self, FLinearColor inBackgroundColor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPressed_)(UButton_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUButton)(UButton_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UButtonSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UButtonSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UButtonSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UButtonSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UButtonSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UButtonSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UButtonSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UButtonSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UButtonSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUButtonSlot)(UButtonSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FAnchorData_*, layoutData)(UCanvasPanelSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlayoutData)(UCanvasPanelSlot_* obj, FAnchorData_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoSize)(UCanvasPanelSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoSize)(UCanvasPanelSlot_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, zOrder)(UCanvasPanelSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setzOrder)(UCanvasPanelSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setZOrder_)(UCanvasPanelSlot_* self, NI32 inZOrder);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UCanvasPanelSlot_* self, FVector2D inSize);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(UCanvasPanelSlot_* self, FVector2D inPosition);
N_LIB_PRIVATE N_NIMCALL(void, setOffsets_)(UCanvasPanelSlot_* self, FMargin inOffset);
N_LIB_PRIVATE N_NIMCALL(void, setLayout_)(UCanvasPanelSlot_* self, FAnchorData_& inLayoutData);
N_LIB_PRIVATE N_NIMCALL(void, setAutoSize_)(UCanvasPanelSlot_* self, NIM_BOOL inbAutoSize);
N_LIB_PRIVATE N_NIMCALL(void, setAnchors_)(UCanvasPanelSlot_* self, FAnchors_ inAnchors);
N_LIB_PRIVATE N_NIMCALL(void, setAlignment_)(UCanvasPanelSlot_* self, FVector2D inAlignment);
N_LIB_PRIVATE N_NIMCALL(NI32, getZOrder_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getSize_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getPosition_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FMargin, getOffsets_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FAnchorData_, getLayout_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAutoSize_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FAnchors_, getAnchors_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAlignment_)(UCanvasPanelSlot_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUCanvasPanelSlot)(UCanvasPanelSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg, checkedState)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcheckedState)(UCheckBox_* obj, tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg val);
N_LIB_PRIVATE N_NIMCALL(FCheckBoxStyle*, widgetStyle)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UCheckBox_* obj, FCheckBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UCheckBox_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw, clickMethod)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclickMethod)(UCheckBox_* obj, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA, touchMethod)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settouchMethod)(UCheckBox_* obj, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg, pressMethod)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpressMethod)(UCheckBox_* obj, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(UCheckBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(UCheckBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setTouchMethod_)(UCheckBox_* self, tyEnum_EButtonTouchMethod__aREAD9ayVTkjx8jlwvOWGtA inTouchMethod);
N_LIB_PRIVATE N_NIMCALL(void, setPressMethod_)(UCheckBox_* self, tyEnum_EButtonPressMethod__do0u1pRqXivmuBoeeFVkTg inPressMethod);
N_LIB_PRIVATE N_NIMCALL(void, setIsChecked_)(UCheckBox_* self, NIM_BOOL inIsChecked);
N_LIB_PRIVATE N_NIMCALL(void, setClickMethod_)(UCheckBox_* self, tyEnum_EButtonClickMethod__4DM3uoBMrzdb7A2cFgeoOw inClickMethod);
N_LIB_PRIVATE N_NIMCALL(void, setCheckedState_)(UCheckBox_* self, tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg inCheckedState);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPressed_)(UCheckBox_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isChecked_)(UCheckBox_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECheckBoxState__EutTwxJlZ1b9c5g5Nuu8TBg, getCheckedState_)(UCheckBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUCheckBox)(UCheckBox_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfPieces)(UCircularThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfPieces)(UCircularThrobber_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, period)(UCircularThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setperiod)(UCircularThrobber_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UCircularThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UCircularThrobber_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, image)(UCircularThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setimage)(UCircularThrobber_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(void, setRadius_)(UCircularThrobber_* self, NF32 inRadius);
N_LIB_PRIVATE N_NIMCALL(void, setPeriod_)(UCircularThrobber_* self, NF32 inPeriod);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfPieces_)(UCircularThrobber_* self, NI32 inNumberOfPieces);
N_LIB_PRIVATE N_NIMCALL(void, keepUCircularThrobber)(UCircularThrobber_* fake);
N_LIB_PRIVATE N_NIMCALL(FComboBoxStyle*, widgetStyle)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UComboBoxKey_* obj, FComboBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(FTableRowStyle*, itemStyle)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setitemStyle)(UComboBoxKey_* obj, FTableRowStyle val);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UComboBoxKey_* obj, FScrollBarStyle val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UComboBoxKey_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, contentPadding)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontentPadding)(UComboBoxKey_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxListHeight)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxListHeight)(UComboBoxKey_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHasDownArrow)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHasDownArrow)(UComboBoxKey_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableGamepadNavigationMode)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableGamepadNavigationMode)(UComboBoxKey_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UComboBoxKey_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UComboBoxKey_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedOption_)(UComboBoxKey_* self, FName option);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeOption_)(UComboBoxKey_* self, FName option);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UComboBoxKey_* self);
N_LIB_PRIVATE N_NIMCALL(FName, getSelectedOption_)(UComboBoxKey_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UComboBoxKey_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearOptions_)(UComboBoxKey_* self);
N_LIB_PRIVATE N_NIMCALL(void, addOption_)(UComboBoxKey_* self, FName option);
N_LIB_PRIVATE N_NIMCALL(void, keepUComboBoxKey)(UComboBoxKey_* fake);
N_LIB_PRIVATE N_NIMCALL(FComboBoxStyle*, widgetStyle)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UComboBoxString_* obj, FComboBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(FTableRowStyle*, itemStyle)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setitemStyle)(UComboBoxString_* obj, FTableRowStyle val);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, scrollBarStyle)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollBarStyle)(UComboBoxString_* obj, FScrollBarStyle val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, contentPadding)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontentPadding)(UComboBoxString_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxListHeight)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxListHeight)(UComboBoxString_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasDownArrow)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethasDownArrow)(UComboBoxString_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, enableGamepadNavigationMode)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenableGamepadNavigationMode)(UComboBoxString_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UComboBoxString_* obj, FSlateFontInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UComboBoxString_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UComboBoxString_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UComboBoxString_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedOption_)(UComboBoxString_* self, FString option);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedIndex_)(UComboBoxString_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeOption_)(UComboBoxString_* self, FString option);
N_LIB_PRIVATE N_NIMCALL(void, refreshOptions_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(FString, getSelectedOption_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getSelectedIndex_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getOptionCount_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(FString, getOptionAtIndex_)(UComboBoxString_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NI32, findOptionIndex_)(UComboBoxString_* self, FString option);
N_LIB_PRIVATE N_NIMCALL(void, clearSelection_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearOptions_)(UComboBoxString_* self);
N_LIB_PRIVATE N_NIMCALL(void, addOption_)(UComboBoxString_* self, FString option);
N_LIB_PRIVATE N_NIMCALL(void, keepUComboBoxString)(UComboBoxString_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, entrySpacing)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentrySpacing)(UDynamicEntryBoxBase_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(TY__fBi9aXEAuMMk9cMD1hVzuHSg*, spacingPattern)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspacingPattern)(UDynamicEntryBoxBase_* obj, TY__fBi9aXEAuMMk9cMD1hVzuHSg val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A, entryBoxType)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentryBoxType)(UDynamicEntryBoxBase_* obj, tyEnum_EDynamicBoxType__Bnl9cytQyTJaDHL4kaUxC6A val);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, entrySizeRule)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentrySizeRule)(UDynamicEntryBoxBase_* obj, FSlateChildSize_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, entryHorizontalAlignment)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentryHorizontalAlignment)(UDynamicEntryBoxBase_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, entryVerticalAlignment)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentryVerticalAlignment)(UDynamicEntryBoxBase_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxElementSize)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxElementSize)(UDynamicEntryBoxBase_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FRadialBoxSettings_*, radialBoxSettings)(UDynamicEntryBoxBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradialBoxSettings)(UDynamicEntryBoxBase_* obj, FRadialBoxSettings_ val);
N_LIB_PRIVATE N_NIMCALL(void, setRadialSettings_)(UDynamicEntryBoxBase_* self, FRadialBoxSettings_& inSettings);
N_LIB_PRIVATE N_NIMCALL(void, setEntrySpacing_)(UDynamicEntryBoxBase_* self, FVector2D& inEntrySpacing);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumEntries_)(UDynamicEntryBoxBase_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUDynamicEntryBoxBase)(UDynamicEntryBoxBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, reset_)(UDynamicEntryBox_* self, NIM_BOOL bDeleteWidgets);
N_LIB_PRIVATE N_NIMCALL(void, keepUDynamicEntryBox)(UDynamicEntryBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UEditableText_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UEditableText_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FEditableTextStyle*, widgetStyle)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UEditableText_* obj, FEditableTextStyle val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReadOnly)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisReadOnly)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPassword)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisPassword)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumDesiredWidth)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimumDesiredWidth)(UEditableText_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCaretMovedWhenGainFocus)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisCaretMovedWhenGainFocus)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(UEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UEditableText_* obj, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, overflowPolicy)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowPolicy)(UEditableText_* obj, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UEditableText_* obj, FShapedTextOptions_ val);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UEditableText_* self, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UEditableText_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setMinimumDesiredWidth_)(UEditableText_* self, NF32 inMinDesiredWidth);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UEditableText_* self, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UEditableText_* self, NIM_BOOL inbIsReadyOnly);
N_LIB_PRIVATE N_NIMCALL(void, setIsPassword_)(UEditableText_* self, NIM_BOOL inbIsPassword);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UEditableText_* self, FText inHintText);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UEditableText_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UEditableText_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UEditableText_* self, FSlateFontInfo_ inFontInfo);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, getJustification_)(UEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_, getFont_)(UEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUEditableText)(UEditableText_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UEditableTextBox_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FEditableTextBoxStyle*, widgetStyle)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UEditableTextBox_* obj, FEditableTextBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UEditableTextBox_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isReadOnly)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisReadOnly)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPassword)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisPassword)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumDesiredWidth)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimumDesiredWidth)(UEditableTextBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCaretMovedWhenGainFocus)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisCaretMovedWhenGainFocus)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(UEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UEditableTextBox_* obj, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, overflowPolicy)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowPolicy)(UEditableTextBox_* obj, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UEditableTextBox_* obj, FShapedTextOptions_ val);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UEditableTextBox_* self, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UEditableTextBox_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UEditableTextBox_* self, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UEditableTextBox_* self, NIM_BOOL bReadOnly);
N_LIB_PRIVATE N_NIMCALL(void, setIsPassword_)(UEditableTextBox_* self, NIM_BOOL bIsPassword);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UEditableTextBox_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UEditableTextBox_* self, FLinearColor color);
N_LIB_PRIVATE N_NIMCALL(void, setError_)(UEditableTextBox_* self, FText inError);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasError_)(UEditableTextBox_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UEditableTextBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearError_)(UEditableTextBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUEditableTextBox)(UEditableTextBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, borderBrush)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setborderBrush)(UExpandableArea_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, borderColor)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setborderColor)(UExpandableArea_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsExpanded)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsExpanded)(UExpandableArea_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxHeight)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxHeight)(UExpandableArea_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, headerPadding)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheaderPadding)(UExpandableArea_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, areaPadding)(UExpandableArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setareaPadding)(UExpandableArea_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(void, setIsExpanded_Animated_)(UExpandableArea_* self, NIM_BOOL isExpanded);
N_LIB_PRIVATE N_NIMCALL(void, setIsExpanded_)(UExpandableArea_* self, NIM_BOOL isExpanded);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsExpanded_)(UExpandableArea_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUExpandableArea)(UExpandableArea_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__LZaQ4h2l9bWQPMMIHjA9cwlA*, columnFill)(UGridPanel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolumnFill)(UGridPanel_* obj, TY__LZaQ4h2l9bWQPMMIHjA9cwlA val);
N_LIB_PRIVATE N_NIMCALL(TY__LZaQ4h2l9bWQPMMIHjA9cwlA*, rowFill)(UGridPanel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrowFill)(UGridPanel_* obj, TY__LZaQ4h2l9bWQPMMIHjA9cwlA val);
N_LIB_PRIVATE N_NIMCALL(void, setRowFill_)(UGridPanel_* self, NI32 rowIndex, NF32 coefficient);
N_LIB_PRIVATE N_NIMCALL(void, setColumnFill_)(UGridPanel_* self, NI32 columnIndex, NF32 coefficient);
N_LIB_PRIVATE N_NIMCALL(void, keepUGridPanel)(UGridPanel_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UGridSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UGridSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UGridSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NI32, row)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrow)(UGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, rowSpan)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrowSpan)(UGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, column)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolumn)(UGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, columnSpan)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolumnSpan)(UGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, layer)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlayer)(UGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, nudge)(UGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnudge)(UGridSlot_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UGridSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setRowSpan_)(UGridSlot_* self, NI32 inRowSpan);
N_LIB_PRIVATE N_NIMCALL(void, setRow_)(UGridSlot_* self, NI32 inRow);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UGridSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setNudge_)(UGridSlot_* self, FVector2D inNudge);
N_LIB_PRIVATE N_NIMCALL(void, setLayer_)(UGridSlot_* self, NI32 inLayer);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UGridSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setColumnSpan_)(UGridSlot_* self, NI32 inColumnSpan);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(UGridSlot_* self, NI32 inColumn);
N_LIB_PRIVATE N_NIMCALL(void, keepUGridSlot)(UGridSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UHorizontalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UHorizontalBoxSlot_* obj, FSlateChildSize_ val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UHorizontalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UHorizontalBoxSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UHorizontalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UHorizontalBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UHorizontalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UHorizontalBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UHorizontalBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UHorizontalBoxSlot_* self, FSlateChildSize_ inSize);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UHorizontalBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UHorizontalBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUHorizontalBoxSlot)(UHorizontalBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, brush)(UImage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrush)(UImage_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UImage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UImage_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFlipForRightToLeftFlowDirection)(UImage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFlipForRightToLeftFlowDirection)(UImage_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setOpacity_)(UImage_* self, NF32 inOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeOverride_)(UImage_* self, FVector2D desiredSize);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UImage_* self, FLinearColor inColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setBrushTintColor_)(UImage_* self, FSlateColor tintColor);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceObject_)(UImage_* self, UObject* resourceObject);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTextureDynamic_)(UImage_* self, UTexture2DDynamic_* texture, NIM_BOOL bMatchSize);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromTexture_)(UImage_* self, UTexture2D* texture, NIM_BOOL bMatchSize);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromSoftTexture_)(UImage_* self, TY__mOiS9a9b9aowIwwaaQjcI1LkQ softTexture, NIM_BOOL bMatchSize);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromSoftMaterial_)(UImage_* self, TY__s6S1etbTGDD5NQkdAHEaiA softMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromMaterial_)(UImage_* self, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAtlasInterface_)(UImage_* self, TY__ChHEiSofKQOcZRnlxAau9bg atlasRegion, NIM_BOOL bMatchSize);
N_LIB_PRIVATE N_NIMCALL(void, setBrushFromAsset_)(UImage_* self, USlateBrushAsset_* asset);
N_LIB_PRIVATE N_NIMCALL(void, setBrush_)(UImage_* self, FSlateBrush& inBrush);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(UImage_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUImage)(UImage_* fake);
N_LIB_PRIVATE N_NIMCALL(FButtonStyle*, widgetStyle)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UInputKeySelector_* obj, FButtonStyle val);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, textStyle)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextStyle)(UInputKeySelector_* obj, FTextBlockStyle val);
N_LIB_PRIVATE N_NIMCALL(FInputChord*, selectedKey)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectedKey)(UInputKeySelector_* obj, FInputChord val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, margin)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmargin)(UInputKeySelector_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(FText*, keySelectionText)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setkeySelectionText)(UInputKeySelector_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, noKeySpecifiedText)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnoKeySpecifiedText)(UInputKeySelector_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowModifierKeys)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowModifierKeys)(UInputKeySelector_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowGamepadKeys)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowGamepadKeys)(UInputKeySelector_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA*, escapeKeys)(UInputKeySelector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setescapeKeys)(UInputKeySelector_* obj, TY__HqMsNoaajlV9ahHT79bz6bBA val);
N_LIB_PRIVATE N_NIMCALL(void, setSelectedKey_)(UInputKeySelector_* self, FInputChord& inSelectedKey);
N_LIB_PRIVATE N_NIMCALL(void, setNoKeySpecifiedText_)(UInputKeySelector_* self, FText inNoKeySpecifiedText);
N_LIB_PRIVATE N_NIMCALL(void, setKeySelectionText_)(UInputKeySelector_* self, FText inKeySelectionText);
N_LIB_PRIVATE N_NIMCALL(void, setEscapeKeys_)(UInputKeySelector_* self, TY__HqMsNoaajlV9ahHT79bz6bBA& inKeys);
N_LIB_PRIVATE N_NIMCALL(void, setAllowModifierKeys_)(UInputKeySelector_* self, NIM_BOOL bInAllowModifierKeys);
N_LIB_PRIVATE N_NIMCALL(void, setAllowGamepadKeys_)(UInputKeySelector_* self, NIM_BOOL bInAllowGamepadKeys);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsSelectingKey_)(UInputKeySelector_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputKeySelector)(UInputKeySelector_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanCache)(UInvalidationBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanCache)(UInvalidationBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setCanCache_)(UInvalidationBox_* self, NIM_BOOL canCache);
N_LIB_PRIVATE N_NIMCALL(void, invalidateCache_)(UInvalidationBox_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCanCache_)(UInvalidationBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUInvalidationBox)(UInvalidationBox_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA, placement)(UMenuAnchor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplacement)(UMenuAnchor_* obj, tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFitInWindow)(UMenuAnchor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFitInWindow)(UMenuAnchor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldDeferPaintingAfterWindowContent)(UMenuAnchor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshouldDeferPaintingAfterWindowContent)(UMenuAnchor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, useApplicationMenuStack)(UMenuAnchor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuseApplicationMenuStack)(UMenuAnchor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, toggleOpen_)(UMenuAnchor_* self, NIM_BOOL bFocusOnOpen);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldOpenDueToClick_)(UMenuAnchor_* self);
N_LIB_PRIVATE N_NIMCALL(void, setPlacement_)(UMenuAnchor_* self, tyEnum_EMenuPlacement__6SXzAguACC9clgMsioHvHJA inPlacement);
N_LIB_PRIVATE N_NIMCALL(void, open_)(UMenuAnchor_* self, NIM_BOOL bFocusMenu);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOpen_)(UMenuAnchor_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasOpenSubMenus_)(UMenuAnchor_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMenuPosition_)(UMenuAnchor_* self);
N_LIB_PRIVATE N_NIMCALL(void, fitInWindow_)(UMenuAnchor_* self, NIM_BOOL bFit);
N_LIB_PRIVATE N_NIMCALL(void, close_)(UMenuAnchor_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUMenuAnchor)(UMenuAnchor_* fake);
N_LIB_PRIVATE N_NIMCALL(FShapedTextOptions_*, shapedTextOptions)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshapedTextOptions)(UTextLayoutWidget_* obj, FShapedTextOptions_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(UTextLayoutWidget_* obj, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww, wrappingPolicy)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwrappingPolicy)(UTextLayoutWidget_* obj, tyEnum_ETextWrappingPolicy__yiRFwQwNhBDHXtC5smZ7Ww val);
N_LIB_PRIVATE N_NIMCALL(NU8, autoWrapText)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoWrapText)(UTextLayoutWidget_* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NF32, wrapTextAt)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwrapTextAt)(UTextLayoutWidget_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, margin)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmargin)(UTextLayoutWidget_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NF32, lineHeightPercentage)(UTextLayoutWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlineHeightPercentage)(UTextLayoutWidget_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setJustification_)(UTextLayoutWidget_* self, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA inJustification);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextLayoutWidget)(UTextLayoutWidget_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UMultiLineEditableText_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UMultiLineEditableText_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, widgetStyle)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UMultiLineEditableText_* obj, FTextBlockStyle val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsReadOnly)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsReadOnly)(UMultiLineEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextWhenFocused)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextWhenFocused)(UMultiLineEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, revertTextOnEscape)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrevertTextOnEscape)(UMultiLineEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(UMultiLineEditableText_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(UMultiLineEditableText_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setWidgetStyle_)(UMultiLineEditableText_* self, FTextBlockStyle& inWidgetStyle);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UMultiLineEditableText_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UMultiLineEditableText_* self, NIM_BOOL bReadOnly);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UMultiLineEditableText_* self, FText inHintText);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UMultiLineEditableText_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UMultiLineEditableText_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UMultiLineEditableText_* self, FSlateFontInfo_ inFontInfo);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UMultiLineEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UMultiLineEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_, getFont_)(UMultiLineEditableText_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUMultiLineEditableText)(UMultiLineEditableText_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UMultiLineEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UMultiLineEditableTextBox_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FText*, hintText)(UMultiLineEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethintText)(UMultiLineEditableTextBox_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FEditableTextBoxStyle*, widgetStyle)(UMultiLineEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UMultiLineEditableTextBox_* obj, FEditableTextBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsReadOnly)(UMultiLineEditableTextBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsReadOnly)(UMultiLineEditableTextBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setTextStyle_)(UMultiLineEditableTextBox_* self, FTextBlockStyle& inTextStyle);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UMultiLineEditableTextBox_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setIsReadOnly_)(UMultiLineEditableTextBox_* self, NIM_BOOL bReadOnly);
N_LIB_PRIVATE N_NIMCALL(void, setHintText_)(UMultiLineEditableTextBox_* self, FText inHintText);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UMultiLineEditableTextBox_* self, FLinearColor color);
N_LIB_PRIVATE N_NIMCALL(void, setError_)(UMultiLineEditableTextBox_* self, FText inError);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UMultiLineEditableTextBox_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getHintText_)(UMultiLineEditableTextBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUMultiLineEditableTextBox)(UMultiLineEditableTextBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UOverlaySlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UOverlaySlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UOverlaySlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UOverlaySlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UOverlaySlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UOverlaySlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UOverlaySlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UOverlaySlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UOverlaySlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUOverlaySlot)(UOverlaySlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FProgressBarStyle*, widgetStyle)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UProgressBar_* obj, FProgressBarStyle val);
N_LIB_PRIVATE N_NIMCALL(NF32, percent)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpercent)(UProgressBar_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA, barFillType)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbarFillType)(UProgressBar_* obj, tyEnum_EProgressBarFillType__0JTWZtS0qqCzF6KX7p39cyA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA, barFillStyle)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbarFillStyle)(UProgressBar_* obj, tyEnum_EProgressBarFillStyle__Q9bDTn2HdK9cdbodn4KZsMHA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsMarquee)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsMarquee)(UProgressBar_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, borderPadding)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setborderPadding)(UProgressBar_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, fillColorAndOpacity)(UProgressBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfillColorAndOpacity)(UProgressBar_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(void, setPercent_)(UProgressBar_* self, NF32 inPercent);
N_LIB_PRIVATE N_NIMCALL(void, setIsMarquee_)(UProgressBar_* self, NIM_BOOL inbIsMarquee);
N_LIB_PRIVATE N_NIMCALL(void, setFillColorAndOpacity_)(UProgressBar_* self, FLinearColor inColor);
N_LIB_PRIVATE N_NIMCALL(void, keepUProgressBar)(UProgressBar_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRetainRender)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRetainRender)(URetainerBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renderOnInvalidation)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOnInvalidation)(URetainerBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, renderOnPhase)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrenderOnPhase)(URetainerBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, phase)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphase)(URetainerBox_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, phaseCount)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphaseCount)(URetainerBox_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, effectMaterial)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seteffectMaterial)(URetainerBox_* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(FName*, textureParameter)(URetainerBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextureParameter)(URetainerBox_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(void, setTextureParameter_)(URetainerBox_* self, FName textureParameter);
N_LIB_PRIVATE N_NIMCALL(void, setRetainRendering_)(URetainerBox_* self, NIM_BOOL bInRetainRendering);
N_LIB_PRIVATE N_NIMCALL(void, setRenderingPhase_)(URetainerBox_* self, NI32 renderPhase, NI32 totalPhases);
N_LIB_PRIVATE N_NIMCALL(void, setEffectMaterial_)(URetainerBox_* self, UMaterialInterface* effectMaterial);
N_LIB_PRIVATE N_NIMCALL(void, requestRender_)(URetainerBox_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getEffectMaterial_)(URetainerBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepURetainerBox)(URetainerBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(URichTextBlock_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, textStyleSet)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextStyleSet)(URichTextBlock_* obj, UDataTable* val);
N_LIB_PRIVATE N_NIMCALL(FTextBlockStyle*, defaultTextStyleOverride)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultTextStyleOverride)(URichTextBlock_* obj, FTextBlockStyle val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(URichTextBlock_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ, textTransformPolicy)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextTransformPolicy)(URichTextBlock_* obj, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, textOverflowPolicy)(URichTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextOverflowPolicy)(URichTextBlock_* obj, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val);
N_LIB_PRIVATE N_NIMCALL(void, setTextTransformPolicy_)(URichTextBlock_* self, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ inTransformPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setTextStyleSet_)(URichTextBlock_* self, UDataTable* newTextStyleSet);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(URichTextBlock_* self, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(URichTextBlock_* self, FText& inText);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(URichTextBlock_* self, NF32 inMinDesiredWidth);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultTextStyle_)(URichTextBlock_* self, FTextBlockStyle& inDefaultTextStyle);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultStrikeBrush_)(URichTextBlock_* self, FSlateBrush& inStrikeBrush);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultShadowOffset_)(URichTextBlock_* self, FVector2D inShadowOffset);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultShadowColorAndOpacity_)(URichTextBlock_* self, FLinearColor inShadowColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultMaterial_)(URichTextBlock_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultFont_)(URichTextBlock_* self, FSlateFontInfo_ inFontInfo);
N_LIB_PRIVATE N_NIMCALL(void, setDefaultColorAndOpacity_)(URichTextBlock_* self, FSlateColor inColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setDecorators_)(URichTextBlock_* self, TY__fjyUyrp2lTh3XJrhJ8LRSQ& inDecoratorClasses);
N_LIB_PRIVATE N_NIMCALL(void, setAutoWrapText_)(URichTextBlock_* self, NIM_BOOL inAutoTextWrap);
N_LIB_PRIVATE N_NIMCALL(void, refreshTextLayout_)(URichTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, getTextStyleSet_)(URichTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(URichTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDefaultDynamicMaterial_)(URichTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(URichTextBlockDecorator_*, getDecoratorByClass_)(URichTextBlock_* self, TY__wB9bgWhg9b9cgeGP1bZZpMvHw decoratorClass);
N_LIB_PRIVATE N_NIMCALL(void, keepURichTextBlock)(URichTextBlock_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURichTextBlockImageDecorator)(URichTextBlockImageDecorator_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padLeft)(USafeZone_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadLeft)(USafeZone_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padRight)(USafeZone_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadRight)(USafeZone_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padTop)(USafeZone_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadTop)(USafeZone_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, padBottom)(USafeZone_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadBottom)(USafeZone_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setSidesToPad_)(USafeZone_* self, NIM_BOOL inPadLeft, NIM_BOOL inPadRight, NIM_BOOL inPadTop, NIM_BOOL inPadBottom);
N_LIB_PRIVATE N_NIMCALL(void, keepUSafeZone)(USafeZone_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w, stretch)(UScaleBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstretch)(UScaleBox_* obj, tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew, stretchDirection)(UScaleBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstretchDirection)(UScaleBox_* obj, tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew val);
N_LIB_PRIVATE N_NIMCALL(NF32, userSpecifiedScale)(UScaleBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuserSpecifiedScale)(UScaleBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, ignoreInheritedScale)(UScaleBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setignoreInheritedScale)(UScaleBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setUserSpecifiedScale_)(UScaleBox_* self, NF32 inUserSpecifiedScale);
N_LIB_PRIVATE N_NIMCALL(void, setStretchDirection_)(UScaleBox_* self, tyEnum_EStretchDirection__H8qNsBoFDZzhWvhnpxIkew inStretchDirection);
N_LIB_PRIVATE N_NIMCALL(void, setStretch_)(UScaleBox_* self, tyEnum_EStretch__cPiUIDpxSd4VG7dbqL9aJ1w inStretch);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreInheritedScale_)(UScaleBox_* self, NIM_BOOL bInIgnoreInheritedScale);
N_LIB_PRIVATE N_NIMCALL(void, keepUScaleBox)(UScaleBox_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UScaleBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UScaleBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UScaleBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UScaleBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UScaleBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UScaleBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UScaleBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUScaleBoxSlot)(UScaleBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, widgetStyle)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UScrollBar_* obj, FScrollBarStyle val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysShowScrollbar)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysShowScrollbar)(UScrollBar_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysShowScrollbarTrack)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysShowScrollbarTrack)(UScrollBar_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UScrollBar_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, thickness)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setthickness)(UScrollBar_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UScrollBar_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UScrollBar_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(void, setState_)(UScrollBar_* self, NF32 inOffsetFraction, NF32 inThumbSizeFraction);
N_LIB_PRIVATE N_NIMCALL(void, keepUScrollBar)(UScrollBar_* fake);
N_LIB_PRIVATE N_NIMCALL(FScrollBoxStyle*, widgetStyle)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(UScrollBox_* obj, FScrollBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(FScrollBarStyle*, widgetBarStyle)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetBarStyle)(UScrollBox_* obj, FScrollBarStyle val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UScrollBox_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg, consumeMouseWheel)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconsumeMouseWheel)(UScrollBox_* obj, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, scrollbarThickness)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollbarThickness)(UScrollBox_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, scrollbarPadding)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollbarPadding)(UScrollBox_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, alwaysShowScrollbar)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalwaysShowScrollbar)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, alwaysShowScrollbarTrack)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalwaysShowScrollbarTrack)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, allowOverscroll)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setallowOverscroll)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, backPadScrolling)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbackPadScrolling)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, frontPadScrolling)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfrontPadScrolling)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateWheelScrolling)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateWheelScrolling)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ, navigationDestination)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavigationDestination)(UScrollBox_* obj, tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, navigationScrollPadding)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavigationScrollPadding)(UScrollBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ, scrollWhenFocusChanges)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscrollWhenFocusChanges)(UScrollBox_* obj, tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowRightClickDragScrolling)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowRightClickDragScrolling)(UScrollBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, wheelScrollMultiplier)(UScrollBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwheelScrollMultiplier)(UScrollBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setWheelScrollMultiplier_)(UScrollBox_* self, NF32 newWheelScrollMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, setScrollWhenFocusChanges_)(UScrollBox_* self, tyEnum_EScrollWhenFocusChanges__7F7qbeu9bfpNR2uepc9bSCpQ newScrollWhenFocusChanges);
N_LIB_PRIVATE N_NIMCALL(void, setScrollOffset_)(UScrollBox_* self, NF32 newScrollOffset);
N_LIB_PRIVATE N_NIMCALL(void, setScrollbarThickness_)(UScrollBox_* self, FVector2D& newScrollbarThickness);
N_LIB_PRIVATE N_NIMCALL(void, setScrollbarPadding_)(UScrollBox_* self, FMargin& newScrollbarPadding);
N_LIB_PRIVATE N_NIMCALL(void, setOrientation_)(UScrollBox_* self, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A newOrientation);
N_LIB_PRIVATE N_NIMCALL(void, setNavigationDestination_)(UScrollBox_* self, tyEnum_EDescendantScrollDestination__9bPKmfCEzAvUuxdj6E2rmeQ newNavigationDestination);
N_LIB_PRIVATE N_NIMCALL(void, setConsumeMouseWheel_)(UScrollBox_* self, tyEnum_EConsumeMouseWheel__J9chiGYBtZ9aqzZYi9bhi51Mg newConsumeMouseWheel);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateWheelScrolling_)(UScrollBox_* self, NIM_BOOL bShouldAnimateWheelScrolling);
N_LIB_PRIVATE N_NIMCALL(void, setAlwaysShowScrollbar_)(UScrollBox_* self, NIM_BOOL newAlwaysShowScrollbar);
N_LIB_PRIVATE N_NIMCALL(void, setAllowOverscroll_)(UScrollBox_* self, NIM_BOOL newAllowOverscroll);
N_LIB_PRIVATE N_NIMCALL(void, scrollToStart_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, scrollToEnd_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewOffsetFraction_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewFraction_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffsetOfEnd_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScrollOffset_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, endInertialScrolling_)(UScrollBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUScrollBox)(UScrollBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UScrollBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UScrollBoxSlot_* obj, FSlateChildSize_ val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UScrollBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UScrollBoxSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UScrollBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UScrollBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UScrollBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UScrollBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UScrollBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UScrollBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UScrollBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUScrollBoxSlot)(UScrollBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, widthOverride)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidthOverride)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, heightOverride)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheightOverride)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredHeight)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredHeight)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDesiredWidth)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDesiredWidth)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDesiredHeight)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDesiredHeight)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minAspectRatio)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminAspectRatio)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxAspectRatio)(USizeBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxAspectRatio)(USizeBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setWidthOverride_)(USizeBox_* self, NF32 inWidthOverride);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(USizeBox_* self, NF32 inMinDesiredWidth);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredHeight_)(USizeBox_* self, NF32 inMinDesiredHeight);
N_LIB_PRIVATE N_NIMCALL(void, setMinAspectRatio_)(USizeBox_* self, NF32 inMinAspectRatio);
N_LIB_PRIVATE N_NIMCALL(void, setMaxDesiredWidth_)(USizeBox_* self, NF32 inMaxDesiredWidth);
N_LIB_PRIVATE N_NIMCALL(void, setMaxDesiredHeight_)(USizeBox_* self, NF32 inMaxDesiredHeight);
N_LIB_PRIVATE N_NIMCALL(void, setMaxAspectRatio_)(USizeBox_* self, NF32 inMaxAspectRatio);
N_LIB_PRIVATE N_NIMCALL(void, setHeightOverride_)(USizeBox_* self, NF32 inHeightOverride);
N_LIB_PRIVATE N_NIMCALL(void, clearWidthOverride_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMinDesiredWidth_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMinDesiredHeight_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMinAspectRatio_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxDesiredWidth_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxDesiredHeight_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxAspectRatio_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearHeightOverride_)(USizeBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSizeBox)(USizeBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(USizeBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(USizeBoxSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(USizeBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(USizeBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(USizeBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(USizeBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(USizeBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(USizeBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(USizeBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUSizeBoxSlot)(USizeBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, value)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(USlider_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minValue)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminValue)(USlider_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxValue)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxValue)(USlider_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FSliderStyle*, widgetStyle)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(USlider_* obj, FSliderStyle val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(USlider_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, sliderBarColor)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsliderBarColor)(USlider_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, sliderHandleColor)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsliderHandleColor)(USlider_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, indentHandle)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setindentHandle)(USlider_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, locked)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlocked)(USlider_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, mouseUsesStep)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmouseUsesStep)(USlider_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, requiresControllerLock)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrequiresControllerLock)(USlider_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, stepSize)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstepSize)(USlider_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFocusable)(USlider_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisFocusable)(USlider_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setValue_)(USlider_* self, NF32 inValue);
N_LIB_PRIVATE N_NIMCALL(void, setStepSize_)(USlider_* self, NF32 inValue);
N_LIB_PRIVATE N_NIMCALL(void, setSliderHandleColor_)(USlider_* self, FLinearColor inValue);
N_LIB_PRIVATE N_NIMCALL(void, setSliderBarColor_)(USlider_* self, FLinearColor inValue);
N_LIB_PRIVATE N_NIMCALL(void, setMinValue_)(USlider_* self, NF32 inValue);
N_LIB_PRIVATE N_NIMCALL(void, setMaxValue_)(USlider_* self, NF32 inValue);
N_LIB_PRIVATE N_NIMCALL(void, setLocked_)(USlider_* self, NIM_BOOL inValue);
N_LIB_PRIVATE N_NIMCALL(void, setIndentHandle_)(USlider_* self, NIM_BOOL inValue);
N_LIB_PRIVATE N_NIMCALL(NF32, getValue_)(USlider_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getNormalizedValue_)(USlider_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSlider)(USlider_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, size)(USpacer_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(USpacer_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(USpacer_* self, FVector2D inSize);
N_LIB_PRIVATE N_NIMCALL(void, keepUSpacer)(USpacer_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, value)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FSpinBoxStyle*, widgetStyle)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidgetStyle)(USpinBox_* obj, FSpinBoxStyle val);
N_LIB_PRIVATE N_NIMCALL(NI32, minFractionalDigits)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminFractionalDigits)(USpinBox_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxFractionalDigits)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxFractionalDigits)(USpinBox_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysUsesDeltaSnap)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysUsesDeltaSnap)(USpinBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableSlider)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableSlider)(USpinBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, delta)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdelta)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, sliderExponent)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsliderExponent)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(USpinBox_* obj, FSlateFontInfo_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA, justification)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjustification)(USpinBox_* obj, tyEnum_ETextJustify__ET08M2FGXs4bAOe9bgE9amuA val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, clearKeyboardFocusOnCommit)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclearKeyboardFocusOnCommit)(USpinBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, selectAllTextOnCommit)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setselectAllTextOnCommit)(USpinBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(USpinBox_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, minValue)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminValue)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxValue)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxValue)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minSliderValue)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminSliderValue)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSliderValue)(USpinBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSliderValue)(USpinBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setValue_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMinValue_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMinSliderValue_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMinFractionalDigits_)(USpinBox_* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMaxValue_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMaxSliderValue_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setMaxFractionalDigits_)(USpinBox_* self, NI32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(USpinBox_* self, FSlateColor inForegroundColor);
N_LIB_PRIVATE N_NIMCALL(void, setDelta_)(USpinBox_* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAlwaysUsesDeltaSnap_)(USpinBox_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(NF32, getValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinSliderValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getMinFractionalDigits_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxSliderValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getMaxFractionalDigits_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDelta_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getAlwaysUsesDeltaSnap_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMinValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMinSliderValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearMaxSliderValue_)(USpinBox_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSpinBox)(USpinBox_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UStackBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UStackBox_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(void, keepUStackBox)(UStackBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, text)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settext)(UTextBlock_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, colorAndOpacity)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UTextBlock_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(FSlateFontInfo_*, font)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfont)(UTextBlock_* obj, FSlateFontInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, strikeBrush)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrikeBrush)(UTextBlock_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, shadowOffset)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowOffset)(UTextBlock_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, shadowColorAndOpacity)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshadowColorAndOpacity)(UTextBlock_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredWidth)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredWidth)(UTextBlock_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWrapWithInvalidationPanel)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWrapWithInvalidationPanel)(UTextBlock_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ, textTransformPolicy)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextTransformPolicy)(UTextBlock_* obj, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ, textOverflowPolicy)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextOverflowPolicy)(UTextBlock_* obj, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSimpleTextMode)(UTextBlock_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSimpleTextMode)(UTextBlock_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setTextTransformPolicy_)(UTextBlock_* self, tyEnum_ETextTransformPolicy__SXDz9cpnEpQ3tioyzEES9bYQ inTransformPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setTextOverflowPolicy_)(UTextBlock_* self, tyEnum_ETextOverflowPolicy__g06IT6hm8l16RlCU9bX9a2FQ inOverflowPolicy);
N_LIB_PRIVATE N_NIMCALL(void, setText_)(UTextBlock_* self, FText inText);
N_LIB_PRIVATE N_NIMCALL(void, setStrikeBrush_)(UTextBlock_* self, FSlateBrush inStrikeBrush);
N_LIB_PRIVATE N_NIMCALL(void, setShadowOffset_)(UTextBlock_* self, FVector2D inShadowOffset);
N_LIB_PRIVATE N_NIMCALL(void, setShadowColorAndOpacity_)(UTextBlock_* self, FLinearColor inShadowColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setOpacity_)(UTextBlock_* self, NF32 inOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredWidth_)(UTextBlock_* self, NF32 inMinDesiredWidth);
N_LIB_PRIVATE N_NIMCALL(void, setFontOutlineMaterial_)(UTextBlock_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFontMaterial_)(UTextBlock_* self, UMaterialInterface* inMaterial);
N_LIB_PRIVATE N_NIMCALL(void, setFont_)(UTextBlock_* self, FSlateFontInfo_ inFontInfo);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UTextBlock_* self, FSlateColor inColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setAutoWrapText_)(UTextBlock_* self, NIM_BOOL inAutoTextWrap);
N_LIB_PRIVATE N_NIMCALL(FText, getText_)(UTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicOutlineMaterial_)(UTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicFontMaterial_)(UTextBlock_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUTextBlock)(UTextBlock_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfPieces)(UThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfPieces)(UThrobber_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateHorizontally)(UThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateHorizontally)(UThrobber_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateVertically)(UThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateVertically)(UThrobber_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAnimateOpacity)(UThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAnimateOpacity)(UThrobber_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush*, image)(UThrobber_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setimage)(UThrobber_* obj, FSlateBrush val);
N_LIB_PRIVATE N_NIMCALL(void, setNumberOfPieces_)(UThrobber_* self, NI32 inNumberOfPieces);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateVertically_)(UThrobber_* self, NIM_BOOL bInAnimateVertically);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateOpacity_)(UThrobber_* self, NIM_BOOL bInAnimateOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setAnimateHorizontally_)(UThrobber_* self, NIM_BOOL bInAnimateHorizontally);
N_LIB_PRIVATE N_NIMCALL(void, keepUThrobber)(UThrobber_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setEntryWidth_)(UTileView_* self, NF32 newWidth);
N_LIB_PRIVATE N_NIMCALL(void, setEntryHeight_)(UTileView_* self, NF32 newHeight);
N_LIB_PRIVATE N_NIMCALL(NF32, getEntryWidth_)(UTileView_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getEntryHeight_)(UTileView_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUTileView)(UTileView_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setItemExpansion_)(UTreeView_* self, UObject* item, NIM_BOOL bExpandItem);
N_LIB_PRIVATE N_NIMCALL(void, expandAll_)(UTreeView_* self);
N_LIB_PRIVATE N_NIMCALL(void, collapseAll_)(UTreeView_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUTreeView)(UTreeView_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, slotPadding)(UUniformGridPanel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setslotPadding)(UUniformGridPanel_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredSlotWidth)(UUniformGridPanel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredSlotWidth)(UUniformGridPanel_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minDesiredSlotHeight)(UUniformGridPanel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminDesiredSlotHeight)(UUniformGridPanel_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setSlotPadding_)(UUniformGridPanel_* self, FMargin inSlotPadding);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredSlotWidth_)(UUniformGridPanel_* self, NF32 inMinDesiredSlotWidth);
N_LIB_PRIVATE N_NIMCALL(void, setMinDesiredSlotHeight_)(UUniformGridPanel_* self, NF32 inMinDesiredSlotHeight);
N_LIB_PRIVATE N_NIMCALL(void, keepUUniformGridPanel)(UUniformGridPanel_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UUniformGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UUniformGridSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UUniformGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UUniformGridSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NI32, row)(UUniformGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrow)(UUniformGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, column)(UUniformGridSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolumn)(UUniformGridSlot_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UUniformGridSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setRow_)(UUniformGridSlot_* self, NI32 inRow);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UUniformGridSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setColumn_)(UUniformGridSlot_* self, NI32 inColumn);
N_LIB_PRIVATE N_NIMCALL(void, keepUUniformGridSlot)(UUniformGridSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FSlateChildSize_*, size)(UVerticalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsize)(UVerticalBoxSlot_* obj, FSlateChildSize_ val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UVerticalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UVerticalBoxSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UVerticalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UVerticalBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UVerticalBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UVerticalBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UVerticalBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setSize_)(UVerticalBoxSlot_* self, FSlateChildSize_ inSize);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UVerticalBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UVerticalBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUVerticalBoxSlot)(UVerticalBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, backgroundColor)(UViewport_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbackgroundColor)(UViewport_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(AActor*, spawn_)(UViewport_* self, TY__9akcXb9b3ftlkdW8NDwR22Mg actorClass);
N_LIB_PRIVATE N_NIMCALL(void, setViewRotation_)(UViewport_* self, FRotator rotation);
N_LIB_PRIVATE N_NIMCALL(void, setViewLocation_)(UViewport_* self, FVector location);
N_LIB_PRIVATE N_NIMCALL(FRotator, getViewRotation_)(UViewport_* self);
N_LIB_PRIVATE N_NIMCALL(UWorld*, getViewportWorld_)(UViewport_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getViewLocation_)(UViewport_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUViewport)(UViewport_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, virtualUserIndex)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualUserIndex)(UWidgetInteractionComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, pointerIndex)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpointerIndex)(UWidgetInteractionComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, traceChannel)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settraceChannel)(UWidgetInteractionComponent_* obj, ECollisionChannel val);
N_LIB_PRIVATE N_NIMCALL(NF32, interactionDistance)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinteractionDistance)(UWidgetInteractionComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ, interactionSource)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinteractionSource)(UWidgetInteractionComponent_* obj, tyEnum_EWidgetInteractionSource__TfrTUkBUG3iPX5q529cVtgQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableHitTesting)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableHitTesting)(UWidgetInteractionComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowDebug)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowDebug)(UWidgetInteractionComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, debugSphereLineThickness)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdebugSphereLineThickness)(UWidgetInteractionComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, debugLineThickness)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdebugLineThickness)(UWidgetInteractionComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, debugColor)(UWidgetInteractionComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdebugColor)(UWidgetInteractionComponent_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(void, setCustomHitResult_)(UWidgetInteractionComponent_* self, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, sendKeyChar_)(UWidgetInteractionComponent_* self, FString characters, NIM_BOOL bRepeat);
N_LIB_PRIVATE N_NIMCALL(void, scrollWheel_)(UWidgetInteractionComponent_* self, NF32 scrollDelta);
N_LIB_PRIVATE N_NIMCALL(void, releasePointerKey_)(UWidgetInteractionComponent_* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, releaseKey_)(UWidgetInteractionComponent_* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, pressPointerKey_)(UWidgetInteractionComponent_* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pressKey_)(UWidgetInteractionComponent_* self, FKey key, NIM_BOOL bRepeat);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, pressAndReleaseKey_)(UWidgetInteractionComponent_* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverInteractableWidget_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverHitTestVisibleWidget_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverFocusableWidget_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getLastHitResult_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(UWidgetComponent_*, getHoveredWidgetComponent_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, get2DHitLocation_)(UWidgetInteractionComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetInteractionComponent)(UWidgetInteractionComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, activeWidgetIndex)(UWidgetSwitcher_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactiveWidgetIndex)(UWidgetSwitcher_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, setActiveWidgetIndex_)(UWidgetSwitcher_* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumWidgets_)(UWidgetSwitcher_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveWidgetIndex_)(UWidgetSwitcher_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetSwitcher)(UWidgetSwitcher_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWidgetSwitcherSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWidgetSwitcherSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWidgetSwitcherSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWidgetSwitcherSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWidgetSwitcherSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWidgetSwitcherSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWidgetSwitcherSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWidgetSwitcherSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWidgetSwitcherSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetSwitcherSlot)(UWidgetSwitcherSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWindowButtonsEnabled)(UWindowTitleBarArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWindowButtonsEnabled)(UWindowTitleBarArea_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoubleClickTogglesFullscreen)(UWindowTitleBarArea_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDoubleClickTogglesFullscreen)(UWindowTitleBarArea_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWindowTitleBarArea_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWindowTitleBarArea_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWindowTitleBarArea_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUWindowTitleBarArea)(UWindowTitleBarArea_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWindowTitleBarAreaSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWindowTitleBarAreaSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWindowTitleBarAreaSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWindowTitleBarAreaSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWindowTitleBarAreaSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWindowTitleBarAreaSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWindowTitleBarAreaSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWindowTitleBarAreaSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWindowTitleBarAreaSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUWindowTitleBarAreaSlot)(UWindowTitleBarAreaSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, innerSlotPadding)(UWrapBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinnerSlotPadding)(UWrapBox_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(NF32, wrapSize)(UWrapBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwrapSize)(UWrapBox_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExplicitWrapSize)(UWrapBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExplicitWrapSize)(UWrapBox_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWrapBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWrapBox_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A, orientation)(UWrapBox_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorientation)(UWrapBox_* obj, tyEnum_EOrientation__Q9bjES9bCoZdroSuOCVbsy4A val);
N_LIB_PRIVATE N_NIMCALL(void, setInnerSlotPadding_)(UWrapBox_* self, FVector2D inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWrapBox_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, keepUWrapBox)(UWrapBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UWrapBoxSlot_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NF32, fillSpanWhenLessThan)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfillSpanWhenLessThan)(UWrapBoxSlot_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A, horizontalAlignment)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethorizontalAlignment)(UWrapBoxSlot_* obj, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA, verticalAlignment)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setverticalAlignment)(UWrapBoxSlot_* obj, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFillEmptySpace)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFillEmptySpace)(UWrapBoxSlot_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceNewLine)(UWrapBoxSlot_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceNewLine)(UWrapBoxSlot_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setVerticalAlignment_)(UWrapBoxSlot_* self, tyEnum_EVerticalAlignment__CyRbvpSNUsWYYpxhVjROeA inVerticalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UWrapBoxSlot_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setNewLine_)(UWrapBoxSlot_* self, NIM_BOOL inForceNewLine);
N_LIB_PRIVATE N_NIMCALL(void, setHorizontalAlignment_)(UWrapBoxSlot_* self, tyEnum_EHorizontalAlignment__B9cxtW9arFM05remd48ECh3A inHorizontalAlignment);
N_LIB_PRIVATE N_NIMCALL(void, setFillSpanWhenLessThan_)(UWrapBoxSlot_* self, NF32 inFillSpanWhenLessThan);
N_LIB_PRIVATE N_NIMCALL(void, setFillEmptySpace_)(UWrapBoxSlot_* self, NIM_BOOL inbFillEmptySpace);
N_LIB_PRIVATE N_NIMCALL(void, keepUWrapBoxSlot)(UWrapBoxSlot_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFShapedTextOptions)(FShapedTextOptions_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRadialBoxSettings)(FRadialBoxSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSlateChildSize)(FSlateChildSize_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnchorData)(FAnchorData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRichImageRow)(FRichImageRow_ fake);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, colorAndOpacity)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorAndOpacity)(UUserWidget_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(FSlateColor*, foregroundColor)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforegroundColor)(UUserWidget_* obj, FSlateColor val);
N_LIB_PRIVATE N_NIMCALL(FMargin*, padding)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpadding)(UUserWidget_* obj, FMargin val);
N_LIB_PRIVATE N_NIMCALL(NI32, priority)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UUserWidget_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsFocusable)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsFocusable)(UUserWidget_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStopAction)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStopAction)(UUserWidget_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw, tickFrequency)(UUserWidget_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settickFrequency)(UUserWidget_* obj, tyEnum_EWidgetTickFrequency__xl29c5TU84TohmfWnghjj9aw val);
N_LIB_PRIVATE N_NIMCALL(void, unregisterInputComponent_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, unbindFromAnimationStarted_)(UUserWidget_* self, UWidgetAnimation_* animation, FWidgetAnimationDynamicEvent_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, unbindFromAnimationFinished_)(UUserWidget_* self, UWidgetAnimation_* animation, FWidgetAnimationDynamicEvent_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, unbindAllFromAnimationStarted_)(UUserWidget_* self, UWidgetAnimation_* animation);
N_LIB_PRIVATE N_NIMCALL(void, unbindAllFromAnimationFinished_)(UUserWidget_* self, UWidgetAnimation_* animation);
N_LIB_PRIVATE N_NIMCALL(void, stopListeningForInputAction_)(UUserWidget_* self, FName actionName, EInputEvent eventType);
N_LIB_PRIVATE N_NIMCALL(void, stopListeningForAllInputActions_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimationsAndLatentActions_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimation_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(void, stopAllAnimations_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, setPositionInViewport_)(UUserWidget_* self, FVector2D position, NIM_BOOL bRemoveDPIScale);
N_LIB_PRIVATE N_NIMCALL(void, setPlaybackSpeed_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 playbackSpeed);
N_LIB_PRIVATE N_NIMCALL(void, setPadding_)(UUserWidget_* self, FMargin inPadding);
N_LIB_PRIVATE N_NIMCALL(void, setOwningPlayer_)(UUserWidget_* self, APlayerController* localPlayerController);
N_LIB_PRIVATE N_NIMCALL(void, setNumLoopsToPlay_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NI32 numLoopsToPlay);
N_LIB_PRIVATE N_NIMCALL(void, setInputActionPriority_)(UUserWidget_* self, NI32 newPriority);
N_LIB_PRIVATE N_NIMCALL(void, setInputActionBlocking_)(UUserWidget_* self, NIM_BOOL bShouldBlock);
N_LIB_PRIVATE N_NIMCALL(void, setForegroundColor_)(UUserWidget_* self, FSlateColor inForegroundColor);
N_LIB_PRIVATE N_NIMCALL(void, setDesiredSizeInViewport_)(UUserWidget_* self, FVector2D size);
N_LIB_PRIVATE N_NIMCALL(void, setColorAndOpacity_)(UUserWidget_* self, FLinearColor inColorAndOpacity);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationCurrentTime_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(void, setAnchorsInViewport_)(UUserWidget_* self, FAnchors_ anchors);
N_LIB_PRIVATE N_NIMCALL(void, setAlignmentInViewport_)(UUserWidget_* self, FVector2D alignment);
N_LIB_PRIVATE N_NIMCALL(void, reverseAnimation_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(void, removeFromViewport_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, removeExtensions_)(UUserWidget_* self, TY__MF9aiABZZTdnJbCQRWxbIrg inExtensionType);
N_LIB_PRIVATE N_NIMCALL(void, removeExtension_)(UUserWidget_* self, UUserWidgetExtension_* inExtension);
N_LIB_PRIVATE N_NIMCALL(void, registerInputComponent_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationTimeRange_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 startAtTime, NF32 endAtTime, NI32 numLoopsToPlay, tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA playMode, NF32 playbackSpeed, NIM_BOOL bRestoreState);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationReverse_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 playbackSpeed, NIM_BOOL bRestoreState);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimationForward_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 playbackSpeed, NIM_BOOL bRestoreState);
N_LIB_PRIVATE N_NIMCALL(UUMGSequencePlayer_*, playAnimation_)(UUserWidget_* self, UWidgetAnimation_* inAnimation, NF32 startAtTime, NI32 numLoopsToPlay, tyEnum_EUMGSequencePlayMode__9askXeyAzBaL47GR9cJT8bGA playMode, NF32 playbackSpeed, NIM_BOOL bRestoreState);
N_LIB_PRIVATE N_NIMCALL(NF32, pauseAnimation_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(void, listenForInputAction_)(UUserWidget_* self, FName actionName, EInputEvent eventType, NIM_BOOL bConsume, FOnInputAction_* callback);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingAnimation_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListeningForInputAction_)(UUserWidget_* self, FName actionName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyAnimationPlaying_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnimationPlayingForward_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnimationPlaying_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(APawn*, getOwningPlayerPawn_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, getOwningPlayerCameraManager_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getIsVisible_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(TY__scxiKf9aWv3hy9bytmcQJthg, getExtensions_)(UUserWidget_* self, TY__MF9aiABZZTdnJbCQRWxbIrg extensionType);
N_LIB_PRIVATE N_NIMCALL(UUserWidgetExtension_*, getExtension_)(UUserWidget_* self, TY__MF9aiABZZTdnJbCQRWxbIrg extensionType);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnimationCurrentTime_)(UUserWidget_* self, UWidgetAnimation_* inAnimation);
N_LIB_PRIVATE N_NIMCALL(FAnchors_, getAnchorsInViewport_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAlignmentInViewport_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, flushAnimations_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, cancelLatentActions_)(UUserWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationStarted_)(UUserWidget_* self, UWidgetAnimation_* animation, FWidgetAnimationDynamicEvent_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationFinished_)(UUserWidget_* self, UWidgetAnimation_* animation, FWidgetAnimationDynamicEvent_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, bindToAnimationEvent_)(UUserWidget_* self, UWidgetAnimation_* animation, FWidgetAnimationDynamicEvent_* delegate, tyEnum_EWidgetAnimationEvent__9aZSQO2S3MK3lhbZMiPssPA animationEvent, FName userTag);
N_LIB_PRIVATE N_NIMCALL(void, addToViewport_)(UUserWidget_* self, NI32 zOrder);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, addToPlayerScreen_)(UUserWidget_* self, NI32 zOrder);
N_LIB_PRIVATE N_NIMCALL(UUserWidgetExtension_*, addExtension_)(UUserWidget_* self, TY__MF9aiABZZTdnJbCQRWxbIrg inExtensionType);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserWidget)(UUserWidget_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncTaskDownloadImage_*, downloadImage_)(FString uRL);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncTaskDownloadImage)(UAsyncTaskDownloadImage_* fake);
N_LIB_PRIVATE N_NIMCALL(FString, tag)(UDragDropOperation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settag)(UDragDropOperation_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(UObject*, payload)(UDragDropOperation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpayload)(UDragDropOperation_* obj, UObject* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA, pivot)(UDragDropOperation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpivot)(UDragDropOperation_* obj, tyEnum_EDragPivot__lJC6tx19c9cW5VVbXsGjq7OA val);
N_LIB_PRIVATE N_NIMCALL(FVector2D*, offset)(UDragDropOperation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoffset)(UDragDropOperation_* obj, FVector2D val);
N_LIB_PRIVATE N_NIMCALL(void, keepFWidgetNavigationData)(FWidgetNavigationData_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGFieldNotification)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepFFieldNotificationId)(FFieldNotificationId_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGSlate)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepFWidgetTransform)(FWidgetTransform_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepUMGUMG)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUNotifyFieldValueChanged)(UNotifyFieldValueChanged_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserWidgetBlueprint)(UUserWidgetBlueprint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetBlueprintGeneratedClassExtension)(UWidgetBlueprintGeneratedClassExtension_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetFieldNotificationExtension)(UWidgetFieldNotificationExtension_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieSceneWidgetMaterialSystem)(UMovieSceneWidgetMaterialSystem_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameViewportWidgetSlot_, setWidgetSlotDesiredSize_)(FGameViewportWidgetSlot_ slot, FVector2D size);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameViewportSubsystem)(UGameViewportSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserListEntry)(UUserListEntry_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListItemSelected_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isListItemExpanded_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry);
N_LIB_PRIVATE N_NIMCALL(UListViewBase_*, getOwningListView_)(TY__M4mwXcspPRSAdUWKKmEmmQ userListEntry);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserListEntryLibrary)(UUserListEntryLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserObjectListEntry)(UUserObjectListEntry_* fake);
N_LIB_PRIVATE N_NIMCALL(UObject*, getListItemObject_)(TY__GhlSt2m1FF0wdkWz1n7qNQ userObjectListEntry);
N_LIB_PRIVATE N_NIMCALL(void, keepUUserObjectListEntryLibrary)(UUserObjectListEntryLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(UPanelSlot_*, getContentSlot_)(UContentWidget_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUCanvasPanel)(UCanvasPanel_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHorizontalBox)(UHorizontalBox_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUOverlay)(UOverlay_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUVerticalBox)(UVerticalBox_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector2D, transformVectorLocalToAbsolute_)(FGeometry& geometry, FVector2D localVector);
N_LIB_PRIVATE N_NIMCALL(FVector2D, transformVectorAbsoluteToLocal_)(FGeometry& geometry, FVector2D absoluteVector);
N_LIB_PRIVATE N_NIMCALL(NF32, transformScalarLocalToAbsolute_)(FGeometry& geometry, NF32 localScalar);
N_LIB_PRIVATE N_NIMCALL(NF32, transformScalarAbsoluteToLocal_)(FGeometry& geometry, NF32 absoluteScalar);
N_LIB_PRIVATE N_NIMCALL(void, screenToWidgetLocal_)(UObject* worldContextObject, FGeometry& geometry, FVector2D screenPosition, FVector2D& localCoordinate, NIM_BOOL bIncludeWindowPosition);
N_LIB_PRIVATE N_NIMCALL(void, screenToWidgetAbsolute_)(UObject* worldContextObject, FVector2D screenPosition, FVector2D& absoluteCoordinate, NIM_BOOL bIncludeWindowPosition);
N_LIB_PRIVATE N_NIMCALL(void, screenToViewport_)(UObject* worldContextObject, FVector2D screenPosition, FVector2D& viewportPosition);
N_LIB_PRIVATE N_NIMCALL(void, localToViewport_)(UObject* worldContextObject, FGeometry& geometry, FVector2D localCoordinate, FVector2D& pixelPosition, FVector2D& viewportPosition);
N_LIB_PRIVATE N_NIMCALL(FVector2D, localToAbsolute_)(FGeometry& geometry, FVector2D localCoordinate);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUnderLocation_)(FGeometry& geometry, FVector2D& absoluteCoordinate);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getLocalTopLeft_)(FGeometry& geometry);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getLocalSize_)(FGeometry& geometry);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getAbsoluteSize_)(FGeometry& geometry);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_SlateBrush_)(FSlateBrush& a, FSlateBrush& b);
N_LIB_PRIVATE N_NIMCALL(void, absoluteToViewport_)(UObject* worldContextObject, FVector2D absoluteDesktopCoordinate, FVector2D& pixelPosition, FVector2D& viewportPosition);
N_LIB_PRIVATE N_NIMCALL(FVector2D, absoluteToLocal_)(FGeometry& geometry, FVector2D absoluteCoordinate);
N_LIB_PRIVATE N_NIMCALL(void, keepUSlateBlueprintLibrary)(USlateBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, unlockMouse_)(FEventReply_& reply, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, unhandled_)(FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitleBarOnCloseClickedDelegate_)(FOnGameWindowCloseButtonClickedDelegate_* delegate);
N_LIB_PRIVATE N_NIMCALL(void, setWindowTitleBarCloseButtonActive_)(NIM_BOOL bActive);
N_LIB_PRIVATE N_NIMCALL(void, setMousePosition_)(FEventReply_& reply, FVector2D newMousePosition, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, setInputMode_GameOnly_)(APlayerController* playerController, NIM_BOOL bFlushInput);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setHardwareCursor_)(UObject* worldContextObject, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g cursorShape, FName cursorName, FVector2D hotSpot);
N_LIB_PRIVATE N_NIMCALL(void, setFocusToGameViewport_)(void);
N_LIB_PRIVATE N_NIMCALL(void, setColorVisionDeficiencyType_)(tyEnum_EColorVisionDeficiency__DU1qP5iJ6QOZvOs9aZQ1UTQ type_0, NF32 severity, NIM_BOOL correctDeficiency, NIM_BOOL showCorrectionWithDeficiency);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceToTexture_)(FSlateBrush& brush, UTexture2D* texture);
N_LIB_PRIVATE N_NIMCALL(void, setBrushResourceToMaterial_)(FSlateBrush& brush, UMaterialInterface* material);
N_LIB_PRIVATE N_NIMCALL(void, restorePreviousWindowTitleBarState_)(void);
N_LIB_PRIVATE N_NIMCALL(void, releaseMouseCapture_)(FEventReply_& reply, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, releaseJoystickCapture_)(FEventReply_& reply, NIM_BOOL bInAllJoysticks, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, noResourceBrush_)(void);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromTexture_)(UTexture2D* texture, NI32 width, NI32 height);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromMaterial_)(UMaterialInterface* material, NI32 width, NI32 height);
N_LIB_PRIVATE N_NIMCALL(FSlateBrush, makeBrushFromAsset_)(USlateBrushAsset_* brushAsset);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDragDropping_)(void);
N_LIB_PRIVATE N_NIMCALL(void, handled_)(FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getSafeZonePadding_)(UObject* worldContextObject, FVector4& safePadding, FVector2D& safePaddingScale, FVector4& spillOverPadding);
N_LIB_PRIVATE N_NIMCALL(FKeyEvent, getKeyEventFromAnalogInputEvent_)(FAnalogInputEvent& event);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromPointerEvent_)(FPointerEvent& event);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromNavigationEvent_)(FNavigationEvent& event);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromKeyEvent_)(FKeyEvent& event);
N_LIB_PRIVATE N_NIMCALL(FInputEvent, getInputEventFromCharacterEvent_)(FCharacterEvent& event);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, getDynamicMaterial_)(FSlateBrush& brush);
N_LIB_PRIVATE N_NIMCALL(UDragDropOperation_*, getDragDroppingContent_)(void);
N_LIB_PRIVATE N_NIMCALL(UTexture2D*, getBrushResourceAsTexture2D_)(FSlateBrush& brush);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getBrushResourceAsMaterial_)(FSlateBrush& brush);
N_LIB_PRIVATE N_NIMCALL(UObject*, getBrushResource_)(FSlateBrush& brush);
N_LIB_PRIVATE N_NIMCALL(void, endDragDrop_)(FEventReply_& reply, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, drawTextFormatted_)(FPaintContext_& context, FText& text, FVector2D position, UFont_* font, NI32 fontSize, FName fontTypeFace, FLinearColor tint);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(FPaintContext_& context, FString inString, FVector2D position, FLinearColor tint);
N_LIB_PRIVATE N_NIMCALL(void, drawSpline_)(FPaintContext_& context, FVector2D start, FVector2D startDir, FVector2D end_0, FVector2D endDir, FLinearColor tint, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawLines_)(FPaintContext_& context, TY__fBi9aXEAuMMk9cMD1hVzuHSg& points, FLinearColor tint, NIM_BOOL bAntiAlias, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(FPaintContext_& context, FVector2D positionA, FVector2D positionB, FLinearColor tint, NIM_BOOL bAntiAlias, NF32 thickness);
N_LIB_PRIVATE N_NIMCALL(void, drawBox_)(FPaintContext_& context, FVector2D position, FVector2D size, USlateBrushAsset_* brush, FLinearColor tint);
N_LIB_PRIVATE N_NIMCALL(void, dismissAllMenus_)(void);
N_LIB_PRIVATE N_NIMCALL(UDragDropOperation_*, createDragDropOperation_)(TY__zPh84RcCsFVoqOO9cBQteOA operationClass);
N_LIB_PRIVATE N_NIMCALL(void, clearUserFocus_)(FEventReply_& reply, NIM_BOOL bInAllUsers, FEventReply_* Result);
N_LIB_PRIVATE N_NIMCALL(void, cancelDragDrop_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetBlueprintLibrary)(UWidgetBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removeAllWidgets_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldLocationToWidgetPosition_)(APlayerController* playerController, FVector worldLocation, FVector2D& screenPosition, NIM_BOOL bPlayerViewportRelative);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getViewportWidgetGeometry_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getViewportSize_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(NF32, getViewportScale_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(FGeometry, getPlayerScreenWidgetGeometry_)(APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMousePositionScaledByDPI_)(APlayerController* player, NF32& locationX, NF32& locationY);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMousePositionOnViewport_)(UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(FVector2D, getMousePositionOnPlatform_)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUWidgetLayoutLibrary)(UWidgetLayoutLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPaintContext)(FPaintContext_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesAbilities)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesDelegates)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesEnums)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectGrantedAbilityRemovePolicy)(tyEnum_EGameplayEffectGrantedAbilityRemovePolicy__mFJ2QshzmvY9aBGV9anxq9a9bw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayModEvaluationChannel)(tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCueEvent)(tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayTagEventType)(tyEnum_EGameplayTagEventType__eA6ynhiShPOYe7hX0KwsJQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAbilityGenericReplicatedEvent)(tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCuePayloadType)(tyEnum_EGameplayCuePayloadType__QHvYj9cxEVspK3bO9cQZEMRQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityInputBinds)(tyEnum_EGameplayAbilityInputBinds__gxNBBDWDwKeEuT2YwW9bhTQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectStackingType)(tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAbilityTaskWaitState)(tyEnum_EAbilityTaskWaitState__I69af9b9acsZuDJo4RUfev1mQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERootMotionMoveToActorTargetOffsetType)(tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAbilityTaskNetSyncType)(tyEnum_EAbilityTaskNetSyncType__EgeSxV6iySO44lsR1IuGDQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWaitAttributeChangeComparison)(tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEWaitGameplayTagQueryTriggerCondition)(tyEnum_EWaitGameplayTagQueryTriggerCondition__UIb9a9aTBI3wOnJsZINctZoA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectReplicationMode)(tyEnum_EGameplayEffectReplicationMode__IoBM2fMQ9aDTdWeEpaRBA6w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepERepAnimPositionMethod)(tyEnum_ERepAnimPositionMethod__I64P5RrYvF9cKmgVjQSXObg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayTargetingConfirmation)(tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayModOp)(tyEnum_EGameplayModOp__v19aw0PxobwarcxLjVX9bwcQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityInstancingPolicy)(tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityNetExecutionPolicy)(tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityNetSecurityPolicy)(tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityReplicationPolicy)(tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayAbilityTriggerSource)(tyEnum_EGameplayAbilityTriggerSource__yeV9b8LqakJJagbdms9ac23Q fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCueNotify_EffectPlaySpace)(tyEnum_EGameplayCueNotify_EffectPlaySpace__ls9bpY57c4u9cCGBtI5iQmaA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCueNotify_LocallyControlledSource)(tyEnum_EGameplayCueNotify_LocallyControlledSource__UF9aDiEhe4SIhTQ23RLBfdA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCueNotify_LocallyControlledPolicy)(tyEnum_EGameplayCueNotify_LocallyControlledPolicy__jC51JtVaN5J4iPbI9akqTEA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayCueNotify_AttachPolicy)(tyEnum_EGameplayCueNotify_AttachPolicy__Li75monpMAfqjkIgqWJTig fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectMagnitudeCalculation)(tyEnum_EGameplayEffectMagnitudeCalculation__ZZG9a3O09aRhyA9bY9bzuV3wXw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEAttributeBasedFloatCalculationType)(tyEnum_EAttributeBasedFloatCalculationType__XODnU48w9b8Rh8j66oGdjjQ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectScopedModifierAggregatorType)(tyEnum_EGameplayEffectScopedModifierAggregatorType__MQeYQSPiYnqsqfDrtk1Qxg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectDurationType)(tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectStackingDurationPolicy)(tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectStackingPeriodPolicy)(tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectStackingExpirationPolicy)(tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA fake);
N_LIB_PRIVATE N_NIMCALL(void, keepEGameplayEffectPeriodInhibitionRemovedPolicy)(tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineGameFramework)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOnlyRelevantToOwner)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOnlyRelevantToOwner)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysRelevant)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysRelevant)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bHidden)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbHidden)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNetUseOwnerRelevancy)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNetUseOwnerRelevancy)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDestroyWhenFinished)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDestroyWhenFinished)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanBeDamaged)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanBeDamaged)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFindCameraComponentWhenViewTarget)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFindCameraComponentWhenViewTarget)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGenerateOverlapEventsDuringLevelStreaming)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGenerateOverlapEventsDuringLevelStreaming)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableAutoLODGeneration)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableAutoLODGeneration)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicates)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicates)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateUsingRegisteredSubObjectList)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateUsingRegisteredSubObjectList)(AActor* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, initialLifeSpan)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialLifeSpan)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, customTimeDilation)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomTimeDilation)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow, netDormancy)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetDormancy)(AActor* obj, tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ, spawnCollisionHandlingMethod)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspawnCollisionHandlingMethod)(AActor* obj, tyEnum_ESpawnActorCollisionHandlingMethod__p9b9cLy5Rg9bubeTAeSSfKvpQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, netCullDistanceSquared)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetCullDistanceSquared)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, netUpdateFrequency)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetUpdateFrequency)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minNetUpdateFrequency)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminNetUpdateFrequency)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, netPriority)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetPriority)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(APawn*, instigator)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstigator)(AActor* obj, APawn* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, pivotOffset)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpivotOffset)(AActor* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FGuid*, actorGuid)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactorGuid)(AActor* obj, FGuid val);
N_LIB_PRIVATE N_NIMCALL(FGuid*, contentBundleGuid)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontentBundleGuid)(AActor* obj, FGuid val);
N_LIB_PRIVATE N_NIMCALL(NF32, spriteScale)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspriteScale)(AActor* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, tags)(AActor* obj);
N_LIB_PRIVATE N_NIMCALL(void, settags)(AActor* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasRecentlyRendered_)(AActor* self, NF32 tolerance);
N_LIB_PRIVATE N_NIMCALL(void, tearOff_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, setTickGroup_)(AActor* self, tyEnum_ETickingGroup__9bUyaKNekDYUGCxORO1wQCw newTickGroup);
N_LIB_PRIVATE N_NIMCALL(void, setTickableWhenPaused_)(AActor* self, NIM_BOOL bTickableWhenPaused);
N_LIB_PRIVATE N_NIMCALL(void, setReplicates_)(AActor* self, NIM_BOOL bInReplicates);
N_LIB_PRIVATE N_NIMCALL(void, setReplicateMovement_)(AActor* self, NIM_BOOL bInReplicateMovement);
N_LIB_PRIVATE N_NIMCALL(void, setRayTracingGroupId_)(AActor* self, NI32 inRaytracingGroupId);
N_LIB_PRIVATE N_NIMCALL(void, setOwner_)(AActor* self, AActor* newOwner);
N_LIB_PRIVATE N_NIMCALL(void, setNetDormancy_)(AActor* self, tyEnum_ENetDormancy__Fe9cserQuQrwC9aUV1GAV5ow newDormancy);
N_LIB_PRIVATE N_NIMCALL(void, setLifeSpan_)(AActor* self, NF32 inLifespan);
N_LIB_PRIVATE N_NIMCALL(void, setIsTemporarilyHiddenInEditor_)(AActor* self, NIM_BOOL bIsHidden);
N_LIB_PRIVATE N_NIMCALL(void, setFolderPath_)(AActor* self, FName& newFolderPath);
N_LIB_PRIVATE N_NIMCALL(void, setAutoDestroyWhenFinished_)(AActor* self, NIM_BOOL bVal);
N_LIB_PRIVATE N_NIMCALL(void, setActorTickInterval_)(AActor* self, NF32 tickInterval);
N_LIB_PRIVATE N_NIMCALL(void, setActorTickEnabled_)(AActor* self, NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setActorScale3D_)(AActor* self, FVector newScale3D);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeScale3D_)(AActor* self, FVector newRelativeScale);
N_LIB_PRIVATE N_NIMCALL(void, setActorLabel_)(AActor* self, FString newActorLabel, NIM_BOOL bMarkDirty);
N_LIB_PRIVATE N_NIMCALL(void, setActorHiddenInGame_)(AActor* self, NIM_BOOL bNewHidden);
N_LIB_PRIVATE N_NIMCALL(void, setActorEnableCollision_)(AActor* self, NIM_BOOL bNewActorEnableCollision);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteComponent_)(AActor* self, UActorComponent* prerequisiteComponent);
N_LIB_PRIVATE N_NIMCALL(void, removeTickPrerequisiteActor_)(AActor* self, AActor* prerequisiteActor);
N_LIB_PRIVATE N_NIMCALL(void, prestreamTextures_)(AActor* self, NF32 seconds, NIM_BOOL bEnableStreaming, NI32 cinematicTextureGroups);
N_LIB_PRIVATE N_NIMCALL(void, makeNoise_)(AActor* self, NF32 loudness, APawn* noiseInstigator, FVector noiseLocation, NF32 maxRange, FName tag);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, teleportTo_)(AActor* self, FVector destLocation, FRotator destRotation);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorTransform_)(AActor* self, FTransform& newTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorRotation_)(AActor* self, FRotator newRotation, NIM_BOOL bTeleportPhysics);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeTransform_)(AActor* self, FTransform& newRelativeTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeRotation_)(AActor* self, FRotator newRelativeRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, setActorRelativeLocation_)(AActor* self, FVector newRelativeLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorLocationAndRotation_)(AActor* self, FVector newLocation, FRotator newRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setActorLocation_)(AActor* self, FVector newLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByClass_)(AActor* self, TY__EMMPexIt2htv9ac7xWWGtbw componentClass);
N_LIB_PRIVATE N_NIMCALL(FRotator, getActorRotation_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorLocation_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, detachFromActor_)(AActor* self, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg locationRule, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg rotationRule, tyEnum_EDetachmentRule__05IOfYBf0y9c31Wjh9c45eeg scaleRule);
N_LIB_PRIVATE N_NIMCALL(void, destroyActor_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToComponent_)(AActor* self, USceneComponent* parent, FName socketName, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, attachToActor_)(AActor* self, AActor* parentActor, FName socketName, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA locationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA rotationRule, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA scaleRule, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(void, attachRootComponentToActor_)(AActor* self, AActor* inParentActor, FName inSocketName, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachLocationType, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(void, attachRootComponentTo_)(AActor* self, USceneComponent* inParent, FName inSocketName, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw attachLocationType, NIM_BOOL bWeldSimulatedBodies);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldTransformKeepScale_)(AActor* self, FTransform& deltaTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldTransform_)(AActor* self, FTransform& deltaTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldRotation_)(AActor* self, FRotator deltaRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorWorldOffset_)(AActor* self, FVector deltaLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalTransform_)(AActor* self, FTransform& newTransform, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalRotation_)(AActor* self, FRotator deltaRotation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(void, addActorLocalOffset_)(AActor* self, FVector deltaLocation, NIM_BOOL bSweep, FHitResult& sweepHitResult, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isTemporarilyHiddenInEditor_)(AActor* self, NIM_BOOL bIncludeParent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSelectable_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverlappingActor_)(AActor* self, AActor* other);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHiddenEdAtStartup_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHiddenEd_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEditable_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isChildActor_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActorTickEnabled_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActorBeingDestroyed_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAuthority_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getVerticalDistanceTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(FVector, getVelocity_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTransform_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTickableWhenPaused_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getSquaredHorizontalDistanceTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(NF32, getSquaredDistanceTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw, getRemoteRole_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getRayTracingGroupId_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(UChildActorComponent*, getParentComponent_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getParentActor_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwner_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingComponents_)(AActor* self, TY__RN0jXIbC9cvfWt68iswDSAw& overlappingComponents);
N_LIB_PRIVATE N_NIMCALL(void, getOverlappingActors_)(AActor* self, TY__kbK03O9cVTTS0GR9cjPhedTg& overlappingActors, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetRole__lOIMFly4REtMevHAI9a9a1xw, getLocalRole_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getLifeSpan_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FTransform, getLevelTransform_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(ULevel*, getLevel_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(AController*, getInstigatorController_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(APawn*, getInstigator_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getInputVectorAxisValue_)(AActor* self, FKey inputAxisKey);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAxisValue_)(AActor* self, FName inputAxisName);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAxisKeyValue_)(AActor* self, FKey inputAxisKey);
N_LIB_PRIVATE N_NIMCALL(NF32, getHorizontalDotProductTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(NF32, getHorizontalDistanceTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameTimeSinceCreation_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FName, getFolderPath_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDotProductTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(NF32, getDistanceTo_)(AActor* self, AActor* otherActor);
N_LIB_PRIVATE N_NIMCALL(FString, getDefaultActorLabel_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByTag_)(AActor* self, TY__EMMPexIt2htv9ac7xWWGtbw componentClass, FName tag);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA, getComponentsByInterface_)(AActor* self, TY__KI5t49abR3sL6OsGNxWlhiQ interface_0);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, getComponentByClass_)(AActor* self, TY__EMMPexIt2htv9ac7xWWGtbw componentClass);
N_LIB_PRIVATE N_NIMCALL(FName, getAttachParentSocketName_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getAttachParentActor_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, getAttachedActors_)(AActor* self, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors, NIM_BOOL bResetArray, NIM_BOOL bRecursivelyIncludeAttachedActors);
N_LIB_PRIVATE N_NIMCALL(void, getAllChildActors_)(AActor* self, TY__kbK03O9cVTTS0GR9cjPhedTg& childActors, NIM_BOOL bIncludeDescendants);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorUpVector_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getActorTimeDilation_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getActorTickInterval_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorScale3D_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorRightVector_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorRelativeScale3D_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(FString, getActorLabel_)(AActor* self, NIM_BOOL bCreateIfNone);
N_LIB_PRIVATE N_NIMCALL(FVector, getActorForwardVector_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, getActorEyesViewPoint_)(AActor* self, FVector& outLocation, FRotator& outRotation);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getActorEnableCollision_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, getActorBounds_)(AActor* self, NIM_BOOL bOnlyCollidingComponents, FVector& origin, FVector& boxExtent, NIM_BOOL bIncludeFromChildActors);
N_LIB_PRIVATE N_NIMCALL(void, forceNetUpdate_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, flushNetDormancy_)(AActor* self);
N_LIB_PRIVATE N_NIMCALL(void, finishAddComponent_)(AActor* self, UActorComponent* component, NIM_BOOL bManualAttachment, FTransform& relativeTransform);
N_LIB_PRIVATE N_NIMCALL(void, enableInput_)(AActor* self, APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(void, disableInput_)(AActor* self, APlayerController* playerController);
N_LIB_PRIVATE N_NIMCALL(void, detachRootComponentFromParent_)(AActor* self, NIM_BOOL bMaintainWorldPosition);
N_LIB_PRIVATE N_NIMCALL(void, createInputComponent_)(AActor* self, TY__eU3i2csv9bKuRFwfWpzG1Fg inputComponentToCreate);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteComponent_)(AActor* self, UActorComponent* prerequisiteComponent);
N_LIB_PRIVATE N_NIMCALL(void, addTickPrerequisiteActor_)(AActor* self, AActor* prerequisiteActor);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, addComponentByClass_)(AActor* self, TY__EMMPexIt2htv9ac7xWWGtbw class_0, NIM_BOOL bManualAttachment, FTransform& relativeTransform, NIM_BOOL bDeferredFinish);
N_LIB_PRIVATE N_NIMCALL(UActorComponent*, addComponent_)(AActor* self, FName templateName, NIM_BOOL bManualAttachment, FTransform& relativeTransform, UObject* componentTemplateContext, NIM_BOOL bDeferredFinish);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, actorHasTag_)(AActor* self, FName tag);
N_LIB_PRIVATE N_NIMCALL(FString, optionsString)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoptionsString)(AGameModeBase* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(TY__LFVmNDCDdFSsmxhHiPJYiQ, gameStateClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameStateClass)(AGameModeBase* obj, TY__LFVmNDCDdFSsmxhHiPJYiQ val);
N_LIB_PRIVATE N_NIMCALL(TY__N5tiyJcFjwg9aEWJ9bLqgW2A, playerControllerClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerControllerClass)(AGameModeBase* obj, TY__N5tiyJcFjwg9aEWJ9bLqgW2A val);
N_LIB_PRIVATE N_NIMCALL(TY__XW1e9bzrz7QIZaZL5gPko1g, playerStateClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerStateClass)(AGameModeBase* obj, TY__XW1e9bzrz7QIZaZL5gPko1g val);
N_LIB_PRIVATE N_NIMCALL(TY__BkcX38UniVJ8g2gZm25M2w, hUDClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethUDClass)(AGameModeBase* obj, TY__BkcX38UniVJ8g2gZm25M2w val);
N_LIB_PRIVATE N_NIMCALL(TY__0urt5qtPpUJuYc9bl6N2OHg, defaultPawnClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPawnClass)(AGameModeBase* obj, TY__0urt5qtPpUJuYc9bl6N2OHg val);
N_LIB_PRIVATE N_NIMCALL(TY__eoFRbGE42PWBoR9bvsC8c9cw, spectatorClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspectatorClass)(AGameModeBase* obj, TY__eoFRbGE42PWBoR9bvsC8c9cw val);
N_LIB_PRIVATE N_NIMCALL(TY__N5tiyJcFjwg9aEWJ9bLqgW2A, replaySpectatorPlayerControllerClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplaySpectatorPlayerControllerClass)(AGameModeBase* obj, TY__N5tiyJcFjwg9aEWJ9bLqgW2A val);
N_LIB_PRIVATE N_NIMCALL(TY__CwGWlh85GBrNQk9cYdk5JEA, serverStatReplicatorClass)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setserverStatReplicatorClass)(AGameModeBase* obj, TY__CwGWlh85GBrNQk9cYdk5JEA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSeamlessTravel)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSeamlessTravel)(AGameModeBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStartPlayersAsSpectators)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStartPlayersAsSpectators)(AGameModeBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPauseable)(AGameModeBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPauseable)(AGameModeBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, startPlay_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(void, returnToMainMenuHost_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayerAtTransform_)(AGameModeBase* self, AController* newPlayer, FTransform& spawnTransform);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayerAtPlayerStart_)(AGameModeBase* self, AController* newPlayer, AActor* startSpot);
N_LIB_PRIVATE N_NIMCALL(void, restartPlayer_)(AGameModeBase* self, AController* newPlayer);
N_LIB_PRIVATE N_NIMCALL(void, resetLevel_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, playerCanRestart_)(AGameModeBase* self, APlayerController* player);
N_LIB_PRIVATE N_NIMCALL(AActor*, k2_FindPlayerStart_)(AGameModeBase* self, AController* player, FString incomingName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchStarted_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchEnded_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSpectators_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumPlayers_)(AGameModeBase* self);
N_LIB_PRIVATE N_NIMCALL(UClass*, getDefaultPawnClassForController_)(AGameModeBase* self, AController* inController);
N_LIB_PRIVATE N_NIMCALL(void, changeName_)(AGameModeBase* self, AController* controller, FString newName, NIM_BOOL bNameChange);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDelayedStart)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDelayedStart)(AGameMode* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, numSpectators)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumSpectators)(AGameMode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, numPlayers)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumPlayers)(AGameMode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, numBots)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumBots)(AGameMode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minRespawnDelay)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminRespawnDelay)(AGameMode* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, numTravellingPlayers)(AGameMode* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumTravellingPlayers)(AGameMode* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, startMatch_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(void, say_)(AGameMode* self, FString msg);
N_LIB_PRIVATE N_NIMCALL(void, restartGame_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMatchInProgress_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(FName, getMatchState_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(void, endMatch_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(void, abortMatch_)(AGameMode* self);
N_LIB_PRIVATE N_NIMCALL(TY__L4ksf6eGEOlpaGPAe08vkg, gameModeClass)(AGameStateBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameModeClass)(AGameStateBase_* obj, TY__L4ksf6eGEOlpaGPAe08vkg val);
N_LIB_PRIVATE N_NIMCALL(AGameModeBase*, authorityGameMode)(AGameStateBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setauthorityGameMode)(AGameStateBase_* obj, AGameModeBase* val);
N_LIB_PRIVATE N_NIMCALL(TY__eoFRbGE42PWBoR9bvsC8c9cw, spectatorClass)(AGameStateBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspectatorClass)(AGameStateBase_* obj, TY__eoFRbGE42PWBoR9bvsC8c9cw val);
N_LIB_PRIVATE N_NIMCALL(TY__Y5TxId8qcU0GFittS1bC9bA*, playerArray)(AGameStateBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerArray)(AGameStateBase_* obj, TY__Y5TxId8qcU0GFittS1bC9bA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchStarted_)(AGameStateBase_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMatchEnded_)(AGameStateBase_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasBegunPlay_)(AGameStateBase_* self);
N_LIB_PRIVATE N_NIMCALL(NF, getServerWorldTimeSeconds_)(AGameStateBase_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayerStartTime_)(AGameStateBase_* self, AController* controller);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayerRespawnDelay_)(AGameStateBase_* self, AController* controller);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, playerState)(AController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerState)(AController* obj, APlayerState_* val);
N_LIB_PRIVATE N_NIMCALL(void, unPossess_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, stopMovement_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, setInitialLocationAndRotation_)(AController* self, FVector& newLocation, FRotator& newRotation);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreMoveInput_)(AController* self, NIM_BOOL bNewMoveInput);
N_LIB_PRIVATE N_NIMCALL(void, setIgnoreLookInput_)(AController* self, NIM_BOOL bNewLookInput);
N_LIB_PRIVATE N_NIMCALL(void, setControlRotation_)(AController* self, FRotator& newRotation);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreMoveInput_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreLookInput_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, resetIgnoreInputFlags_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, possess_)(AController* self, APawn* inPawn);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, lineOfSightTo_)(AController* self, AActor* other, FVector viewPoint, NIM_BOOL bAlternateChecks);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawn_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayerController_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLookInputIgnored_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocalPlayerController_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocalController_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getViewTarget_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(void, getPlayerViewPoint_)(AController* self, FVector& location, FRotator& rotation);
N_LIB_PRIVATE N_NIMCALL(FRotator, getDesiredRotation_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getControlRotation_)(AController* self);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, playerCameraManager)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerCameraManager)(APlayerController* obj, APlayerCameraManager* val);
N_LIB_PRIVATE N_NIMCALL(TY__nUsLbvR9bTg9anoy6IEB7FSw, playerCameraManagerClass)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerCameraManagerClass)(APlayerController* obj, TY__nUsLbvR9bTg9anoy6IEB7FSw val);
N_LIB_PRIVATE N_NIMCALL(NF32, smoothTargetViewRotationSpeed)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsmoothTargetViewRotationSpeed)(APlayerController* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UCheatManager_*, cheatManager)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcheatManager)(APlayerController* obj, UCheatManager_* val);
N_LIB_PRIVATE N_NIMCALL(TY__gzb18rEfE25lh72hBxz6wA, cheatClass)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcheatClass)(APlayerController* obj, TY__gzb18rEfE25lh72hBxz6wA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPlayerIsWaiting)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPlayerIsWaiting)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowMouseCursor)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowMouseCursor)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableClickEvents)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableClickEvents)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableTouchEvents)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableTouchEvents)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMouseOverEvents)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMouseOverEvents)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableTouchOverEvents)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableTouchOverEvents)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceFeedbackEnabled)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceFeedbackEnabled)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableMotionControls)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableMotionControls)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableStreamingSource)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableStreamingSource)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStreamingSourceShouldActivate)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStreamingSourceShouldActivate)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStreamingSourceShouldBlockOnSlowStreaming)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStreamingSourceShouldBlockOnSlowStreaming)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, streamingSourcePriority)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourcePriority)(APlayerController* obj, tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA val);
N_LIB_PRIVATE N_NIMCALL(FColor*, streamingSourceDebugColor)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourceDebugColor)(APlayerController* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(TY__nOrP80JBRl6rmLy4ACFykA*, streamingSourceShapes)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstreamingSourceShapes)(APlayerController* obj, TY__nOrP80JBRl6rmLy4ACFykA val);
N_LIB_PRIVATE N_NIMCALL(TY__HqMsNoaajlV9ahHT79bz6bBA*, clickEventKeys)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclickEventKeys)(APlayerController* obj, TY__HqMsNoaajlV9ahHT79bz6bBA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, defaultMouseCursor)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultMouseCursor)(APlayerController* obj, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g, currentMouseCursor)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentMouseCursor)(APlayerController* obj, tyEnum_EMouseCursor__FY9bNpeIN5v0pY46Itc7J4g val);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, defaultClickTraceChannel)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultClickTraceChannel)(APlayerController* obj, ECollisionChannel val);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, currentClickTraceChannel)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentClickTraceChannel)(APlayerController* obj, ECollisionChannel val);
N_LIB_PRIVATE N_NIMCALL(NF32, hitResultTraceDistance)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethitResultTraceDistance)(APlayerController* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldPerformFullTickWhenPaused)(APlayerController* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldPerformFullTickWhenPaused)(APlayerController* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasInputKeyJustReleased_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasInputKeyJustPressed_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, streamingSourceShouldBlockOnSlowStreaming_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, streamingSourceShouldActivate_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(void, stopHapticEffect_)(APlayerController* self, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand);
N_LIB_PRIVATE N_NIMCALL(void, setVirtualJoystickVisibility_)(APlayerController* self, NIM_BOOL bVisible);
N_LIB_PRIVATE N_NIMCALL(void, setViewTargetWithBlend_)(APlayerController* self, AActor* newViewTarget, NF32 blendTime, tyEnum_EViewTargetBlendFunction__bD49atsfKhTFQYLRCUW0iGQ blendFunc, NF32 blendExp, NIM_BOOL bLockOutgoing);
N_LIB_PRIVATE N_NIMCALL(void, setMouseLocation_)(APlayerController* self, NI32 x, NI32 y);
N_LIB_PRIVATE N_NIMCALL(void, setMotionControlsEnabled_)(APlayerController* self, NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setHapticsByValue_)(APlayerController* self, NF32 frequency, NF32 amplitude, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand);
N_LIB_PRIVATE N_NIMCALL(void, setDisableHaptics_)(APlayerController* self, NIM_BOOL bNewDisabled);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputYawScale_)(APlayerController* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputRollScale_)(APlayerController* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setDeprecatedInputPitchScale_)(APlayerController* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setControllerLightColor_)(APlayerController* self, FColor color);
N_LIB_PRIVATE N_NIMCALL(void, setCinematicMode_)(APlayerController* self, NIM_BOOL bInCinematicMode, NIM_BOOL bHidePlayer, NIM_BOOL bAffectsHUD, NIM_BOOL bAffectsMovement, NIM_BOOL bAffectsTurning);
N_LIB_PRIVATE N_NIMCALL(void, setAudioListenerOverride_)(APlayerController* self, USceneComponent* attachToComponent, FVector location, FRotator rotation);
N_LIB_PRIVATE N_NIMCALL(void, setAudioListenerAttenuationOverride_)(APlayerController* self, USceneComponent* attachToComponent, FVector attenuationLocationOVerride);
N_LIB_PRIVATE N_NIMCALL(void, resetControllerLightColor_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, projectWorldLocationToScreen_)(APlayerController* self, FVector worldLocation, FVector2D& screenLocation, NIM_BOOL bPlayerViewportRelative);
N_LIB_PRIVATE N_NIMCALL(void, playHapticEffect_)(APlayerController* self, UHapticFeedbackEffect_Base_* hapticEffect, tyEnum_EControllerHand__8H5xZCWvpeWFbOXDub4fCg hand, NF32 scale, NIM_BOOL bLoop);
N_LIB_PRIVATE N_NIMCALL(void, playDynamicForceFeedback_)(APlayerController* self, NF32 intensity, NF32 duration, NIM_BOOL bAffectsLeftLarge, NIM_BOOL bAffectsLeftSmall, NIM_BOOL bAffectsRightLarge, NIM_BOOL bAffectsRightSmall, tyEnum_EDynamicForceFeedbackAction__8KJfWx2uBQLb8KhKL7Nljg action, FLatentActionInfo latentInfo);
N_LIB_PRIVATE N_NIMCALL(void, clientPlayForceFeedback_)(APlayerController* self, UForceFeedbackEffect_* forceFeedbackEffect, FName tag, NIM_BOOL bLooping, NIM_BOOL bIgnoreTimeDilation, NIM_BOOL bPlayWhilePaused);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isStreamingSourceEnabled_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInputKeyDown_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getViewportSize_)(APlayerController* self, NI32& sizeX, NI32& sizeY);
N_LIB_PRIVATE N_NIMCALL(void, getStreamingSourceShapes_)(APlayerController* self, TY__nOrP80JBRl6rmLy4ACFykA& outShapes);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EStreamingSourcePriority__o33h819cCq3wGqoIdM8ebdA, getStreamingSourcePriority_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(void, getStreamingSourceLocationAndRotation_)(APlayerController* self, FVector& outLocation, FRotator& outRotation);
N_LIB_PRIVATE N_NIMCALL(ASpectatorPawn_*, getSpectatorPawn_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPlatformUserId_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(TY__9b1Wl2DWbmWU3i39cb0aYLdw, getOverridePlayerInputClass_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getMousePosition_)(APlayerController* self, NF32& locationX, NF32& locationY);
N_LIB_PRIVATE N_NIMCALL(FVector, getInputVectorKeyState_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getInputTouchState_)(APlayerController* self, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex, NF32& locationX, NF32& locationY, NIM_BOOL& bIsCurrentlyPressed);
N_LIB_PRIVATE N_NIMCALL(void, getInputMouseDelta_)(APlayerController* self, NF32& deltaX, NF32& deltaY);
N_LIB_PRIVATE N_NIMCALL(void, getInputMotionState_)(APlayerController* self, FVector& tilt, FVector& rotationRate, FVector& gravity, FVector& acceleration);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputKeyTimeDown_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(void, getInputAnalogStickState_)(APlayerController* self, tyEnum_EControllerAnalogStick__O2sI3YJbTTP8fRUjJayFrw whichStick, NF32& stickX, NF32& stickY);
N_LIB_PRIVATE N_NIMCALL(NF32, getInputAnalogKeyState_)(APlayerController* self, FKey key);
N_LIB_PRIVATE N_NIMCALL(AHUD_*, getHUD_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFingerForObjects_)(APlayerController* self, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFingerByChannel_)(APlayerController* self, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderFinger_)(APlayerController* self, tyEnum_ETouchIndex__MHa1jaeNIxegewLWK9bCncA fingerIndex, ECollisionChannel traceChannel, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursorForObjects_)(APlayerController* self, TY__6r3nfRijJ9c5MKJaF9a9cYvbg& objectTypes, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursorByChannel_)(APlayerController* self, tyEnum_ETraceTypeQuery__qYOcLUeh72MNRbmAPobvEw traceChannel, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getHitResultUnderCursor_)(APlayerController* self, ECollisionChannel traceChannel, NIM_BOOL bTraceComplex, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(FVector, getFocalLocation_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputYawScale_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputRollScale_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeprecatedInputPitchScale_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectScreenPositionToWorld_)(APlayerController* self, NF32 screenX, NF32 screenY, FVector& worldLocation, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, deprojectMousePositionToWorld_)(APlayerController* self, FVector& worldLocation, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(void, clientStopForceFeedback_)(APlayerController* self, UForceFeedbackEffect_* forceFeedbackEffect, FName tag);
N_LIB_PRIVATE N_NIMCALL(void, clientStopCameraShakesFromSource_)(APlayerController* self, UCameraShakeSourceComponent_* sourceComponent, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, clientStopCameraShake_)(APlayerController* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, clientStartCameraShakeFromSource_)(APlayerController* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, UCameraShakeSourceComponent_* sourceComponent);
N_LIB_PRIVATE N_NIMCALL(void, clientStartCameraShake_)(APlayerController* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, NF32 scale, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace, FRotator userPlaySpaceRot);
N_LIB_PRIVATE N_NIMCALL(void, clientSpawnGenericCameraLensEffect_)(APlayerController* self, TY__9akcXb9b3ftlkdW8NDwR22Mg lensEffectEmitterClass);
N_LIB_PRIVATE N_NIMCALL(void, clientSetHUD_)(APlayerController* self, TY__BkcX38UniVJ8g2gZm25M2w newHUDClass);
N_LIB_PRIVATE N_NIMCALL(void, clientClearCameraLensEffects_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAudioListenerOverride_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAudioListenerAttenuationOverride_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canRestartPlayer_)(APlayerController* self);
N_LIB_PRIVATE N_NIMCALL(void, addYawInput_)(APlayerController* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, addRollInput_)(APlayerController* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, addPitchInput_)(APlayerController* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, activateTouchInterface_)(APlayerController* self, UTouchInterface_* newTouchInterface);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationPitch)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationPitch)(APawn* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationYaw)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationYaw)(APawn* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerRotationRoll)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerRotationRoll)(APawn* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanAffectNavigationGeneration)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanAffectNavigationGeneration)(APawn* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, baseEyeHeight)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbaseEyeHeight)(APawn* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__KGHReoQbDEGLKq1y5YM6eQ, aIControllerClass)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaIControllerClass)(APawn* obj, TY__KGHReoQbDEGLKq1y5YM6eQ val);
N_LIB_PRIVATE N_NIMCALL(APlayerState_*, playerState)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerState)(APawn* obj, APlayerState_* val);
N_LIB_PRIVATE N_NIMCALL(AController*, lastHitBy)(APawn* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlastHitBy)(APawn* obj, AController* val);
N_LIB_PRIVATE N_NIMCALL(void, spawnDefaultController_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(void, setCanAffectNavigationGeneration_)(APawn* self, NIM_BOOL bNewValue, NIM_BOOL bForceUpdate);
N_LIB_PRIVATE N_NIMCALL(void, pawnMakeNoise_)(APawn* self, NF32 loudness, FVector noiseLocation, NIM_BOOL bUseNoiseMakerLocation, AActor* noiseMaker);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayerControlled_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPawnControlled_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyViewed_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyControlled_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isControlled_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBotControlled_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FPlatformUserId, getPlatformUserId_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getPendingMovementInputVector_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(TY__eU3i2csv9bKuRFwfWpzG1Fg, getOverrideInputComponentClass_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getNavAgentLocation_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(UPawnMovementComponent*, getMovementComponent_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getMovementBaseActor_)(APawn* pawn);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getLocalViewingPlayerController_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastMovementInputVector_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getControlRotation_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(AController*, getController_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBaseAimRotation_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(void, detachFromControllerPendingDestroy_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(FVector, consumeMovementInputVector_)(APawn* self);
N_LIB_PRIVATE N_NIMCALL(void, addMovementInput_)(APawn* self, FVector worldDirection, NF32 scaleValue, NIM_BOOL bForce);
N_LIB_PRIVATE N_NIMCALL(void, addControllerYawInput_)(APawn* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, addControllerRollInput_)(APawn* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, addControllerPitchInput_)(APawn* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, mesh)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmesh)(ACharacter* obj, USkeletalMeshComponent* val);
N_LIB_PRIVATE N_NIMCALL(UCharacterMovementComponent*, characterMovement)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcharacterMovement)(ACharacter* obj, UCharacterMovementComponent* val);
N_LIB_PRIVATE N_NIMCALL(UCapsuleComponent*, capsuleComponent)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcapsuleComponent)(ACharacter* obj, UCapsuleComponent* val);
N_LIB_PRIVATE N_NIMCALL(NF32, crouchedEyeHeight)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcrouchedEyeHeight)(ACharacter* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsCrouched)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsCrouched)(ACharacter* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPressedJump)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPressedJump)(ACharacter* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWasJumping)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWasJumping)(ACharacter* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpKeyHoldTime)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpKeyHoldTime)(ACharacter* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpForceTimeRemaining)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpForceTimeRemaining)(ACharacter* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, proxyJumpForceStartedTime)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setproxyJumpForceStartedTime)(ACharacter* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpMaxHoldTime)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpMaxHoldTime)(ACharacter* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpMaxCount)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpMaxCount)(ACharacter* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpCurrentCount)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpCurrentCount)(ACharacter* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, jumpCurrentCountPreJump)(ACharacter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpCurrentCountPreJump)(ACharacter* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, unCrouch_)(ACharacter* self, NIM_BOOL bClientSimulation);
N_LIB_PRIVATE N_NIMCALL(void, stopJumping_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(void, stopAnimMontage_)(ACharacter* self, UAnimMontage* animMontage);
N_LIB_PRIVATE N_NIMCALL(NF32, playAnimMontage_)(ACharacter* self, UAnimMontage* animMontage, NF32 inPlayRate, FName startSectionName);
N_LIB_PRIVATE N_NIMCALL(void, launchCharacter_)(ACharacter* self, FVector launchVelocity, NIM_BOOL bXYOverride, NIM_BOOL bZOverride);
N_LIB_PRIVATE N_NIMCALL(void, jump_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingRootMotion_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingNetworkedRootMotionMontage_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isJumpProvidingForce_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAnyRootMotion_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentMontage_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getBaseTranslationOffset_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getBaseRotationOffsetRotator_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnimRootMotionTranslationScale_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(void, crouch_)(ACharacter* self, NIM_BOOL bClientSimulation);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canJump_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canCrouch_)(ACharacter* self);
N_LIB_PRIVATE N_NIMCALL(void, cacheInitialMeshOffset_)(ACharacter* self, FVector meshRelativeLocation, FRotator meshRelativeRotation);
N_LIB_PRIVATE N_NIMCALL(FForceFeedbackAttenuationSettings_*, attenuation)(UForceFeedbackAttenuation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(UForceFeedbackAttenuation_* obj, FForceFeedbackAttenuationSettings_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUHierarchicalLODSetup)(UHierarchicalLODSetup_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__foOrAswB6Owyr0RwoeenmA, debugCameraControllerClass)(UCheatManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdebugCameraControllerClass)(UCheatManager_* obj, TY__foOrAswB6Owyr0RwoeenmA val);
N_LIB_PRIVATE N_NIMCALL(void, walk_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, teleport_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, slomo_)(UCheatManager_* self, NF32 newTimeDilation);
N_LIB_PRIVATE N_NIMCALL(void, playersOnly_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, god_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, ghost_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, freezeFrame_)(UCheatManager_* self, NF32 delay);
N_LIB_PRIVATE N_NIMCALL(void, fly_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, enableDebugCamera_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, disableDebugCamera_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, destroyTarget_)(UCheatManager_* self);
N_LIB_PRIVATE N_NIMCALL(void, damageTarget_)(UCheatManager_* self, NF32 damageAmount);
N_LIB_PRIVATE N_NIMCALL(void, changeSize_)(UCheatManager_* self, NF32 f);
N_LIB_PRIVATE N_NIMCALL(void, keepUCheatManager)(UCheatManager_* fake);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, updatedComponent)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setupdatedComponent)(UMovementComponent_* obj, USceneComponent* val);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, updatedPrimitive)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setupdatedPrimitive)(UMovementComponent_* obj, UPrimitiveComponent* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, velocity)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvelocity)(UMovementComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, planeConstraintNormal)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplaneConstraintNormal)(UMovementComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, planeConstraintOrigin)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplaneConstraintOrigin)(UMovementComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUpdateOnlyIfRendered)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUpdateOnlyIfRendered)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoUpdateTickRegistration)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoUpdateTickRegistration)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTickBeforeOwner)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTickBeforeOwner)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoRegisterUpdatedComponent)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoRegisterUpdatedComponent)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConstrainToPlane)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbConstrainToPlane)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSnapToPlaneAtStart)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSnapToPlaneAtStart)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoRegisterPhysicsVolumeUpdates)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoRegisterPhysicsVolumeUpdates)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bComponentShouldUpdatePhysicsVolume)(UMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbComponentShouldUpdatePhysicsVolume)(UMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, stopMovementImmediately_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, snapUpdatedComponentToPlane_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setUpdatedComponent_)(UMovementComponent_* self, USceneComponent* newUpdatedComponent);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintOrigin_)(UMovementComponent_* self, FVector planeOrigin);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintNormal_)(UMovementComponent_* self, FVector planeNormal);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintFromVectors_)(UMovementComponent_* self, FVector forward, FVector up);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintEnabled_)(UMovementComponent_* self, NIM_BOOL bEnabled);
N_LIB_PRIVATE N_NIMCALL(void, setPlaneConstraintAxisSetting_)(UMovementComponent_* self, tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA newAxisSetting);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, moveUpdatedComponent_)(UMovementComponent_* self, FVector delta, FRotator newRotation, FHitResult& outHit, NIM_BOOL bSweep, NIM_BOOL bTeleport);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isExceedingMaxSpeed_)(UMovementComponent_* self, NF32 maxSpeed);
N_LIB_PRIVATE N_NIMCALL(FVector, getPlaneConstraintOrigin_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getPlaneConstraintNormal_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EPlaneConstraintAxisSetting__9aRqYQOTk1ZZrSZxsjB36MA, getPlaneConstraintAxisSetting_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxSpeed_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getGravityZ_)(UMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainNormalToPlane_)(UMovementComponent_* self, FVector normal);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainLocationToPlane_)(UMovementComponent_* self, FVector location);
N_LIB_PRIVATE N_NIMCALL(FVector, constrainDirectionToPlane_)(UMovementComponent_* self, FVector direction);
N_LIB_PRIVATE N_NIMCALL(FNavAgentProperties*, navAgentProps)(UNavMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavAgentProps)(UNavMovementComponent* obj, FNavAgentProperties val);
N_LIB_PRIVATE N_NIMCALL(void, stopMovementKeepPathing_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, stopActiveMovement_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSwimming_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMovingOnGround_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFlying_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFalling_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCrouching_)(UNavMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavMovementComponent)(UNavMovementComponent* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isMoveInputIgnored_)(UPawnMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getPendingInputVector_)(UPawnMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawnOwner_)(UPawnMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastInputVector_)(UPawnMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, consumeInputVector_)(UPawnMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, addInputVector_)(UPawnMovementComponent* self, FVector worldVector, NIM_BOOL bForce);
N_LIB_PRIVATE N_NIMCALL(void, keepUPawnMovementComponent)(UPawnMovementComponent* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, gravityScale)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgravityScale)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxStepHeight)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxStepHeight)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpZVelocity)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpZVelocity)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpOffJumpZFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpOffJumpZFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, movementMode)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmovementMode)(UCharacterMovementComponent* obj, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val);
N_LIB_PRIVATE N_NIMCALL(NU8, customMovementMode)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomMovementMode)(UCharacterMovementComponent* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ, networkSmoothingMode)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetworkSmoothingMode)(UCharacterMovementComponent* obj, tyEnum_ENetworkSmoothingMode__mdwbpAvWPaxZJqtk9cXvneQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, groundFriction)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgroundFriction)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWalkSpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWalkSpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWalkSpeedCrouched)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWalkSpeedCrouched)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSwimSpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSwimSpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxFlySpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxFlySpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxCustomMovementSpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxCustomMovementSpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxAcceleration)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxAcceleration)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minAnalogWalkSpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminAnalogWalkSpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingFrictionFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingFrictionFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingFriction)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingFriction)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingSubStepTime)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingSubStepTime)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationWalking)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationWalking)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationFalling)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationFalling)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationSwimming)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationSwimming)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, brakingDecelerationFlying)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbrakingDecelerationFlying)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, airControl)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setairControl)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, airControlBoostMultiplier)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setairControlBoostMultiplier)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, airControlBoostVelocityThreshold)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setairControlBoostVelocityThreshold)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, fallingLateralFriction)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfallingLateralFriction)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, crouchedHalfHeight)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcrouchedHalfHeight)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, buoyancy)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbuoyancy)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, perchRadiusThreshold)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setperchRadiusThreshold)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, perchAdditionalHeight)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setperchAdditionalHeight)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationRate)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotationRate)(UCharacterMovementComponent* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseSeparateBrakingFriction)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseSeparateBrakingFriction)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bApplyGravityWhileJumping)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbApplyGravityWhileJumping)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseControllerDesiredRotation)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseControllerDesiredRotation)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOrientRotationToMovement)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOrientRotationToMovement)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweepWhileNavWalking)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSweepWhileNavWalking)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRunPhysicsWithNoController)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRunPhysicsWithNoController)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceNextFloorCheck)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceNextFloorCheck)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanWalkOffLedges)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanWalkOffLedges)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCanWalkOffLedgesWhenCrouching)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCanWalkOffLedgesWhenCrouching)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnablePhysicsInteraction)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnablePhysicsInteraction)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTouchForceScaledToMass)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTouchForceScaledToMass)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPushForceScaledToMass)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPushForceScaledToMass)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPushForceUsingZOffset)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPushForceUsingZOffset)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bScalePushForceToVelocity)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbScalePushForceToVelocity)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxOutOfWaterStepHeight)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxOutOfWaterStepHeight)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, outofWaterZ)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutofWaterZ)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, mass)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmass)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, standingDownwardForceScale)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstandingDownwardForceScale)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, initialPushForceFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialPushForceFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, pushForceFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpushForceFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, pushForcePointZOffsetFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpushForcePointZOffsetFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, touchForceFactor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settouchForceFactor)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minTouchForce)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminTouchForce)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxTouchForce)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxTouchForce)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, repulsionForce)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrepulsionForce)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UCharacterMovementComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxJumpApexAttemptsPerSimulation)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxJumpApexAttemptsPerSimulation)(UCharacterMovementComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithGeometry)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithGeometry)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithGeometryAsProxy)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithGeometryAsProxy)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithPawn)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithPawn)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDepenetrationWithPawnAsProxy)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDepenetrationWithPawnAsProxy)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, ledgeCheckThreshold)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setledgeCheckThreshold)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, jumpOutOfWaterPitch)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setjumpOutOfWaterPitch)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FFindFloorResult*, currentFloor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentFloor)(UCharacterMovementComponent* obj, FFindFloorResult val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, defaultLandMovementMode)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultLandMovementMode)(UCharacterMovementComponent* obj, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, defaultWaterMovementMode)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultWaterMovementMode)(UCharacterMovementComponent* obj, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMaintainHorizontalGroundVelocity)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMaintainHorizontalGroundVelocity)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityX)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityX)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityY)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityY)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseVelocityZ)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseVelocityZ)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpartBaseAngularVelocity)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbImpartBaseAngularVelocity)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bJustTeleported)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbJustTeleported)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreClientMovementErrorChecksAndCorrection)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreClientMovementErrorChecksAndCorrection)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bServerAcceptClientAuthoritativePosition)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbServerAcceptClientAuthoritativePosition)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNotifyApex)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNotifyApex)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bWantsToCrouch)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbWantsToCrouch)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCrouchMaintainsBaseLocation)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCrouchMaintainsBaseLocation)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreBaseRotation)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreBaseRotation)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAlwaysCheckFloor)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAlwaysCheckFloor)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFlatBaseForFloorChecks)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFlatBaseForFloorChecks)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseRVOAvoidance)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseRVOAvoidance)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequestedMoveUseAcceleration)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRequestedMoveUseAcceleration)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowPhysicsRotationDuringAnimRootMotion)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowPhysicsRotationDuringAnimRootMotion)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, formerBaseVelocityDecayHalfLife)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setformerBaseVelocityDecayHalfLife)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bProjectNavMeshWalking)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbProjectNavMeshWalking)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bProjectNavMeshOnBothWorldChannels)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbProjectNavMeshOnBothWorldChannels)(UCharacterMovementComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, avoidanceConsiderationRadius)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceConsiderationRadius)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, avoidanceUID)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceUID)(UCharacterMovementComponent* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, avoidanceGroup)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceGroup)(UCharacterMovementComponent* obj, FNavAvoidanceMask val);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, groupsToAvoid)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgroupsToAvoid)(UCharacterMovementComponent* obj, FNavAvoidanceMask val);
N_LIB_PRIVATE N_NIMCALL(FNavAvoidanceMask*, groupsToIgnore)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgroupsToIgnore)(UCharacterMovementComponent* obj, FNavAvoidanceMask val);
N_LIB_PRIVATE N_NIMCALL(NF32, avoidanceWeight)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setavoidanceWeight)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionInterval)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionInterval)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionInterpSpeed)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionInterpSpeed)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionHeightScaleUp)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionHeightScaleUp)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, navMeshProjectionHeightScaleDown)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavMeshProjectionHeightScaleDown)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, navWalkingFloorDistTolerance)(UCharacterMovementComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnavWalkingFloorDistTolerance)(UCharacterMovementComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableFloorZ_)(UCharacterMovementComponent* self, NF32 inWalkableFloorZ);
N_LIB_PRIVATE N_NIMCALL(void, setWalkableFloorAngle_)(UCharacterMovementComponent* self, NF32 inWalkableFloorAngle);
N_LIB_PRIVATE N_NIMCALL(void, setMovementMode_)(UCharacterMovementComponent* self, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ newMovementMode, NU8 newCustomMode);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToIgnoreMask_)(UCharacterMovementComponent* self, FNavAvoidanceMask& groupMask);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToIgnore_)(UCharacterMovementComponent* self, NI32 groupFlags);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToAvoidMask_)(UCharacterMovementComponent* self, FNavAvoidanceMask& groupMask);
N_LIB_PRIVATE N_NIMCALL(void, setGroupsToAvoid_)(UCharacterMovementComponent* self, NI32 groupFlags);
N_LIB_PRIVATE N_NIMCALL(void, setCrouchedHalfHeight_)(UCharacterMovementComponent* self, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceGroupMask_)(UCharacterMovementComponent* self, FNavAvoidanceMask& groupMask);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceGroup_)(UCharacterMovementComponent* self, NI32 groupFlags);
N_LIB_PRIVATE N_NIMCALL(void, setAvoidanceEnabled_)(UCharacterMovementComponent* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(NF32, getWalkableFloorZ_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getWalkableFloorAngle_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, findFloor_)(UCharacterMovementComponent* self, FVector capsuleLocation, FFindFloorResult& floorResult);
N_LIB_PRIVATE N_NIMCALL(void, computeFloorDist_)(UCharacterMovementComponent* self, FVector capsuleLocation, NF32 lineDistance, NF32 sweepDistance, NF32 sweepRadius, FFindFloorResult& floorResult);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWalking_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isWalkable_)(UCharacterMovementComponent* self, FHitResult& hit);
N_LIB_PRIVATE N_NIMCALL(NF32, getValidPerchRadius_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPerchRadiusThreshold_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, getMovementBase_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMinAnalogSpeed_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxJumpHeightWithJumpTime_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxJumpHeight_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxBrakingDeceleration_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getMaxAcceleration_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateVelocity_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getLastUpdateRotation_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateRequestedVelocity_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getLastUpdateLocation_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getImpartedMovementBaseVelocity_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getCurrentAcceleration_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCrouchedHalfHeight_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(ACharacter*, getCharacterOwner_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getAnalogInputModifier_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, disableMovement_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAccumulatedForces_)(UCharacterMovementComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, calcVelocity_)(UCharacterMovementComponent* self, NF32 deltaTime, NF32 friction, NIM_BOOL bFluid, NF32 brakingDeceleration);
N_LIB_PRIVATE N_NIMCALL(void, addImpulse_)(UCharacterMovementComponent* self, FVector impulse, NIM_BOOL bVelocityChange);
N_LIB_PRIVATE N_NIMCALL(void, addForce_)(UCharacterMovementComponent* self, FVector force);
N_LIB_PRIVATE N_NIMCALL(void, keepUCharacterMovementComponent)(UCharacterMovementComponent* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, initialSpeed)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinitialSpeed)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSpeed)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSpeed)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationFollowsVelocity)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationFollowsVelocity)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationRemainsVertical)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationRemainsVertical)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldBounce)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldBounce)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInitialVelocityInLocalSpace)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInitialVelocityInLocalSpace)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForceSubStepping)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForceSubStepping)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSimulationEnabled)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSimulationEnabled)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSweepCollision)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSweepCollision)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsHomingProjectile)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsHomingProjectile)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBounceAngleAffectsFriction)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbBounceAngleAffectsFriction)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsSliding)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsSliding)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpMovement)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpMovement)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpRotation)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpRotation)(UProjectileMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, previousHitTime)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpreviousHitTime)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, previousHitNormal)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpreviousHitNormal)(UProjectileMovementComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, projectileGravityScale)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectileGravityScale)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, bounciness)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounciness)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, friction)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfriction)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, bounceVelocityStopSimulatingThreshold)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounceVelocityStopSimulatingThreshold)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minFrictionFraction)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminFrictionFraction)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, homingAccelerationMagnitude)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethomingAccelerationMagnitude)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, homingTargetComponent)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethomingTargetComponent)(UProjectileMovementComponent_* obj, TY__9b9c0qopUCzSW4js0BJumMlQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSimulationTimeStep)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationTimeStep)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, maxSimulationIterations)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSimulationIterations)(UProjectileMovementComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, bounceAdditionalIterations)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbounceAdditionalIterations)(UProjectileMovementComponent_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationTime)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationTime)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, interpRotationTime)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterpRotationTime)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationMaxLagDistance)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationMaxLagDistance)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, interpLocationSnapToTargetDistance)(UProjectileMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterpLocationSnapToTargetDistance)(UProjectileMovementComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, stopSimulating_)(UProjectileMovementComponent_* self, FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(void, setVelocityInLocalSpace_)(UProjectileMovementComponent_* self, FVector newVelocity);
N_LIB_PRIVATE N_NIMCALL(void, setInterpolatedComponent_)(UProjectileMovementComponent_* self, USceneComponent* component);
N_LIB_PRIVATE N_NIMCALL(void, resetInterpolation_)(UProjectileMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, moveInterpolationTarget_)(UProjectileMovementComponent_* self, FVector& newLocation, FRotator& newRotation);
N_LIB_PRIVATE N_NIMCALL(FVector, limitVelocity_)(UProjectileMovementComponent_* self, FVector newVelocity);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVelocityUnderSimulationThreshold_)(UProjectileMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInterpolationComplete_)(UProjectileMovementComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUProjectileMovementComponent)(UProjectileMovementComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotationRate)(URotatingMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotationRate)(URotatingMovementComponent_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(FVector*, pivotTranslation)(URotatingMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpivotTranslation)(URotatingMovementComponent_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRotationInLocalSpace)(URotatingMovementComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRotationInLocalSpace)(URotatingMovementComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepURotatingMovementComponent)(URotatingMovementComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCausedByWorld)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCausedByWorld)(UDamageType_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bScaleMomentumByMass)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbScaleMomentumByMass)(UDamageType_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRadialDamageVelChange)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRadialDamageVelChange)(UDamageType_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, damageImpulse)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdamageImpulse)(UDamageType_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleImpulse)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleImpulse)(UDamageType_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamageSpreadScale)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamageSpreadScale)(UDamageType_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, damageFalloff)(UDamageType_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdamageFalloff)(UDamageType_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, playerOwner)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerOwner)(AHUD_* obj, APlayerController* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLostFocusPaused)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLostFocusPaused)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowHUD)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowHUD)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowDebugInfo)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowDebugInfo)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowHitBoxDebugInfo)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowHitBoxDebugInfo)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShowOverlays)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShowOverlays)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableDebugTextShadow)(AHUD_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableDebugTextShadow)(AHUD_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FVector, project_)(AHUD_* self, FVector location, NIM_BOOL bClampToZeroPlane);
N_LIB_PRIVATE N_NIMCALL(void, getTextSize_)(AHUD_* self, FString text, NF32& outWidth, NF32& outHeight, UFont_* font, NF32 scale);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayerController_)(AHUD_* self);
N_LIB_PRIVATE N_NIMCALL(APawn*, getOwningPawn_)(AHUD_* self);
N_LIB_PRIVATE N_NIMCALL(void, getActorsInSelectionRectangle_)(AHUD_* self, TY__9akcXb9b3ftlkdW8NDwR22Mg classFilter, FVector2D& firstPoint, FVector2D& secondPoint, TY__kbK03O9cVTTS0GR9cjPhedTg& outActors, NIM_BOOL bIncludeNonCollidingComponents, NIM_BOOL bActorMustBeFullyEnclosed);
N_LIB_PRIVATE N_NIMCALL(void, drawTextureSimple_)(AHUD_* self, UTexture* texture, NF32 screenX, NF32 screenY, NF32 scale, NIM_BOOL bScalePosition);
N_LIB_PRIVATE N_NIMCALL(void, drawTexture_)(AHUD_* self, UTexture* texture, NF32 screenX, NF32 screenY, NF32 screenW, NF32 screenH, NF32 textureU, NF32 textureV, NF32 textureUWidth, NF32 textureVHeight, FLinearColor tintColor, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw blendMode, NF32 scale, NIM_BOOL bScalePosition, NF32 rotation, FVector2D rotPivot);
N_LIB_PRIVATE N_NIMCALL(void, drawText_)(AHUD_* self, FString text, FLinearColor textColor, NF32 screenX, NF32 screenY, UFont_* font, NF32 scale, NIM_BOOL bScalePosition);
N_LIB_PRIVATE N_NIMCALL(void, drawRect_)(AHUD_* self, FLinearColor rectColor, NF32 screenX, NF32 screenY, NF32 screenW, NF32 screenH);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialTriangle_)(AHUD_* self, UMaterialInterface* material, FVector2D v0_Pos, FVector2D v1_Pos, FVector2D v2_Pos, FVector2D v0_UV, FVector2D v1_UV, FVector2D v2_UV, FLinearColor v0_Color, FLinearColor v1_Color, FLinearColor v2_Color);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterialSimple_)(AHUD_* self, UMaterialInterface* material, NF32 screenX, NF32 screenY, NF32 screenW, NF32 screenH, NF32 scale, NIM_BOOL bScalePosition);
N_LIB_PRIVATE N_NIMCALL(void, drawMaterial_)(AHUD_* self, UMaterialInterface* material, NF32 screenX, NF32 screenY, NF32 screenW, NF32 screenH, NF32 materialU, NF32 materialV, NF32 materialUWidth, NF32 materialVHeight, NF32 scale, NIM_BOOL bScalePosition, NF32 rotation, FVector2D rotPivot);
N_LIB_PRIVATE N_NIMCALL(void, drawLine_)(AHUD_* self, NF32 startScreenX, NF32 startScreenY, NF32 endScreenX, NF32 endScreenY, FLinearColor lineColor, NF32 lineThickness);
N_LIB_PRIVATE N_NIMCALL(void, deproject_)(AHUD_* self, NF32 screenX, NF32 screenY, FVector& worldPosition, FVector& worldDirection);
N_LIB_PRIVATE N_NIMCALL(void, addHitBox_)(AHUD_* self, FVector2D position, FVector2D size, FName inName, NIM_BOOL bConsumesInput, NI32 priority);
N_LIB_PRIVATE N_NIMCALL(void, keepAHUD)(AHUD_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, baseTurnRate)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbaseTurnRate)(ADefaultPawn_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, baseLookUpRate)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbaseLookUpRate)(ADefaultPawn_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UPawnMovementComponent*, movementComponent)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmovementComponent)(ADefaultPawn_* obj, UPawnMovementComponent* val);
N_LIB_PRIVATE N_NIMCALL(USphereComponent*, collisionComponent)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(ADefaultPawn_* obj, USphereComponent* val);
N_LIB_PRIVATE N_NIMCALL(UStaticMeshComponent*, meshComponent)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmeshComponent)(ADefaultPawn_* obj, UStaticMeshComponent* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAddDefaultMovementBindings)(ADefaultPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAddDefaultMovementBindings)(ADefaultPawn_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, turnAtRate_)(ADefaultPawn_* self, NF32 rate);
N_LIB_PRIVATE N_NIMCALL(void, moveUp_World_)(ADefaultPawn_* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, moveRight_)(ADefaultPawn_* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, moveForward_)(ADefaultPawn_* self, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, lookUpAtRate_)(ADefaultPawn_* self, NF32 rate);
N_LIB_PRIVATE N_NIMCALL(void, keepUEngineMessage)(UEngineMessage_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, maxSpeed)(UFloatingPawnMovement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxSpeed)(UFloatingPawnMovement_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, acceleration)(UFloatingPawnMovement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setacceleration)(UFloatingPawnMovement_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, deceleration)(UFloatingPawnMovement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeceleration)(UFloatingPawnMovement_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, turningBoost)(UFloatingPawnMovement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setturningBoost)(UFloatingPawnMovement_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUFloatingPawnMovement)(UFloatingPawnMovement_* fake);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionHandleSaveGame_*, asyncSaveGameToSlot_)(UObject* worldContextObject, USaveGame_* saveGameObject, FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(UAsyncActionHandleSaveGame_*, asyncLoadGameFromSlot_)(UObject* worldContextObject, FString slotName, NI32 userIndex);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncActionHandleSaveGame)(UAsyncActionHandleSaveGame_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UForceFeedbackEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UForceFeedbackEffect_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, propertyDuration)(UInputDeviceProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpropertyDuration)(UInputDeviceProperty_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceProperty)(UInputDeviceProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceColorData_*, colorData)(UColorInputDeviceProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorData)(UColorInputDeviceProperty_* obj, FDeviceColorData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__mOpL05xw2iQakSy1XAlwfw*, deviceOverrideData)(UColorInputDeviceProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UColorInputDeviceProperty_* obj, TY__mOpL05xw2iQakSy1XAlwfw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUColorInputDeviceProperty)(UColorInputDeviceProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceColorCurveData_*, colorData)(UColorInputDeviceCurveProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcolorData)(UColorInputDeviceCurveProperty_* obj, FDeviceColorCurveData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__p8Wi6T89cTmksGlyV10Mycw*, deviceOverrideData)(UColorInputDeviceCurveProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UColorInputDeviceCurveProperty_* obj, TY__p8Wi6T89cTmksGlyV10Mycw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUColorInputDeviceCurveProperty)(UColorInputDeviceCurveProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerBaseData_*, baseTriggerData)(UInputDeviceTriggerEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbaseTriggerData)(UInputDeviceTriggerEffect_* obj, FDeviceTriggerBaseData_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceTriggerEffect)(UInputDeviceTriggerEffect_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerFeedbackData_*, triggerData)(UInputDeviceTriggerFeedbackProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerFeedbackProperty_* obj, FDeviceTriggerFeedbackData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__HBpy4JXT1fKa0SBtmqqvbg*, deviceOverrideData)(UInputDeviceTriggerFeedbackProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerFeedbackProperty_* obj, TY__HBpy4JXT1fKa0SBtmqqvbg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceTriggerFeedbackProperty)(UInputDeviceTriggerFeedbackProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerTriggerResistanceData_*, triggerData)(UInputDeviceTriggerResistanceProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerResistanceProperty_* obj, FDeviceTriggerTriggerResistanceData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__dbgBQsZXRZeU0c9bvitCtFA*, deviceOverrideData)(UInputDeviceTriggerResistanceProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerResistanceProperty_* obj, TY__dbgBQsZXRZeU0c9bvitCtFA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceTriggerResistanceProperty)(UInputDeviceTriggerResistanceProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FDeviceTriggerTriggerVibrationData_*, triggerData)(UInputDeviceTriggerVibrationProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggerData)(UInputDeviceTriggerVibrationProperty_* obj, FDeviceTriggerTriggerVibrationData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__0yQe9aDyyKVPv0QVddqTZAg*, deviceOverrideData)(UInputDeviceTriggerVibrationProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceTriggerVibrationProperty_* obj, TY__0yQe9aDyyKVPv0QVddqTZAg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceTriggerVibrationProperty)(UInputDeviceTriggerVibrationProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(FAudioBasedVibrationData_*, data)(UInputDeviceAudioBasedVibrationProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdata)(UInputDeviceAudioBasedVibrationProperty_* obj, FAudioBasedVibrationData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__bG8gCXIR8Js247Oljg5dng*, deviceOverrideData)(UInputDeviceAudioBasedVibrationProperty_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdeviceOverrideData)(UInputDeviceAudioBasedVibrationProperty_* obj, TY__bG8gCXIR8Js247Oljg5dng val);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceAudioBasedVibrationProperty)(UInputDeviceAudioBasedVibrationProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removeDevicePropertyHandles_)(UInputDeviceSubsystem_* self, TY__AyZkHVlB2X6bv9cl4qwczAw& handlesToRemove);
N_LIB_PRIVATE N_NIMCALL(void, removeDevicePropertyByHandle_)(UInputDeviceSubsystem_* self, FInputDevicePropertyHandle_ handleToRemove);
N_LIB_PRIVATE N_NIMCALL(void, removeAllDeviceProperties_)(UInputDeviceSubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPropertyActive_)(UInputDeviceSubsystem_* self, FInputDevicePropertyHandle_ handle);
N_LIB_PRIVATE N_NIMCALL(FHardwareDeviceIdentifier_, getMostRecentlyUsedHardwareDevice_)(UInputDeviceSubsystem_* self, FPlatformUserId inUserId);
N_LIB_PRIVATE N_NIMCALL(FHardwareDeviceIdentifier_, getInputDeviceHardwareIdentifier_)(UInputDeviceSubsystem_* self, FInputDeviceId inputDevice);
N_LIB_PRIVATE N_NIMCALL(UInputDeviceProperty_*, getActiveDeviceProperty_)(UInputDeviceSubsystem_* self, FInputDevicePropertyHandle_ handle);
N_LIB_PRIVATE N_NIMCALL(FInputDevicePropertyHandle_, activateDevicePropertyOfClass_)(UInputDeviceSubsystem_* self, TY__aqfsbs05nDl2Mv2M0XZFpg propertyClass, FActivateDevicePropertyParams_& params);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputDeviceSubsystem)(UInputDeviceSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, targetArmLength)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetArmLength)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, socketOffset)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsocketOffset)(USpringArmComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetOffset)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetOffset)(USpringArmComponent* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, probeSize)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprobeSize)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, probeChannel)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprobeChannel)(USpringArmComponent* obj, ECollisionChannel val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDoCollisionTest)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDoCollisionTest)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePawnControlRotation)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePawnControlRotation)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritPitch)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritPitch)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritYaw)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritYaw)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInheritRoll)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInheritRoll)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableCameraLag)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableCameraLag)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableCameraRotationLag)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableCameraRotationLag)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseCameraLagSubstepping)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseCameraLagSubstepping)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawDebugLagMarkers)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawDebugLagMarkers)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagSpeed)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagSpeed)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraRotationLagSpeed)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraRotationLagSpeed)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagMaxTimeStep)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagMaxTimeStep)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, cameraLagMaxDistance)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraLagMaxDistance)(USpringArmComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClampToMaxPhysicsDeltaTime)(USpringArmComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbClampToMaxPhysicsDeltaTime)(USpringArmComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isCollisionFixApplied_)(USpringArmComponent* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getUnfixedCameraPosition_)(USpringArmComponent* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getTargetRotation_)(USpringArmComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUSpringArmComponent)(USpringArmComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTouchInterface)(UTouchInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, validateSettings_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, supportsHDRDisplayOutput_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, setVSyncEnabled_)(UGameUserSettings_* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, setVisualEffectQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setViewDistanceQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setToDefaults_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, setTextureQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setShadowQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setShadingQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setScreenResolution_)(UGameUserSettings_* self, FIntPoint resolution);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleValueEx_)(UGameUserSettings_* self, NF32 newScaleValue);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleValue_)(UGameUserSettings_* self, NI32 newScaleValue);
N_LIB_PRIVATE N_NIMCALL(void, setResolutionScaleNormalized_)(UGameUserSettings_* self, NF32 newScaleNormalized);
N_LIB_PRIVATE N_NIMCALL(void, setReflectionQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setPostProcessingQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setOverallScalabilityLevel_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setGlobalIlluminationQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setFullscreenMode_)(UGameUserSettings_* self, tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg inFullscreenMode);
N_LIB_PRIVATE N_NIMCALL(void, setFrameRateLimit_)(UGameUserSettings_* self, NF32 newLimit);
N_LIB_PRIVATE N_NIMCALL(void, setFoliageQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, setDynamicResolutionEnabled_)(UGameUserSettings_* self, NIM_BOOL bEnable);
N_LIB_PRIVATE N_NIMCALL(void, setBenchmarkFallbackValues_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, setAudioQualityLevel_)(UGameUserSettings_* self, NI32 qualityLevel);
N_LIB_PRIVATE N_NIMCALL(void, setAntiAliasingQuality_)(UGameUserSettings_* self, NI32 value);
N_LIB_PRIVATE N_NIMCALL(void, saveSettings_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, runHardwareBenchmark_)(UGameUserSettings_* self, NI32 workScale, NF32 cPUMultiplier, NF32 gPUMultiplier);
N_LIB_PRIVATE N_NIMCALL(void, revertVideoMode_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, resetToCurrentSettings_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, loadSettings_)(UGameUserSettings_* self, NIM_BOOL bForceReload);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVSyncEnabled_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVSyncDirty_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isScreenResolutionDirty_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isHDREnabled_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isFullscreenModeDirty_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicResolutionEnabled_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicResolutionDirty_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDirty_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getVisualEffectQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getViewDistanceQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getTextureQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getSyncInterval_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getShadowQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getShadingQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getScreenResolution_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getResolutionScaleNormalized_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, getResolutionScaleInformationEx_)(UGameUserSettings_* self, NF32& currentScaleNormalized, NF32& currentScaleValue, NF32& minScaleValue, NF32& maxScaleValue);
N_LIB_PRIVATE N_NIMCALL(void, getResolutionScaleInformation_)(UGameUserSettings_* self, NF32& currentScaleNormalized, NI32& currentScaleValue, NI32& minScaleValue, NI32& maxScaleValue);
N_LIB_PRIVATE N_NIMCALL(NI32, getReflectionQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getRecommendedResolutionScale_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getPreferredFullscreenMode_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getPostProcessingQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getOverallScalabilityLevel_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getLastConfirmedScreenResolution_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getLastConfirmedFullscreenMode_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getGlobalIlluminationQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(UGameUserSettings_*, getGameUserSettings_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getFullscreenMode_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getFrameRateLimit_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getFramePace_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getFoliageQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDesktopResolution_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDefaultWindowPosition_)(void);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EWindowMode__G5PE8mPwaeIEfn7NRt9boVg, getDefaultWindowMode_)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultResolutionScale_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(FIntPoint, getDefaultResolution_)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, getCurrentHDRDisplayNits_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getAudioQualityLevel_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getAntiAliasingQuality_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, enableHDRDisplayOutput_)(UGameUserSettings_* self, NIM_BOOL bEnable, NI32 displayNits);
N_LIB_PRIVATE N_NIMCALL(void, confirmVideoMode_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, applySettings_)(UGameUserSettings_* self, NIM_BOOL bCheckForCommandLineOverrides);
N_LIB_PRIVATE N_NIMCALL(void, applyResolutionSettings_)(UGameUserSettings_* self, NIM_BOOL bCheckForCommandLineOverrides);
N_LIB_PRIVATE N_NIMCALL(void, applyNonResolutionSettings_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, applyHardwareBenchmarkResults_)(UGameUserSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameUserSettings)(UGameUserSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepALightWeightInstanceManager)(ALightWeightInstanceManager_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__cgfzaLYkvR8gASam8GmF9aQ, staticMesh)(ALightWeightInstanceStaticMeshManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstaticMesh)(ALightWeightInstanceStaticMeshManager_* obj, TY__cgfzaLYkvR8gASam8GmF9aQ val);
N_LIB_PRIVATE N_NIMCALL(UHierarchicalInstancedStaticMeshComponent_*, instancedStaticMeshComponent)(ALightWeightInstanceStaticMeshManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstancedStaticMeshComponent)(ALightWeightInstanceStaticMeshManager_* obj, UHierarchicalInstancedStaticMeshComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepALightWeightInstanceStaticMeshManager)(ALightWeightInstanceStaticMeshManager_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, playerStartTag)(APlayerStart_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerStartTag)(APlayerStart_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NF32, score)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscore)(APlayerState_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, playerId)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayerId)(APlayerState_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NU8, compressedPing)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompressedPing)(APlayerState_* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsSpectator)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsSpectator)(APlayerState_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsABot)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsABot)(APlayerState_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(APawn*, pawnPrivate)(APlayerState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpawnPrivate)(APlayerState_* obj, APawn* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSpectator_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOnlyASpectator_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isABot_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScore_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(FString, getPlayerName_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getPlayerId_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getPlayerController_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getPingInMilliseconds_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(APawn*, getPawn_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(NU8, getCompressedPing_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(FUniqueNetIdRepl, getUniqueId_)(APlayerState_* self);
N_LIB_PRIVATE N_NIMCALL(void, saveKeyMappings_)(UInputSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, removeAxisMapping_)(UInputSettings_* self, FInputAxisKeyMapping& keyMapping, NIM_BOOL bForceRebuildKeymaps);
N_LIB_PRIVATE N_NIMCALL(void, removeActionMapping_)(UInputSettings_* self, FInputActionKeyMapping& keyMapping, NIM_BOOL bForceRebuildKeymaps);
N_LIB_PRIVATE N_NIMCALL(UInputSettings_*, getInputSettings_)(void);
N_LIB_PRIVATE N_NIMCALL(void, getAxisNames_)(UInputSettings_* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& axisNames);
N_LIB_PRIVATE N_NIMCALL(void, getAxisMappingByName_)(UInputSettings_* self, FName inAxisName, TY__CLT5yrXFP3HZX5VORHV70A& outMappings);
N_LIB_PRIVATE N_NIMCALL(void, getActionNames_)(UInputSettings_* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& actionNames);
N_LIB_PRIVATE N_NIMCALL(void, getActionMappingByName_)(UInputSettings_* self, FName inActionName, TY__LgeuiTWlJeQFCA1Wq3za9bg& outMappings);
N_LIB_PRIVATE N_NIMCALL(void, forceRebuildKeymaps_)(UInputSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, addAxisMapping_)(UInputSettings_* self, FInputAxisKeyMapping& keyMapping, NIM_BOOL bForceRebuildKeymaps);
N_LIB_PRIVATE N_NIMCALL(void, addActionMapping_)(UInputSettings_* self, FInputActionKeyMapping& keyMapping, NIM_BOOL bForceRebuildKeymaps);
N_LIB_PRIVATE N_NIMCALL(void, keepUInputSettings)(UInputSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOuterAPlayerController_)(UPlayerInput* self);
N_LIB_PRIVATE N_NIMCALL(void, keepFLightmassWorldInfoSettings)(FLightmassWorldInfoSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceColorData)(FDeviceColorData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceColorCurveData)(FDeviceColorCurveData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceTriggerBaseData)(FDeviceTriggerBaseData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceTriggerFeedbackData)(FDeviceTriggerFeedbackData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceTriggerTriggerResistanceData)(FDeviceTriggerTriggerResistanceData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDeviceTriggerTriggerVibrationData)(FDeviceTriggerTriggerVibrationData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAudioBasedVibrationData)(FAudioBasedVibrationData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActivateDevicePropertyParams)(FActivateDevicePropertyParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFHardwareDeviceIdentifier)(FHardwareDeviceIdentifier_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputActionKeyMapping)(FInputActionKeyMapping fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputAxisKeyMapping)(FInputAxisKeyMapping fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputActionSpeechMapping)(FInputActionSpeechMapping fake);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitAttributeChangedDelegate_*, changed)(UAbilityAsync_WaitAttributeChanged_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchanged)(UAbilityAsync_WaitAttributeChanged_* obj, FAsyncWaitAttributeChangedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(void, asyncWaitAttributeChangedDelegate_)(UAbilityAsync_WaitAttributeChanged_* self, FGameplayAttribute attribute, NF32 newValue, NF32 oldValue);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitAttributeChanged)(UAbilityAsync_WaitAttributeChanged_* fake);
N_LIB_PRIVATE N_NIMCALL(FOnAppliedDelegate_*, onApplied)(UAbilityAsync_WaitGameplayEffectApplied_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityAsync_WaitGameplayEffectApplied_* obj, FOnAppliedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayEffectApplied_*, waitGameplayEffectAppliedToActor_)(AActor* targetActor, FGameplayTargetDataFilterHandle_ sourceFilter, FGameplayTagRequirements sourceTagRequirements, FGameplayTagRequirements targetTagRequirements, NIM_BOOL triggerOnce, NIM_BOOL listenForPeriodicEffect);
N_LIB_PRIVATE N_NIMCALL(void, onAppliedDelegate_)(UAbilityAsync_WaitGameplayEffectApplied_* self, AActor* source, FGameplayEffectSpecHandle specHandle, FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayEffectApplied)(UAbilityAsync_WaitGameplayEffectApplied_* fake);
N_LIB_PRIVATE N_NIMCALL(FEventReceivedDelegate_*, eventReceived)(UAbilityAsync_WaitGameplayEvent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seteventReceived)(UAbilityAsync_WaitGameplayEvent_* obj, FEventReceivedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayEvent_*, waitGameplayEventToActor_)(AActor* targetActor, FGameplayTag eventTag, NIM_BOOL onlyTriggerOnce, NIM_BOOL onlyMatchExact);
N_LIB_PRIVATE N_NIMCALL(void, eventReceivedDelegate_)(UAbilityAsync_WaitGameplayEvent_* self, FGameplayEventData_ payload);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayEvent)(UAbilityAsync_WaitGameplayEvent_* fake);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagDelegate_*, added)(UAbilityAsync_WaitGameplayTagAdded_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadded)(UAbilityAsync_WaitGameplayTagAdded_* obj, FAsyncWaitGameplayTagDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayTagAdded_*, waitGameplayTagAddToActor_)(AActor* targetActor, FGameplayTag tag, NIM_BOOL onlyTriggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayTagAdded)(UAbilityAsync_WaitGameplayTagAdded_* fake);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagDelegate_*, removed)(UAbilityAsync_WaitGameplayTagRemoved_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremoved)(UAbilityAsync_WaitGameplayTagRemoved_* obj, FAsyncWaitGameplayTagDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityAsync_WaitGameplayTagRemoved_*, waitGameplayTagRemoveFromActor_)(AActor* targetActor, FGameplayTag tag, NIM_BOOL onlyTriggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayTagRemoved)(UAbilityAsync_WaitGameplayTagRemoved_* fake);
N_LIB_PRIVATE N_NIMCALL(FAsyncWaitGameplayTagQueryDelegate_*, triggered)(UAbilityAsync_WaitGameplayTagQuery_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggered)(UAbilityAsync_WaitGameplayTagQuery_* obj, FAsyncWaitGameplayTagQueryDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityAsync_WaitGameplayTagQuery)(UAbilityAsync_WaitGameplayTagQuery_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bReplicateInputDirectly)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbReplicateInputDirectly)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, remoteInstanceEnded)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremoteInstanceEnded)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g, replicationPolicy)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplicationPolicy)(UGameplayAbility_* obj, tyEnum_EGameplayAbilityReplicationPolicy__9c7oiWq41osmCRWrIHYeL8g val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg, instancingPolicy)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstancingPolicy)(UGameplayAbility_* obj, tyEnum_EGameplayAbilityInstancingPolicy__pjcut9cjUkG6jTIQH7cZTMg val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bServerRespectsRemoteAbilityCancellation)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbServerRespectsRemoteAbilityCancellation)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRetriggerInstancedAbility)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRetriggerInstancedAbility)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityActivationInfo_*, currentActivationInfo)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentActivationInfo)(UGameplayAbility_* obj, FGameplayAbilityActivationInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayEventData_*, currentEventData)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentEventData)(UGameplayAbility_* obj, FGameplayEventData_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A, netExecutionPolicy)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetExecutionPolicy)(UGameplayAbility_* obj, tyEnum_EGameplayAbilityNetExecutionPolicy__6b3vp9a4Wv8JM5x9c9aCD9bc7A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w, netSecurityPolicy)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnetSecurityPolicy)(UGameplayAbility_* obj, tyEnum_EGameplayAbilityNetSecurityPolicy__td4x5O2uknnfeLtcPaME3w val);
N_LIB_PRIVATE N_NIMCALL(TY__o5lmm3YGRQTdI9c9ccmTHabQ, costGameplayEffectClass)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcostGameplayEffectClass)(UGameplayAbility_* obj, TY__o5lmm3YGRQTdI9c9ccmTHabQ val);
N_LIB_PRIVATE N_NIMCALL(TY__otj1SVV0qRIXABYwhGjz8Q*, abilityTriggers)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setabilityTriggers)(UGameplayAbility_* obj, TY__otj1SVV0qRIXABYwhGjz8Q val);
N_LIB_PRIVATE N_NIMCALL(TY__o5lmm3YGRQTdI9c9ccmTHabQ, cooldownGameplayEffectClass)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcooldownGameplayEffectClass)(UGameplayAbility_* obj, TY__o5lmm3YGRQTdI9c9ccmTHabQ val);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, currentMontage)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurrentMontage)(UGameplayAbility_* obj, UAnimMontage* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsActive)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsActive)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAbilityEnding)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAbilityEnding)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsCancelable)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsCancelable)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsBlockingOtherAbilities)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsBlockingOtherAbilities)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMarkPendingKillOnAbilityEnd)(UGameplayAbility_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMarkPendingKillOnAbilityEnd)(UGameplayAbility_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, setShouldBlockOtherAbilities_)(UGameplayAbility_* self, NIM_BOOL bShouldBlockAbilities);
N_LIB_PRIVATE N_NIMCALL(void, setCanBeCanceled_)(UGameplayAbility_* self, NIM_BOOL bCanBeCanceled);
N_LIB_PRIVATE N_NIMCALL(void, sendGameplayEvent_)(UGameplayAbility_* self, FGameplayTag eventTag, FGameplayEventData_ payload);
N_LIB_PRIVATE N_NIMCALL(void, removeGrantedByEffect_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, montageStop_)(UGameplayAbility_* self, NF32 overrideBlendOutTime);
N_LIB_PRIVATE N_NIMCALL(void, montageSetNextSectionName_)(UGameplayAbility_* self, FName fromSectionName, FName toSectionName);
N_LIB_PRIVATE N_NIMCALL(void, montageJumpToSection_)(UGameplayAbility_* self, FName sectionName);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo_, makeTargetLocationInfoFromOwnerSkeletalMeshComponent_)(UGameplayAbility_* self, FName socketName);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo_, makeTargetLocationInfoFromOwnerActor_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeOutgoingGameplayEffectSpec_)(UGameplayAbility_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, NF32 level);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldAbilityRespondToEvent_)(UGameplayAbility_* self, FGameplayAbilityActorInfo_ actorInfo, FGameplayEventData_ payload);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayCue_)(UGameplayAbility_* self, FGameplayTag gameplayCueTag);
N_LIB_PRIVATE N_NIMCALL(void, onEndAbility_)(UGameplayAbility_* self, NIM_BOOL bWasCancelled);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasAuthority_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCueWithParams_)(UGameplayAbility_* self, FGameplayTag gameplayCueTag, FGameplayCueParameters& gameplayCueParameters);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCue_)(UGameplayAbility_* self, FGameplayTag gameplayCueTag, FGameplayEffectContextHandle context);
N_LIB_PRIVATE N_NIMCALL(void, endAbilityLocally_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, endAbility_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, commitExecute_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbilityCost_)(UGameplayAbility_* self, NIM_BOOL broadcastCommitEvent);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbilityCooldown_)(UGameplayAbility_* self, NIM_BOOL broadcastCommitEvent, NIM_BOOL forceCooldown);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, commitAbility_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, checkAbilityCost_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, checkAbilityCooldown_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, cancelAbility_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, applyGameplayEffectSpecToTarget_)(UGameplayAbility_* self, FGameplayEffectSpecHandle effectSpecHandle, FGameplayAbilityTargetDataHandle_ targetData);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToOwner_)(UGameplayAbility_* self, FGameplayEffectSpecHandle effectSpecHandle);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCueWithParams_)(UGameplayAbility_* self, FGameplayTag gameplayCueTag, FGameplayCueParameters& gameplayCueParameter, NIM_BOOL bRemoveOnAbilityEnd);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCue_)(UGameplayAbility_* self, FGameplayTag gameplayCueTag, FGameplayEffectContextHandle context, NIM_BOOL bRemoveOnAbilityEnd);
N_LIB_PRIVATE N_NIMCALL(void, activateAbilityFromEvent_)(UGameplayAbility_* self, FGameplayEventData_& eventData);
N_LIB_PRIVATE N_NIMCALL(void, activateAbility_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isLocallyControlled_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, invalidateClientPredictionKey_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(UObject*, getSourceObject_BP_)(UGameplayAbility_* self, FGameplayAbilitySpecHandle_ handle, FGameplayAbilityActorInfo_& actorInfo);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, getOwningComponentFromActorInfo_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwningActorFromActorInfo_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getGrantedByEffectContext_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(UObject*, getCurrentSourceObject_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentMontage_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCooldownTimeRemaining_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getContextFromOwner_)(UGameplayAbility_* self, FGameplayAbilityTargetDataHandle_ optionalTargetData);
N_LIB_PRIVATE N_NIMCALL(AActor*, getAvatarActorFromActorInfo_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityActorInfo_, getActorInfo_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, getAbilitySystemComponentFromActorInfo_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getAbilityLevel_BP_)(UGameplayAbility_* self, FGameplayAbilitySpecHandle_ handle, FGameplayAbilityActorInfo_& actorInfo);
N_LIB_PRIVATE N_NIMCALL(NI32, getAbilityLevel_)(UGameplayAbility_* self);
N_LIB_PRIVATE N_NIMCALL(void, endTaskByInstanceName_)(UGameplayAbility_* self, FName instanceName);
N_LIB_PRIVATE N_NIMCALL(void, endAbilityState_)(UGameplayAbility_* self, FName optionalStateNameToEnd);
N_LIB_PRIVATE N_NIMCALL(void, confirmTaskByInstanceName_)(UGameplayAbility_* self, FName instanceName, NIM_BOOL bEndTask);
N_LIB_PRIVATE N_NIMCALL(void, cancelTaskByInstanceName_)(UGameplayAbility_* self, FName instanceName);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayEffectFromOwnerWithHandle_)(UGameplayAbility_* self, FActiveGameplayEffectHandle handle, NI32 stacksToRemove);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, applyGameplayEffectToTarget_)(UGameplayAbility_* self, FGameplayAbilityTargetDataHandle_ targetData, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, NI32 gameplayEffectLevel, NI32 stacks);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToOwner_)(UGameplayAbility_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, NI32 gameplayEffectLevel, NI32 stacks);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, shouldProduceTargetDataOnServer)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshouldProduceTargetDataOnServer)(AGameplayAbilityTargetActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityTargetingLocationInfo_*, startLocation)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(AGameplayAbilityTargetActor_* obj, FGameplayAbilityTargetingLocationInfo_ val);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, primaryPC)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprimaryPC)(AGameplayAbilityTargetActor_* obj, APlayerController* val);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility_*, owningAbility)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setowningAbility)(AGameplayAbilityTargetActor_* obj, UGameplayAbility_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDestroyOnConfirmation)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDestroyOnConfirmation)(AGameplayAbilityTargetActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(AActor*, sourceActor)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceActor)(AGameplayAbilityTargetActor_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(FWorldReticleParameters_*, reticleParams)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreticleParams)(AGameplayAbilityTargetActor_* obj, FWorldReticleParameters_ val);
N_LIB_PRIVATE N_NIMCALL(TY__BbC1f9cl7UvV7ShysOkJw9bQ, reticleClass)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreticleClass)(AGameplayAbilityTargetActor_* obj, TY__BbC1f9cl7UvV7ShysOkJw9bQ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTargetDataFilterHandle_*, filter)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfilter)(AGameplayAbilityTargetActor_* obj, FGameplayTargetDataFilterHandle_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDebug)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDebug)(AGameplayAbilityTargetActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, genericDelegateBoundASC)(AGameplayAbilityTargetActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgenericDelegateBoundASC)(AGameplayAbilityTargetActor_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, confirmTargeting_)(AGameplayAbilityTargetActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, cancelTargeting_)(AGameplayAbilityTargetActor_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, maxRange)(AGameplayAbilityTargetActor_Trace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxRange)(AGameplayAbilityTargetActor_Trace_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FCollisionProfileName*, traceProfile)(AGameplayAbilityTargetActor_Trace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settraceProfile)(AGameplayAbilityTargetActor_Trace_* obj, FCollisionProfileName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bTraceAffectsAimPitch)(AGameplayAbilityTargetActor_Trace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbTraceAffectsAimPitch)(AGameplayAbilityTargetActor_Trace_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, collisionRadius)(AGameplayAbilityTargetActor_GroundTrace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionRadius)(AGameplayAbilityTargetActor_GroundTrace_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, collisionHeight)(AGameplayAbilityTargetActor_GroundTrace_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionHeight)(AGameplayAbilityTargetActor_GroundTrace_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor_GroundTrace)(AGameplayAbilityTargetActor_GroundTrace_* fake);
N_LIB_PRIVATE N_NIMCALL(UClass*, placedActorClass)(AGameplayAbilityTargetActor_ActorPlacement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplacedActorClass)(AGameplayAbilityTargetActor_ActorPlacement_* obj, UClass* val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, placedActorMaterial)(AGameplayAbilityTargetActor_ActorPlacement_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplacedActorMaterial)(AGameplayAbilityTargetActor_ActorPlacement_* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor_ActorPlacement)(AGameplayAbilityTargetActor_ActorPlacement_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(AGameplayAbilityTargetActor_Radius_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(AGameplayAbilityTargetActor_Radius_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor_Radius)(AGameplayAbilityTargetActor_Radius_* fake);
N_LIB_PRIVATE N_NIMCALL(FWorldReticleParameters_*, parameters)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparameters)(AGameplayAbilityWorldReticle_* obj, FWorldReticleParameters_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFaceOwnerFlat)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFaceOwnerFlat)(AGameplayAbilityWorldReticle_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSnapToTargetedActor)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSnapToTargetedActor)(AGameplayAbilityWorldReticle_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsTargetValid)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsTargetValid)(AGameplayAbilityWorldReticle_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsTargetAnActor)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsTargetAnActor)(AGameplayAbilityWorldReticle_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, primaryPC)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprimaryPC)(AGameplayAbilityWorldReticle_* obj, APlayerController* val);
N_LIB_PRIVATE N_NIMCALL(AActor*, targetingActor)(AGameplayAbilityWorldReticle_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetingActor)(AGameplayAbilityWorldReticle_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(void, setReticleMaterialParamVector_)(AGameplayAbilityWorldReticle_* self, FName paramName, FVector value);
N_LIB_PRIVATE N_NIMCALL(void, setReticleMaterialParamFloat_)(AGameplayAbilityWorldReticle_* self, FName paramName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, onValidTargetChanged_)(AGameplayAbilityWorldReticle_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, onTargetingAnActor_)(AGameplayAbilityWorldReticle_* self, NIM_BOOL bNewValue);
N_LIB_PRIVATE N_NIMCALL(void, onParametersInitialized_)(AGameplayAbilityWorldReticle_* self);
N_LIB_PRIVATE N_NIMCALL(void, faceTowardSource_)(AGameplayAbilityWorldReticle_* self, NIM_BOOL bFaceIn2D);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityWorldReticle)(AGameplayAbilityWorldReticle_* fake);
N_LIB_PRIVATE N_NIMCALL(UCapsuleComponent*, collisionComponent)(AGameplayAbilityWorldReticle_ActorVisualization_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcollisionComponent)(AGameplayAbilityWorldReticle_ActorVisualization_* obj, UCapsuleComponent* val);
N_LIB_PRIVATE N_NIMCALL(TY__ZQxjzvTP9ciBbsMII1UY6aA*, visualizationComponents)(AGameplayAbilityWorldReticle_ActorVisualization_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvisualizationComponents)(AGameplayAbilityWorldReticle_ActorVisualization_* obj, TY__ZQxjzvTP9ciBbsMII1UY6aA val);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityWorldReticle_ActorVisualization)(AGameplayAbilityWorldReticle_ActorVisualization_* fake);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, montageToPlay)(UGameplayAbility_Montage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmontageToPlay)(UGameplayAbility_Montage_* obj, UAnimMontage* val);
N_LIB_PRIVATE N_NIMCALL(NF32, playRate)(UGameplayAbility_Montage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayRate)(UGameplayAbility_Montage_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FName*, sectionName)(UGameplayAbility_Montage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsectionName)(UGameplayAbility_Montage_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, gameplayEffectClassesWhileAnimating)(UGameplayAbility_Montage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayEffectClassesWhileAnimating)(UGameplayAbility_Montage_* obj, TY__YWxhJKhKplqKD9bzBoR0fzQ val);
N_LIB_PRIVATE N_NIMCALL(TY__HS3GOnZWYOzZ9c6h38vBKFQ*, gameplayEffectsWhileAnimating)(UGameplayAbility_Montage_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayEffectsWhileAnimating)(UGameplayAbility_Montage_* obj, TY__HS3GOnZWYOzZ9c6h38vBKFQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayAbility_Montage)(UGameplayAbility_Montage_* fake);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility_*, ability)(UAbilityTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setability)(UAbilityTask_* obj, UGameplayAbility_* val);
N_LIB_PRIVATE N_NIMCALL(TY__hFhEBnfnW3mNoU09cbSj9cww, abilitySystemComponent)(UAbilityTask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemComponent)(UAbilityTask_* obj, TY__hFhEBnfnW3mNoU09cbSj9cww val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask)(UAbilityTask_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, forceName)(UAbilityTask_ApplyRootMotion_Base_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforceName)(UAbilityTask_ApplyRootMotion_Base_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ, finishVelocityMode)(UAbilityTask_ApplyRootMotion_Base_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfinishVelocityMode)(UAbilityTask_ApplyRootMotion_Base_* obj, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ val);
N_LIB_PRIVATE N_NIMCALL(FVector*, finishSetVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfinishSetVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, finishClampVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfinishClampVelocity)(UAbilityTask_ApplyRootMotion_Base_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UCharacterMovementComponent*, movementComponent)(UAbilityTask_ApplyRootMotion_Base_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmovementComponent)(UAbilityTask_ApplyRootMotion_Base_* obj, UCharacterMovementComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotion_Base)(UAbilityTask_ApplyRootMotion_Base_* fake);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionConstantForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionConstantForce_* obj, FApplyRootMotionConstantForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, worldDirection)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setworldDirection)(UAbilityTask_ApplyRootMotionConstantForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilityTask_ApplyRootMotionConstantForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionConstantForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAdditive)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAdditive)(UAbilityTask_ApplyRootMotionConstantForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthOverTime)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthOverTime)(UAbilityTask_ApplyRootMotionConstantForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableGravity)(UAbilityTask_ApplyRootMotionConstantForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableGravity)(UAbilityTask_ApplyRootMotionConstantForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionConstantForce_*, applyRootMotionConstantForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FVector worldDirection, NF32 strength, NF32 duration, NIM_BOOL bIsAdditive, UCurveFloat* strengthOverTime, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish, NIM_BOOL bEnableGravity);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotionConstantForce)(UAbilityTask_ApplyRootMotionConstantForce_* fake);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionJumpForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionJumpForce_* obj, FApplyRootMotionJumpForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionJumpForceDelegate_*, onLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj, FApplyRootMotionJumpForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, rotation)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrotation)(UAbilityTask_ApplyRootMotionJumpForce_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(NF32, distance)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdistance)(UAbilityTask_ApplyRootMotionJumpForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, height)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setheight)(UAbilityTask_ApplyRootMotionJumpForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionJumpForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, minimumLandedTriggerTime)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimumLandedTriggerTime)(UAbilityTask_ApplyRootMotionJumpForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFinishOnLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFinishOnLanded)(UAbilityTask_ApplyRootMotionJumpForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj, UCurveVector_* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, timeMappingCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settimeMappingCurve)(UAbilityTask_ApplyRootMotionJumpForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(void, onLandedCallback_)(UAbilityTask_ApplyRootMotionJumpForce_* self, FHitResult& hit);
N_LIB_PRIVATE N_NIMCALL(void, finish_)(UAbilityTask_ApplyRootMotionJumpForce_* self);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionJumpForce_*, applyRootMotionJumpForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FRotator rotation, NF32 distance, NF32 height, NF32 duration, NF32 minimumLandedTriggerTime, NIM_BOOL bFinishOnLanded, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish, UCurveVector_* pathOffsetCurve, UCurveFloat* timeMappingCurve);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotionJumpForce)(UAbilityTask_ApplyRootMotionJumpForce_* fake);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToActorForceDelegate_*, onFinished)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinished)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, FApplyRootMotionMoveToActorForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(AActor*, targetActor)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetActor)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocationOffset)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocationOffset)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow, offsetAlignment)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoffsetAlignment)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDisableDestinationReachedInterrupt)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDisableDestinationReachedInterrupt)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, newMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnewMovementMode)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, UCurveVector_* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, timeMappingCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settimeMappingCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, targetLerpSpeedHorizontalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLerpSpeedHorizontalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, targetLerpSpeedVerticalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLerpSpeedVerticalCurve)(UAbilityTask_ApplyRootMotionMoveToActorForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(void, onTargetActorSwapped_)(UAbilityTask_ApplyRootMotionMoveToActorForce_* self, AActor* originalTarget, AActor* newTarget);
N_LIB_PRIVATE N_NIMCALL(void, onRep_TargetLocation_)(UAbilityTask_ApplyRootMotionMoveToActorForce_* self);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToActorForce_*, applyRootMotionMoveToTargetDataActorForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FGameplayAbilityTargetDataHandle_ targetDataHandle, NI32 targetDataIndex, NI32 targetActorIndex, FVector targetLocationOffset, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow offsetAlignment, NF32 duration, UCurveFloat* targetLerpSpeedHorizontal, UCurveFloat* targetLerpSpeedVertical, NIM_BOOL bSetNewMovementMode, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode, NIM_BOOL bRestrictSpeedToExpected, UCurveVector_* pathOffsetCurve, UCurveFloat* timeMappingCurve, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish, NIM_BOOL bDisableDestinationReachedInterrupt);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToActorForce_*, applyRootMotionMoveToActorForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, AActor* targetActor, FVector targetLocationOffset, tyEnum_ERootMotionMoveToActorTargetOffsetType__7gmClz82f79aaPW0OVu41Ow offsetAlignment, NF32 duration, UCurveFloat* targetLerpSpeedHorizontal, UCurveFloat* targetLerpSpeedVertical, NIM_BOOL bSetNewMovementMode, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode, NIM_BOOL bRestrictSpeedToExpected, UCurveVector_* pathOffsetCurve, UCurveFloat* timeMappingCurve, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish, NIM_BOOL bDisableDestinationReachedInterrupt);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotionMoveToActorForce)(UAbilityTask_ApplyRootMotionMoveToActorForce_* fake);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToForceDelegate_*, onTimedOut)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonTimedOut)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, FApplyRootMotionMoveToForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionMoveToForceDelegate_*, onTimedOutAndDestinationReached)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonTimedOutAndDestinationReached)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, FApplyRootMotionMoveToForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSetNewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ, newMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnewMovementMode)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRestrictSpeedToExpected)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, pathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpathOffsetCurve)(UAbilityTask_ApplyRootMotionMoveToForce_* obj, UCurveVector_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionMoveToForce_*, applyRootMotionMoveToForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FVector targetLocation, NF32 duration, NIM_BOOL bSetNewMovementMode, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ movementMode, NIM_BOOL bRestrictSpeedToExpected, UCurveVector_* pathOffsetCurve, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotionMoveToForce)(UAbilityTask_ApplyRootMotionMoveToForce_* fake);
N_LIB_PRIVATE N_NIMCALL(FApplyRootMotionRadialForceDelegate_*, onFinish)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_ApplyRootMotionRadialForce_* obj, FApplyRootMotionRadialForceDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, location)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlocation)(UAbilityTask_ApplyRootMotionRadialForce_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(AActor*, locationActor)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlocationActor)(UAbilityTask_ApplyRootMotionRadialForce_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsPush)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsPush)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsAdditive)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsAdditive)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNoZForce)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNoZForce)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthDistanceFalloff)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthDistanceFalloff)(UAbilityTask_ApplyRootMotionRadialForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, strengthOverTime)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthOverTime)(UAbilityTask_ApplyRootMotionRadialForce_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FRotator*, fixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfixedWorldDirection)(UAbilityTask_ApplyRootMotionRadialForce_* obj, FRotator val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_ApplyRootMotionRadialForce_*, applyRootMotionRadialForce_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FVector location, AActor* locationActor, NF32 strength, NF32 duration, NF32 radius, NIM_BOOL bIsPush, NIM_BOOL bIsAdditive, NIM_BOOL bNoZForce, UCurveFloat* strengthDistanceFalloff, UCurveFloat* strengthOverTime, NIM_BOOL bUseFixedWorldDirection, FRotator fixedWorldDirection, tyEnum_ERootMotionFinishVelocityMode__Id49c8hjsWSQC5PFmwaYshQ velocityOnFinishMode, FVector setVelocityOnFinish, NF32 clampVelocityOnFinish);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_ApplyRootMotionRadialForce)(UAbilityTask_ApplyRootMotionRadialForce_* fake);
N_LIB_PRIVATE N_NIMCALL(FMoveToLocationDelegate_*, onTargetLocationReached)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonTargetLocationReached)(UAbilityTask_MoveToLocation_* obj, FMoveToLocationDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FVector*, startLocation)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartLocation)(UAbilityTask_MoveToLocation_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, targetLocation)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetLocation)(UAbilityTask_MoveToLocation_* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NF32, durationOfMovement)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdurationOfMovement)(UAbilityTask_MoveToLocation_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UCurveFloat*, lerpCurve)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlerpCurve)(UAbilityTask_MoveToLocation_* obj, UCurveFloat* val);
N_LIB_PRIVATE N_NIMCALL(UCurveVector_*, lerpCurveVector)(UAbilityTask_MoveToLocation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlerpCurveVector)(UAbilityTask_MoveToLocation_* obj, UCurveVector_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_MoveToLocation_*, moveToLocation_)(UGameplayAbility_* owningAbility, FName taskInstanceName, FVector location, NF32 duration, UCurveFloat* optionalInterpolationCurve, UCurveVector_* optionalVectorInterpolationCurve);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_MoveToLocation)(UAbilityTask_MoveToLocation_* fake);
N_LIB_PRIVATE N_NIMCALL(FNetworkSyncDelegate_*, onSync)(UAbilityTask_NetworkSyncPoint_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonSync)(UAbilityTask_NetworkSyncPoint_* obj, FNetworkSyncDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_NetworkSyncPoint_*, waitNetSync_)(UGameplayAbility_* owningAbility, tyEnum_EAbilityTaskNetSyncType__EgeSxV6iySO44lsR1IuGDQ syncType);
N_LIB_PRIVATE N_NIMCALL(void, onSignalCallback_)(UAbilityTask_NetworkSyncPoint_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_NetworkSyncPoint)(UAbilityTask_NetworkSyncPoint_* fake);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onCompleted)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonCompleted)(UAbilityTask_PlayMontageAndWait_* obj, FMontageWaitSimpleDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onBlendOut)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonBlendOut)(UAbilityTask_PlayMontageAndWait_* obj, FMontageWaitSimpleDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onInterrupted)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonInterrupted)(UAbilityTask_PlayMontageAndWait_* obj, FMontageWaitSimpleDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FMontageWaitSimpleDelegate_*, onCancelled)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonCancelled)(UAbilityTask_PlayMontageAndWait_* obj, FMontageWaitSimpleDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, montageToPlay)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmontageToPlay)(UAbilityTask_PlayMontageAndWait_* obj, UAnimMontage* val);
N_LIB_PRIVATE N_NIMCALL(NF32, rate)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrate)(UAbilityTask_PlayMontageAndWait_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FName*, startSection)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartSection)(UAbilityTask_PlayMontageAndWait_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NF32, animRootMotionTranslationScale)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setanimRootMotionTranslationScale)(UAbilityTask_PlayMontageAndWait_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, startTimeSeconds)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstartTimeSeconds)(UAbilityTask_PlayMontageAndWait_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bStopWhenAbilityEnds)(UAbilityTask_PlayMontageAndWait_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbStopWhenAbilityEnds)(UAbilityTask_PlayMontageAndWait_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, onMontageInterrupted_)(UAbilityTask_PlayMontageAndWait_* self);
N_LIB_PRIVATE N_NIMCALL(void, onMontageEnded_)(UAbilityTask_PlayMontageAndWait_* self, UAnimMontage* montage, NIM_BOOL bInterrupted);
N_LIB_PRIVATE N_NIMCALL(void, onMontageBlendingOut_)(UAbilityTask_PlayMontageAndWait_* self, UAnimMontage* montage, NIM_BOOL bInterrupted);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_PlayMontageAndWait_*, createPlayMontageAndWaitProxy_)(UGameplayAbility_* owningAbility, FName taskInstanceName, UAnimMontage* montageToPlay, NF32 rate, FName startSection, NIM_BOOL bStopWhenAbilityEnds, NF32 animRootMotionTranslationScale, NF32 startTimeSeconds);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_PlayMontageAndWait)(UAbilityTask_PlayMontageAndWait_* fake);
N_LIB_PRIVATE N_NIMCALL(FRepeatedActionDelegate_*, onPerformAction)(UAbilityTask_Repeat_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonPerformAction)(UAbilityTask_Repeat_* obj, FRepeatedActionDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FRepeatedActionDelegate_*, onFinished)(UAbilityTask_Repeat_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinished)(UAbilityTask_Repeat_* obj, FRepeatedActionDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_Repeat_*, repeatAction_)(UGameplayAbility_* owningAbility, NF32 timeBetweenActions, NI32 totalActionCount);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_Repeat)(UAbilityTask_Repeat_* fake);
N_LIB_PRIVATE N_NIMCALL(FSpawnActorDelegate_*, success)(UAbilityTask_SpawnActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsuccess)(UAbilityTask_SpawnActor_* obj, FSpawnActorDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FSpawnActorDelegate_*, didNotSpawn)(UAbilityTask_SpawnActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdidNotSpawn)(UAbilityTask_SpawnActor_* obj, FSpawnActorDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_SpawnActor_*, spawnActor_)(UGameplayAbility_* owningAbility, FGameplayAbilityTargetDataHandle_ targetData, TY__9akcXb9b3ftlkdW8NDwR22Mg class_0);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_SpawnActor_* self, UGameplayAbility_* owningAbility, FGameplayAbilityTargetDataHandle_ targetData, AActor* spawnedActor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_SpawnActor_* self, UGameplayAbility_* owningAbility, FGameplayAbilityTargetDataHandle_ targetData, TY__9akcXb9b3ftlkdW8NDwR22Mg class_0, AActor*& spawnedActor);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_SpawnActor)(UAbilityTask_SpawnActor_* fake);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_StartAbilityState_*, startAbilityState_)(UGameplayAbility_* owningAbility, FName stateName, NIM_BOOL bEndCurrentState);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_StartAbilityState)(UAbilityTask_StartAbilityState_* fake);
N_LIB_PRIVATE N_NIMCALL(FVisualizeTargetingDelegate_*, timeElapsed)(UAbilityTask_VisualizeTargeting_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settimeElapsed)(UAbilityTask_VisualizeTargeting_* obj, FVisualizeTargetingDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_VisualizeTargeting_*, visualizeTargetingUsingActor_)(UGameplayAbility_* owningAbility, AGameplayAbilityTargetActor_* targetActor, FName taskInstanceName, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_VisualizeTargeting_*, visualizeTargeting_)(UGameplayAbility_* owningAbility, TY__BI8SmagfluPMTT9a6rFT3XQ class_0, FName taskInstanceName, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_VisualizeTargeting_* self, UGameplayAbility_* owningAbility, AGameplayAbilityTargetActor_* spawnedActor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_VisualizeTargeting_* self, UGameplayAbility_* owningAbility, TY__BI8SmagfluPMTT9a6rFT3XQ class_0, AGameplayAbilityTargetActor_*& spawnedActor);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_VisualizeTargeting)(UAbilityTask_VisualizeTargeting_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitAbilityActivateDelegate_*, onActivate)(UAbilityTask_WaitAbilityActivate_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonActivate)(UAbilityTask_WaitAbilityActivate_* obj, FWaitAbilityActivateDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityActivate_*, waitForAbilityActivateWithTagRequirements_)(UGameplayAbility_* owningAbility, FGameplayTagRequirements tagRequirements, NIM_BOOL includeTriggeredAbilities, NIM_BOOL triggerOnce);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityActivate_*, waitForAbilityActivate_)(UGameplayAbility_* owningAbility, FGameplayTag withTag, FGameplayTag withoutTag, NIM_BOOL includeTriggeredAbilities, NIM_BOOL triggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, onAbilityActivate_)(UAbilityTask_WaitAbilityActivate_* self, UGameplayAbility_* activatedAbility);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitAbilityActivate)(UAbilityTask_WaitAbilityActivate_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitAbilityCommitDelegate_*, onCommit)(UAbilityTask_WaitAbilityCommit_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonCommit)(UAbilityTask_WaitAbilityCommit_* obj, FWaitAbilityCommitDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAbilityCommit_*, waitForAbilityCommit_)(UGameplayAbility_* owningAbility, FGameplayTag withTag, FGameplayTag withoutTage, NIM_BOOL triggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, onAbilityCommit_)(UAbilityTask_WaitAbilityCommit_* self, UGameplayAbility_* activatedAbility);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitAbilityCommit)(UAbilityTask_WaitAbilityCommit_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeDelegate_*, onChange)(UAbilityTask_WaitAttributeChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChange_* obj, FWaitAttributeChangeDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, externalOwner)(UAbilityTask_WaitAttributeChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChange_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChange_*, waitForAttributeChangeWithComparison_)(UGameplayAbility_* owningAbility, FGameplayAttribute inAttribute, FGameplayTag inWithTag, FGameplayTag inWithoutTag, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w inComparisonType, NF32 inComparisonValue, NIM_BOOL triggerOnce, AActor* optionalExternalOwner);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChange_*, waitForAttributeChange_)(UGameplayAbility_* owningAbility, FGameplayAttribute attribute, FGameplayTag withSrcTag, FGameplayTag withoutSrcTag, NIM_BOOL triggerOnce, AActor* optionalExternalOwner);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitAttributeChange)(UAbilityTask_WaitAttributeChange_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeRatioThresholdDelegate_*, onChange)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj, FWaitAttributeChangeRatioThresholdDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, externalOwner)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChangeRatioThreshold_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChangeRatioThreshold_*, waitForAttributeChangeRatioThreshold_)(UGameplayAbility_* owningAbility, FGameplayAttribute attributeNumerator, FGameplayAttribute attributeDenominator, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w comparisonType, NF32 comparisonValue, NIM_BOOL bTriggerOnce, AActor* optionalExternalOwner);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitAttributeChangeRatioThreshold)(UAbilityTask_WaitAttributeChangeRatioThreshold_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitAttributeChangeThresholdDelegate_*, onChange)(UAbilityTask_WaitAttributeChangeThreshold_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitAttributeChangeThreshold_* obj, FWaitAttributeChangeThresholdDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, externalOwner)(UAbilityTask_WaitAttributeChangeThreshold_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitAttributeChangeThreshold_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitAttributeChangeThreshold_*, waitForAttributeChangeThreshold_)(UGameplayAbility_* owningAbility, FGameplayAttribute attribute, tyEnum_EWaitAttributeChangeComparison__ForACulXyTOFBTQBVw6q5w comparisonType, NF32 comparisonValue, NIM_BOOL bTriggerOnce, AActor* optionalExternalOwner);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitAttributeChangeThreshold)(UAbilityTask_WaitAttributeChangeThreshold_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitCancelDelegate_*, onCancel)(UAbilityTask_WaitCancel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonCancel)(UAbilityTask_WaitCancel_* obj, FWaitCancelDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitCancel_*, waitCancel_)(UGameplayAbility_* owningAbility);
N_LIB_PRIVATE N_NIMCALL(void, onLocalCancelCallback_)(UAbilityTask_WaitCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, onCancelCallback_)(UAbilityTask_WaitCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitCancel)(UAbilityTask_WaitCancel_* fake);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitConfirm_*, waitConfirm_)(UGameplayAbility_* owningAbility);
N_LIB_PRIVATE N_NIMCALL(void, onConfirmCallback_)(UAbilityTask_WaitConfirm_* self, UGameplayAbility_* inAbility);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitConfirm)(UAbilityTask_WaitConfirm_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitConfirmCancelDelegate_*, onConfirm)(UAbilityTask_WaitConfirmCancel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonConfirm)(UAbilityTask_WaitConfirmCancel_* obj, FWaitConfirmCancelDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FWaitConfirmCancelDelegate_*, onCancel)(UAbilityTask_WaitConfirmCancel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonCancel)(UAbilityTask_WaitConfirmCancel_* obj, FWaitConfirmCancelDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitConfirmCancel_*, waitConfirmCancel_)(UGameplayAbility_* owningAbility);
N_LIB_PRIVATE N_NIMCALL(void, onLocalConfirmCallback_)(UAbilityTask_WaitConfirmCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, onLocalCancelCallback_)(UAbilityTask_WaitConfirmCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, onConfirmCallback_)(UAbilityTask_WaitConfirmCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, onCancelCallback_)(UAbilityTask_WaitConfirmCancel_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitConfirmCancel)(UAbilityTask_WaitConfirmCancel_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitDelayDelegate_*, onFinish)(UAbilityTask_WaitDelay_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonFinish)(UAbilityTask_WaitDelay_* obj, FWaitDelayDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitDelay_*, waitDelay_)(UGameplayAbility_* owningAbility, NF32 time);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitDelay)(UAbilityTask_WaitDelay_* fake);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, externalOwner)(UAbilityTask_WaitGameplayEffectApplied_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitGameplayEffectApplied_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, onApplyGameplayEffectCallback_)(UAbilityTask_WaitGameplayEffectApplied_* self, UAbilitySystemComponent_* target, FGameplayEffectSpec_& specApplied, FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectApplied)(UAbilityTask_WaitGameplayEffectApplied_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectAppliedSelfDelegate_*, onApplied)(UAbilityTask_WaitGameplayEffectApplied_Self_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityTask_WaitGameplayEffectApplied_Self_* obj, FGameplayEffectAppliedSelfDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectApplied_Self_*, waitGameplayEffectAppliedToSelf_)(UGameplayAbility_* owningAbility, FGameplayTargetDataFilterHandle_ sourceFilter, FGameplayTagRequirements sourceTagRequirements, FGameplayTagRequirements targetTagRequirements, NIM_BOOL triggerOnce, AActor* optionalExternalOwner, NIM_BOOL listenForPeriodicEffect);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectApplied_Self)(UAbilityTask_WaitGameplayEffectApplied_Self_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectAppliedTargetDelegate_*, onApplied)(UAbilityTask_WaitGameplayEffectApplied_Target_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonApplied)(UAbilityTask_WaitGameplayEffectApplied_Target_* obj, FGameplayEffectAppliedTargetDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectApplied_Target_*, waitGameplayEffectAppliedToTarget_)(UGameplayAbility_* owningAbility, FGameplayTargetDataFilterHandle_ targetFilter, FGameplayTagRequirements sourceTagRequirements, FGameplayTagRequirements targetTagRequirements, NIM_BOOL triggerOnce, AActor* optionalExternalOwner, NIM_BOOL listenForPeriodicEffects);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectApplied_Target)(UAbilityTask_WaitGameplayEffectApplied_Target_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectBlockedDelegate_*, blocked)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblocked)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj, FGameplayEffectBlockedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, externalOwner)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexternalOwner)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectBlockedImmunity_*, waitGameplayEffectBlockedByImmunity_)(UGameplayAbility_* owningAbility, FGameplayTagRequirements sourceTagRequirements, FGameplayTagRequirements targetTagRequirements, AActor* optionalExternalTarget, NIM_BOOL onlyTriggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectBlockedImmunity)(UAbilityTask_WaitGameplayEffectBlockedImmunity_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectRemovedDelegate_*, onRemoved)(UAbilityTask_WaitGameplayEffectRemoved_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonRemoved)(UAbilityTask_WaitGameplayEffectRemoved_* obj, FWaitGameplayEffectRemovedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectRemovedDelegate_*, invalidHandle)(UAbilityTask_WaitGameplayEffectRemoved_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidHandle)(UAbilityTask_WaitGameplayEffectRemoved_* obj, FWaitGameplayEffectRemovedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectRemoved_*, waitForGameplayEffectRemoved_)(UGameplayAbility_* owningAbility, FActiveGameplayEffectHandle handle);
N_LIB_PRIVATE N_NIMCALL(void, onGameplayEffectRemoved_)(UAbilityTask_WaitGameplayEffectRemoved_* self, FGameplayEffectRemovalInfo& inGameplayEffectRemovalInfo);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectRemoved)(UAbilityTask_WaitGameplayEffectRemoved_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectStackChangeDelegate_*, onChange)(UAbilityTask_WaitGameplayEffectStackChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitGameplayEffectStackChange_* obj, FWaitGameplayEffectStackChangeDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEffectStackChangeDelegate_*, invalidHandle)(UAbilityTask_WaitGameplayEffectStackChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidHandle)(UAbilityTask_WaitGameplayEffectStackChange_* obj, FWaitGameplayEffectStackChangeDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEffectStackChange_*, waitForGameplayEffectStackChange_)(UGameplayAbility_* owningAbility, FActiveGameplayEffectHandle handle);
N_LIB_PRIVATE N_NIMCALL(void, onGameplayEffectStackChange_)(UAbilityTask_WaitGameplayEffectStackChange_* self, FActiveGameplayEffectHandle handle, NI32 newCount, NI32 oldCount);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEffectStackChange)(UAbilityTask_WaitGameplayEffectStackChange_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayEventDelegate_*, eventReceived)(UAbilityTask_WaitGameplayEvent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seteventReceived)(UAbilityTask_WaitGameplayEvent_* obj, FWaitGameplayEventDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, optionalExternalTarget)(UAbilityTask_WaitGameplayEvent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayEvent_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayEvent_*, waitGameplayEvent_)(UGameplayAbility_* owningAbility, FGameplayTag eventTag, AActor* optionalExternalTarget, NIM_BOOL onlyTriggerOnce, NIM_BOOL onlyMatchExact);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayEvent)(UAbilityTask_WaitGameplayEvent_* fake);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, optionalExternalTarget)(UAbilityTask_WaitGameplayTag_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayTag_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, gameplayTagCallback_)(UAbilityTask_WaitGameplayTag_* self, FGameplayTag tag, NI32 newCount);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayTag)(UAbilityTask_WaitGameplayTag_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagDelegate_*, added)(UAbilityTask_WaitGameplayTagAdded_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setadded)(UAbilityTask_WaitGameplayTagAdded_* obj, FWaitGameplayTagDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayTagAdded_*, waitGameplayTagAdd_)(UGameplayAbility_* owningAbility, FGameplayTag tag, AActor* inOptionalExternalTarget, NIM_BOOL onlyTriggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayTagAdded)(UAbilityTask_WaitGameplayTagAdded_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagDelegate_*, removed)(UAbilityTask_WaitGameplayTagRemoved_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremoved)(UAbilityTask_WaitGameplayTagRemoved_* obj, FWaitGameplayTagDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitGameplayTagRemoved_*, waitGameplayTagRemove_)(UGameplayAbility_* owningAbility, FGameplayTag tag, AActor* inOptionalExternalTarget, NIM_BOOL onlyTriggerOnce);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayTagRemoved)(UAbilityTask_WaitGameplayTagRemoved_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitGameplayTagQueryDelegate_*, triggered)(UAbilityTask_WaitGameplayTagQuery_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settriggered)(UAbilityTask_WaitGameplayTagQuery_* obj, FWaitGameplayTagQueryDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, optionalExternalTarget)(UAbilityTask_WaitGameplayTagQuery_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoptionalExternalTarget)(UAbilityTask_WaitGameplayTagQuery_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, updateTargetTags_)(UAbilityTask_WaitGameplayTagQuery_* self, FGameplayTag tag, NI32 newCount);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitGameplayTagQuery)(UAbilityTask_WaitGameplayTagQuery_* fake);
N_LIB_PRIVATE N_NIMCALL(FInputPressDelegate_*, onPress)(UAbilityTask_WaitInputPress_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonPress)(UAbilityTask_WaitInputPress_* obj, FInputPressDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitInputPress_*, waitInputPress_)(UGameplayAbility_* owningAbility, NIM_BOOL bTestAlreadyPressed);
N_LIB_PRIVATE N_NIMCALL(void, onPressCallback_)(UAbilityTask_WaitInputPress_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitInputPress)(UAbilityTask_WaitInputPress_* fake);
N_LIB_PRIVATE N_NIMCALL(FInputReleaseDelegate_*, onRelease)(UAbilityTask_WaitInputRelease_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonRelease)(UAbilityTask_WaitInputRelease_* obj, FInputReleaseDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitInputRelease_*, waitInputRelease_)(UGameplayAbility_* owningAbility, NIM_BOOL bTestAlreadyReleased);
N_LIB_PRIVATE N_NIMCALL(void, onReleaseCallback_)(UAbilityTask_WaitInputRelease_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitInputRelease)(UAbilityTask_WaitInputRelease_* fake);
N_LIB_PRIVATE N_NIMCALL(FMovementModeChangedDelegate_*, onChange)(UAbilityTask_WaitMovementModeChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonChange)(UAbilityTask_WaitMovementModeChange_* obj, FMovementModeChangedDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(void, onMovementModeChange_)(UAbilityTask_WaitMovementModeChange_* self, ACharacter* character, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ prevMovementMode, NU8 previousCustomMode);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitMovementModeChange_*, createWaitMovementModeChange_)(UGameplayAbility_* owningAbility, tyEnum_EMovementMode__BhWjjmSWqD5lALjFXNgFSQ newMode);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitMovementModeChange)(UAbilityTask_WaitMovementModeChange_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitOverlapDelegate_*, onOverlap)(UAbilityTask_WaitOverlap_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonOverlap)(UAbilityTask_WaitOverlap_* obj, FWaitOverlapDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitOverlap_*, waitForOverlap_)(UGameplayAbility_* owningAbility);
N_LIB_PRIVATE N_NIMCALL(void, onHitCallback_)(UAbilityTask_WaitOverlap_* self, UPrimitiveComponent* hitComp, AActor* otherActor, UPrimitiveComponent* otherComp, FVector normalImpulse, FHitResult& hit);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitOverlap)(UAbilityTask_WaitOverlap_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitTargetDataDelegate_*, validData)(UAbilityTask_WaitTargetData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvalidData)(UAbilityTask_WaitTargetData_* obj, FWaitTargetDataDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(FWaitTargetDataDelegate_*, cancelled)(UAbilityTask_WaitTargetData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcancelled)(UAbilityTask_WaitTargetData_* obj, FWaitTargetDataDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(TY__BI8SmagfluPMTT9a6rFT3XQ, targetClass)(UAbilityTask_WaitTargetData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetClass)(UAbilityTask_WaitTargetData_* obj, TY__BI8SmagfluPMTT9a6rFT3XQ val);
N_LIB_PRIVATE N_NIMCALL(AGameplayAbilityTargetActor_*, targetActor)(UAbilityTask_WaitTargetData_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetActor)(UAbilityTask_WaitTargetData_* obj, AGameplayAbilityTargetActor_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitTargetData_*, waitTargetDataUsingActor_)(UGameplayAbility_* owningAbility, FName taskInstanceName, tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A confirmationType, AGameplayAbilityTargetActor_* targetActor);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitTargetData_*, waitTargetData_)(UGameplayAbility_* owningAbility, FName taskInstanceName, tyEnum_EGameplayTargetingConfirmation__3CRsw9bN8Z67a9a79arzTLL7A confirmationType, TY__BI8SmagfluPMTT9a6rFT3XQ class_0);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReplicatedCancelledCallback_)(UAbilityTask_WaitTargetData_* self);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReplicatedCallback_)(UAbilityTask_WaitTargetData_* self, FGameplayAbilityTargetDataHandle_& data, FGameplayTag activationTag);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataReadyCallback_)(UAbilityTask_WaitTargetData_* self, FGameplayAbilityTargetDataHandle_& data);
N_LIB_PRIVATE N_NIMCALL(void, onTargetDataCancelledCallback_)(UAbilityTask_WaitTargetData_* self, FGameplayAbilityTargetDataHandle_& data);
N_LIB_PRIVATE N_NIMCALL(void, finishSpawningActor_)(UAbilityTask_WaitTargetData_* self, UGameplayAbility_* owningAbility, AGameplayAbilityTargetActor_* spawnedActor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, beginSpawningActor_)(UAbilityTask_WaitTargetData_* self, UGameplayAbility_* owningAbility, TY__BI8SmagfluPMTT9a6rFT3XQ class_0, AGameplayAbilityTargetActor_*& spawnedActor);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitTargetData)(UAbilityTask_WaitTargetData_* fake);
N_LIB_PRIVATE N_NIMCALL(FWaitVelocityChangeDelegate_*, onVelocityChage)(UAbilityTask_WaitVelocityChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setonVelocityChage)(UAbilityTask_WaitVelocityChange_* obj, FWaitVelocityChangeDelegate_* val);
N_LIB_PRIVATE N_NIMCALL(UMovementComponent_*, cachedMovementComponent)(UAbilityTask_WaitVelocityChange_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcachedMovementComponent)(UAbilityTask_WaitVelocityChange_* obj, UMovementComponent_* val);
N_LIB_PRIVATE N_NIMCALL(UAbilityTask_WaitVelocityChange_*, createWaitVelocityChange_)(UGameplayAbility_* owningAbility, FVector direction, NF32 minimumMagnitude);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilityTask_WaitVelocityChange)(UAbilityTask_WaitVelocityChange_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAbilityTriggerData)(FAbilityTriggerData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWorldReticleParameters)(FWorldReticleParameters_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetData_LocationInfo)(FGameplayAbilityTargetData_LocationInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetData_ActorArray)(FGameplayAbilityTargetData_ActorArray_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetData_SingleTargetHit)(FGameplayAbilityTargetData_SingleTargetHit_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityActorInfo)(FGameplayAbilityActorInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAbilityEndedData)(FAbilityEndedData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAbilityTaskDebugMessage)(FAbilityTaskDebugMessage_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilitySpecHandleAndPredictionKey)(FGameplayAbilitySpecHandleAndPredictionKey_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesGameplayAbilities)(void);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAnimation)(void);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInStateMachine_)(UAnimInstance_* self, NI32 machineIndex, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInSourceState_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyTriggeredInAnyState_)(UAnimInstance_* self, TY__JNf5Wvjeg5cqxRK9cyfRJPw animNotifyType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInStateMachine_)(UAnimInstance_* self, NI32 machineIndex, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInSourceState_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyStateActiveInAnyState_)(UAnimInstance_* self, TY__mWBoF7VeC4X20sAoMjXlVA animNotifyStateType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInStateMachine_)(UAnimInstance_* self, NI32 machineIndex, FName notifyName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInSourceState_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex, FName notifyName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, wasAnimNotifyNameTriggeredInAnyState_)(UAnimInstance_* self, FName notifyName);
N_LIB_PRIVATE N_NIMCALL(void, unlockAIResources_)(UAnimInstance_* self, NIM_BOOL bUnlockMovement, NIM_BOOL unlockAILogic);
N_LIB_PRIVATE N_NIMCALL(APawn*, tryGetPawnOwner_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(void, stopSlotAnimation_)(UAnimInstance_* self, NF32 inBlendOutTime, FName slotNodeName);
N_LIB_PRIVATE N_NIMCALL(void, snapshotPose_)(UAnimInstance_* self, FPoseSnapshot& snapshot);
N_LIB_PRIVATE N_NIMCALL(void, setUseMainInstanceMontageEvaluationData_)(UAnimInstance_* self, NIM_BOOL bSet);
N_LIB_PRIVATE N_NIMCALL(void, setRootMotionMode_)(UAnimInstance_* self, tyEnum_ERootMotionMode__oixCsBQZKA6SWRZ9bIVVRxQ value);
N_LIB_PRIVATE N_NIMCALL(void, setReceiveNotifiesFromLinkedInstances_)(UAnimInstance_* self, NIM_BOOL bSet);
N_LIB_PRIVATE N_NIMCALL(void, setPropagateNotifiesToLinkedInstances_)(UAnimInstance_* self, NIM_BOOL bSet);
N_LIB_PRIVATE N_NIMCALL(void, setMorphTarget_)(UAnimInstance_* self, FName morphTargetName, NF32 value);
N_LIB_PRIVATE N_NIMCALL(void, savePoseSnapshot_)(UAnimInstance_* self, FName snapshotName);
N_LIB_PRIVATE N_NIMCALL(void, resetDynamics_)(UAnimInstance_* self, tyEnum_ETeleportType__RbvhsII9aQg22lUgVHsbpUw inTeleportType);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, requestTransitionEvent_)(UAnimInstance_* self, FName eventName, NF requestTimeout, tyEnum_ETransitionRequestQueueMode__x8ojufrQ2LY9a3P8sXTtX4A queueMode, tyEnum_ETransitionRequestOverwriteMode__SuW15yRCTZRz68GQ9cQsXwg overwriteMode);
N_LIB_PRIVATE N_NIMCALL(void, removePoseSnapshot_)(UAnimInstance_* self, FName snapshotName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, queryTransitionEvent_)(UAnimInstance_* self, NI32 machineIndex, NI32 transitionIndex, FName eventName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, queryAndMarkTransitionEvent_)(UAnimInstance_* self, NI32 machineIndex, NI32 transitionIndex, FName eventName);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_WithBlendSettings_)(UAnimInstance_* self, UAnimSequenceBase* asset, FName slotNodeName, FMontageBlendSettings& blendInSettings, FMontageBlendSettings& blendOutSettings, NF32 inPlayRate, NI32 loopCount, NF32 blendOutTriggerTime, NF32 inTimeToStartMontageAt);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_WithBlendArgs_)(UAnimInstance_* self, UAnimSequenceBase* asset, FName slotNodeName, FAlphaBlendArgs& blendIn, FAlphaBlendArgs& blendOut, NF32 inPlayRate, NI32 loopCount, NF32 blendOutTriggerTime, NF32 inTimeToStartMontageAt);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, playSlotAnimationAsDynamicMontage_)(UAnimInstance_* self, UAnimSequenceBase* asset, FName slotNodeName, NF32 blendInTime, NF32 blendOutTime, NF32 inPlayRate, NI32 loopCount, NF32 blendOutTriggerTime, NF32 inTimeToStartMontageAt);
N_LIB_PRIVATE N_NIMCALL(void, montageSync_StopFollowing_)(UAnimInstance_* self, UAnimMontage* montageFollower);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopWithBlendSettings_)(UAnimInstance_* self, FMontageBlendSettings& blendOutSettings, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopWithBlendOut_)(UAnimInstance_* self, FAlphaBlendArgs& blendOut, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_StopGroupByName_)(UAnimInstance_* self, NF32 inBlendOutTime, FName groupName);
N_LIB_PRIVATE N_NIMCALL(void, montage_Stop_)(UAnimInstance_* self, NF32 inBlendOutTime, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetPosition_)(UAnimInstance_* self, UAnimMontage* montage, NF32 newPosition);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetPlayRate_)(UAnimInstance_* self, UAnimMontage* montage, NF32 newPlayRate);
N_LIB_PRIVATE N_NIMCALL(void, montage_SetNextSection_)(UAnimInstance_* self, FName sectionNameToChange, FName nextSection, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_Resume_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_PlayWithBlendSettings_)(UAnimInstance_* self, UAnimMontage* montageToPlay, FMontageBlendSettings& blendInSettings, NF32 inPlayRate, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType, NF32 inTimeToStartMontageAt, NIM_BOOL bStopAllMontages);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_PlayWithBlendIn_)(UAnimInstance_* self, UAnimMontage* montageToPlay, FAlphaBlendArgs& blendIn, NF32 inPlayRate, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType, NF32 inTimeToStartMontageAt, NIM_BOOL bStopAllMontages);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_Play_)(UAnimInstance_* self, UAnimMontage* montageToPlay, NF32 inPlayRate, tyEnum_EMontagePlayReturnType__rq9aGxU6Z9btkQlOnB1y4kQw returnValueType, NF32 inTimeToStartMontageAt, NIM_BOOL bStopAllMontages);
N_LIB_PRIVATE N_NIMCALL(void, montage_Pause_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_JumpToSectionsEnd_)(UAnimInstance_* self, FName sectionName, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, montage_JumpToSection_)(UAnimInstance_* self, FName sectionName, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_IsPlaying_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_IsActive_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetPosition_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetPlayRate_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, montage_GetIsStopped_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetEffectivePlayRate_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(FName, montage_GetCurrentSection_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(NF32, montage_GetBlendTime_)(UAnimInstance_* self, UAnimMontage* montage);
N_LIB_PRIVATE N_NIMCALL(void, lockAIResources_)(UAnimInstance_* self, NIM_BOOL bLockMovement, NIM_BOOL lockAILogic);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isUsingMainInstanceMontageEvaluationData_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isSyncGroupBetweenMarkers_)(UAnimInstance_* self, FName inSyncGroupName, FName previousMarker, FName nextMarker, NIM_BOOL bRespectMarkerOrder);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isPlayingSlotAnimation_)(UAnimInstance_* self, UAnimSequenceBase* asset, FName slotNodeName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isAnyMontagePlaying_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasMarkerBeenHitThisFrame_)(UAnimInstance_* self, FName syncGroup, FName markerName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getTimeToClosestMarker_)(UAnimInstance_* self, FName syncGroup, FName markerName, NF32& outMarkerTime);
N_LIB_PRIVATE N_NIMCALL(FMarkerSyncAnimPosition, getSyncGroupPosition_)(UAnimInstance_* self, FName inSyncGroupName);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeRemainingFraction_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeRemaining_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTimeFraction_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimTime_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getRelevantAnimLength_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getReceiveNotifiesFromLinkedInstances_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getPropagateNotifiesToLinkedInstances_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, getOwningComponent_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getOwningActor_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionTimeElapsedFraction_)(UAnimInstance_* self, NI32 machineIndex, NI32 transitionIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionTimeElapsed_)(UAnimInstance_* self, NI32 machineIndex, NI32 transitionIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceTransitionCrossfadeDuration_)(UAnimInstance_* self, NI32 machineIndex, NI32 transitionIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceStateWeight_)(UAnimInstance_* self, NI32 machineIndex, NI32 stateIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceMachineWeight_)(UAnimInstance_* self, NI32 machineIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceCurrentStateElapsedTime_)(UAnimInstance_* self, NI32 machineIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFromEndFraction_)(UAnimInstance_* self, NI32 assetPlayerIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFromEnd_)(UAnimInstance_* self, NI32 assetPlayerIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTimeFraction_)(UAnimInstance_* self, NI32 assetPlayerIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerTime_)(UAnimInstance_* self, NI32 assetPlayerIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getInstanceAssetPlayerLength_)(UAnimInstance_* self, NI32 assetPlayerIndex);
N_LIB_PRIVATE N_NIMCALL(NF32, getDeltaSeconds_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurveValueWithDefault_)(UAnimInstance_* self, FName curveName, NF32 defaultValue, NF32& outValue);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurveValue_)(UAnimInstance_* self, FName curveName);
N_LIB_PRIVATE N_NIMCALL(FName, getCurrentStateName_)(UAnimInstance_* self, NI32 machineIndex);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, getCurrentActiveMontage_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(void, getAllCurveNames_)(UAnimInstance_* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames);
N_LIB_PRIVATE N_NIMCALL(void, getActiveCurveNames_)(UAnimInstance_* self, tyEnum_EAnimCurveType__bLSJ5hfWpuK9b9a9atpz9c41QQ curveType, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& outNames);
N_LIB_PRIVATE N_NIMCALL(void, clearTransitionEvents_)(UAnimInstance_* self, FName eventName);
N_LIB_PRIVATE N_NIMCALL(void, clearMorphTargets_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAllTransitionEvents_)(UAnimInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, calculateDirection_)(UAnimInstance_* self, FVector& velocity, FRotator& baseRotation);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimInstance)(UAnimInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, stopAnim_)(UAnimSingleNodeInstance_* self);
N_LIB_PRIVATE N_NIMCALL(void, setReverse_)(UAnimSingleNodeInstance_* self, NIM_BOOL bInReverse);
N_LIB_PRIVATE N_NIMCALL(void, setPreviewCurveOverride_)(UAnimSingleNodeInstance_* self, FName& poseName, NF32 value, NIM_BOOL bRemoveIfZero);
N_LIB_PRIVATE N_NIMCALL(void, setPositionWithPreviousTime_)(UAnimSingleNodeInstance_* self, NF32 inPosition, NF32 inPreviousTime, NIM_BOOL bFireNotifies);
N_LIB_PRIVATE N_NIMCALL(void, setPosition_)(UAnimSingleNodeInstance_* self, NF32 inPosition, NIM_BOOL bFireNotifies);
N_LIB_PRIVATE N_NIMCALL(void, setPlayRate_)(UAnimSingleNodeInstance_* self, NF32 inPlayRate);
N_LIB_PRIVATE N_NIMCALL(void, setPlaying_)(UAnimSingleNodeInstance_* self, NIM_BOOL bIsPlaying);
N_LIB_PRIVATE N_NIMCALL(void, setMirrorDataTable_)(UAnimSingleNodeInstance_* self, UMirrorDataTable_* mirrorDataTable);
N_LIB_PRIVATE N_NIMCALL(void, setLooping_)(UAnimSingleNodeInstance_* self, NIM_BOOL bIsLooping);
N_LIB_PRIVATE N_NIMCALL(void, setBlendSpacePosition_)(UAnimSingleNodeInstance_* self, FVector& inPosition);
N_LIB_PRIVATE N_NIMCALL(void, setAnimationAsset_)(UAnimSingleNodeInstance_* self, UAnimationAsset* newAsset, NIM_BOOL bIsLooping, NF32 inPlayRate);
N_LIB_PRIVATE N_NIMCALL(void, playAnim_)(UAnimSingleNodeInstance_* self, NIM_BOOL bIsLooping, NF32 inPlayRate, NF32 inStartPosition);
N_LIB_PRIVATE N_NIMCALL(UMirrorDataTable_*, getMirrorDataTable_)(UAnimSingleNodeInstance_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getLength_)(UAnimSingleNodeInstance_* self);
N_LIB_PRIVATE N_NIMCALL(UAnimationAsset*, getAnimationAsset_)(UAnimSingleNodeInstance_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimSingleNodeInstance)(UAnimSingleNodeInstance_* fake);
N_LIB_PRIVATE N_NIMCALL(FColor*, notifyColor)(UAnimNotify_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnotifyColor)(UAnimNotify_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldFireInEditor)(UAnimNotify_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldFireInEditor)(UAnimNotify_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotify)(UAnimNotify_* fake);
N_LIB_PRIVATE N_NIMCALL(FColor*, notifyColor)(UAnimNotifyState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnotifyColor)(UAnimNotifyState_* obj, FColor val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldFireInEditor)(UAnimNotifyState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldFireInEditor)(UAnimNotifyState_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bShouldDoAnimNotifies)(ASkeletalMeshActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbShouldDoAnimNotifies)(ASkeletalMeshActor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(USkeletalMeshComponent*, skeletalMeshComponent)(ASkeletalMeshActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setskeletalMeshComponent)(ASkeletalMeshActor_* obj, USkeletalMeshComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, keepASkeletalMeshActor)(ASkeletalMeshActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setPreviewSkeletalMesh_)(UAnimationAsset* self, USkeletalMesh* previewMesh);
N_LIB_PRIVATE N_NIMCALL(NF32, getPlayLength_)(UAnimationAsset* self);
N_LIB_PRIVATE N_NIMCALL(NF32, sequenceLength)(UAnimSequenceBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsequenceLength)(UAnimSequenceBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(UAnimDataModel_*, dataModel)(UAnimSequenceBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdataModel)(UAnimSequenceBase* obj, UAnimDataModel_* val);
N_LIB_PRIVATE N_NIMCALL(TY__2oFl2vye442IAermOsWYpg, dataModelInterface)(UAnimSequenceBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdataModelInterface)(UAnimSequenceBase* obj, TY__2oFl2vye442IAermOsWYpg val);
N_LIB_PRIVATE N_NIMCALL(TY__GmxQYRLn4JVnyI7Ef9c9aRsw, controller)(UAnimSequenceBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcontroller)(UAnimSequenceBase* obj, TY__GmxQYRLn4JVnyI7Ef9c9aRsw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnalysisProperties)(UAnalysisProperties_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, getBoneCustomAttributeNamesToImport_)(UAnimationSettings_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimationSettings)(UAnimationSettings_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimComposite)(UAnimComposite_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompress_RemoveLinearKeys)(UAnimCompress_RemoveLinearKeys_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompress_RemoveEverySecondKey)(UAnimCompress_RemoveEverySecondKey_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimCompress_RemoveTrivialKeys)(UAnimCompress_RemoveTrivialKeys_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Gur0dFjg9byOJEgqd1KOiLg*, boneAnimationTracks)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setboneAnimationTracks)(UAnimDataModel_* obj, TY__Gur0dFjg9byOJEgqd1KOiLg val);
N_LIB_PRIVATE N_NIMCALL(NF32, playLength)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setplayLength)(UAnimDataModel_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FFrameRate*, frameRate)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setframeRate)(UAnimDataModel_* obj, FFrameRate val);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfFrames)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfFrames)(UAnimDataModel_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, numberOfKeys)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumberOfKeys)(UAnimDataModel_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FAnimationCurveData_*, curveData)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcurveData)(UAnimDataModel_* obj, FAnimationCurveData_ val);
N_LIB_PRIVATE N_NIMCALL(TY__uvC4hJjePbPu61EoaxB1QQ*, animatedBoneAttributes)(UAnimDataModel_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setanimatedBoneAttributes)(UAnimDataModel_* obj, TY__uvC4hJjePbPu61EoaxB1QQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimDataModel)(UAnimDataModel_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag, blendModeIn)(UAnimMontage* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendModeIn)(UAnimMontage* obj, tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag, blendModeOut)(UAnimMontage* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendModeOut)(UAnimMontage* obj, tyEnum_EMontageBlendMode__4JZkKkfYFvwSlxMAz7Ysag val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValidSectionName_)(UAnimMontage* self, FName inSectionName);
N_LIB_PRIVATE N_NIMCALL(FName, getSectionName_)(UAnimMontage* self, NI32 sectionIndex);
N_LIB_PRIVATE N_NIMCALL(NI32, getSectionIndex_)(UAnimMontage* self, FName inSectionName);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumSections_)(UAnimMontage* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultBlendOutTime_)(UAnimMontage* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getDefaultBlendInTime_)(UAnimMontage* self);
N_LIB_PRIVATE N_NIMCALL(FAlphaBlendArgs, getBlendOutArgs_)(UAnimMontage* self);
N_LIB_PRIVATE N_NIMCALL(FAlphaBlendArgs, getBlendInArgs_)(UAnimMontage* self);
N_LIB_PRIVATE N_NIMCALL(UAnimMontage*, createSlotAnimationAsDynamicMontage_WithBlendSettings_)(UAnimSequenceBase* asset, FName slotNodeName, FMontageBlendSettings& blendInSettings, FMontageBlendSettings& blendOutSettings, NF32 inPlayRate, NI32 loopCount, NF32 inBlendOutTriggerTime);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyState_TimedParticleEffect)(UAnimNotifyState_TimedParticleEffect_* fake);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, pSTemplate)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpSTemplate)(UAnimNotifyState_Trail_* obj, UParticleSystem* val);
N_LIB_PRIVATE N_NIMCALL(FName*, firstSocketName)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfirstSocketName)(UAnimNotifyState_Trail_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FName*, secondSocketName)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsecondSocketName)(UAnimNotifyState_Trail_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg, widthScaleMode)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidthScaleMode)(UAnimNotifyState_Trail_* obj, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg val);
N_LIB_PRIVATE N_NIMCALL(FName*, widthScaleCurve)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwidthScaleCurve)(UAnimNotifyState_Trail_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRecycleSpawnedSystems)(UAnimNotifyState_Trail_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRecycleSpawnedSystems)(UAnimNotifyState_Trail_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotifyState_Trail)(UAnimNotifyState_Trail_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removeCustomAttribute_)(UAnimSequence_* self, FName& boneName, FName& attributeName);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCustomAttributesForBone_)(UAnimSequence_* self, FName& boneName);
N_LIB_PRIVATE N_NIMCALL(void, removeAllCustomAttributes_)(UAnimSequence_* self);
N_LIB_PRIVATE N_NIMCALL(void, addBoneStringCustomAttribute_)(UAnimSequence_* self, FName& boneName, FName& attributeName, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys, TY__myhN0u2pNczwuaOhbdYPXw& valueKeys);
N_LIB_PRIVATE N_NIMCALL(void, addBoneIntegerCustomAttribute_)(UAnimSequence_* self, FName& boneName, FName& attributeName, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys, TY__TxfK2fhRJXNHttPFRcL6fA& valueKeys);
N_LIB_PRIVATE N_NIMCALL(void, addBoneFloatCustomAttribute_)(UAnimSequence_* self, FName& boneName, FName& attributeName, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& timeKeys, TY__LZaQ4h2l9bWQPMMIHjA9cwlA& valueKeys);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimSet)(UAnimSet_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimStreamable)(UAnimStreamable_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetMappingTable)(UAssetMappingTable_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__DqtnNclNKsonqiNHV0i59bw*, compatibleSkeletons)(USkeleton* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcompatibleSkeletons)(USkeleton* obj, TY__DqtnNclNKsonqiNHV0i59bw val);
N_LIB_PRIVATE N_NIMCALL(void, addCompatibleSkeleton_)(USkeleton* self, USkeleton* sourceSkeleton);
N_LIB_PRIVATE N_NIMCALL(void, keepUBoneMaskFilter)(UBoneMaskFilter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, updatePoseFromAnimation_)(UPoseAsset_* self, UAnimSequence_* animSequence);
N_LIB_PRIVATE N_NIMCALL(void, renamePose_)(UPoseAsset_* self, FName& originalPoseName, FName& newPoseName);
N_LIB_PRIVATE N_NIMCALL(void, getPoseNames_)(UPoseAsset_* self, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ& poseNames);
N_LIB_PRIVATE N_NIMCALL(void, keepUPoseAsset)(UPoseAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURig)(URig_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimBlueprint)(UAnimBlueprint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPoseLinkBase)(FPoseLinkBase_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_Root)(FAnimNode_Root_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputScaleBiasClamp)(FInputScaleBiasClamp_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputRange)(FInputRange_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputAlphaBoolBlend)(FInputAlphaBoolBlend_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputScaleBias)(FInputScaleBias_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_AssetPlayerBase)(FAnimNode_AssetPlayerBase_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPerBoneBlendWeight)(FPerBoneBlendWeight fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNamedFloat)(FNamedFloat_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNamedVector)(FNamedVector_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNamedColor)(FNamedColor_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNamedTransform)(FNamedTransform_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFLocalSpacePose)(FLocalSpacePose_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFComponentSpacePose)(FComponentSpacePose_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimCurveBase)(FAnimCurveBase fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFloatCurve)(FFloatCurve fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTransformCurve)(FTransformCurve fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedFloatCurve)(FCachedFloatCurve fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBracketPayload)(FBracketPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimationTrackPayload)(FAnimationTrackPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimationTrackAddedPayload)(FAnimationTrackAddedPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSequenceLengthChangedPayload)(FSequenceLengthChangedPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFrameRateChangedPayload)(FFrameRateChangedPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCurvePayload)(FCurvePayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCurveScaledPayload)(FCurveScaledPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCurveRenamedPayload)(FCurveRenamedPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCurveFlagsChangedPayload)(FCurveFlagsChangedPayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttributePayload)(FAttributePayload_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNodeConstantData)(FAnimNodeConstantData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPerBoneBlendWeights)(FPerBoneBlendWeights fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNotifyEvent)(FAnimNotifyEvent fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimSyncMarker)(FAnimSyncMarker fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFloatAnimationAttribute)(FFloatAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFIntegerAnimationAttribute)(FIntegerAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFStringAnimationAttribute)(FStringAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTransformAnimationAttribute)(FTransformAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVectorAnimationAttribute)(FVectorAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuaternionAnimationAttribute)(FQuaternionAnimationAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimationCurveData)(FAnimationCurveData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimatedBoneAttribute)(FAnimatedBoneAttribute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttributeCurve)(FAttributeCurve_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFBlendSampleData)(FBlendSampleData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMarkerSyncAnimPosition)(FMarkerSyncAnimPosition fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMontageBlendSettings)(FMontageBlendSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNodeData)(FAnimNodeData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_ConvertComponentToLocalSpace)(FAnimNode_ConvertComponentToLocalSpace_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_ConvertLocalToComponentSpace)(FAnimNode_ConvertLocalToComponentSpace_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_ApplyMeshSpaceAdditive)(FAnimNode_ApplyMeshSpaceAdditive_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_Inertialization)(FAnimNode_Inertialization_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_LinkedAnimGraph)(FAnimNode_LinkedAnimGraph_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_LinkedAnimLayer)(FAnimNode_LinkedAnimLayer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_SaveCachedPose)(FAnimNode_SaveCachedPose_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_SequencePlayerBase)(FAnimNode_SequencePlayerBase_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_SequencePlayer)(FAnimNode_SequencePlayer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputScaleBiasClampConstants)(FInputScaleBiasClampConstants_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_SequencePlayer_Standalone)(FAnimNode_SequencePlayer_Standalone_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_TransitionPoseEvaluator)(FAnimNode_TransitionPoseEvaluator_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_TransitionResult)(FAnimNode_TransitionResult_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAnimNode_SingleNode)(FAnimNode_SingleNode_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedAnimStateData)(FCachedAnimStateData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedAnimStateArray)(FCachedAnimStateArray_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedAnimAssetPlayerData)(FCachedAnimAssetPlayerData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedAnimRelevancyData)(FCachedAnimRelevancyData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCachedAnimTransitionData)(FCachedAnimTransitionData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNamedCurveValue)(FNamedCurveValue_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInputClampConstants)(FInputClampConstants_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTrajectorySample)(FTrajectorySample_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTrajectorySampleRange)(FTrajectorySampleRange_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAAbilitySystemDebugHUD)(AAbilitySystemDebugHUD_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffectUIData)(UGameplayEffectUIData_* fake);
N_LIB_PRIVATE N_NIMCALL(FText*, description)(UGameplayEffectUIData_TextOnly_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdescription)(UGameplayEffectUIData_TextOnly_* obj, FText val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffectUIData_TextOnly)(UGameplayEffectUIData_TextOnly_* fake);
N_LIB_PRIVATE N_NIMCALL(void, endAction_)(UAbilityAsync_* self);
N_LIB_PRIVATE N_NIMCALL(void, asyncWaitGameplayTagDelegate_)(UAbilityAsync_WaitGameplayTag_* self);
N_LIB_PRIVATE N_NIMCALL(TY__c5YQSe1beacSx4MfVBpM6g*, abilities)(UGameplayAbilitySet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setabilities)(UGameplayAbilitySet_* obj, TY__c5YQSe1beacSx4MfVBpM6g val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayAbilitySet)(UGameplayAbilitySet_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayAbilityTargetActor_SingleLineTrace)(AGameplayAbilityTargetActor_SingleLineTrace_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayAbility_CharacterJump)(UGameplayAbility_CharacterJump_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasOrigin_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasHitResult_)(FGameplayAbilityTargetDataHandle_& hitResult, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasEndPoint_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, targetDataHasActor_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setStackCountToMax_)(FGameplayEffectSpecHandle specHandle);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setStackCount_)(FGameplayEffectSpecHandle specHandle, NI32 stackCount);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, setDuration_)(FGameplayEffectSpecHandle specHandle, NF32 duration);
N_LIB_PRIVATE N_NIMCALL(void, sendGameplayEventToActor_)(AActor* actor, FGameplayTag eventTag, FGameplayEventData_ payload);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GameplayAttributeGameplayAttribute_)(FGameplayAttribute attributeA, FGameplayAttribute attributeB);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_GameplayAbilitySpecHandle_)(FGameplayAbilitySpecHandle_& a, FGameplayAbilitySpecHandle_& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, notEqual_ActiveGameplayEffectHandle_)(FActiveGameplayEffectHandle& a, FActiveGameplayEffectHandle& b);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeSpecHandle_)(UGameplayEffect_* inGameplayEffect, AActor* inInstigator, AActor* inEffectCauser, NF32 inLevel);
N_LIB_PRIVATE N_NIMCALL(FGameplayTargetDataFilterHandle_, makeFilterHandle_)(FGameplayTargetDataFilter_ filter, AActor* filterActor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isValid_)(FGameplayAttribute attribute);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInstigatorLocallyControlledPlayer_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInstigatorLocallyControlled_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, hasHitResult_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTargetDataOrigin_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(FTransform, getTargetDataEndPointTransform_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(FVector, getTargetDataEndPoint_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(FVector, getOrigin_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(NF32, getModifiedAttributeMagnitude_)(FGameplayEffectSpecHandle specHandle, FGameplayAttribute attribute);
N_LIB_PRIVATE N_NIMCALL(FTransform, getInstigatorTransform_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(AActor*, getInstigatorActor_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getHitResultFromTargetData_)(FGameplayAbilityTargetDataHandle_& hitResult, NI32 index);
N_LIB_PRIVATE N_NIMCALL(FHitResult, getHitResult_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffectUIData_*, getGameplayEffectUIData_)(TY__o5lmm3YGRQTdI9c9ccmTHabQ effectClass, TY__C5hI9bGz02aJQ8jd1yCg9aWw dataType);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffect_*, getGameplayEffectFromActiveEffectHandle_)(FActiveGameplayEffectHandle& activeHandle);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGameplayCueEndLocationAndNormal_)(AActor* targetActor, FGameplayCueParameters parameters, FVector& location, FVector& normal);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getGameplayCueDirection_)(AActor* targetActor, FGameplayCueParameters parameters, FVector& direction);
N_LIB_PRIVATE N_NIMCALL(UGameplayAbility_*, getGameplayAbilityFromSpecHandle_)(UAbilitySystemComponent_* abilitySystem, FGameplayAbilitySpecHandle_& abilitySpecHandle, NIM_BOOL& bIsInstance);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeFromAbilitySystemComponent_)(UAbilitySystemComponent_* abilitySystem, FGameplayAttribute attribute, NIM_BOOL& bSuccessfullyFoundAttribute);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeBaseFromAbilitySystemComponent_)(UAbilitySystemComponent_* abilitySystemComponent, FGameplayAttribute attribute, NIM_BOOL& bSuccessfullyFoundAttribute);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttributeBase_)(AActor* actor, FGameplayAttribute attribute, NIM_BOOL& bSuccessfullyFoundAttribute);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatAttribute_)(AActor* actor, FGameplayAttribute attribute, NIM_BOOL& bSuccessfullyFoundAttribute);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, getEffectContext_)(FGameplayEffectSpecHandle specHandle);
N_LIB_PRIVATE N_NIMCALL(FString, getDebugStringFromGameplayAttribute_)(FGameplayAttribute& attribute);
N_LIB_PRIVATE N_NIMCALL(NI32, getDataCountFromTargetData_)(FGameplayAbilityTargetDataHandle_& targetData);
N_LIB_PRIVATE N_NIMCALL(TY__ApMORIOJRIJuzL5PAQu9cEg, getAllLinkedGameplayEffectSpecHandles_)(FGameplayEffectSpecHandle specHandle);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, getAllActorsFromTargetData_)(FGameplayAbilityTargetDataHandle_& targetData);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg, getActorsFromTargetData_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NI32, getActorCount_)(FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(AActor*, getActorByIndex_)(FGameplayCueParameters parameters, NI32 index);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectTotalDuration_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectStartTime_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveGameplayEffectStackLimitCount_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(NI32, getActiveGameplayEffectStackCount_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectRemainingDuration_)(UObject* worldContextObject, FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(NF32, getActiveGameplayEffectExpectedEndTime_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(FString, getActiveGameplayEffectDebugString_)(FActiveGameplayEffectHandle activeHandle);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, getAbilitySystemComponent_)(AActor* actor);
N_LIB_PRIVATE N_NIMCALL(void, forwardGameplayCueToTarget_)(TY__sYXgxujJplhjPGLjVhFu2A targetCueInterface, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType, FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(void, filterTargetData_)(FGameplayAbilityTargetDataHandle_& targetDataHandle, FGameplayTargetDataFilterHandle_ actorFilterClass, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GameplayAttributeGameplayAttribute_)(FGameplayAttribute attributeA, FGameplayAttribute attributeB);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_GameplayAbilitySpecHandle_)(FGameplayAbilitySpecHandle_& a, FGameplayAbilitySpecHandle_& b);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equalEqual_ActiveGameplayEffectHandle_)(FActiveGameplayEffectHandle& a, FActiveGameplayEffectHandle& b);
N_LIB_PRIVATE N_NIMCALL(void, effectContextSetOrigin_)(FGameplayEffectContextHandle effectContext, FVector origin);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextIsValid_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextIsInstigatorLocallyControlled_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, effectContextHasHitResult_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(UObject*, effectContextGetSourceObject_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetOriginalInstigatorActor_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(FVector, effectContextGetOrigin_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetInstigatorActor_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(FHitResult, effectContextGetHitResult_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(AActor*, effectContextGetEffectCauser_)(FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(void, effectContextAddHitResult_)(FGameplayEffectContextHandle effectContext, FHitResult hitResult, NIM_BOOL bReset);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesTargetDataContainActor_)(FGameplayAbilityTargetDataHandle_& targetData, NI32 index, AActor* actor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, doesGameplayCueMeetTagRequirements_)(FGameplayCueParameters parameters, FGameplayTagRequirements& sourceTagReqs, FGameplayTagRequirements& targetTagReqs);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, cloneSpecHandle_)(AActor* inNewInstigator, AActor* inEffectCauser, FGameplayEffectSpecHandle gameplayEffectSpecHandle_Clone);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, assignTagSetByCallerMagnitude_)(FGameplayEffectSpecHandle specHandle, FGameplayTag dataTag, NF32 magnitude);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, assignSetByCallerMagnitude_)(FGameplayEffectSpecHandle specHandle, FName dataName, NF32 magnitude);
N_LIB_PRIVATE N_NIMCALL(void, appendTargetDataHandle_)(FGameplayAbilityTargetDataHandle_ targetHandle, FGameplayAbilityTargetDataHandle_& handleToAdd, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addLinkedGameplayEffectSpec_)(FGameplayEffectSpecHandle specHandle, FGameplayEffectSpecHandle linkedGameplayEffectSpec);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addLinkedGameplayEffect_)(FGameplayEffectSpecHandle specHandle, TY__o5lmm3YGRQTdI9c9ccmTHabQ linkedGameplayEffect);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addGrantedTag_)(FGameplayEffectSpecHandle specHandle, FGameplayTag newGameplayTag);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, addAssetTag_)(FGameplayEffectSpecHandle specHandle, FGameplayTag newGameplayTag);
N_LIB_PRIVATE N_NIMCALL(void, abilityTargetDataFromLocations_)(FGameplayAbilityTargetingLocationInfo_& sourceLocation, FGameplayAbilityTargetingLocationInfo_& targetLocation, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(void, abilityTargetDataFromHitResult_)(FHitResult& hitResult, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(void, abilityTargetDataFromActorArray_)(TY__kbK03O9cVTTS0GR9cjPhedTg& actorArray, NIM_BOOL oneTargetPerHandle, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(void, abilityTargetDataFromActor_)(AActor* actor, FGameplayAbilityTargetDataHandle_* Result);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemBlueprintLibrary)(UAbilitySystemBlueprintLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__SElPEbSc5uW3wbDAeOJeXw*, defaultStartingData)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultStartingData)(UAbilitySystemComponent_* obj, TY__SElPEbSc5uW3wbDAeOJeXw val);
N_LIB_PRIVATE N_NIMCALL(FName*, affectedAnimInstanceTag)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaffectedAnimInstanceTag)(UAbilitySystemComponent_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NF32, outgoingDuration)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutgoingDuration)(UAbilitySystemComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, incomingDuration)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setincomingDuration)(UAbilitySystemComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, clientDebugStrings)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setclientDebugStrings)(UAbilitySystemComponent_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, serverDebugStrings)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setserverDebugStrings)(UAbilitySystemComponent_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, userAbilityActivationInhibited)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuserAbilityActivationInhibited)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, replicationProxyEnabled)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplicationProxyEnabled)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressGrantAbility)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressGrantAbility)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressGameplayCues)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressGameplayCues)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__UmMCwJHxy5cVkk9ctXMLdwA*, spawnedTargetActors)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspawnedTargetActors)(UAbilitySystemComponent_* obj, TY__UmMCwJHxy5cVkk9ctXMLdwA val);
N_LIB_PRIVATE N_NIMCALL(AActor*, ownerActor)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setownerActor)(UAbilitySystemComponent_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(AActor*, avatarActor)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setavatarActor)(UAbilitySystemComponent_* obj, AActor* val);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecContainer_*, activatableAbilities)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivatableAbilities)(UAbilitySystemComponent_* obj, FGameplayAbilitySpecContainer_ val);
N_LIB_PRIVATE N_NIMCALL(TY__1iVhbK34EtpVHrTeNCGvNw*, allReplicatedInstancedAbilities)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setallReplicatedInstancedAbilities)(UAbilitySystemComponent_* obj, TY__1iVhbK34EtpVHrTeNCGvNw val);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityRepAnimMontage_*, repAnimMontageInfo)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrepAnimMontageInfo)(UAbilitySystemComponent_* obj, FGameplayAbilityRepAnimMontage_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCachedIsNetSimulated)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCachedIsNetSimulated)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPendingMontageRep)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPendingMontageRep)(UAbilitySystemComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilityLocalAnimMontage_*, localAnimMontageInfo)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlocalAnimMontageInfo)(UAbilitySystemComponent_* obj, FGameplayAbilityLocalAnimMontage_ val);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectsContainer_*, activeGameplayEffects)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactiveGameplayEffects)(UAbilitySystemComponent_* obj, FActiveGameplayEffectsContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayCueContainer_*, activeGameplayCues)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactiveGameplayCues)(UAbilitySystemComponent_* obj, FActiveGameplayCueContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayCueContainer_*, minimalReplicationGameplayCues)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationGameplayCues)(UAbilitySystemComponent_* obj, FActiveGameplayCueContainer_ val);
N_LIB_PRIVATE N_NIMCALL(TY__41Mm7Z1nb8xYOi3Vy0ffmA*, blockedAbilityBindings)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblockedAbilityBindings)(UAbilitySystemComponent_* obj, TY__41Mm7Z1nb8xYOi3Vy0ffmA val);
N_LIB_PRIVATE N_NIMCALL(FMinimalReplicationTagCountMap*, minimalReplicationTags)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationTags)(UAbilitySystemComponent_* obj, FMinimalReplicationTagCountMap val);
N_LIB_PRIVATE N_NIMCALL(TY__MTgP1q0moW3ktYPggh9a8TA*, spawnedAttributes)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspawnedAttributes)(UAbilitySystemComponent_* obj, TY__MTgP1q0moW3ktYPggh9a8TA val);
N_LIB_PRIVATE N_NIMCALL(FMinimalReplicationTagCountMap*, replicatedLooseTags)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplicatedLooseTags)(UAbilitySystemComponent_* obj, FMinimalReplicationTagCountMap val);
N_LIB_PRIVATE N_NIMCALL(FReplicatedPredictionKeyMap_*, replicatedPredictionKeyMap)(UAbilitySystemComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplicatedPredictionKeyMap)(UAbilitySystemComponent_* obj, FReplicatedPredictionKeyMap_ val);
N_LIB_PRIVATE N_NIMCALL(void, updateActiveGameplayEffectSetByCallerMagnitudes_)(UAbilitySystemComponent_* self, FActiveGameplayEffectHandle activeHandle, TY__UsuvlHgFUvpcHHVMn6XwRw& newSetByCallerValues);
N_LIB_PRIVATE N_NIMCALL(void, updateActiveGameplayEffectSetByCallerMagnitude_)(UAbilitySystemComponent_* self, FActiveGameplayEffectHandle activeHandle, FGameplayTag setByCallerTag, NF32 newValue);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryActivateAbilityByClass_)(UAbilitySystemComponent_* self, TY__DI8ISoHArYV9cXPAlxup7ow inAbilityToActivate, NIM_BOOL bAllowRemoteActivation);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, tryActivateAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, NIM_BOOL bAllowRemoteActivation);
N_LIB_PRIVATE N_NIMCALL(void, targetConfirm_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, targetCancel_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, setUserAbilityActivationInhibited_)(UAbilitySystemComponent_* self, NIM_BOOL newInhibit);
N_LIB_PRIVATE N_NIMCALL(void, setActiveGameplayEffectLevelUsingQuery_)(UAbilitySystemComponent_* self, FGameplayEffectQuery_ query, NI32 newLevel);
N_LIB_PRIVATE N_NIMCALL(void, setActiveGameplayEffectLevel_)(UAbilitySystemComponent_* self, FActiveGameplayEffectHandle activeHandle, NI32 newLevel);
N_LIB_PRIVATE N_NIMCALL(void, serverTryActivateAbilityWithEventData_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, NIM_BOOL inputPressed, FPredictionKey_ predictionKey, FGameplayEventData_ triggerEventData);
N_LIB_PRIVATE N_NIMCALL(void, serverTryActivateAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, NIM_BOOL inputPressed, FPredictionKey_ predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedTargetDataCancelled_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityHandle, FPredictionKey_ abilityOriginalPredictionKey, FPredictionKey_ currentPredictionKey);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedTargetData_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityHandle, FPredictionKey_ abilityOriginalPredictionKey, FGameplayAbilityTargetDataHandle_ replicatedTargetDataHandle, FGameplayTag applicationTag, FPredictionKey_ currentPredictionKey);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedEventWithPayload_)(UAbilitySystemComponent_* self, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType, FGameplayAbilitySpecHandle_ abilityHandle, FPredictionKey_ abilityOriginalPredictionKey, FPredictionKey_ currentPredictionKey, FVector_NetQuantize100* vectorPayload);
N_LIB_PRIVATE N_NIMCALL(void, serverSetReplicatedEvent_)(UAbilitySystemComponent_* self, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType, FGameplayAbilitySpecHandle_ abilityHandle, FPredictionKey_ abilityOriginalPredictionKey, FPredictionKey_ currentPredictionKey);
N_LIB_PRIVATE N_NIMCALL(void, serverSetInputReleased_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityHandle);
N_LIB_PRIVATE N_NIMCALL(void, serverSetInputPressed_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityHandle);
N_LIB_PRIVATE N_NIMCALL(void, serverPrintDebug_RequestWithStrings_)(UAbilitySystemComponent_* self, TY__myhN0u2pNczwuaOhbdYPXw strings);
N_LIB_PRIVATE N_NIMCALL(void, serverPrintDebug_Request_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, serverEndAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToEnd, FGameplayAbilityActivationInfo_ activationInfo, FPredictionKey_ predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageSetPlayRate_)(UAbilitySystemComponent_* self, UAnimMontage* clientAnimMontage, NF32 inPlayRate);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageSetNextSectionName_)(UAbilitySystemComponent_* self, UAnimMontage* clientAnimMontage, NF32 clientPosition, FName sectionName, FName nextSectionName);
N_LIB_PRIVATE N_NIMCALL(void, serverCurrentMontageJumpToSectionName_)(UAbilitySystemComponent_* self, UAnimMontage* clientAnimMontage, FName sectionName);
N_LIB_PRIVATE N_NIMCALL(void, serverCancelAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToCancel, FGameplayAbilityActivationInfo_ activationInfo);
N_LIB_PRIVATE N_NIMCALL(void, serverAbilityRPCBatch_)(UAbilitySystemComponent_* self, FServerAbilityRPCBatch_ batchInfo);
N_LIB_PRIVATE N_NIMCALL(void, removeActiveGameplayEffectBySourceEffect_)(UAbilitySystemComponent_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffect, UAbilitySystemComponent_* instigatorAbilitySystemComponent, NI32 stacksToRemove);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeActiveGameplayEffect_)(UAbilitySystemComponent_* self, FActiveGameplayEffectHandle handle, NI32 stacksToRemove);
N_LIB_PRIVATE N_NIMCALL(void, releaseInputID_)(UAbilitySystemComponent_* self, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(void, pressInputID_)(UAbilitySystemComponent_* self, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(void, onSpawnedAttributesEndPlayed_)(UAbilitySystemComponent_* self, AActor* inActor, tyEnum_EEndPlayReason__83Jx3inG29af0RIg6BEVzPw endPlayReason);
N_LIB_PRIVATE N_NIMCALL(void, onRep_SpawnedAttributes_)(UAbilitySystemComponent_* self, TY__MTgP1q0moW3ktYPggh9a8TA& previousSpawnedAttributes);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ServerDebugString_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ReplicatedAnimMontage_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, onRep_OwningActor_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ClientDebugString_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, onRep_ActivateAbilities_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, onOwnerActorDestroyed_)(UAbilitySystemComponent_* self, AActor* inActor);
N_LIB_PRIVATE N_NIMCALL(void, onAvatarActorDestroyed_)(UAbilitySystemComponent_* self, AActor* inActor);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_WithParams_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag, FPredictionKey_ predictionKey, FGameplayCueParameters gameplayCueParameters);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_FromSpec_)(UAbilitySystemComponent_* self, FGameplayEffectSpecForRPC_ spec, FPredictionKey_ predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueExecuted_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag, FPredictionKey_ predictionKey, FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag, FPredictionKey_ predictionKey, FGameplayCueParameters gameplayCueParameters);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec_)(UAbilitySystemComponent_* self, FGameplayEffectSpecForRPC_ spec, FPredictionKey_ predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAdded_WithParams_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag, FPredictionKey_ predictionKey, FGameplayCueParameters parameters);
N_LIB_PRIVATE N_NIMCALL(void, netMulticast_InvokeGameplayCueAdded_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag, FPredictionKey_ predictionKey, FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectSpecHandle, makeOutgoingSpec_)(UAbilitySystemComponent_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, NF32 level, FGameplayEffectContextHandle context);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectContextHandle, makeEffectContext_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, initStats_)(UAbilitySystemComponent_* self, TY__JVcLxy5VxXvcRj365E9bclg attributes, UDataTable* dataTable);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecHandle_, giveAbilityAndActivateOnce_)(UAbilitySystemComponent_* self, TY__DI8ISoHArYV9cXPAlxup7ow abilityClass, NI32 level, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(FGameplayAbilitySpecHandle_, giveAbility_)(UAbilitySystemComponent_* self, TY__DI8ISoHArYV9cXPAlxup7ow abilityClass, NI32 level, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isGameplayCueActive_)(UAbilitySystemComponent_* self, FGameplayTag gameplayCueTag);
N_LIB_PRIVATE N_NIMCALL(void, inputConfirm_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, inputCancel_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getUserAbilityActivationInhibited_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayTagCount_)(UAbilitySystemComponent_* self, FGameplayTag gameplayTag);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameplayEffectMagnitude_)(UAbilitySystemComponent_* self, FActiveGameplayEffectHandle handle, FGameplayAttribute attribute);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayEffectCount_IfLoaded_)(UAbilitySystemComponent_* self, TY__khlKMeIkNjMzqw2TfIXxWA softSourceGameplayEffect, UAbilitySystemComponent_* optionalInstigatorFilterComponent, NIM_BOOL bEnforceOnGoingCheck);
N_LIB_PRIVATE N_NIMCALL(NI32, getGameplayEffectCount_)(UAbilitySystemComponent_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ sourceGameplayEffect, UAbilitySystemComponent_* optionalInstigatorFilterComponent, NIM_BOOL bEnforceOnGoingCheck);
N_LIB_PRIVATE N_NIMCALL(NF32, getGameplayAttributeValue_)(UAbilitySystemComponent_* self, FGameplayAttribute attribute, NIM_BOOL& bFound);
N_LIB_PRIVATE N_NIMCALL(UAttributeSet*, getAttributeSet_)(UAbilitySystemComponent_* self, TY__JVcLxy5VxXvcRj365E9bclg attributeSetClass);
N_LIB_PRIVATE N_NIMCALL(void, getAllAttributes_)(UAbilitySystemComponent_* self, TY__0e5LS6UfmhaWdcjpiaKDgQ& outAttributes);
N_LIB_PRIVATE N_NIMCALL(void, getAllAbilities_)(UAbilitySystemComponent_* self, TY__jBGmxbqnyTV447L3R9bbKnQ& outAbilityHandles);
N_LIB_PRIVATE N_NIMCALL(TY__x1jrflF2XK116qRMnTohKA, getActiveEffects_)(UAbilitySystemComponent_* self, FGameplayEffectQuery_& query);
N_LIB_PRIVATE N_NIMCALL(void, findAllAbilitiesWithInputID_)(UAbilitySystemComponent_* self, TY__jBGmxbqnyTV447L3R9bbKnQ& outAbilityHandles, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(void, clientTryActivateAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate);
N_LIB_PRIVATE N_NIMCALL(void, clientSetReplicatedEvent_)(UAbilitySystemComponent_* self, tyEnum_EAbilityGenericReplicatedEvent__8zAs3I6Kt4jOLa3Xg1O5Ig eventType, FGameplayAbilitySpecHandle_ abilityHandle, FPredictionKey_ abilityOriginalPredictionKey);
N_LIB_PRIVATE N_NIMCALL(void, clientPrintDebug_Response_)(UAbilitySystemComponent_* self, TY__myhN0u2pNczwuaOhbdYPXw strings, NI32 gameFlags);
N_LIB_PRIVATE N_NIMCALL(void, clientEndAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToEnd, FGameplayAbilityActivationInfo_ activationInfo);
N_LIB_PRIVATE N_NIMCALL(void, clientCancelAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToCancel, FGameplayAbilityActivationInfo_ activationInfo);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilitySucceedWithEventData_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, FPredictionKey_ predictionKey, FGameplayEventData_ triggerEventData);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilitySucceed_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, FPredictionKey_ predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, clientActivateAbilityFailed_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_ abilityToActivate, NI16 predictionKey);
N_LIB_PRIVATE N_NIMCALL(void, clearAllAbilitiesWithInputID_)(UAbilitySystemComponent_* self, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(void, clearAllAbilities_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, clearAbility_)(UAbilitySystemComponent_* self, FGameplayAbilitySpecHandle_& handle);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToTarget_)(UAbilitySystemComponent_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, UAbilitySystemComponent_* target, NF32 level, FGameplayEffectContextHandle context);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectToSelf_)(UAbilitySystemComponent_* self, TY__o5lmm3YGRQTdI9c9ccmTHabQ gameplayEffectClass, NF32 level, FGameplayEffectContextHandle effectContext);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToTarget_)(UAbilitySystemComponent_* self, FGameplayEffectSpecHandle& specHandle, UAbilitySystemComponent_* target);
N_LIB_PRIVATE N_NIMCALL(FActiveGameplayEffectHandle, applyGameplayEffectSpecToSelf_)(UAbilitySystemComponent_* self, FGameplayEffectSpecHandle& specHandle);
N_LIB_PRIVATE N_NIMCALL(void, abilityConfirmOrCancel_)(UAbilitySystemComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, abilityAbilityKey_)(UAbilitySystemComponent_* self, NI32 inputID);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemDebugHUDExtension)(UAbilitySystemDebugHUDExtension_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemDebugHUDExtension_Tags)(UAbilitySystemDebugHUDExtension_Tags_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemDebugHUDExtension_Attributes)(UAbilitySystemDebugHUDExtension_Attributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemDebugHUDExtension_BlockedAbilityTags)(UAbilitySystemDebugHUDExtension_BlockedAbilityTags_* fake);
N_LIB_PRIVATE N_NIMCALL(FSoftClassPath*, abilitySystemGlobalsClassName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemGlobalsClassName)(UAbilitySystemGlobals* obj, FSoftClassPath val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseDebugTargetFromHud)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseDebugTargetFromHud)(UAbilitySystemGlobals* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailIsDeadTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailIsDeadTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailIsDeadName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailIsDeadName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailCooldownTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCooldownTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailCooldownName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCooldownName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailCostTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCostTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailCostName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailCostName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailTagsBlockedTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsBlockedTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailTagsBlockedName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsBlockedName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailTagsMissingTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsMissingTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailTagsMissingName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailTagsMissingName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, activateFailNetworkingTag)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailNetworkingTag)(UAbilitySystemGlobals* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, activateFailNetworkingName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setactivateFailNetworkingName)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NI32, minimalReplicationTagCountBits)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setminimalReplicationTagCountBits)(UAbilitySystemGlobals* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FNetSerializeScriptStructCache*, targetDataStructCache)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetDataStructCache)(UAbilitySystemGlobals* obj, FNetSerializeScriptStructCache val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowGameplayModEvaluationChannels)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowGameplayModEvaluationChannels)(UAbilitySystemGlobals* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA, defaultGameplayModEvaluationChannel)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultGameplayModEvaluationChannel)(UAbilitySystemGlobals* obj, tyEnum_EGameplayModEvaluationChannel__0q9bDt1ZyBrecks9cZtxFluA val);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayModEvaluationChannelAliases)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayModEvaluationChannelAliases)(UAbilitySystemGlobals* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalCurveTableName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalCurveTableName)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(UCurveTable_*, globalCurveTable)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalCurveTable)(UAbilitySystemGlobals* obj, UCurveTable_* val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalAttributeMetaDataTableName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeMetaDataTableName)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(UDataTable*, globalAttributeMetaDataTable)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeMetaDataTable)(UAbilitySystemGlobals* obj, UDataTable* val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalAttributeSetDefaultsTableName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeSetDefaultsTableName)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(TY__ENhz1y6sHvLdRa6kOBUI0g*, globalAttributeSetDefaultsTableNames)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeSetDefaultsTableNames)(UAbilitySystemGlobals* obj, TY__ENhz1y6sHvLdRa6kOBUI0g val);
N_LIB_PRIVATE N_NIMCALL(TY__M4MmxYh2DRWibpvAY9b1bhg*, globalAttributeDefaultsTables)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalAttributeDefaultsTables)(UAbilitySystemGlobals* obj, TY__M4MmxYh2DRWibpvAY9b1bhg val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalGameplayCueManagerClass)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManagerClass)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, globalGameplayCueManagerName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManagerName)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, gameplayCueNotifyPaths)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueNotifyPaths)(UAbilitySystemGlobals* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(FSoftObjectPath*, gameplayTagResponseTableName)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayTagResponseTableName)(UAbilitySystemGlobals* obj, FSoftObjectPath val);
N_LIB_PRIVATE N_NIMCALL(UGameplayTagReponseTable_*, gameplayTagResponseTable)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayTagResponseTable)(UAbilitySystemGlobals* obj, UGameplayTagReponseTable_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, predictTargetGameplayEffects)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpredictTargetGameplayEffects)(UAbilitySystemGlobals* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, replicateActivationOwnedTags)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setreplicateActivationOwnedTags)(UAbilitySystemGlobals* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UGameplayCueManager_*, globalGameplayCueManager)(UAbilitySystemGlobals* obj);
N_LIB_PRIVATE N_NIMCALL(void, setglobalGameplayCueManager)(UAbilitySystemGlobals* obj, UGameplayCueManager_* val);
N_LIB_PRIVATE N_NIMCALL(void, toggleIgnoreAbilitySystemCosts_)(UAbilitySystemGlobals* self);
N_LIB_PRIVATE N_NIMCALL(void, toggleIgnoreAbilitySystemCooldowns_)(UAbilitySystemGlobals* self);
N_LIB_PRIVATE N_NIMCALL(void, serverEndPlayerAbility_)(UAbilitySystemGlobals* self, FString abilityNameMatch);
N_LIB_PRIVATE N_NIMCALL(void, serverCancelPlayerAbility_)(UAbilitySystemGlobals* self, FString abilityNameMatch);
N_LIB_PRIVATE N_NIMCALL(void, serverActivatePlayerAbility_)(UAbilitySystemGlobals* self, FString abilityNameMatch);
N_LIB_PRIVATE N_NIMCALL(void, listPlayerAbilities_)(UAbilitySystemGlobals* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemGlobals)(UAbilitySystemGlobals* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemInterface)(UAbilitySystemInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, maxHealth)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxHealth)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, health)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, sethealth)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, mana)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmana)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxMana)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxMana)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, damage)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdamage)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, spellDamage)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspellDamage)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, physicalDamage)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphysicalDamage)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, critChance)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcritChance)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, critMultiplier)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcritMultiplier)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, armorDamageReduction)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setarmorDamageReduction)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, dodgeChance)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdodgeChance)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, lifeSteal)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlifeSteal)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, strength)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrength)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, stackingAttribute1)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackingAttribute1)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, stackingAttribute2)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackingAttribute2)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, noStackAttribute)(UAbilitySystemTestAttributeSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnoStackAttribute)(UAbilitySystemTestAttributeSet_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAbilitySystemTestAttributeSet)(UAbilitySystemTestAttributeSet_* fake);
N_LIB_PRIVATE N_NIMCALL(UAbilitySystemComponent_*, abilitySystemComponent)(AAbilitySystemTestPawn_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setabilitySystemComponent)(AAbilitySystemTestPawn_* obj, UAbilitySystemComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAAbilitySystemTestPawn)(AAbilitySystemTestPawn_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueTag_*, gameplayCue)(UAnimNotify_GameplayCue_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCue)(UAnimNotify_GameplayCue_* obj, FGameplayCueTag_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotify_GameplayCue)(UAnimNotify_GameplayCue_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueTag_*, gameplayCue)(UAnimNotify_GameplayCueState_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCue)(UAnimNotify_GameplayCueState_* obj, FGameplayCueTag_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimNotify_GameplayCueState)(UAnimNotify_GameplayCueState_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayAbilityBlueprint)(UGameplayAbilityBlueprint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, removeGameplayCueOnActor_)(AActor* target, FGameplayTag gameplayCueTag, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueParameters, makeGameplayCueParametersFromHitResult_)(FHitResult& hitResult);
N_LIB_PRIVATE N_NIMCALL(void, executeGameplayCueOnActor_)(AActor* target, FGameplayTag gameplayCueTag, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, addGameplayCueOnActor_)(AActor* target, FGameplayTag gameplayCueTag, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueFunctionLibrary)(UGameplayCueFunctionLibrary_* fake);
N_LIB_PRIVATE N_NIMCALL(void, forwardGameplayCueToParent_)(UGameplayCueInterface_* self);
N_LIB_PRIVATE N_NIMCALL(void, blueprintCustomHandler_)(UGameplayCueInterface_* self, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueInterface)(UGameplayCueInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueObjectLibrary_*, runtimeGameplayCueObjectLibrary)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setruntimeGameplayCueObjectLibrary)(UGameplayCueManager_* obj, FGameplayCueObjectLibrary_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueObjectLibrary_*, editorGameplayCueObjectLibrary)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, seteditorGameplayCueObjectLibrary)(UGameplayCueManager_* obj, FGameplayCueObjectLibrary_ val);
N_LIB_PRIVATE N_NIMCALL(TY__Oycn0Wv4Wvu5QjPDMJ4iYA*, loadedGameplayCueNotifyClasses)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setloadedGameplayCueNotifyClasses)(UGameplayCueManager_* obj, TY__Oycn0Wv4Wvu5QjPDMJ4iYA val);
N_LIB_PRIVATE N_NIMCALL(TY__yFf9bt3gETA9bmErFkGcaITA*, gameplayCueClassesForPreallocation)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueClassesForPreallocation)(UGameplayCueManager_* obj, TY__yFf9bt3gETA9bmErFkGcaITA val);
N_LIB_PRIVATE N_NIMCALL(TY__3EayRS3K5H6lKVUDWcwkUA*, pendingExecuteCues)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpendingExecuteCues)(UGameplayCueManager_* obj, TY__3EayRS3K5H6lKVUDWcwkUA val);
N_LIB_PRIVATE N_NIMCALL(NI32, gameplayCueSendContextCount)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueSendContextCount)(UGameplayCueManager_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(TY__uqV1eG9a5U54FsunlxDWftQ*, preallocationInfoList_Internal)(UGameplayCueManager_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpreallocationInfoList_Internal)(UGameplayCueManager_* obj, TY__uqV1eG9a5U54FsunlxDWftQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueManager)(UGameplayCueManager_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDestroyOnRemove)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDestroyOnRemove)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, autoDestroyDelay)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoDestroyDelay)(AGameplayCueNotify_Actor_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, warnIfTimelineIsStillRunning)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwarnIfTimelineIsStillRunning)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, warnIfLatentActionIsStillRunning)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwarnIfLatentActionIsStillRunning)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, gameplayCueTag)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueTag)(AGameplayCueNotify_Actor_* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayCueName)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueName)(AGameplayCueNotify_Actor_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoAttachToOwner)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoAttachToOwner)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverride)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisOverride)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUniqueInstancePerInstigator)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUniqueInstancePerInstigator)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUniqueInstancePerSourceObject)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUniqueInstancePerSourceObject)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowMultipleOnActiveEvents)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowMultipleOnActiveEvents)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowMultipleWhileActiveEvents)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowMultipleWhileActiveEvents)(AGameplayCueNotify_Actor_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, numPreallocatedInstances)(AGameplayCueNotify_Actor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnumPreallocatedInstances)(AGameplayCueNotify_Actor_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, whileActive_)(AGameplayCueNotify_Actor_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onRemove_)(AGameplayCueNotify_Actor_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, onOwnerDestroyed_)(AGameplayCueNotify_Actor_* self, AActor* destroyedActor);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onExecute_)(AGameplayCueNotify_Actor_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onActive_)(AGameplayCueNotify_Actor_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, handleGameplayCue_)(AGameplayCueNotify_Actor_* self, AActor* myTarget, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, endGameplayCue_)(AGameplayCueNotify_Actor_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayCueNotify_Actor)(AGameplayCueNotify_Actor_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayTag*, gameplayCueTag)(UGameplayCueNotify_Static_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueTag)(UGameplayCueNotify_Static_* obj, FGameplayTag val);
N_LIB_PRIVATE N_NIMCALL(FName*, gameplayCueName)(UGameplayCueNotify_Static_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueName)(UGameplayCueNotify_Static_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isOverride)(UGameplayCueNotify_Static_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setisOverride)(UGameplayCueNotify_Static_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, whileActive_)(UGameplayCueNotify_Static_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onRemove_)(UGameplayCueNotify_Static_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onExecute_)(UGameplayCueNotify_Static_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, onActive_)(UGameplayCueNotify_Static_* self, AActor* myTarget, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, handleGameplayCue_)(UGameplayCueNotify_Static_* self, AActor* myTarget, tyEnum_EGameplayCueEvent__9bb3D16NEdOc9aT9c7d769brYQ eventType, FGameplayCueParameters& parameters);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueNotify_Static)(UGameplayCueNotify_Static_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(UGameplayCueNotify_Burst_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(UGameplayCueNotify_Burst_* obj, FGameplayCueNotify_SpawnCondition_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(UGameplayCueNotify_Burst_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(UGameplayCueNotify_Burst_* obj, FGameplayCueNotify_PlacementInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, burstEffects)(UGameplayCueNotify_Burst_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setburstEffects)(UGameplayCueNotify_Burst_* obj, FGameplayCueNotify_BurstEffects_ val);
N_LIB_PRIVATE N_NIMCALL(void, onBurst_)(UGameplayCueNotify_Burst_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueNotify_Burst)(UGameplayCueNotify_Burst_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(AGameplayCueNotify_BurstLatent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(AGameplayCueNotify_BurstLatent_* obj, FGameplayCueNotify_SpawnCondition_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(AGameplayCueNotify_BurstLatent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(AGameplayCueNotify_BurstLatent_* obj, FGameplayCueNotify_PlacementInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, burstEffects)(AGameplayCueNotify_BurstLatent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setburstEffects)(AGameplayCueNotify_BurstLatent_* obj, FGameplayCueNotify_BurstEffects_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, burstSpawnResults)(AGameplayCueNotify_BurstLatent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setburstSpawnResults)(AGameplayCueNotify_BurstLatent_* obj, FGameplayCueNotify_SpawnResult_ val);
N_LIB_PRIVATE N_NIMCALL(void, onBurst_)(AGameplayCueNotify_BurstLatent_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayCueNotify_BurstLatent)(AGameplayCueNotify_BurstLatent_* fake);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, particleSystem)(UGameplayCueNotify_HitImpact_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparticleSystem)(UGameplayCueNotify_HitImpact_* obj, UParticleSystem* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueNotify_HitImpact)(UGameplayCueNotify_HitImpact_* fake);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnCondition_*, defaultSpawnCondition)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultSpawnCondition)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_SpawnCondition_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_PlacementInfo_*, defaultPlacementInfo)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultPlacementInfo)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_PlacementInfo_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, applicationEffects)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationEffects)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_BurstEffects_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, applicationSpawnResults)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationSpawnResults)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_SpawnResult_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_LoopingEffects_*, loopingEffects)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setloopingEffects)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_LoopingEffects_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, loopingSpawnResults)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setloopingSpawnResults)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_SpawnResult_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, recurringEffects)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrecurringEffects)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_BurstEffects_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, recurringSpawnResults)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrecurringSpawnResults)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_SpawnResult_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_BurstEffects_*, removalEffects)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremovalEffects)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_BurstEffects_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayCueNotify_SpawnResult_*, removalSpawnResults)(AGameplayCueNotify_Looping_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremovalSpawnResults)(AGameplayCueNotify_Looping_* obj, FGameplayCueNotify_SpawnResult_ val);
N_LIB_PRIVATE N_NIMCALL(void, onRemoval_)(AGameplayCueNotify_Looping_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, onRecurring_)(AGameplayCueNotify_Looping_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, onLoopingStart_)(AGameplayCueNotify_Looping_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, onApplication_)(AGameplayCueNotify_Looping_* self, AActor* target, FGameplayCueParameters& parameters, FGameplayCueNotify_SpawnResult_& spawnResults);
N_LIB_PRIVATE N_NIMCALL(void, keepAGameplayCueNotify_Looping)(AGameplayCueNotify_Looping_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__iipK89cMQmmOQ9bmmnPnwHwQ*, gameplayCueData)(UGameplayCueSet_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCueData)(UGameplayCueSet_* obj, TY__iipK89cMQmmOQ9bmmnPnwHwQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueSet)(UGameplayCueSet_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueTranslator)(UGameplayCueTranslator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayCueTranslator_Test)(UGameplayCueTranslator_Test_* fake);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg, durationPolicy)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdurationPolicy)(UGameplayEffect_* obj, tyEnum_EGameplayEffectDurationType__xDzjuarehB6kBHzYi88Vgg val);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectModifierMagnitude_*, durationMagnitude)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdurationMagnitude)(UGameplayEffect_* obj, FGameplayEffectModifierMagnitude_ val);
N_LIB_PRIVATE N_NIMCALL(FScalableFloat_*, period)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setperiod)(UGameplayEffect_* obj, FScalableFloat_ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExecutePeriodicEffectOnApplication)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExecutePeriodicEffectOnApplication)(UGameplayEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg, periodicInhibitionPolicy)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setperiodicInhibitionPolicy)(UGameplayEffect_* obj, tyEnum_EGameplayEffectPeriodInhibitionRemovedPolicy__u7Wn5Lyf1qj0CN8GjwsnHg val);
N_LIB_PRIVATE N_NIMCALL(TY__SMXWF8IaQIMjnWJWW9aw9bWg*, modifiers)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmodifiers)(UGameplayEffect_* obj, TY__SMXWF8IaQIMjnWJWW9aw9bWg val);
N_LIB_PRIVATE N_NIMCALL(TY__u78TYFr18r345jyU1USShA*, executions)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexecutions)(UGameplayEffect_* obj, TY__u78TYFr18r345jyU1USShA val);
N_LIB_PRIVATE N_NIMCALL(FScalableFloat_*, chanceToApplyToTarget)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchanceToApplyToTarget)(UGameplayEffect_* obj, FScalableFloat_ val);
N_LIB_PRIVATE N_NIMCALL(TY__JhMKUoilyazmRBfr9c6i9aAA*, applicationRequirements)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationRequirements)(UGameplayEffect_* obj, TY__JhMKUoilyazmRBfr9c6i9aAA val);
N_LIB_PRIVATE N_NIMCALL(TY__iyRh6NGfBn32Zv3ywMk9bgw*, conditionalGameplayEffects)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconditionalGameplayEffects)(UGameplayEffect_* obj, TY__iyRh6NGfBn32Zv3ywMk9bgw val);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, overflowEffects)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverflowEffects)(UGameplayEffect_* obj, TY__YWxhJKhKplqKD9bzBoR0fzQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDenyOverflowApplication)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDenyOverflowApplication)(UGameplayEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClearStackOnOverflow)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbClearStackOnOverflow)(UGameplayEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, prematureExpirationEffectClasses)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprematureExpirationEffectClasses)(UGameplayEffect_* obj, TY__YWxhJKhKplqKD9bzBoR0fzQ val);
N_LIB_PRIVATE N_NIMCALL(TY__YWxhJKhKplqKD9bzBoR0fzQ*, routineExpirationEffectClasses)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setroutineExpirationEffectClasses)(UGameplayEffect_* obj, TY__YWxhJKhKplqKD9bzBoR0fzQ val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequireModifierSuccessToTriggerCues)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRequireModifierSuccessToTriggerCues)(UGameplayEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSuppressStackingCues)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSuppressStackingCues)(UGameplayEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__UjE9b8CGGMCLhKCOumAta4Q*, gameplayCues)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgameplayCues)(UGameplayEffect_* obj, TY__UjE9b8CGGMCLhKCOumAta4Q val);
N_LIB_PRIVATE N_NIMCALL(UGameplayEffectUIData_*, uIData)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuIData)(UGameplayEffect_* obj, UGameplayEffectUIData_* val);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer_*, inheritableGameplayEffectTags)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableGameplayEffectTags)(UGameplayEffect_* obj, FInheritedTagContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer_*, inheritableOwnedTagsContainer)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableOwnedTagsContainer)(UGameplayEffect_* obj, FInheritedTagContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer_*, inheritableBlockedAbilityTagsContainer)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinheritableBlockedAbilityTagsContainer)(UGameplayEffect_* obj, FInheritedTagContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, ongoingTagRequirements)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setongoingTagRequirements)(UGameplayEffect_* obj, FGameplayTagRequirements val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, applicationTagRequirements)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setapplicationTagRequirements)(UGameplayEffect_* obj, FGameplayTagRequirements val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, removalTagRequirements)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremovalTagRequirements)(UGameplayEffect_* obj, FGameplayTagRequirements val);
N_LIB_PRIVATE N_NIMCALL(FInheritedTagContainer_*, removeGameplayEffectsWithTags)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremoveGameplayEffectsWithTags)(UGameplayEffect_* obj, FInheritedTagContainer_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayTagRequirements*, grantedApplicationImmunityTags)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedApplicationImmunityTags)(UGameplayEffect_* obj, FGameplayTagRequirements val);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectQuery_*, grantedApplicationImmunityQuery)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedApplicationImmunityQuery)(UGameplayEffect_* obj, FGameplayEffectQuery_ val);
N_LIB_PRIVATE N_NIMCALL(FGameplayEffectQuery_*, removeGameplayEffectQuery)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setremoveGameplayEffectQuery)(UGameplayEffect_* obj, FGameplayEffectQuery_ val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ, stackingType)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackingType)(UGameplayEffect_* obj, tyEnum_EGameplayEffectStackingType__VyNCIDH8Jhd3XpJckFr3dQ val);
N_LIB_PRIVATE N_NIMCALL(NI32, stackLimitCount)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackLimitCount)(UGameplayEffect_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A, stackDurationRefreshPolicy)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackDurationRefreshPolicy)(UGameplayEffect_* obj, tyEnum_EGameplayEffectStackingDurationPolicy__vHEqg4lU9adRDLK4J78aH4A val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw, stackPeriodResetPolicy)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackPeriodResetPolicy)(UGameplayEffect_* obj, tyEnum_EGameplayEffectStackingPeriodPolicy__CBx1AjBO00f2f4hS7inVHw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA, stackExpirationPolicy)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstackExpirationPolicy)(UGameplayEffect_* obj, tyEnum_EGameplayEffectStackingExpirationPolicy__rmkhXDTVLx39aPs9c9byFgK9cA val);
N_LIB_PRIVATE N_NIMCALL(TY__Nfbibg9az9bLDonNBrt4vy4g*, grantedAbilities)(UGameplayEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setgrantedAbilities)(UGameplayEffect_* obj, TY__Nfbibg9az9bLDonNBrt4vy4g val);
N_LIB_PRIVATE N_NIMCALL(TY__7dBu6g16YDeBHjA4ZfidNQ*, relevantAttributesToCapture)(UGameplayEffectCalculation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setrelevantAttributesToCapture)(UGameplayEffectCalculation_* obj, TY__7dBu6g16YDeBHjA4ZfidNQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffectCalculation)(UGameplayEffectCalculation_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, canApplyGameplayEffect_)(UGameplayEffectCustomApplicationRequirement_* self, UGameplayEffect_* gameplayEffect, FGameplayEffectSpec_& spec, UAbilitySystemComponent_* aSC);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffectCustomApplicationRequirement)(UGameplayEffectCustomApplicationRequirement_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bRequiresPassedInTags)(UGameplayEffectExecutionCalculation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbRequiresPassedInTags)(UGameplayEffectExecutionCalculation_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__7dBu6g16YDeBHjA4ZfidNQ*, invalidScopedModifierAttributes)(UGameplayEffectExecutionCalculation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinvalidScopedModifierAttributes)(UGameplayEffectExecutionCalculation_* obj, TY__7dBu6g16YDeBHjA4ZfidNQ val);
N_LIB_PRIVATE N_NIMCALL(void, execute_)(UGameplayEffectExecutionCalculation_* self, FGameplayEffectCustomExecutionParameters_& executionParams, FGameplayEffectCustomExecutionOutput_& outExecutionOutput);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayEffectExecutionCalculation)(UGameplayEffectExecutionCalculation_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowNonNetAuthorityDependencyRegistration)(UGameplayModMagnitudeCalculation_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowNonNetAuthorityDependencyRegistration)(UGameplayModMagnitudeCalculation_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, getSetByCallerMagnitudeByTag_)(UGameplayModMagnitudeCalculation_* self, FGameplayEffectSpec_& effectSpec, FGameplayTag& tag);
N_LIB_PRIVATE N_NIMCALL(NF32, getSetByCallerMagnitudeByName_)(UGameplayModMagnitudeCalculation_* self, FGameplayEffectSpec_& effectSpec, FName& magnitudeName);
N_LIB_PRIVATE N_NIMCALL(NF32, calculateBaseMagnitude_)(UGameplayModMagnitudeCalculation_* self, FGameplayEffectSpec_& spec);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayModMagnitudeCalculation)(UGameplayModMagnitudeCalculation_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__9anH0Dz9c0Cr10xgCVjcFJzw*, entries)(UGameplayTagReponseTable_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setentries)(UGameplayTagReponseTable_* obj, TY__9anH0Dz9c0Cr10xgCVjcFJzw val);
N_LIB_PRIVATE N_NIMCALL(void, tagResponseEvent_)(UGameplayTagReponseTable_* self, FGameplayTag tag, NI32 newCount, UAbilitySystemComponent_* aSC, NI32 idx);
N_LIB_PRIVATE N_NIMCALL(void, keepUGameplayTagReponseTable)(UGameplayTagReponseTable_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUTickableAttributeSetInterface)(UTickableAttributeSetInterface_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPredictionKeyNetSerializerConfig)(FPredictionKeyNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityRepAnimMontageNetSerializerConfig)(FGameplayAbilityRepAnimMontageNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalReplicationTagCountMapNetSerializerConfig)(FMinimalReplicationTagCountMapNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalGameplayCueReplicationProxyNetSerializerConfig)(FMinimalGameplayCueReplicationProxyNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectContextNetSerializerConfig)(FGameplayEffectContextNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTagResponseTableEntry)(FGameplayTagResponseTableEntry_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTagReponsePair)(FGameplayTagReponsePair_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectContextHandleNetSerializerConfig)(FGameplayEffectContextHandleNetSerializerConfig_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectQuery)(FGameplayEffectQuery_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectSpecForRPC)(FGameplayEffectSpecForRPC_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFReplicatedPredictionKeyMap)(FReplicatedPredictionKeyMap_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFReplicatedPredictionKeyItem)(FReplicatedPredictionKeyItem_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalReplicationTagCountMap)(FMinimalReplicationTagCountMap fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayCueContainer)(FActiveGameplayCueContainer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayCue)(FActiveGameplayCue_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayEffectsContainer)(FActiveGameplayEffectsContainer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilitySpecContainer)(FGameplayAbilitySpecContainer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilitySpec)(FGameplayAbilitySpec_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCuePendingExecute)(FGameplayCuePendingExecute_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotifyActorArray)(FGameplayCueNotifyActorArray_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPreallocationInfo)(FPreallocationInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityBindInfo)(FGameplayAbilityBindInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNetSerializeScriptStructCache)(FNetSerializeScriptStructCache fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAttributeData)(FGameplayAttributeData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttributeMetaData)(FAttributeMetaData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayAbilityTargetData)(FGameplayAbilityTargetData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueTag)(FGameplayCueTag_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalGameplayCueReplicationProxy)(FMinimalGameplayCueReplicationProxy_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueObjectLibrary)(FGameplayCueObjectLibrary_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_SpawnCondition)(FGameplayCueNotify_SpawnCondition_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_PlacementInfo)(FGameplayCueNotify_PlacementInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_SpawnResult)(FGameplayCueNotify_SpawnResult_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_ParticleInfo)(FGameplayCueNotify_ParticleInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_SoundParameterInterfaceInfo)(FGameplayCueNotify_SoundParameterInterfaceInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_SoundInfo)(FGameplayCueNotify_SoundInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_CameraShakeInfo)(FGameplayCueNotify_CameraShakeInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_CameraLensEffectInfo)(FGameplayCueNotify_CameraLensEffectInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_ForceFeedbackInfo)(FGameplayCueNotify_ForceFeedbackInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_InputDevicePropertyInfo)(FGameplayCueNotify_InputDevicePropertyInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_DecalInfo)(FGameplayCueNotify_DecalInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_BurstEffects)(FGameplayCueNotify_BurstEffects_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotify_LoopingEffects)(FGameplayCueNotify_LoopingEffects_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueNotifyData)(FGameplayCueNotifyData_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueTranslatorNodeIndex)(FGameplayCueTranslatorNodeIndex_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueTranslationLink)(FGameplayCueTranslationLink_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueTranslatorNode)(FGameplayCueTranslatorNode_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayCueTranslationManager)(FGameplayCueTranslationManager_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAttributeBasedFloat)(FAttributeBasedFloat_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCustomCalculationBasedFloat)(FCustomCalculationBasedFloat_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSetByCallerFloat)(FSetByCallerFloat_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectModifierMagnitude)(FGameplayEffectModifierMagnitude_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectExecutionScopedModifierInfo)(FGameplayEffectExecutionScopedModifierInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayModEvaluationChannelSettings)(FGameplayModEvaluationChannelSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFConditionalGameplayEffect)(FConditionalGameplayEffect_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectExecutionDefinition)(FGameplayEffectExecutionDefinition_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayModifierInfo)(FGameplayModifierInfo_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectCue)(FGameplayEffectCue_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInheritedTagContainer)(FInheritedTagContainer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActiveGameplayEffectQuery)(FActiveGameplayEffectQuery_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectCustomExecutionParameters)(FGameplayEffectCustomExecutionParameters_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectCustomExecutionOutput)(FGameplayEffectCustomExecutionOutput_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayModifierEvaluatedData)(FGameplayModifierEvaluatedData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayEffectContext)(FGameplayEffectContext fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTagBlueprintPropertyMapping)(FGameplayTagBlueprintPropertyMapping fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFGameplayTagBlueprintPropertyMap)(FGameplayTagBlueprintPropertyMap fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesSequencer)(void);
N_LIB_PRIVATE N_NIMCALL(FMovieSceneGameplayCueChannel_*, channel)(UMovieSceneGameplayCueTriggerSection_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchannel)(UMovieSceneGameplayCueTriggerSection_* obj, FMovieSceneGameplayCueChannel_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieSceneGameplayCueTriggerSection)(UMovieSceneGameplayCueTriggerSection_* fake);
N_LIB_PRIVATE N_NIMCALL(FMovieSceneGameplayCueKey_*, cue)(UMovieSceneGameplayCueSection_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcue)(UMovieSceneGameplayCueSection_* obj, FMovieSceneGameplayCueKey_ val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieSceneGameplayCueSection)(UMovieSceneGameplayCueSection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setSequencerTrackHandler_)(FMovieSceneGameplayCueEvent_* inGameplayCueTrackHandler);
N_LIB_PRIVATE N_NIMCALL(void, keepUMovieSceneGameplayCueTrack)(UMovieSceneGameplayCueTrack_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMovieSceneGameplayCueKey)(FMovieSceneGameplayCueKey_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMovieSceneGameplayCueChannel)(FMovieSceneGameplayCueChannel_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepGameplayAbilitiesSerialization)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalGameplayCueReplicationProxyForNetSerializer)(FMinimalGameplayCueReplicationProxyForNetSerializer_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMinimalReplicationTagCountMapForNetSerializer)(FMinimalReplicationTagCountMapForNetSerializer_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineActorPartition)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepAPartitionActor)(APartitionActor_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAI)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUAISystemBase)(UAISystemBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavLinkDefinition)(UNavLinkDefinition* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavCollisionBase)(UNavCollisionBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUNavigationDataChunk)(UNavigationDataChunk_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, registerMovementComponent_)(UAvoidanceManager_* self, UMovementComponent_* movementComp, NF32 avoidanceWeight);
N_LIB_PRIVATE N_NIMCALL(NI32, getObjectCount_)(UAvoidanceManager_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getNewAvoidanceUID_)(UAvoidanceManager_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getAvoidanceVelocityForComponent_)(UAvoidanceManager_* self, UMovementComponent_* movementComp);
N_LIB_PRIVATE N_NIMCALL(void, keepUAvoidanceManager)(UAvoidanceManager_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavigationLinkBase)(FNavigationLinkBase fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavigationLink)(FNavigationLink fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMovementProperties)(FMovementProperties fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFNavDataConfig)(FNavDataConfig fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineAtmosphere)(void);
N_LIB_PRIVATE N_NIMCALL(UAtmosphericFogComponent_*, atmosphericFogComponent)(AAtmosphericFog_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setatmosphericFogComponent)(AAtmosphericFog_* obj, UAtmosphericFogComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAAtmosphericFog)(AAtmosphericFog_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCamera)(void);
N_LIB_PRIVATE N_NIMCALL(UCameraComponent*, cameraComponent)(ACameraActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraComponent)(ACameraActor_* obj, UCameraComponent* val);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, sceneComponent)(ACameraActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsceneComponent)(ACameraActor_* obj, USceneComponent* val);
N_LIB_PRIVATE N_NIMCALL(NI32, getAutoActivatePlayerIndex_)(ACameraActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepACameraActor)(ACameraActor_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, fieldOfView)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfieldOfView)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoWidth)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorthoWidth)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoNearClipPlane)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorthoNearClipPlane)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, orthoFarClipPlane)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setorthoFarClipPlane)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, aspectRatio)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaspectRatio)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bConstrainAspectRatio)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbConstrainAspectRatio)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseFieldOfViewForLOD)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseFieldOfViewForLOD)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDrawFrustumAllowed)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDrawFrustumAllowed)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCameraMeshHiddenInGame)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCameraMeshHiddenInGame)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bLockToHmd)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbLockToHmd)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePawnControlRotation)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePawnControlRotation)(UCameraComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw, projectionMode)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setprojectionMode)(UCameraComponent* obj, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw val);
N_LIB_PRIVATE N_NIMCALL(UStaticMesh*, cameraMesh)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraMesh)(UCameraComponent* obj, UStaticMesh* val);
N_LIB_PRIVATE N_NIMCALL(NF32, postProcessBlendWeight)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessBlendWeight)(UCameraComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FPostProcessSettings*, postProcessSettings)(UCameraComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpostProcessSettings)(UCameraComponent* obj, FPostProcessSettings val);
N_LIB_PRIVATE N_NIMCALL(void, setUseFieldOfViewForLOD_)(UCameraComponent* self, NIM_BOOL bInUseFieldOfViewForLOD);
N_LIB_PRIVATE N_NIMCALL(void, setProjectionMode_)(UCameraComponent* self, tyEnum_ECameraProjectionMode__kUlhmlKaQkVuxty7hMxhJw inProjectionMode);
N_LIB_PRIVATE N_NIMCALL(void, setPostProcessBlendWeight_)(UCameraComponent* self, NF32 inPostProcessBlendWeight);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoWidth_)(UCameraComponent* self, NF32 inOrthoWidth);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoNearClipPlane_)(UCameraComponent* self, NF32 inOrthoNearClipPlane);
N_LIB_PRIVATE N_NIMCALL(void, setOrthoFarClipPlane_)(UCameraComponent* self, NF32 inOrthoFarClipPlane);
N_LIB_PRIVATE N_NIMCALL(void, setFieldOfView_)(UCameraComponent* self, NF32 inFieldOfView);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintAspectRatio_)(UCameraComponent* self, NIM_BOOL bInConstrainAspectRatio);
N_LIB_PRIVATE N_NIMCALL(void, setAspectRatio_)(UCameraComponent* self, NF32 inAspectRatio);
N_LIB_PRIVATE N_NIMCALL(void, removeBlendable_)(UCameraComponent* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject);
N_LIB_PRIVATE N_NIMCALL(void, onCameraMeshHiddenChanged_)(UCameraComponent* self);
N_LIB_PRIVATE N_NIMCALL(void, getCameraView_)(UCameraComponent* self, NF32 deltaTime, FMinimalViewInfo& desiredView);
N_LIB_PRIVATE N_NIMCALL(void, addOrUpdateBlendable_)(UCameraComponent* self, TY__F9b2cvIGUaHd4jgh3Qa4T7w inBlendableObject, NF32 inWeight);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraComponent)(UCameraComponent* fake);
N_LIB_PRIVATE N_NIMCALL(USceneComponent*, transformComponent)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, settransformComponent)(APlayerCameraManager* obj, USceneComponent* val);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultFOV)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultFOV)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultOrthoWidth)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultOrthoWidth)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, defaultAspectRatio)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultAspectRatio)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__9bGGmzTmY6puojW0P5hirIA*, defaultModifiers)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdefaultModifiers)(APlayerCameraManager* obj, TY__9bGGmzTmY6puojW0P5hirIA val);
N_LIB_PRIVATE N_NIMCALL(NF32, freeCamDistance)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfreeCamDistance)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector*, freeCamOffset)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfreeCamOffset)(APlayerCameraManager* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(FVector*, viewTargetOffset)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewTargetOffset)(APlayerCameraManager* obj, FVector val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsOrthographic)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsOrthographic)(APlayerCameraManager* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bDefaultConstrainAspectRatio)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbDefaultConstrainAspectRatio)(APlayerCameraManager* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bClientSimulatingViewTarget)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbClientSimulatingViewTarget)(APlayerCameraManager* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseClientSideCameraUpdates)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseClientSideCameraUpdates)(APlayerCameraManager* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bGameCameraCutThisFrame)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbGameCameraCutThisFrame)(APlayerCameraManager* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewPitchMin)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewPitchMin)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewPitchMax)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewPitchMax)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewYawMin)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewYawMin)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewYawMax)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewYawMax)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewRollMin)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewRollMin)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, viewRollMax)(APlayerCameraManager* obj);
N_LIB_PRIVATE N_NIMCALL(void, setviewRollMax)(APlayerCameraManager* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, stopCameraShake_)(APlayerCameraManager* self, UCameraShakeBase_* shakeInstance, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, stopCameraFade_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(void, stopAllInstancesOfCameraShakeFromSource_)(APlayerCameraManager* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, UCameraShakeSourceComponent_* sourceComponent, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, stopAllInstancesOfCameraShake_)(APlayerCameraManager* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shake, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakesFromSource_)(APlayerCameraManager* self, UCameraShakeSourceComponent_* sourceComponent, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakes_)(APlayerCameraManager* self, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(UCameraShakeBase_*, startCameraShakeFromSource_)(APlayerCameraManager* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shakeClass, UCameraShakeSourceComponent_* sourceComponent, NF32 scale, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace, FRotator userPlaySpaceRot);
N_LIB_PRIVATE N_NIMCALL(UCameraShakeBase_*, startCameraShake_)(APlayerCameraManager* self, TY__KQEDk1C09aJw5qI9c3NLtbyA shakeClass, NF32 scale, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace, FRotator userPlaySpaceRot);
N_LIB_PRIVATE N_NIMCALL(void, startCameraFade_)(APlayerCameraManager* self, NF32 fromAlpha, NF32 toAlpha, NF32 duration, FLinearColor color, NIM_BOOL bShouldFadeAudio, NIM_BOOL bHoldWhenFinished);
N_LIB_PRIVATE N_NIMCALL(void, setManualCameraFade_)(APlayerCameraManager* self, NF32 inFadeAmount, FLinearColor color, NIM_BOOL bInFadeAudio);
N_LIB_PRIVATE N_NIMCALL(void, setGameCameraCutThisFrame_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(void, removeGenericCameraLensEffect_)(APlayerCameraManager* self, TY__hvmi1aSu7TExY3gfL1PBlA emitter);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, removeCameraModifier_)(APlayerCameraManager* self, UCameraModifier_* modifierToRemove);
N_LIB_PRIVATE N_NIMCALL(APlayerController*, getOwningPlayerController_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getFOVAngle_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(FRotator, getCameraRotation_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getCameraLocation_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(UCameraModifier_*, findCameraModifierByClass_)(APlayerCameraManager* self, TY__GYGn274MFCl9cAJqupIxNcA modifierClass);
N_LIB_PRIVATE N_NIMCALL(void, clearCameraLensEffects_)(APlayerCameraManager* self);
N_LIB_PRIVATE N_NIMCALL(UCameraModifier_*, addNewCameraModifier_)(APlayerCameraManager* self, TY__GYGn274MFCl9cAJqupIxNcA modifierClass);
N_LIB_PRIVATE N_NIMCALL(TY__hvmi1aSu7TExY3gfL1PBlA, addGenericCameraLensEffect_)(APlayerCameraManager* self, TY__9akcXb9b3ftlkdW8NDwR22Mg lensEffectEmitterClass);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bExclusive)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbExclusive)(UCameraModifier_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NU8, priority)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(UCameraModifier_* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(APlayerCameraManager*, cameraOwner)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraOwner)(UCameraModifier_* obj, APlayerCameraManager* val);
N_LIB_PRIVATE N_NIMCALL(NF32, alphaInTime)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalphaInTime)(UCameraModifier_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, alphaOutTime)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalphaOutTime)(UCameraModifier_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, alpha)(UCameraModifier_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setalpha)(UCameraModifier_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDisabled_)(UCameraModifier_* self);
N_LIB_PRIVATE N_NIMCALL(AActor*, getViewTarget_)(UCameraModifier_* self);
N_LIB_PRIVATE N_NIMCALL(void, enableModifier_)(UCameraModifier_* self);
N_LIB_PRIVATE N_NIMCALL(void, disableModifier_)(UCameraModifier_* self, NIM_BOOL bImmediate);
N_LIB_PRIVATE N_NIMCALL(void, keepUCameraModifier)(UCameraModifier_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, shakeScale)(UCameraShakeBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setshakeScale)(UCameraShakeBase_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setRootShakePattern_)(UCameraShakeBase_* self, UCameraShakePattern_* inPattern);
N_LIB_PRIVATE N_NIMCALL(UCameraShakePattern_*, getRootShakePattern_)(UCameraShakeBase_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w, attenuation)(UCameraShakeSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(UCameraShakeSourceComponent_* obj, tyEnum_ECameraShakeAttenuation__BKAScf7MIZQ48wC0drhV6w val);
N_LIB_PRIVATE N_NIMCALL(NF32, innerAttenuationRadius)(UCameraShakeSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinnerAttenuationRadius)(UCameraShakeSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, outerAttenuationRadius)(UCameraShakeSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setouterAttenuationRadius)(UCameraShakeSourceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__KQEDk1C09aJw5qI9c3NLtbyA, cameraShake)(UCameraShakeSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcameraShake)(UCameraShakeSourceComponent_* obj, TY__KQEDk1C09aJw5qI9c3NLtbyA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoStart)(UCameraShakeSourceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoStart)(UCameraShakeSourceComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakesOfType_)(UCameraShakeSourceComponent_* self, TY__KQEDk1C09aJw5qI9c3NLtbyA inCameraShake, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, stopAllCameraShakes_)(UCameraShakeSourceComponent_* self, NIM_BOOL bImmediately);
N_LIB_PRIVATE N_NIMCALL(void, startCameraShake_)(UCameraShakeSourceComponent_* self, TY__KQEDk1C09aJw5qI9c3NLtbyA inCameraShake, NF32 scale, tyEnum_ECameraShakePlaySpace__eQDN9ckllXFQLicB7v7z6Kg playSpace, FRotator userPlaySpaceRot);
N_LIB_PRIVATE N_NIMCALL(void, start_)(UCameraShakeSourceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getAttenuationFactor_)(UCameraShakeSourceComponent_* self, FVector& location);
N_LIB_PRIVATE N_NIMCALL(void, keepFTViewTarget)(FTViewTarget fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFViewTargetTransitionParams)(FViewTargetTransitionParams fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeStartParams)(FCameraShakeStartParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeUpdateParams)(FCameraShakeUpdateParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeScrubParams)(FCameraShakeScrubParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeStopParams)(FCameraShakeStopParams_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeDuration)(FCameraShakeDuration_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFCameraShakeInfo)(FCameraShakeInfo_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCommandlets)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUCommandlet)(UCommandlet_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineCurves)(void);
N_LIB_PRIVATE N_NIMCALL(void, getValueRange_)(UCurveBase_* self, NF32& minValue, NF32& maxValue);
N_LIB_PRIVATE N_NIMCALL(void, getTimeRange_)(UCurveBase_* self, NF32& minTime, NF32& maxTime);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveBase)(UCurveBase_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, getFloatValue_)(UCurveFloat* self, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getUnadjustedLinearColorValue_)(UCurveLinearColor_* self, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getLinearColorValue_)(UCurveLinearColor_* self, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getClampedLinearColorValue_)(UCurveLinearColor_* self, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getCurvePosition_)(UCurveLinearColorAtlas_* self, UCurveLinearColor_* inCurve, NF32& position);
N_LIB_PRIVATE N_NIMCALL(void, keepUCurveLinearColorAtlas)(UCurveLinearColorAtlas_* fake);
N_LIB_PRIVATE N_NIMCALL(FVector, getVectorValue_)(UCurveVector_* self, NF32 inTime);
N_LIB_PRIVATE N_NIMCALL(void, keepFRuntimeVectorCurve)(FRuntimeVectorCurve_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDataDrivenCVars)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepFDataDrivenConsoleVariable)(FDataDrivenConsoleVariable_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineDistributions)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUDistributionFloat)(UDistributionFloat* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDistributionFloatParameterBase)(UDistributionFloatParameterBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDistributionVector)(UDistributionVector* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUDistributionVectorParameterBase)(UDistributionVectorParameterBase_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEdGraph)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUEdGraphPin_Deprecated)(UEdGraphPin_Deprecated* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEdGraphNode_Documentation)(UEdGraphNode_Documentation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFEdGraphPinType)(FEdGraphPinType fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineEditorFramework)(void);
N_LIB_PRIVATE N_NIMCALL(void, scriptedAddFilename_)(UAssetImportData_* self, FString inPath, NI32 index, FString sourceFileLabel);
N_LIB_PRIVATE N_NIMCALL(FString, getFirstFilename_)(UAssetImportData_* self);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw, extractFilenames_)(UAssetImportData_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUAssetImportData)(UAssetImportData_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineElements)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepFTypedElementPasteOptions)(FTypedElementPasteOptions_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTypedElementDeletionOptions)(FTypedElementDeletionOptions_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineExporters)(void);
N_LIB_PRIVATE N_NIMCALL(TY__Gdb8rCprT6WGagrQes2BIg, supportedClass)(UExporter_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsupportedClass)(UExporter_* obj, TY__Gdb8rCprT6WGagrQes2BIg val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, formatExtension)(UExporter_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setformatExtension)(UExporter_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(TY__myhN0u2pNczwuaOhbdYPXw*, formatDescription)(UExporter_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setformatDescription)(UExporter_* obj, TY__myhN0u2pNczwuaOhbdYPXw val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bText)(UExporter_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbText)(UExporter_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(UAssetExportTask_*, exportTask)(UExporter_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setexportTask)(UExporter_* obj, UAssetExportTask_* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, runAssetExportTasks_)(TY__T8LsyrGmVj5MTxJHlTQQXA& exportTasks);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, runAssetExportTask_)(UAssetExportTask_* task);
N_LIB_PRIVATE N_NIMCALL(void, keepUExporter)(UExporter_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineHaptics)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUHapticFeedbackEffect_Buffer)(UHapticFeedbackEffect_Buffer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHapticFeedbackEffect_Curve)(UHapticFeedbackEffect_Curve_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUHapticFeedbackEffect_SoundWave)(UHapticFeedbackEffect_SoundWave_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineInstances)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUInstancedPlacemenClientSettings)(UInstancedPlacemenClientSettings_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineISMPartition)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepAISMPartitionActor)(AISMPartitionActor_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineKismet)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUPlatformGameInstance)(UPlatformGameInstance_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineLightmass)(void);
N_LIB_PRIVATE N_NIMCALL(ULightmassPortalComponent_*, portalComponent)(ALightmassPortal_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setportalComponent)(ALightmassPortal_* obj, ULightmassPortalComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepALightmassPortal)(ALightmassPortal_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, overrideVisibleActors)(APrecomputedVisibilityOverrideVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideVisibleActors)(APrecomputedVisibilityOverrideVolume_* obj, TY__kbK03O9cVTTS0GR9cjPhedTg val);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, overrideInvisibleActors)(APrecomputedVisibilityOverrideVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideInvisibleActors)(APrecomputedVisibilityOverrideVolume_* obj, TY__kbK03O9cVTTS0GR9cjPhedTg val);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ*, overrideInvisibleLevels)(APrecomputedVisibilityOverrideVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoverrideInvisibleLevels)(APrecomputedVisibilityOverrideVolume_* obj, TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ val);
N_LIB_PRIVATE N_NIMCALL(void, keepAPrecomputedVisibilityOverrideVolume)(APrecomputedVisibilityOverrideVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULightmappedSurfaceCollection)(ULightmappedSurfaceCollection_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepULightmassPrimitiveSettingsObject)(ULightmassPrimitiveSettingsObject_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAVolumetricLightmapDensityVolume)(AVolumetricLightmapDensityVolume_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineMaterials)(void);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialInterface* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialInterface* obj, USubsurfaceProfile_* val);
N_LIB_PRIVATE N_NIMCALL(void, setForceMipLevelsToBeResident_)(UMaterialInterface* self, NIM_BOOL overrideForceMiplevelsToBeResident, NIM_BOOL bForceMiplevelsToBeResidentValue, NF32 forceDuration, NI32 cinematicTextureGroups, NIM_BOOL bFastResponse);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, getPhysicalMaterialFromMap_)(UMaterialInterface* self, NI32 index);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, getPhysicalMaterial_)(UMaterialInterface* self);
N_LIB_PRIVATE N_NIMCALL(FMaterialParameterInfo, getParameterInfo_)(UMaterialInterface* self, tyEnum_EMaterialParameterAssociation__bQ0QFzWtAc9bK1kySiJFxnA association, FName parameterName, UMaterialFunctionInterface* layerFunction);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw, getBlendMode_)(UMaterialInterface* self);
N_LIB_PRIVATE N_NIMCALL(UMaterial*, getBaseMaterial_)(UMaterialInterface* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA, materialDomain)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialDomain)(UMaterial* obj, tyEnum_EMaterialDomain__qcqdnMB9czNv6EoTGBAyiCA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw, blendMode)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendMode)(UMaterial* obj, tyEnum_EBlendMode__WcvSHj5R19av8LKeNUFb9blw val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ, materialDecalResponse)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialDecalResponse)(UMaterial* obj, tyEnum_EMaterialDecalResponse__DEFOL8MnSj8hhnlE9c5tSzQ val);
N_LIB_PRIVATE N_NIMCALL(FMaterialOverrideNanite*, naniteOverrideMaterial)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setnaniteOverrideMaterial)(UMaterial* obj, FMaterialOverrideNanite val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseEmissiveForDynamicAreaLighting)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseEmissiveForDynamicAreaLighting)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithSkeletalMesh)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithSkeletalMesh)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithEditorCompositing)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithEditorCompositing)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithParticleSprites)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithParticleSprites)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithBeamTrails)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithBeamTrails)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithMeshParticles)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithMeshParticles)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraSprites)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraSprites)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraRibbons)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraRibbons)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNiagaraMeshParticles)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNiagaraMeshParticles)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithGeometryCache)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithGeometryCache)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithStaticLighting)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithStaticLighting)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithMorphTargets)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithMorphTargets)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithSplineMeshes)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithSplineMeshes)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithInstancedStaticMeshes)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithInstancedStaticMeshes)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithGeometryCollections)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithGeometryCollections)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithClothing)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithClothing)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithWater)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithWater)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithHairStrands)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithHairStrands)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithLidarPointCloud)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithLidarPointCloud)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithVirtualHeightfieldMesh)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithVirtualHeightfieldMesh)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithNanite)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithNanite)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsedWithVolumetricCloud)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsedWithVolumetricCloud)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutomaticallySetUsageInEditor)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutomaticallySetUsageInEditor)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bFullyRough)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbFullyRough)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA, floatPrecisionMode)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfloatPrecisionMode)(UMaterial* obj, tyEnum_EMaterialFloatPrecisionMode__Yligh7XW7m4ZOHgH1vHpKA val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLightmapDirectionality)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLightmapDirectionality)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMobileEnableHighQualityBRDF)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMobileEnableHighQualityBRDF)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseAlphaToCoverage)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseAlphaToCoverage)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForwardRenderUsePreintegratedGFForSimpleIBL)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForwardRenderUsePreintegratedGFForSimpleIBL)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseHQForwardReflections)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseHQForwardReflections)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bForwardBlendsSkyLightCubemaps)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbForwardBlendsSkyLightCubemaps)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePlanarForwardReflections)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePlanarForwardReflections)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bNormalCurvatureToRoughness)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbNormalCurvatureToRoughness)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ, blendableLocation)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendableLocation)(UMaterial* obj, tyEnum_EBlendableLocation__3TU9cSw89b9cfQJRYUJzxnDUQ val);
N_LIB_PRIVATE N_NIMCALL(NU8, blendableOutputAlpha)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendableOutputAlpha)(UMaterial* obj, NU8 val);
N_LIB_PRIVATE N_NIMCALL(NI32, blendablePriority)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setblendablePriority)(UMaterial* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIsBlendable)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIsBlendable)(UMaterial* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxWorldPositionOffsetDistance)(UMaterial* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxWorldPositionOffsetDistance)(UMaterial* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterial)(UMaterial* fake);
N_LIB_PRIVATE N_NIMCALL(UPhysicalMaterial*, physMaterial)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setphysMaterial)(UMaterialInstance* obj, UPhysicalMaterial* val);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, parent)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparent)(UMaterialInstance* obj, UMaterialInterface* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideSubsurfaceProfile)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideSubsurfaceProfile)(UMaterialInstance* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__wpkkvw3QAwKf7ZaACMVTtA*, scalarParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setscalarParameterValues)(UMaterialInstance* obj, TY__wpkkvw3QAwKf7ZaACMVTtA val);
N_LIB_PRIVATE N_NIMCALL(TY__sddSY5hxII7T4XO9a1Mez7g*, vectorParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvectorParameterValues)(UMaterialInstance* obj, TY__sddSY5hxII7T4XO9a1Mez7g val);
N_LIB_PRIVATE N_NIMCALL(TY__MjN8bA2J7QGs87X9b69cz9ciA*, doubleVectorParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdoubleVectorParameterValues)(UMaterialInstance* obj, TY__MjN8bA2J7QGs87X9b69cz9ciA val);
N_LIB_PRIVATE N_NIMCALL(TY__2e2kXW4qc0U6k9bt5o0wgDg*, textureParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, settextureParameterValues)(UMaterialInstance* obj, TY__2e2kXW4qc0U6k9bt5o0wgDg val);
N_LIB_PRIVATE N_NIMCALL(TY__2kfN9asIen9adfoHPjm0OHLg*, runtimeVirtualTextureParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setruntimeVirtualTextureParameterValues)(UMaterialInstance* obj, TY__2kfN9asIen9adfoHPjm0OHLg val);
N_LIB_PRIVATE N_NIMCALL(TY__rZldDsDtIj9c5z9bC1DdMiHQ*, sparseVolumeTextureParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsparseVolumeTextureParameterValues)(UMaterialInstance* obj, TY__rZldDsDtIj9c5z9bC1DdMiHQ val);
N_LIB_PRIVATE N_NIMCALL(TY__FGDznZ1p2MJe6xaB8q4CCQ*, fontParameterValues)(UMaterialInstance* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfontParameterValues)(UMaterialInstance* obj, TY__FGDznZ1p2MJe6xaB8q4CCQ val);
N_LIB_PRIVATE N_NIMCALL(void, setNaniteOverrideMaterial_)(UMaterialInstanceConstant_* self, NIM_BOOL bInEnableOverride, UMaterialInterface* inOverrideMaterial);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterValue_)(UMaterialInstanceConstant_* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(UTexture*, getTextureParameterValue_)(UMaterialInstanceConstant_* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterValue_)(UMaterialInstanceConstant_* self, FName parameterName);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialInstanceConstant)(UMaterialInstanceConstant_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, materialExpressionEditorX)(UMaterialExpression* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialExpressionEditorX)(UMaterialExpression* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, materialExpressionEditorY)(UMaterialExpression* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialExpressionEditorY)(UMaterialExpression* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionAbs)(UMaterialExpressionAbs_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionAbsorptionMediumMaterialOutput)(UMaterialExpressionAbsorptionMediumMaterialOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionAdd)(UMaterialExpressionAdd_* fake);
N_LIB_PRIVATE N_NIMCALL(UTexture*, texture)(UMaterialExpressionTextureBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settexture)(UMaterialExpressionTextureBase_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg, samplerType)(UMaterialExpressionTextureBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsamplerType)(UMaterialExpressionTextureBase_* obj, tyEnum_EMaterialSamplerType__fzdbYzexQx9asKrbLcTTGYg val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionAntialiasedTextureMask)(UMaterialExpressionAntialiasedTextureMask_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionAppendVector)(UMaterialExpressionAppendVector_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionArccosine)(UMaterialExpressionArccosine_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionArcsine)(UMaterialExpressionArcsine_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionArctangent)(UMaterialExpressionArctangent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionArctangent2)(UMaterialExpressionArctangent2_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionBlackBody)(UMaterialExpressionBlackBody_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionBlendMaterialAttributes)(UMaterialExpressionBlendMaterialAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionBreakMaterialAttributes)(UMaterialExpressionBreakMaterialAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionBumpOffset)(UMaterialExpressionBumpOffset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCeil)(UMaterialExpressionCeil_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionParameter)(UMaterialExpressionParameter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVectorParameter)(UMaterialExpressionVectorParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionChannelMaskParameter)(UMaterialExpressionChannelMaskParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionClamp)(UMaterialExpressionClamp_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionClearCoatNormalCustomOutput)(UMaterialExpressionClearCoatNormalCustomOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCollectionParameter)(UMaterialExpressionCollectionParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionComment)(UMaterialExpressionComment_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionComponentMask)(UMaterialExpressionComponentMask_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionComposite)(UMaterialExpressionComposite_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, r)(UMaterialExpressionConstant_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setr)(UMaterialExpressionConstant_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstant)(UMaterialExpressionConstant_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, r)(UMaterialExpressionConstant2Vector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setr)(UMaterialExpressionConstant2Vector_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, g)(UMaterialExpressionConstant2Vector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setg)(UMaterialExpressionConstant2Vector_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstant2Vector)(UMaterialExpressionConstant2Vector_* fake);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, constant)(UMaterialExpressionConstant3Vector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconstant)(UMaterialExpressionConstant3Vector_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstant3Vector)(UMaterialExpressionConstant3Vector_* fake);
N_LIB_PRIVATE N_NIMCALL(FLinearColor*, constant)(UMaterialExpressionConstant4Vector_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconstant)(UMaterialExpressionConstant4Vector_* obj, FLinearColor val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstant4Vector)(UMaterialExpressionConstant4Vector_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstantBiasScale)(UMaterialExpressionConstantBiasScale_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCosine)(UMaterialExpressionCosine_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCrossProduct)(UMaterialExpressionCrossProduct_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionScalarParameter)(UMaterialExpressionScalarParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCurveAtlasRowParameter)(UMaterialExpressionCurveAtlasRowParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionCustom)(UMaterialExpressionCustom_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDataDrivenShaderPlatformInfoSwitch)(UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDDX)(UMaterialExpressionDDX_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDDY)(UMaterialExpressionDDY_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDesaturation)(UMaterialExpressionDesaturation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDistance)(UMaterialExpressionDistance_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDivide)(UMaterialExpressionDivide_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDotProduct)(UMaterialExpressionDotProduct_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDoubleVectorParameter)(UMaterialExpressionDoubleVectorParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionDynamicParameter)(UMaterialExpressionDynamicParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionExecBegin)(UMaterialExpressionExecBegin_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFeatureLevelSwitch)(UMaterialExpressionFeatureLevelSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFloor)(UMaterialExpressionFloor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFmod)(UMaterialExpressionFmod_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFontSample)(UMaterialExpressionFontSample_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFontSampleParameter)(UMaterialExpressionFontSampleParameter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionForLoop)(UMaterialExpressionForLoop_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFrac)(UMaterialExpressionFrac_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFresnel)(UMaterialExpressionFresnel_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, inputName)(UMaterialExpressionFunctionInput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputName)(UMaterialExpressionFunctionInput_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ, inputType)(UMaterialExpressionFunctionInput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinputType)(UMaterialExpressionFunctionInput_* obj, tyEnum_EFunctionInputType__KCNwVRoEWjAVJPgIGt0pnQ val);
N_LIB_PRIVATE N_NIMCALL(FVector4f*, previewValue)(UMaterialExpressionFunctionInput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpreviewValue)(UMaterialExpressionFunctionInput_* obj, FVector4f val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUsePreviewValueAsDefault)(UMaterialExpressionFunctionInput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUsePreviewValueAsDefault)(UMaterialExpressionFunctionInput_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NI32, sortPriority)(UMaterialExpressionFunctionInput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsortPriority)(UMaterialExpressionFunctionInput_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionFunctionInput)(UMaterialExpressionFunctionInput_* fake);
N_LIB_PRIVATE N_NIMCALL(FName*, outputName)(UMaterialExpressionFunctionOutput_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputName)(UMaterialExpressionFunctionOutput_* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(NF, value)(UMaterialExpressionConstantDouble_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvalue)(UMaterialExpressionConstantDouble_* obj, NF val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionConstantDouble)(UMaterialExpressionConstantDouble_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionGetLocal)(UMaterialExpressionGetLocal_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionGetMaterialAttributes)(UMaterialExpressionGetMaterialAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionHairAttributes)(UMaterialExpressionHairAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionHairColor)(UMaterialExpressionHairColor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionIf)(UMaterialExpressionIf_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionIfThenElse)(UMaterialExpressionIfThenElse_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionInverseLinearInterpolate)(UMaterialExpressionInverseLinearInterpolate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionLinearInterpolate)(UMaterialExpressionLinearInterpolate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionLogarithm10)(UMaterialExpressionLogarithm10_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionLogarithm2)(UMaterialExpressionLogarithm2_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMakeMaterialAttributes)(UMaterialExpressionMakeMaterialAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMaterialAttributeLayers)(UMaterialExpressionMaterialAttributeLayers* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, setMaterialFunction_)(UMaterialExpressionMaterialFunctionCall* self, UMaterialFunctionInterface* newMaterialFunction);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMaterialFunctionCall)(UMaterialExpressionMaterialFunctionCall* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMax)(UMaterialExpressionMax_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMin)(UMaterialExpressionMin_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionMultiply)(UMaterialExpressionMultiply_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionNoise)(UMaterialExpressionNoise_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionNormalize)(UMaterialExpressionNormalize_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionOneMinus)(UMaterialExpressionOneMinus_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPanner)(UMaterialExpressionPanner_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionParticleSubUV)(UMaterialExpressionParticleSubUV_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPinBase)(UMaterialExpressionPinBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPower)(UMaterialExpressionPower_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionPreviousFrameSwitch)(UMaterialExpressionPreviousFrameSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionQualitySwitch)(UMaterialExpressionQualitySwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionReflectionVectorWS)(UMaterialExpressionReflectionVectorWS_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionRotateAboutAxis)(UMaterialExpressionRotateAboutAxis_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionRuntimeVirtualTextureSampleParameter)(UMaterialExpressionRuntimeVirtualTextureSampleParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSaturate)(UMaterialExpressionSaturate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSetLocal)(UMaterialExpressionSetLocal_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSetMaterialAttributes)(UMaterialExpressionSetMaterialAttributes_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionShaderStageSwitch)(UMaterialExpressionShaderStageSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionShadingModel)(UMaterialExpressionShadingModel_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionShadingPathSwitch)(UMaterialExpressionShadingPathSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSine)(UMaterialExpressionSine_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSingleLayerWaterMaterialOutput)(UMaterialExpressionSingleLayerWaterMaterialOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSmoothStep)(UMaterialExpressionSmoothStep_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSobol)(UMaterialExpressionSobol_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSparseVolumeTextureSampleParameter)(UMaterialExpressionSparseVolumeTextureSampleParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSpeedTree)(UMaterialExpressionSpeedTree_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSphereMask)(UMaterialExpressionSphereMask_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSquareRoot)(UMaterialExpressionSquareRoot_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStaticBool)(UMaterialExpressionStaticBool_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStaticBoolParameter)(UMaterialExpressionStaticBoolParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStaticComponentMaskParameter)(UMaterialExpressionStaticComponentMaskParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStaticSwitch)(UMaterialExpressionStaticSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStaticSwitchParameter)(UMaterialExpressionStaticSwitchParameter_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStep)(UMaterialExpressionStep_* fake);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataLegacyConversion_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataLegacyConversion_* obj, USubsurfaceProfile_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataLegacyConversion)(UMaterialExpressionStrataLegacyConversion_* fake);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataSlabBSDF_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataSlabBSDF_* obj, USubsurfaceProfile_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataSlabBSDF)(UMaterialExpressionStrataSlabBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataSimpleClearCoatBSDF)(UMaterialExpressionStrataSimpleClearCoatBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataVolumetricFogCloudBSDF)(UMaterialExpressionStrataVolumetricFogCloudBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataUnlitBSDF)(UMaterialExpressionStrataUnlitBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataHairBSDF)(UMaterialExpressionStrataHairBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(USubsurfaceProfile_*, subsurfaceProfile)(UMaterialExpressionStrataEyeBSDF_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubsurfaceProfile)(UMaterialExpressionStrataEyeBSDF_* obj, USubsurfaceProfile_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataEyeBSDF)(UMaterialExpressionStrataEyeBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataSingleLayerWaterBSDF)(UMaterialExpressionStrataSingleLayerWaterBSDF_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataLightFunction)(UMaterialExpressionStrataLightFunction_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataPostProcess)(UMaterialExpressionStrataPostProcess_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataUI)(UMaterialExpressionStrataUI_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataConvertToDecal)(UMaterialExpressionStrataConvertToDecal_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataHorizontalMixing)(UMaterialExpressionStrataHorizontalMixing_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataVerticalLayering)(UMaterialExpressionStrataVerticalLayering_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataAdd)(UMaterialExpressionStrataAdd_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataWeight)(UMaterialExpressionStrataWeight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataTransmittanceToMFP)(UMaterialExpressionStrataTransmittanceToMFP_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataMetalnessToDiffuseAlbedoF0)(UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataHazinessToSecondaryRoughness)(UMaterialExpressionStrataHazinessToSecondaryRoughness_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionStrataThinFilm)(UMaterialExpressionStrataThinFilm_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSubsurfaceMediumMaterialOutput)(UMaterialExpressionSubsurfaceMediumMaterialOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSubtract)(UMaterialExpressionSubtract_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionSwitch)(UMaterialExpressionSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTangent)(UMaterialExpressionTangent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTangentOutput)(UMaterialExpressionTangentOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTemporalSobol)(UMaterialExpressionTemporalSobol_* fake);
N_LIB_PRIVATE N_NIMCALL(NI32, coordinateIndex)(UMaterialExpressionTextureCoordinate_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcoordinateIndex)(UMaterialExpressionTextureCoordinate_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, uTiling)(UMaterialExpressionTextureCoordinate_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuTiling)(UMaterialExpressionTextureCoordinate_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, vTiling)(UMaterialExpressionTextureCoordinate_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvTiling)(UMaterialExpressionTextureCoordinate_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureCoordinate)(UMaterialExpressionTextureCoordinate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTextureSampleParameterSubUV)(UMaterialExpressionTextureSampleParameterSubUV_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionThinTranslucentMaterialOutput)(UMaterialExpressionThinTranslucentMaterialOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTime)(UMaterialExpressionTime_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTransform)(UMaterialExpressionTransform_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTransformPosition)(UMaterialExpressionTransformPosition_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionTruncateLWC)(UMaterialExpressionTruncateLWC_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVectorNoise)(UMaterialExpressionVectorNoise_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVertexInterpolator)(UMaterialExpressionVertexInterpolator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionViewProperty)(UMaterialExpressionViewProperty_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVolumetricAdvancedMaterialOutput)(UMaterialExpressionVolumetricAdvancedMaterialOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput)(UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionWhileLoop)(UMaterialExpressionWhileLoop_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialExpressionWorldPosition)(UMaterialExpressionWorldPosition_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialFunctionEditorOnlyData)(UMaterialFunctionEditorOnlyData* fake);
N_LIB_PRIVATE N_NIMCALL(UMaterialFunctionInterface*, parent)(UMaterialFunctionInstance_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparent)(UMaterialFunctionInstance_* obj, UMaterialFunctionInterface* val);
N_LIB_PRIVATE N_NIMCALL(TY__kbK03O9cVTTS0GR9cjPhedTg*, targetActors)(AMaterialInstanceActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settargetActors)(AMaterialInstanceActor_* obj, TY__kbK03O9cVTTS0GR9cjPhedTg val);
N_LIB_PRIVATE N_NIMCALL(void, keepAMaterialInstanceActor)(AMaterialInstanceActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialEditorOnlyData)(UMaterialEditorOnlyData* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUMaterialInstanceEditorOnlyData)(UMaterialInstanceEditorOnlyData* fake);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getVectorParameterNames_)(UMaterialParameterCollection_* self);
N_LIB_PRIVATE N_NIMCALL(FLinearColor, getVectorParameterDefaultValue_)(UMaterialParameterCollection_* self, FName parameterName, NIM_BOOL& bParameterFound);
N_LIB_PRIVATE N_NIMCALL(TY__Vq9a9bxqg8vUQ4le6Om9cQ8dQ, getScalarParameterNames_)(UMaterialParameterCollection_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getScalarParameterDefaultValue_)(UMaterialParameterCollection_* self, FName parameterName, NIM_BOOL& bParameterFound);
N_LIB_PRIVATE N_NIMCALL(void, keepFScalarParameterValue)(FScalarParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVectorParameterValue)(FVectorParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFDoubleVectorParameterValue)(FDoubleVectorParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFTextureParameterValue)(FTextureParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFRuntimeVirtualTextureParameterValue)(FRuntimeVirtualTextureParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSparseVolumeTextureParameterValue)(FSparseVolumeTextureParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFFontParameterValue)(FFontParameterValue fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFMaterialOverrideNanite)(FMaterialOverrideNanite fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineNet)(void);
N_LIB_PRIVATE N_NIMCALL(FVoiceSettings_*, settings)(UVOIPTalker_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(UVOIPTalker_* obj, FVoiceSettings_ val);
N_LIB_PRIVATE N_NIMCALL(void, registerWithPlayerState_)(UVOIPTalker_* self, APlayerState_* owningState);
N_LIB_PRIVATE N_NIMCALL(NF32, getVoiceLevel_)(UVOIPTalker_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUVOIPTalker)(UVOIPTalker_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFVoiceSettings)(FVoiceSettings_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineParticles)(void);
N_LIB_PRIVATE N_NIMCALL(UParticleSystemComponent*, particleSystemComponent)(AEmitter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparticleSystemComponent)(AEmitter* obj, UParticleSystemComponent* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bPostUpdateTickGroup)(AEmitter* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbPostUpdateTickGroup)(AEmitter* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, toggleActive_)(AEmitter* self);
N_LIB_PRIVATE N_NIMCALL(void, setVectorParameter_)(AEmitter* self, FName parameterName, FVector param);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialParameter_)(AEmitter* self, FName parameterName, UMaterialInterface* param);
N_LIB_PRIVATE N_NIMCALL(void, setFloatParameter_)(AEmitter* self, FName parameterName, NF32 param);
N_LIB_PRIVATE N_NIMCALL(void, setColorParameter_)(AEmitter* self, FName parameterName, FLinearColor param);
N_LIB_PRIVATE N_NIMCALL(void, setActorParameter_)(AEmitter* self, FName parameterName, AActor* param);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isActive_)(AEmitter* self);
N_LIB_PRIVATE N_NIMCALL(void, deactivate_)(AEmitter* self);
N_LIB_PRIVATE N_NIMCALL(void, activate_)(AEmitter* self);
N_LIB_PRIVATE N_NIMCALL(void, keepAEmitter)(AEmitter* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepAEmitterCameraLensEffectBase)(AEmitterCameraLensEffectBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleLODLevel)(UParticleLODLevel_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, containsEmitterType_)(UParticleSystem* self, UClass* typeData);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAccelerationBase)(UParticleModuleAccelerationBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAcceleration)(UParticleModuleAcceleration_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAccelerationConstant)(UParticleModuleAccelerationConstant_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAccelerationDrag)(UParticleModuleAccelerationDrag_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAccelerationDragScaleOverLife)(UParticleModuleAccelerationDragScaleOverLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAccelerationOverLifetime)(UParticleModuleAccelerationOverLifetime_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAttractorLine)(UParticleModuleAttractorLine_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAttractorParticle)(UParticleModuleAttractorParticle_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleAttractorPoint)(UParticleModuleAttractorPoint_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleBeamNoise)(UParticleModuleBeamNoise_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleBeamSource)(UParticleModuleBeamSource_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleBeamTarget)(UParticleModuleBeamTarget_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleCameraOffset)(UParticleModuleCameraOffset_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleCollision)(UParticleModuleCollision_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleCollisionGPU)(UParticleModuleCollisionGPU_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleColorOverLife)(UParticleModuleColorOverLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleColorScaleOverLife)(UParticleModuleColorScaleOverLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleEventGenerator)(UParticleModuleEventGenerator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleEventReceiverBase)(UParticleModuleEventReceiverBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLifetime)(UParticleModuleLifetime_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, inverseExposureBlend)(UParticleModuleLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinverseExposureBlend)(UParticleModuleLight_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FLightingChannels*, lightingChannels)(UParticleModuleLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlightingChannels)(UParticleModuleLight_* obj, FLightingChannels val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumetricScatteringIntensity)(UParticleModuleLight_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumetricScatteringIntensity)(UParticleModuleLight_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLight)(UParticleModuleLight_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleLight_Seeded)(UParticleModuleLight_Seeded_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleMeshMaterial)(UParticleModuleMeshMaterial_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleMeshRotation)(UParticleModuleMeshRotation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleMeshRotationRate)(UParticleModuleMeshRotationRate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleOrbitBase)(UParticleModuleOrbitBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleOrbit)(UParticleModuleOrbit_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleOrientationAxisLock)(UParticleModuleOrientationAxisLock* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleParameterDynamic)(UParticleModuleParameterDynamic_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRequired)(UParticleModuleRequired_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotation)(UParticleModuleRotation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotationOverLifetime)(UParticleModuleRotationOverLifetime_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotationRate)(UParticleModuleRotationRate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleRotationRateMultiplyLife)(UParticleModuleRotationRateMultiplyLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSize)(UParticleModuleSize_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSizeMultiplyLife)(UParticleModuleSizeMultiplyLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSizeScale)(UParticleModuleSizeScale_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSizeScaleBySpeed)(UParticleModuleSizeScaleBySpeed_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSpawnBase)(UParticleModuleSpawnBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSpawn)(UParticleModuleSpawn_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSpawnPerUnit)(UParticleModuleSpawnPerUnit_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSubUV)(UParticleModuleSubUV_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleSubUVMovie)(UParticleModuleSubUVMovie_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTrailSource)(UParticleModuleTrailSource_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataAnimTrail)(UParticleModuleTypeDataAnimTrail_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataBeam2)(UParticleModuleTypeDataBeam2_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataGpu)(UParticleModuleTypeDataGpu_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataMesh)(UParticleModuleTypeDataMesh_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleTypeDataRibbon)(UParticleModuleTypeDataRibbon_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVectorFieldLocal)(UParticleModuleVectorFieldLocal_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVectorFieldRotationRate)(UParticleModuleVectorFieldRotationRate_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVectorFieldScale)(UParticleModuleVectorFieldScale_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVectorFieldScaleOverLife)(UParticleModuleVectorFieldScaleOverLife_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVelocityBase)(UParticleModuleVelocityBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVelocity)(UParticleModuleVelocity_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVelocityCone)(UParticleModuleVelocityCone_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVelocityInheritParent)(UParticleModuleVelocityInheritParent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUParticleModuleVelocityOverLifetime)(UParticleModuleVelocityOverLifetime_* fake);
N_LIB_PRIVATE N_NIMCALL(UParticleSystem*, Template)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setTemplate)(UParticleSystemComponent* obj, UParticleSystem* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bResetOnDetach)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbResetOnDetach)(UParticleSystemComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAllowRecycling)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAllowRecycling)(UParticleSystemComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoManageAttachment)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoManageAttachment)(UParticleSystemComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoAttachWeldSimulatedBodies)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoAttachWeldSimulatedBodies)(UParticleSystemComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideLODMethod)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideLODMethod)(UParticleSystemComponent* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg, lODMethod)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODMethod)(UParticleSystemComponent* obj, tyEnum_ParticleSystemLODMethod__B1VybpOs9bXRDznyjmGNEqg val);
N_LIB_PRIVATE N_NIMCALL(TY__hRNirpXzEmqf49cUfEqEUHQ*, instanceParameters)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinstanceParameters)(UParticleSystemComponent* obj, TY__hRNirpXzEmqf49cUfEqEUHQ val);
N_LIB_PRIVATE N_NIMCALL(NF32, secondsBeforeInactive)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsecondsBeforeInactive)(UParticleSystemComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, customTimeDilation)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcustomTimeDilation)(UParticleSystemComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__9b9c0qopUCzSW4js0BJumMlQ, autoAttachParent)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachParent)(UParticleSystemComponent* obj, TY__9b9c0qopUCzSW4js0BJumMlQ val);
N_LIB_PRIVATE N_NIMCALL(FName*, autoAttachSocketName)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachSocketName)(UParticleSystemComponent* obj, FName val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachLocationRule)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachLocationRule)(UParticleSystemComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachRotationRule)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachRotationRule)(UParticleSystemComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA, autoAttachScaleRule)(UParticleSystemComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoAttachScaleRule)(UParticleSystemComponent* obj, tyEnum_EAttachmentRule__YNsXxUBJiBVZPTePYxlbTA val);
N_LIB_PRIVATE N_NIMCALL(void, setTrailSourceData_)(UParticleSystemComponent* self, FName inFirstSocketName, FName inSecondSocketName, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg inWidthMode, NF32 inWidth);
N_LIB_PRIVATE N_NIMCALL(void, setMaterialParameter_)(UParticleSystemComponent* self, FName parameterName, UMaterialInterface* param);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetTangent_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector newTangentPoint, NI32 targetIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetStrength_)(UParticleSystemComponent* self, NI32 emitterIndex, NF32 newTargetStrength, NI32 targetIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamTargetPoint_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector newTargetPoint, NI32 targetIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourceTangent_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector newTangentPoint, NI32 sourceIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourceStrength_)(UParticleSystemComponent* self, NI32 emitterIndex, NF32 newSourceStrength, NI32 sourceIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamSourcePoint_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector newSourcePoint, NI32 sourceIndex);
N_LIB_PRIVATE N_NIMCALL(void, setBeamEndPoint_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector newEndPoint);
N_LIB_PRIVATE N_NIMCALL(void, setAutoAttachParams_)(UParticleSystemComponent* self, USceneComponent* parent, FName socketName, tyEnum_EAttachLocation__i9bo1U3dqI9aqkt9aHNkRox9bw locationType);
N_LIB_PRIVATE N_NIMCALL(NI32, getNumActiveParticles_)(UParticleSystemComponent* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInterface*, getNamedMaterial_)(UParticleSystemComponent* self, FName inName);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetTangent_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 targetIndex, FVector& outTangentPoint);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetStrength_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 targetIndex, NF32& outTargetStrength);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamTargetPoint_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 targetIndex, FVector& outTargetPoint);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourceTangent_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 sourceIndex, FVector& outTangentPoint);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourceStrength_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 sourceIndex, NF32& outSourceStrength);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamSourcePoint_)(UParticleSystemComponent* self, NI32 emitterIndex, NI32 sourceIndex, FVector& outSourcePoint);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, getBeamEndPoint_)(UParticleSystemComponent* self, NI32 emitterIndex, FVector& outEndPoint);
N_LIB_PRIVATE N_NIMCALL(void, generateParticleEvent_)(UParticleSystemComponent* self, FName inEventName, NF32 inEmitterTime, FVector inLocation, FVector inDirection, FVector inVelocity);
N_LIB_PRIVATE N_NIMCALL(void, endTrails_)(UParticleSystemComponent* self);
N_LIB_PRIVATE N_NIMCALL(UMaterialInstanceDynamic*, createNamedDynamicMaterialInstance_)(UParticleSystemComponent* self, FName inName, UMaterialInterface* sourceMaterial);
N_LIB_PRIVATE N_NIMCALL(void, beginTrails_)(UParticleSystemComponent* self, FName inFirstSocketName, FName inSecondSocketName, tyEnum_ETrailWidthMode__QATVDAMf3gqlmVYjrcyyWg inWidthMode, NF32 inWidth);
N_LIB_PRIVATE N_NIMCALL(void, keepUSubUVAnimation)(USubUVAnimation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFParticleSysParam)(FParticleSysParam fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysicalMaterials)(void);
N_LIB_PRIVATE N_NIMCALL(UTexture*, maskTexture)(UPhysicalMaterialMask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaskTexture)(UPhysicalMaterialMask_* obj, UTexture* val);
N_LIB_PRIVATE N_NIMCALL(NI32, uVChannelIndex)(UPhysicalMaterialMask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setuVChannelIndex)(UPhysicalMaterialMask_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressX)(UPhysicalMaterialMask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressX)(UPhysicalMaterialMask_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA, addressY)(UPhysicalMaterialMask_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaddressY)(UPhysicalMaterialMask_* obj, tyEnum_TextureAddress__I0SNH8RfIK0Aav8z9c7HjFA val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicalMaterialMask)(UPhysicalMaterialMask_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysics)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncPhysicsData)(UAsyncPhysicsData* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAsyncPhysicsInputComponent)(UAsyncPhysicsInputComponent_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEnginePhysicsEngine)(void);
N_LIB_PRIVATE N_NIMCALL(NF32, springStiffness)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringStiffness)(UPhysicsSpringComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, springDamping)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringDamping)(UPhysicsSpringComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, springLengthAtRest)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringLengthAtRest)(UPhysicsSpringComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, springRadius)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringRadius)(UPhysicsSpringComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(ECollisionChannel, springChannel)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringChannel)(UPhysicsSpringComponent_* obj, ECollisionChannel val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreSelf)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreSelf)(UPhysicsSpringComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, springCompression)(UPhysicsSpringComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspringCompression)(UPhysicsSpringComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringRestingPoint_)(UPhysicsSpringComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringDirection_)(UPhysicsSpringComponent_* self);
N_LIB_PRIVATE N_NIMCALL(FVector, getSpringCurrentEndPoint_)(UPhysicsSpringComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getNormalizedCompressionScalar_)(UPhysicsSpringComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsSpringComponent)(UPhysicsSpringComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, thrustStrength)(UPhysicsThrusterComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setthrustStrength)(UPhysicsThrusterComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsThrusterComponent)(UPhysicsThrusterComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(URadialForceComponent_*, forceComponent)(ARadialForceActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforceComponent)(ARadialForceActor_* obj, URadialForceComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, toggleForce_)(ARadialForceActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, fireImpulse_)(ARadialForceActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, enableForce_)(ARadialForceActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, disableForce_)(ARadialForceActor_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepARadialForceActor)(ARadialForceActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUBodySetup)(UBodySetup* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, strengthMultiplyer)(UPhysicalAnimationComponent* obj);
N_LIB_PRIVATE N_NIMCALL(void, setstrengthMultiplyer)(UPhysicalAnimationComponent* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setStrengthMultiplyer_)(UPhysicalAnimationComponent* self, NF32 inStrengthMultiplyer);
N_LIB_PRIVATE N_NIMCALL(void, setSkeletalMeshComponent_)(UPhysicalAnimationComponent* self, USkeletalMeshComponent* inSkeletalMeshComponent);
N_LIB_PRIVATE N_NIMCALL(FTransform, getBodyTargetTransform_)(UPhysicalAnimationComponent* self, FName bodyName);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationSettingsBelow_)(UPhysicalAnimationComponent* self, FName bodyName, FPhysicalAnimationData& physicalAnimationData, NIM_BOOL bIncludeSelf);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationSettings_)(UPhysicalAnimationComponent* self, FName bodyName, FPhysicalAnimationData& physicalAnimationData);
N_LIB_PRIVATE N_NIMCALL(void, applyPhysicalAnimationProfileBelow_)(UPhysicalAnimationComponent* self, FName bodyName, FName profileName, NIM_BOOL bIncludeSelf, NIM_BOOL bClearNotFound);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicalAnimationComponent)(UPhysicalAnimationComponent* fake);
N_LIB_PRIVATE N_NIMCALL(void, getConstraints_)(UPhysicsAsset* self, NIM_BOOL bIncludesTerminated, TY__JYFEBjy3RcdpO9bmahvDt9aw& outConstraints);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByName_)(UPhysicsAsset* self, FName constraintName, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintByBoneNames_)(UPhysicsAsset* self, FName bone1Name, FName bone2Name, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(void, keepUSkeletalBodySetup)(USkeletalBodySetup* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, impactThreshold)(UPhysicsCollisionHandler_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setimpactThreshold)(UPhysicsCollisionHandler_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, impactReFireDelay)(UPhysicsCollisionHandler_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setimpactReFireDelay)(UPhysicsCollisionHandler_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsCollisionHandler)(UPhysicsCollisionHandler_* fake);
N_LIB_PRIVATE N_NIMCALL(UPhysicsConstraintComponent_*, constraintComp)(APhysicsConstraintActor_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconstraintComp)(APhysicsConstraintActor_* obj, UPhysicsConstraintComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAPhysicsConstraintActor)(APhysicsConstraintActor_* fake);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveTwistAndSwing_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableTwistDrive, NIM_BOOL bEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, setOrientationDriveSLERP_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(void, setLinearZLimit_)(UPhysicsConstraintComponent_* self, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType, NF32 limitSize);
N_LIB_PRIVATE N_NIMCALL(void, setLinearYLimit_)(UPhysicsConstraintComponent_* self, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType, NF32 limitSize);
N_LIB_PRIVATE N_NIMCALL(void, setLinearXLimit_)(UPhysicsConstraintComponent_* self, tyEnum_ELinearConstraintMotion__L9bGN1hr3CZQifEJspfHUUw constraintType, NF32 limitSize);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityTarget_)(UPhysicsConstraintComponent_* self, FVector& inVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, setLinearVelocityDrive_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableDriveX, NIM_BOOL bEnableDriveY, NIM_BOOL bEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionTarget_)(UPhysicsConstraintComponent_* self, FVector& inPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPositionDrive_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableDriveX, NIM_BOOL bEnableDriveY, NIM_BOOL bEnableDriveZ);
N_LIB_PRIVATE N_NIMCALL(void, setLinearPlasticity_)(UPhysicsConstraintComponent_* self, NIM_BOOL bLinearPlasticity, NF32 linearPlasticityThreshold, tyEnum_EConstraintPlasticityType__zMg2BaLIxES34047uGlpRA plasticityType);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDriveParams_)(UPhysicsConstraintComponent_* self, NF32 positionStrength, NF32 velocityStrength, NF32 inForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, setLinearBreakable_)(UPhysicsConstraintComponent_* self, NIM_BOOL bLinearBreakable, NF32 linearBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(void, setDisableCollision_)(UPhysicsConstraintComponent_* self, NIM_BOOL bDisableCollision);
N_LIB_PRIVATE N_NIMCALL(void, setContactTransferScale_)(UPhysicsConstraintComponent_* self, NF32 contactTransferScale);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferencePosition_)(UPhysicsConstraintComponent_* self, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame, FVector& refPosition);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferenceOrientation_)(UPhysicsConstraintComponent_* self, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame, FVector& priAxis, FVector& secAxis);
N_LIB_PRIVATE N_NIMCALL(void, setConstraintReferenceFrame_)(UPhysicsConstraintComponent_* self, tyEnum_EConstraintFrame__9cFigfr9co3SBUQ1HI9asdb0Q frame, FTransform& refFrame);
N_LIB_PRIVATE N_NIMCALL(void, setConstrainedComponents_)(UPhysicsConstraintComponent_* self, UPrimitiveComponent* component1, FName boneName1, UPrimitiveComponent* component2, FName boneName2);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityTarget_)(UPhysicsConstraintComponent_* self, FVector& inVelTarget);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveTwistAndSwing_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableTwistDrive, NIM_BOOL bEnableSwingDrive);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDriveSLERP_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableSLERP);
N_LIB_PRIVATE N_NIMCALL(void, setAngularVelocityDrive_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableSwingDrive, NIM_BOOL bEnableTwistDrive);
N_LIB_PRIVATE N_NIMCALL(void, setAngularTwistLimit_)(UPhysicsConstraintComponent_* self, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg constraintType, NF32 twistLimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSwing2Limit_)(UPhysicsConstraintComponent_* self, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg motionType, NF32 swing2LimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, setAngularSwing1Limit_)(UPhysicsConstraintComponent_* self, tyEnum_EAngularConstraintMotion__9bL9adIuEboChSyjhzlkOckg motionType, NF32 swing1LimitAngle);
N_LIB_PRIVATE N_NIMCALL(void, setAngularPlasticity_)(UPhysicsConstraintComponent_* self, NIM_BOOL bAngularPlasticity, NF32 angularPlasticityThreshold);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationTarget_)(UPhysicsConstraintComponent_* self, FRotator& inPosTarget);
N_LIB_PRIVATE N_NIMCALL(void, setAngularOrientationDrive_)(UPhysicsConstraintComponent_* self, NIM_BOOL bEnableSwingDrive, NIM_BOOL bEnableTwistDrive);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveParams_)(UPhysicsConstraintComponent_* self, NF32 positionStrength, NF32 velocityStrength, NF32 inForceLimit);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDriveMode_)(UPhysicsConstraintComponent_* self, tyEnum_EAngularDriveMode__rygv7IEI4YDHTbfnSUxZHQ driveMode);
N_LIB_PRIVATE N_NIMCALL(void, setAngularBreakable_)(UPhysicsConstraintComponent_* self, NIM_BOOL bAngularBreakable, NF32 angularBreakThreshold);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isBroken_)(UPhysicsConstraintComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentTwist_)(UPhysicsConstraintComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentSwing2_)(UPhysicsConstraintComponent_* self);
N_LIB_PRIVATE N_NIMCALL(NF32, getCurrentSwing1_)(UPhysicsConstraintComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, getConstraintForce_)(UPhysicsConstraintComponent_* self, FVector& outLinearForce, FVector& outAngularForce);
N_LIB_PRIVATE N_NIMCALL(void, getConstraint_)(UPhysicsConstraintComponent_* self, FConstraintInstanceAccessor_* Result);
N_LIB_PRIVATE N_NIMCALL(void, getConstrainedComponents_)(UPhysicsConstraintComponent_* self, UPrimitiveComponent*& outComponent1, FName& outBoneName1, UPrimitiveComponent*& outComponent2, FName& outBoneName2);
N_LIB_PRIVATE N_NIMCALL(void, breakConstraint_)(UPhysicsConstraintComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsConstraintComponent)(UPhysicsConstraintComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsConstraintTemplate)(UPhysicsConstraintTemplate_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSoftAngularConstraint)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSoftAngularConstraint)(UPhysicsHandleComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSoftLinearConstraint)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSoftLinearConstraint)(UPhysicsHandleComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bInterpolateTarget)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbInterpolateTarget)(UPhysicsHandleComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, linearDamping)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlinearDamping)(UPhysicsHandleComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, linearStiffness)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlinearStiffness)(UPhysicsHandleComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, angularDamping)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setangularDamping)(UPhysicsHandleComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, angularStiffness)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setangularStiffness)(UPhysicsHandleComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, interpolationSpeed)(UPhysicsHandleComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setinterpolationSpeed)(UPhysicsHandleComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, setTargetRotation_)(UPhysicsHandleComponent_* self, FRotator newRotation);
N_LIB_PRIVATE N_NIMCALL(void, setTargetLocationAndRotation_)(UPhysicsHandleComponent_* self, FVector newLocation, FRotator newRotation);
N_LIB_PRIVATE N_NIMCALL(void, setTargetLocation_)(UPhysicsHandleComponent_* self, FVector newLocation);
N_LIB_PRIVATE N_NIMCALL(void, setLinearStiffness_)(UPhysicsHandleComponent_* self, NF32 newLinearStiffness);
N_LIB_PRIVATE N_NIMCALL(void, setLinearDamping_)(UPhysicsHandleComponent_* self, NF32 newLinearDamping);
N_LIB_PRIVATE N_NIMCALL(void, setInterpolationSpeed_)(UPhysicsHandleComponent_* self, NF32 newInterpolationSpeed);
N_LIB_PRIVATE N_NIMCALL(void, setAngularStiffness_)(UPhysicsHandleComponent_* self, NF32 newAngularStiffness);
N_LIB_PRIVATE N_NIMCALL(void, setAngularDamping_)(UPhysicsHandleComponent_* self, NF32 newAngularDamping);
N_LIB_PRIVATE N_NIMCALL(void, releaseComponent_)(UPhysicsHandleComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, grabComponentAtLocationWithRotation_)(UPhysicsHandleComponent_* self, UPrimitiveComponent* component, FName inBoneName, FVector location, FRotator rotation);
N_LIB_PRIVATE N_NIMCALL(void, grabComponentAtLocation_)(UPhysicsHandleComponent_* self, UPrimitiveComponent* component, FName inBoneName, FVector grabLocation);
N_LIB_PRIVATE N_NIMCALL(void, grabComponent_)(UPhysicsHandleComponent_* self, UPrimitiveComponent* component, FName inBoneName, FVector grabLocation, NIM_BOOL bConstrainRotation);
N_LIB_PRIVATE N_NIMCALL(void, getTargetLocationAndRotation_)(UPhysicsHandleComponent_* self, FVector& targetLocation, FRotator& targetRotation);
N_LIB_PRIVATE N_NIMCALL(UPrimitiveComponent*, getGrabbedComponent_)(UPhysicsHandleComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUPhysicsHandleComponent)(UPhysicsHandleComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, radius)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setradius)(URadialForceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg, falloff)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setfalloff)(URadialForceComponent_* obj, tyEnum_ERadialImpulseFalloff__BdT01ET1K9clvgtGQv4xOQg val);
N_LIB_PRIVATE N_NIMCALL(NF32, impulseStrength)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setimpulseStrength)(URadialForceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bImpulseVelChange)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbImpulseVelChange)(URadialForceComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bIgnoreOwningActor)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbIgnoreOwningActor)(URadialForceComponent_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, forceStrength)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setforceStrength)(URadialForceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, destructibleDamage)(URadialForceComponent_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdestructibleDamage)(URadialForceComponent_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, removeObjectTypeToAffect_)(URadialForceComponent_* self, EObjectTypeQuery objectType);
N_LIB_PRIVATE N_NIMCALL(void, fireImpulse_)(URadialForceComponent_* self);
N_LIB_PRIVATE N_NIMCALL(void, addObjectTypeToAffect_)(URadialForceComponent_* self, EObjectTypeQuery objectType);
N_LIB_PRIVATE N_NIMCALL(void, keepURadialForceComponent)(URadialForceComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPhysicalAnimationData)(FPhysicalAnimationData fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPhysicsAssetSolverSettings)(FPhysicsAssetSolverSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSolverIterations)(FSolverIterations fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSound)(void);
N_LIB_PRIVATE N_NIMCALL(USoundClass*, soundClassObject)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsoundClassObject)(USoundBase* obj, USoundClass* val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverrideConcurrency)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverrideConcurrency)(USoundBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnableBusSends)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnableBusSends)(USoundBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassVolumeScaleForPriority)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassVolumeScaleForPriority)(USoundBase* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw, virtualizationMode)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualizationMode)(USoundBase* obj, tyEnum_EVirtualizationMode__W7YsP6rRe0hxlj3DwSZBlw val);
N_LIB_PRIVATE N_NIMCALL(TY__NR5I3JrURnzfmlYGr3FAVw, concurrencySet)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencySet)(USoundBase* obj, TY__NR5I3JrURnzfmlYGr3FAVw val);
N_LIB_PRIVATE N_NIMCALL(FSoundConcurrencySettings_*, concurrencyOverrides)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrencyOverrides)(USoundBase* obj, FSoundConcurrencySettings_ val);
N_LIB_PRIVATE N_NIMCALL(NF32, duration)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setduration)(USoundBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, maxDistance)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaxDistance)(USoundBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, totalSamples)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, settotalSamples)(USoundBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(USoundBase* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(USoundSubmixBase_*, soundSubmixObject)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsoundSubmixObject)(USoundBase* obj, USoundSubmixBase_* val);
N_LIB_PRIVATE N_NIMCALL(TY__mYFRCs9aMXMCd4LKh8IWtiQ*, soundSubmixSends)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsoundSubmixSends)(USoundBase* obj, TY__mYFRCs9aMXMCd4LKh8IWtiQ val);
N_LIB_PRIVATE N_NIMCALL(USoundEffectSourcePresetChain*, sourceEffectChain)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsourceEffectChain)(USoundBase* obj, USoundEffectSourcePresetChain* val);
N_LIB_PRIVATE N_NIMCALL(TY__E1cF89aBHPPsJaR6qT9cRcgw*, busSends)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbusSends)(USoundBase* obj, TY__E1cF89aBHPPsJaR6qT9cRcgw val);
N_LIB_PRIVATE N_NIMCALL(TY__E1cF89aBHPPsJaR6qT9cRcgw*, preEffectBusSends)(USoundBase* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpreEffectBusSends)(USoundBase* obj, TY__E1cF89aBHPPsJaR6qT9cRcgw val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundBase)(USoundBase* fake);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDefaultRoutingSettings*, modulationSettings)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmodulationSettings)(USoundWave* obj, FSoundModulationDefaultRoutingSettings val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMature)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMature)(USoundWave* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bManualWordWrap)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbManualWordWrap)(USoundWave* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSingleLine)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSingleLine)(USoundWave* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, subtitlePriority)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitlePriority)(USoundWave* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__BOJ5ThsWgCz3WmPBwfzXrQ*, cuePoints)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setcuePoints)(USoundWave* obj, TY__BOJ5ThsWgCz3WmPBwfzXrQ val);
N_LIB_PRIVATE N_NIMCALL(TY__J5oi1L6HY7OmrYakjq3uIg*, subtitles)(USoundWave* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitles)(USoundWave* obj, TY__J5oi1L6HY7OmrYakjq3uIg val);
N_LIB_PRIVATE N_NIMCALL(void, setSoundAssetCompressionType_)(USoundWave* self, tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg inSoundAssetCompressionType, NIM_BOOL bMarkDirty);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ESoundAssetCompressionType__vYqJXbvGLA9bJFsiAAtAGIg, getSoundAssetCompressionType_)(USoundWave* self);
N_LIB_PRIVATE N_NIMCALL(FSoundAttenuationSettings*, attenuation)(USoundAttenuation* obj);
N_LIB_PRIVATE N_NIMCALL(void, setattenuation)(USoundAttenuation* obj, FSoundAttenuationSettings val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundGroups)(USoundGroups* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeModulatorContinuous)(USoundNodeModulatorContinuous_* fake);
N_LIB_PRIVATE N_NIMCALL(UAudioComponent*, audioComponent)(AAmbientSound_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setaudioComponent)(AAmbientSound_* obj, UAudioComponent* val);
N_LIB_PRIVATE N_NIMCALL(void, stop_)(AAmbientSound_* self);
N_LIB_PRIVATE N_NIMCALL(void, play_)(AAmbientSound_* self, NF32 startTime);
N_LIB_PRIVATE N_NIMCALL(void, fadeOut_)(AAmbientSound_* self, NF32 fadeOutDuration, NF32 fadeVolumeLevel);
N_LIB_PRIVATE N_NIMCALL(void, fadeIn_)(AAmbientSound_* self, NF32 fadeInDuration, NF32 fadeVolumeLevel);
N_LIB_PRIVATE N_NIMCALL(void, adjustVolume_)(AAmbientSound_* self, NF32 adjustVolumeDuration, NF32 adjustVolumeLevel);
N_LIB_PRIVATE N_NIMCALL(void, keepAAmbientSound)(AAmbientSound_* fake);
N_LIB_PRIVATE N_NIMCALL(NF32, priority)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpriority)(AAudioVolume_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bEnabled)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbEnabled)(AAudioVolume_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FReverbSettings_*, settings)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsettings)(AAudioVolume_* obj, FReverbSettings_ val);
N_LIB_PRIVATE N_NIMCALL(FInteriorSettings_*, ambientZoneSettings)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setambientZoneSettings)(AAudioVolume_* obj, FInteriorSettings_ val);
N_LIB_PRIVATE N_NIMCALL(TY__0P3QE6CnwcQtnLUClvj1AQ*, submixSendSettings)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixSendSettings)(AAudioVolume_* obj, TY__0P3QE6CnwcQtnLUClvj1AQ val);
N_LIB_PRIVATE N_NIMCALL(TY__KW4wPWVxwu2sHCJkJbVpzA*, submixOverrideSettings)(AAudioVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixOverrideSettings)(AAudioVolume_* obj, TY__KW4wPWVxwu2sHCJkJbVpzA val);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixSendSettings_)(AAudioVolume_* self, TY__0P3QE6CnwcQtnLUClvj1AQ& newSubmixSendSettings);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixOverrideSettings_)(AAudioVolume_* self, TY__KW4wPWVxwu2sHCJkJbVpzA& newSubmixOverrideSettings);
N_LIB_PRIVATE N_NIMCALL(void, setReverbSettings_)(AAudioVolume_* self, FReverbSettings_& newReverbSettings);
N_LIB_PRIVATE N_NIMCALL(void, setPriority_)(AAudioVolume_* self, NF32 newPriority);
N_LIB_PRIVATE N_NIMCALL(void, setInteriorSettings_)(AAudioVolume_* self, FInteriorSettings_& newInteriorSettings);
N_LIB_PRIVATE N_NIMCALL(void, setEnabled_)(AAudioVolume_* self, NIM_BOOL bNewEnabled);
N_LIB_PRIVATE N_NIMCALL(void, keepAAudioVolume)(AAudioVolume_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMature)(UDialogueWave_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMature)(UDialogueWave_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bOverride_SubtitleOverride)(UDialogueWave_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbOverride_SubtitleOverride)(UDialogueWave_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FString, spokenText)(UDialogueWave_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setspokenText)(UDialogueWave_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(FString, subtitleOverride)(UDialogueWave_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubtitleOverride)(UDialogueWave_* obj, FString val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassEarlyReflections)(UReverbEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassEarlyReflections)(UReverbEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bBypassLateReflections)(UReverbEffect_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbBypassLateReflections)(UReverbEffect_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(FSoundClassProperties*, properties)(USoundClass* obj);
N_LIB_PRIVATE N_NIMCALL(void, setproperties)(USoundClass* obj, FSoundClassProperties val);
N_LIB_PRIVATE N_NIMCALL(TY__pVtcV5B6QAzor9cajvYb6Rw*, childClasses)(USoundClass* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchildClasses)(USoundClass* obj, TY__pVtcV5B6QAzor9cajvYb6Rw val);
N_LIB_PRIVATE N_NIMCALL(TY__gUl6WccpnVptdwE9bBR9a1YA*, passiveSoundMixModifiers)(USoundClass* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpassiveSoundMixModifiers)(USoundClass* obj, TY__gUl6WccpnVptdwE9bBR9a1YA val);
N_LIB_PRIVATE N_NIMCALL(USoundClass*, parentClass)(USoundClass* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparentClass)(USoundClass* obj, USoundClass* val);
N_LIB_PRIVATE N_NIMCALL(FSoundConcurrencySettings_*, concurrency)(USoundConcurrency_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setconcurrency)(USoundConcurrency_* obj, FSoundConcurrencySettings_ val);
N_LIB_PRIVATE N_NIMCALL(NF32, volumeMultiplier)(USoundCue_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvolumeMultiplier)(USoundCue_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(NF32, pitchMultiplier)(USoundCue_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setpitchMultiplier)(USoundCue_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundCue)(USoundCue_* fake);
N_LIB_PRIVATE N_NIMCALL(TY__rlPCp7fOS9bDL40uDDNAn7Q*, soundClassEffects)(USoundMix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsoundClassEffects)(USoundMix_* obj, TY__rlPCp7fOS9bDL40uDDNAn7Q val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeAttenuation)(USoundNodeAttenuation_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeBranch)(USoundNodeBranch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeConcatenator)(USoundNodeConcatenator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeDelay)(USoundNodeDelay_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeDialoguePlayer)(USoundNodeDialoguePlayer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeDistanceCrossFade)(USoundNodeDistanceCrossFade_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeEnveloper)(USoundNodeEnveloper_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeGroupControl)(USoundNodeGroupControl_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeLooping)(USoundNodeLooping_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeMixer)(USoundNodeMixer_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeModulator)(USoundNodeModulator_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeParamCrossFade)(USoundNodeParamCrossFade_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeQualityLevel)(USoundNodeQualityLevel_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeRandom)(USoundNodeRandom_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeSoundClass)(USoundNodeSoundClass_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeSwitch)(USoundNodeSwitch_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeWaveParam)(USoundNodeWaveParam_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundNodeWavePlayer)(USoundNodeWavePlayer_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bAutoDisable)(USoundSubmixBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbAutoDisable)(USoundSubmixBase_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NF32, autoDisableTime)(USoundSubmixBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setautoDisableTime)(USoundSubmixBase_* obj, NF32 val);
N_LIB_PRIVATE N_NIMCALL(TY__Qd9alkOGuaEndLtq9bIq1VEg*, childSubmixes)(USoundSubmixBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setchildSubmixes)(USoundSubmixBase_* obj, TY__Qd9alkOGuaEndLtq9bIq1VEg val);
N_LIB_PRIVATE N_NIMCALL(USoundSubmixBase_*, parentSubmix)(USoundSubmixWithParentBase_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setparentSubmix)(USoundSubmixWithParentBase_* obj, USoundSubmixBase_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundSubmixWithParentBase)(USoundSubmixWithParentBase_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bMuteWhenBackgrounded)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbMuteWhenBackgrounded)(USoundSubmix_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(TY__vn4YR8N1PwW0D5S5BkY6Bw*, submixEffectChain)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setsubmixEffectChain)(USoundSubmix_* obj, TY__vn4YR8N1PwW0D5S5BkY6Bw val);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerAttackTime)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerAttackTime)(USoundSubmix_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, envelopeFollowerReleaseTime)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setenvelopeFollowerReleaseTime)(USoundSubmix_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, outputVolumeModulation)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setoutputVolumeModulation)(USoundSubmix_* obj, FSoundModulationDestinationSettings val);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, wetLevelModulation)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setwetLevelModulation)(USoundSubmix_* obj, FSoundModulationDestinationSettings val);
N_LIB_PRIVATE N_NIMCALL(FSoundModulationDestinationSettings*, dryLevelModulation)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setdryLevelModulation)(USoundSubmix_* obj, FSoundModulationDestinationSettings val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bSendToAudioLink)(USoundSubmix_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbSendToAudioLink)(USoundSubmix_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(void, stopSpectralAnalysis_)(USoundSubmix_* self, UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, stopRecordingOutput_)(USoundSubmix_* self, UObject* worldContextObject, tyEnum_EAudioRecordingExportType__qlXKZXxaYYHpNNXF9c6VXpw exportType, FString name, FString path, USoundWave* existingSoundWaveToOverwrite);
N_LIB_PRIVATE N_NIMCALL(void, stopEnvelopeFollowing_)(USoundSubmix_* self, UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, startSpectralAnalysis_)(USoundSubmix_* self, UObject* worldContextObject, tyEnum_EFFTSize__No3IgC1Ccv23sZ7WxluZ9bA fFTSize, tyEnum_EFFTPeakInterpolationMethod__zmX0701g3VBVwdHQWTBJcA interpolationMethod, tyEnum_EFFTWindowType__9bGZdJ7a6H0fb4ugFfpr9bxQ windowType, NF32 hopSize, tyEnum_EAudioSpectrumType__TBhtE9b2LCSM7FAMCe4f7ow spectrumType);
N_LIB_PRIVATE N_NIMCALL(void, startRecordingOutput_)(USoundSubmix_* self, UObject* worldContextObject, NF32 expectedDuration);
N_LIB_PRIVATE N_NIMCALL(void, startEnvelopeFollowing_)(USoundSubmix_* self, UObject* worldContextObject);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixWetLevel_)(USoundSubmix_* self, UObject* worldContextObject, NF32 inWetLevel);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixOutputVolume_)(USoundSubmix_* self, UObject* worldContextObject, NF32 inOutputVolume);
N_LIB_PRIVATE N_NIMCALL(void, setSubmixDryLevel_)(USoundSubmix_* self, UObject* worldContextObject, NF32 inDryLevel);
N_LIB_PRIVATE N_NIMCALL(void, removeSpectralAnalysisDelegate_)(USoundSubmix_* self, UObject* worldContextObject, FOnSubmixSpectralAnalysisBP_& onSubmixSpectralAnalysisBP);
N_LIB_PRIVATE N_NIMCALL(void, addSpectralAnalysisDelegate_)(USoundSubmix_* self, UObject* worldContextObject, TY__LOMy3VrBsbR5p06Yi7CKVg& inBandSettings, FOnSubmixSpectralAnalysisBP_& onSubmixSpectralAnalysisBP, NF32 updateRate, NF32 decibelNoiseFloor, NIM_BOOL bDoNormalize, NIM_BOOL bDoAutoRange, NF32 autoRangeAttackTime, NF32 autoRangeReleaseTime);
N_LIB_PRIVATE N_NIMCALL(void, addEnvelopeFollowerDelegate_)(USoundSubmix_* self, UObject* worldContextObject, FOnSubmixEnvelopeBP_& onSubmixEnvelopeBP);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundSubmix)(USoundSubmix_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundfieldSubmix)(USoundfieldSubmix_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUEndpointSubmix)(UEndpointSubmix_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUSoundfieldEndpointSubmix)(USoundfieldEndpointSubmix_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFReverbSettings)(FReverbSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundSubmixSpectralAnalysisBandSettings)(FSoundSubmixSpectralAnalysisBandSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSourceEffectChainEntry)(FSourceEffectChainEntry fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundSourceBusSendInfo)(FSoundSourceBusSendInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundWaveCuePoint)(FSoundWaveCuePoint fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuartzPulseOverrideStep)(FQuartzPulseOverrideStep fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuartzTimeSignature)(FQuartzTimeSignature fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuartzTransportTimeStamp)(FQuartzTransportTimeStamp fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuartzClockSettings)(FQuartzClockSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFQuartzQuantizationBoundary)(FQuartzQuantizationBoundary fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAudioVolumeSubmixSendSettings)(FAudioVolumeSubmixSendSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundSubmixSendInfo)(FSoundSubmixSendInfo fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFAudioVolumeSubmixOverrideSettings)(FAudioVolumeSubmixOverrideSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFInteriorSettings)(FInteriorSettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundClassProperties)(FSoundClassProperties fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundModulationDefaultSettings)(FSoundModulationDefaultSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundModulationDestinationSettings)(FSoundModulationDestinationSettings fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFPassiveSoundMixModifier)(FPassiveSoundMixModifier fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundConcurrencySettings)(FSoundConcurrencySettings_ fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFSoundClassAdjuster)(FSoundClassAdjuster_ fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineSparseVolumeTexture)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUStaticSparseVolumeTexture)(UStaticSparseVolumeTexture_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUAnimatedSparseVolumeTexture)(UAnimatedSparseVolumeTexture_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineVectorField)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUVectorField)(UVectorField_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUVectorFieldAnimated)(UVectorFieldAnimated_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUVectorFieldStatic)(UVectorFieldStatic_* fake);
N_LIB_PRIVATE N_NIMCALL(UVectorFieldComponent_*, vectorFieldComponent)(AVectorFieldVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvectorFieldComponent)(AVectorFieldVolume_* obj, UVectorFieldComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepAVectorFieldVolume)(AVectorFieldVolume_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineVT)(void);
N_LIB_PRIVATE N_NIMCALL(NI32, tileCount)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileCount)(URuntimeVirtualTexture_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, tileSize)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileSize)(URuntimeVirtualTexture_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(NI32, tileBorderSize)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, settileBorderSize)(URuntimeVirtualTexture_* obj, NI32 val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w, materialType)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setmaterialType)(URuntimeVirtualTexture_* obj, tyEnum_ERuntimeVirtualTextureMaterialType__fzIpg9cul9cad4XaYciBGe8w val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bCompressTextures)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbCompressTextures)(URuntimeVirtualTexture_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, bUseLowQualityCompression)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setbUseLowQualityCompression)(URuntimeVirtualTexture_* obj, NIM_BOOL val);
N_LIB_PRIVATE N_NIMCALL(tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw, lODGroup)(URuntimeVirtualTexture_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setlODGroup)(URuntimeVirtualTexture_* obj, tyEnum_TextureGroup__V5BP9cWC2PzPyXravjPc19aw val);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileSize_)(URuntimeVirtualTexture_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileCount_)(URuntimeVirtualTexture_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getTileBorderSize_)(URuntimeVirtualTexture_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getSize_)(URuntimeVirtualTexture_* self);
N_LIB_PRIVATE N_NIMCALL(NI32, getPageTableSize_)(URuntimeVirtualTexture_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepURuntimeVirtualTexture)(URuntimeVirtualTexture_* fake);
N_LIB_PRIVATE N_NIMCALL(URuntimeVirtualTextureComponent_*, virtualTextureComponent)(ARuntimeVirtualTextureVolume_* obj);
N_LIB_PRIVATE N_NIMCALL(void, setvirtualTextureComponent)(ARuntimeVirtualTextureVolume_* obj, URuntimeVirtualTextureComponent_* val);
N_LIB_PRIVATE N_NIMCALL(void, keepARuntimeVirtualTextureVolume)(ARuntimeVirtualTextureVolume_* fake);
extern "C" N_LIB_PRIVATE N_NIMCALL(void, keepEngineWorldPartition)(void);
N_LIB_PRIVATE N_NIMCALL(void, keepUHLODBuilder)(UHLODBuilder_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyVisible_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyActive_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEffectiveVisible_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isDynamicallyLoaded_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getInitialState_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getInitialRuntimeState_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(FName, getDataLayerLabel_)(UDEPRECATED_DataLayer_* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, equals_)(UDEPRECATED_DataLayer_* self, FActorDataLayer& actorDataLayer);
N_LIB_PRIVATE N_NIMCALL(void, keepUDEPRECATED_DataLayer)(UDEPRECATED_DataLayer_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDataLayerAsset_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ, getType_)(UDataLayerAsset_* self);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDataLayerAsset_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataLayerAsset)(UDataLayerAsset_* fake);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isVisible_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isRuntime_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isInitiallyVisible_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(NIM_BOOL, isEffectiveVisible_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerType__0nfkBAmr9cMrXTQeiqi6hUQ, getType_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getInitialRuntimeState_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(FColor, getDebugColor_)(UDataLayerInstance* self);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerStateByLabel_)(UDataLayerSubsystem_* self, FName& inDataLayerLabel, tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA inState);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerState_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer, tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA inState);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerRuntimeStateByLabel_)(UDataLayerSubsystem_* self, FName& inDataLayerLabel, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState, NIM_BOOL bInIsRecursive);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerRuntimeState_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState, NIM_BOOL bInIsRecursive);
N_LIB_PRIVATE N_NIMCALL(void, setDataLayerInstanceRuntimeState_)(UDataLayerSubsystem_* self, UDataLayerAsset_* inDataLayerAsset, tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A inState, NIM_BOOL bInIsRecursive);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, getLoadedDataLayerNames_)(UDataLayerSubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getDataLayerStateByLabel_)(UDataLayerSubsystem_* self, FName& inDataLayerLabel);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerState__GfSTO8qWe9b1QdI0gyimSuA, getDataLayerState_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerRuntimeStateByLabel_)(UDataLayerSubsystem_* self, FName& inDataLayerLabel);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerRuntimeState_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerInstanceRuntimeState_)(UDataLayerSubsystem_* self, UDataLayerAsset_* inDataLayerAsset);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerInstanceFromAsset_)(UDataLayerSubsystem_* self, UDataLayerAsset_* inDataLayerAsset);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerInstanceEffectiveRuntimeState_)(UDataLayerSubsystem_* self, UDataLayerAsset_* inDataLayerAsset);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerFromName_)(UDataLayerSubsystem_* self, FName inDataLayerName);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayerFromLabel_)(UDataLayerSubsystem_* self, FName inDataLayerLabel);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerEffectiveRuntimeStateByLabel_)(UDataLayerSubsystem_* self, FName& inDataLayerLabel);
N_LIB_PRIVATE N_NIMCALL(tyEnum_EDataLayerRuntimeState__Fyhpx71ocqqaYiEySwGS5A, getDataLayerEffectiveRuntimeState_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer);
N_LIB_PRIVATE N_NIMCALL(UDataLayerInstance*, getDataLayer_)(UDataLayerSubsystem_* self, FActorDataLayer& inDataLayer);
N_LIB_PRIVATE N_NIMCALL(TY__RB4z3ofWT3akwp9bOP7PhQA, getActiveDataLayerNames_)(UDataLayerSubsystem_* self);
N_LIB_PRIVATE N_NIMCALL(void, keepUDataLayerSubsystem)(UDataLayerSubsystem_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionDestructibleHLODComponent)(UWorldPartitionDestructibleHLODComponent_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepUWorldPartitionRuntimeCell)(UWorldPartitionRuntimeCell_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepURuntimeHashExternalStreamingObjectBase)(URuntimeHashExternalStreamingObjectBase_* fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFActorDataLayer)(FActorDataLayer fake);
N_LIB_PRIVATE N_NIMCALL(void, keepFWorldPartitionHLODDestructionTag)(FWorldPartitionHLODDestructionTag_ fake);

#endif /* __UEGenBindings__ */

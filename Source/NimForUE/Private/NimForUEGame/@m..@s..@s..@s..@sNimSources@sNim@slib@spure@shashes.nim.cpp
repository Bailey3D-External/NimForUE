/* Generated by Nim Compiler v1.6.10 */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#include <math.h>
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  struct NimStrPayload;
struct NimStringV2;
struct NimStrPayload {NI cap;
NIM_CHAR data[SEQ_DECL_SIZE];
};
struct NimStringV2 {NI len;
NimStrPayload* p;
};
N_LIB_PRIVATE N_NIMCALL(NI, murmurHash__pureZhashes_198)(NU8* x, NI xLen_0);
N_LIB_PRIVATE N_NOINLINE(void, raiseDivByZero)(void);
static N_INLINE(NIM_BOOL, nimDivInt)(NI a, NI b, NI* res);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(NIM_BOOL, nimMulInt)(NI a, NI b, NI* res);
static N_INLINE(NF, toFloat__system_1684)(NI i);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__system_4399)(void);
static N_INLINE(void, popFrame)(void);
static N_INLINE(NF, abs__system_4888)(NF x);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i, NI n);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a, NI b, NI* res);
static N_INLINE(NU32, rotl32__pureZhashes_186)(NU32 x, NI r);
static N_INLINE(NIM_BOOL, nimSubInt)(NI a, NI b, NI* res);
N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError)(void);
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;

#line 122 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
static N_INLINE(NIM_BOOL, nimDivInt)(NI a, NI b, NI* res) {	NIM_BOOL result;	result = (NIM_BOOL)0;
#line 117 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	{		NIM_BOOL T3_;
#line 117 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (NIM_BOOL)0;
#line 117 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (a == ((NI) (IL64(-9223372036854775807) - IL64(1))));		if (!(T3_)) goto LA4_;

#line 117 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (b == ((NI) -1));		LA4_: ;
		if (!T3_) goto LA5_;
{
#line 118 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		result = NIM_TRUE;}	}
	goto LA1_;
	LA5_: ;
	{
#line 120 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 120 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		(*res) = (NI)(a / b);	}
	LA1_: ;
	return result;}

#line 549 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
static N_INLINE(void, nimFrame)(TFrame* s) {
#line 550 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	{
#line 550 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		if (!(framePtr__system_3905 == ((TFrame*) NIM_NIL))) goto LA3_;
{
#line 551 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		(*s).calldepth = ((NI16) 0);}	}
	goto LA1_;
	LA3_: ;
	{
#line 554 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"

#line 554 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		(*s).calldepth = (NI16)((*framePtr__system_3905).calldepth + ((NI16) 1));	}
	LA1_: ;

#line 556 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	(*s).prev = framePtr__system_3905;
#line 557 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	framePtr__system_3905 = s;
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	{
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		if (!((*s).calldepth == ((NI16) 2000))) goto LA8_;
{
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"

#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		callDepthLimitReached__system_4399();
}	}
	LA8_: ;
}

#line 99 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
static N_INLINE(void, popFrame)(void) {
#line 100 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	framePtr__system_3905 = (*framePtr__system_3905).prev;}

#line 1452 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim"
static N_INLINE(NF, toFloat__system_1684)(NI i) {	NF result;	nimfr_("toFloat", "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim");	result = (NF)0;
#line 1453 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim"
	nimln_(1453, "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim");	result = ((NF) (i));	popFrame();	return result;}

#line 1557 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim"
static N_INLINE(NF, abs__system_4888)(NF x) {	NF result;	result = (NF)0;
#line 1566 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim"

#line 1566 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system.nim"
	result = fabs(x);	return result;}

#line 110 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
static N_INLINE(NIM_BOOL, nimMulInt)(NI a, NI b, NI* res) {	NIM_BOOL result;	result = (NIM_BOOL)0;
#line 90 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 90 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NI r = ((NI) ((NU)((NU64)(((NU) (a))) * (NU64)(((NU) (b))))));

#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NF T1_ = toFloat__system_1684(a);
#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 91 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NF T2_ = toFloat__system_1684(b);	NF floatProd = ((NF)(T1_) * (NF)(T2_));

#line 92 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 92 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 92 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NF T3_ = toFloat__system_1684(r);	NF resAsFloat = T3_;

#line 95 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	{
#line 95 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		if (!(resAsFloat == floatProd)) goto LA6_;
{
#line 96 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		(*res) = r;}	}
	goto LA4_;
	LA6_: ;
	{
#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		{
#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
			NF T11_ = abs__system_4888(((NF)(resAsFloat) - (NF)(floatProd)));
#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 105 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
			NF T12_ = abs__system_4888(floatProd);			if (!(((NF)(32.0) * (NF)(T11_)) <= T12_)) goto LA13_;
{
#line 106 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
			(*res) = r;}		}
		goto LA9_;
		LA13_: ;
		{
#line 108 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
			result = NIM_TRUE;		}
		LA9_: ;
	}
	LA4_: ;
	return result;}

#line 52 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
static N_INLINE(NIM_BOOL, nimAddInt)(NI a, NI b, NI* res) {	NIM_BOOL result;	result = (NIM_BOOL)0;
#line 46 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 46 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NI r = ((NI) ((NU)((NU64)(((NU) (a))) + (NU64)(((NU) (b))))));

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	{		NIM_BOOL T3_;
#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (NIM_BOOL)0;
#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ a));		if (T3_) goto LA4_;

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ b));		LA4_: ;
		if (!T3_) goto LA5_;
{
#line 48 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		(*res) = r;}	}
	goto LA1_;
	LA5_: ;
	{
#line 50 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		result = NIM_TRUE;	}
	LA1_: ;
	return result;}

#line 64 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
static N_INLINE(NIM_BOOL, nimSubInt)(NI a, NI b, NI* res) {	NIM_BOOL result;	result = (NIM_BOOL)0;
#line 58 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 58 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NI r = ((NI) ((NU)((NU64)(((NU) (a))) - (NU64)(((NU) (b))))));

#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	{		NIM_BOOL T3_;
#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (NIM_BOOL)0;
#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ a));		if (T3_) goto LA4_;

#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 59 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ (NI)((NU64) ~(b))));		LA4_: ;
		if (!T3_) goto LA5_;
{
#line 60 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		(*res) = r;}	}
	goto LA1_;
	LA5_: ;
	{
#line 62 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		result = NIM_TRUE;	}
	LA1_: ;
	return result;}

#line 299 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
static N_INLINE(NU32, rotl32__pureZhashes_186)(NU32 x, NI r) {	NU32 result;	NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_5;	nimfr_("rotl32", "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");	result = (NU32)0;
#line 300 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(300, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 300 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 300 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 300 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 300 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	if (nimSubInt(((NI) 32), r, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_5)) { raiseOverflow(); };	result = (NU32)((NU32)((NU64)(x) << (NU64)(r)) | (NU32)((NU32)(x) >> (NU64)((NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_5))));	popFrame();	return result;}

#line 302 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
N_LIB_PRIVATE N_NIMCALL(NI, murmurHash__pureZhashes_198)(NU8* x, NI xLen_0) {	NI result;	NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_2;	NU32 h1;	NU32 k1_2;	NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_6;	nimfr_("murmurHash", "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");{	result = (NI)0;
#line 311 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(311, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 311 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	NI size = xLen_0;

#line 312 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(312, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");	NI stepSize = ((NI) 4);

#line 313 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(313, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 313 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	if (stepSize == 0){ raiseDivByZero(); }	if (nimDivInt(size, stepSize, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_2)) { raiseOverflow(); };	NI n = (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_2);
	h1 = (NU32)0;
#line 316 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(316, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");	NI i = ((NI) 0);
	{
#line 319 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
		nimln_(319, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");		while (1) {			NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_3;			NU32 k1;			NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_4;
#line 319 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 319 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			if (nimMulInt(n, stepSize, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_3)) { raiseOverflow(); };			if (!(i < (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_3))) goto LA2;
			k1 = (NU32)0;
#line 327 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(327, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");			if (i < 0 || i >= xLen_0){ raiseIndexError2(i,xLen_0-1); }			k1 = (*((NU32*) ((&x[i]))));
#line 328 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(328, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");			if (nimAddInt(i, stepSize, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_4)) { raiseOverflow(); };			i = (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_4);
#line 330 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(330, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 330 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			k1 = (NU32)((NU32)(k1) * (NU32)(((NU32) IL64(3432918353))));
#line 331 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(331, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 331 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			k1 = rotl32__pureZhashes_186(k1, ((NI) 15));
#line 332 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(332, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 332 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			k1 = (NU32)((NU32)(k1) * (NU32)(((NU32) 461845907)));
#line 334 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(334, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 334 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			h1 = (NU32)(h1 ^ k1);
#line 335 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(335, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 335 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			h1 = rotl32__pureZhashes_186(h1, ((NI) 13));
#line 336 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(336, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 336 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 336 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			h1 = (NU32)((NU32)((NU32)((NU32)(h1) * (NU32)(((NU32) 5)))) + (NU32)(((NU32) IL64(3864292196))));		} LA2: ;
	}
	k1_2 = (NU32)0;
#line 340 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(340, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 340 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	if (stepSize == 0){ raiseDivByZero(); }	if (nimModInt(size, stepSize, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_6)) { raiseOverflow(); };	NI rem = (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_6);
	{
#line 341 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
		nimln_(341, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");		while (1) {			NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_7;			NI TM__7tkD9cFJSchVDwHuwaY9bP9bA_8;
#line 341 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			if (!(((NI) 0) < rem)) goto LA4;

#line 342 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(342, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");			if (nimSubInt(rem, ((NI) 1), &TM__7tkD9cFJSchVDwHuwaY9bP9bA_7)) { raiseOverflow(); };			rem = (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_7);
#line 343 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			nimln_(343, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 343 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 343 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 343 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 343 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
			if (nimAddInt(i, rem, &TM__7tkD9cFJSchVDwHuwaY9bP9bA_8)) { raiseOverflow(); };			if ((NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_8) < 0 || (NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_8) >= xLen_0){ raiseIndexError2((NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_8),xLen_0-1); }			k1_2 = (NU32)((NU32)((NU64)(k1_2) << (NU64)(((NI) 8))) | ((NU32) (x[(NI)(TM__7tkD9cFJSchVDwHuwaY9bP9bA_8)])));		} LA4: ;
	}

#line 344 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(344, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 344 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	k1_2 = (NU32)((NU32)(k1_2) * (NU32)(((NU32) IL64(3432918353))));
#line 345 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(345, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 345 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	k1_2 = rotl32__pureZhashes_186(k1_2, ((NI) 15));
#line 346 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(346, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 346 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	k1_2 = (NU32)((NU32)(k1_2) * (NU32)(((NU32) 461845907)));
#line 347 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(347, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 347 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)(h1 ^ k1_2);
#line 350 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(350, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 350 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)(h1 ^ ((NU32) (size)));
#line 351 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(351, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 351 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 351 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)(h1 ^ (NU32)((NU32)(h1) >> (NU64)(((NI) 16))));
#line 352 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(352, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 352 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)((NU32)(h1) * (NU32)(((NU32) IL64(2246822507))));
#line 353 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(353, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 353 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 353 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)(h1 ^ (NU32)((NU32)(h1) >> (NU64)(((NI) 13))));
#line 354 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(354, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 354 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)((NU32)(h1) * (NU32)(((NU32) IL64(3266489909))));
#line 355 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(355, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 355 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"

#line 355 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	h1 = (NU32)(h1 ^ (NU32)((NU32)(h1) >> (NU64)(((NI) 16))));
#line 356 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(356, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 356 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	result = ((NI) (h1));	goto BeforeRet_;
	}BeforeRet_: ;
	popFrame();	return result;}

#line 370 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
N_LIB_PRIVATE N_NIMCALL(NI, hash__pureZhashes_285)(NimStringV2 x) {	NI result;	nimfr_("hash", "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");	result = (NI)0;
#line 388 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	nimln_(388, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim");
#line 388 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	if ((x.len-1)-((NI) 0) != -1 && (((NI) 0) < 0 || ((NI) 0) >= x.len || (x.len-1) < 0 || (x.len-1) >= x.len)){ raiseIndexError(); }
#line 388 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\hashes.nim"
	result = murmurHash__pureZhashes_198((((x).p) ? ((NU8*)x.p->data+(((NI) 0))) : NIM_NIL), ((x.len-1))-(((NI) 0))+1);	popFrame();	return result;}

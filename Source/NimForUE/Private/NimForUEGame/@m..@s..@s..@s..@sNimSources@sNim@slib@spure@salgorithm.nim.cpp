/* Generated by Nim Compiler v1.6.10 */
#define NIM_INTBITS 64
#define NIM_EmulateOverflowChecks

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix
  #  define nimfr_(proc, file) \
      TFrame FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = 0; nimFrame(&FR_);

  #  define nimfrs_(proc, file, slots, length) \
      struct {TFrame* prev;NCSTRING procname;NI line;NCSTRING filename; NI len; VarSlot s[slots];} FR_; \
      FR_.procname = proc; FR_.filename = file; FR_.line = 0; FR_.len = length; nimFrame((TFrame*)&FR_);

  #  define nimln_(n, file) \
      FR_.line = n; FR_.filename = file;
  N_LIB_PRIVATE N_NOINLINE(void, raiseIndexError2)(NI i, NI n);
static N_INLINE(NIM_BOOL, nimAddInt)(NI a, NI b, NI* res);
N_LIB_PRIVATE N_NOINLINE(void, raiseOverflow)(void);
static N_INLINE(void, nimFrame)(TFrame* s);
N_LIB_PRIVATE N_NOINLINE(void, callDepthLimitReached__system_4399)(void);
static N_INLINE(void, popFrame)(void);
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;
extern TFrame* framePtr__system_3905;

#line 52 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
static N_INLINE(NIM_BOOL, nimAddInt)(NI a, NI b, NI* res) {	NIM_BOOL result;	result = (NIM_BOOL)0;
#line 46 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 46 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	NI r = ((NI) ((NU)((NU64)(((NU) (a))) + (NU64)(((NU) (b))))));

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
	{		NIM_BOOL T3_;
#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (NIM_BOOL)0;
#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ a));		if (T3_) goto LA4_;

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"

#line 47 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		T3_ = (((NI) 0) <= (NI)(r ^ b));		LA4_: ;
		if (!T3_) goto LA5_;
{
#line 48 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		(*res) = r;}	}
	goto LA1_;
	LA5_: ;
	{
#line 50 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\integerops.nim"
		result = NIM_TRUE;	}
	LA1_: ;
	return result;}

#line 549 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
static N_INLINE(void, nimFrame)(TFrame* s) {
#line 550 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	{
#line 550 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		if (!(framePtr__system_3905 == ((TFrame*) NIM_NIL))) goto LA3_;
{
#line 551 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		(*s).calldepth = ((NI16) 0);}	}
	goto LA1_;
	LA3_: ;
	{
#line 554 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"

#line 554 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		(*s).calldepth = (NI16)((*framePtr__system_3905).calldepth + ((NI16) 1));	}
	LA1_: ;

#line 556 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	(*s).prev = framePtr__system_3905;
#line 557 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	framePtr__system_3905 = s;
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	{
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		if (!((*s).calldepth == ((NI16) 2000))) goto LA8_;
{
#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"

#line 558 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
		callDepthLimitReached__system_4399();
}	}
	LA8_: ;
}

#line 99 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
static N_INLINE(void, popFrame)(void) {
#line 100 "C:\\Users\\juama\\NimSources\\Nim\\lib\\system\\excpt.nim"
	framePtr__system_3905 = (*framePtr__system_3905).prev;}

#line 86 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
N_LIB_PRIVATE N_NIMCALL(void, fill__pureZstrutils_1479)(NI* a, NI aLen_0, NI value) {	nimfr_("fill", "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");
#line 68 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
	nimln_(68, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");	NI xX60gensym166_ = ((NI) 0);
	{
#line 94 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
		nimln_(94, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");		while (1) {			NI TM__JdC9c6SaUkvO1XjYuWP1JWQ_2;
#line 69 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
			nimln_(69, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");
#line 94 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
			nimln_(94, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");			if (!(xX60gensym166_ <= (aLen_0-1))) goto LA2;
			if (xX60gensym166_ < 0 || xX60gensym166_ >= aLen_0){ raiseIndexError2(xX60gensym166_,aLen_0-1); }
#line 94 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
			a[xX60gensym166_] = value;
#line 71 "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim"
			nimln_(71, "C:\\Users\\juama\\NimSources\\Nim\\lib\\pure\\algorithm.nim");			if (nimAddInt(xX60gensym166_, ((NI) 1), &TM__JdC9c6SaUkvO1XjYuWP1JWQ_2)) { raiseOverflow(); };			xX60gensym166_ = (NI)(TM__JdC9c6SaUkvO1XjYuWP1JWQ_2);		} LA2: ;
	}
	popFrame();}
